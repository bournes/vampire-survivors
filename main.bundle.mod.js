function a0_0x1be4(_0x8ed5f, _0x33f428) {
	var _0x38d801 = a0_0x38d8();
	return (
		(a0_0x1be4 = function (_0x1be43e, _0x46255f) {
			_0x1be43e = _0x1be43e - 0xd7;
			var _0x1147d1 = _0x38d801[_0x1be43e];
			return _0x1147d1;
		}),
		a0_0x1be4(_0x8ed5f, _0x33f428)
	);
}
(function (_0x478a80, _0x431981) {
	var _0x38b805 = a0_0x1be4,
		_0x412a10 = _0x478a80();
	while (!![]) {
		try {
			var _0x5d4cea =
				-parseInt(_0x38b805(0x4a1)) / 0x1 +
				parseInt(_0x38b805(0x51f)) / 0x2 +
				(parseInt(_0x38b805(0x70d)) / 0x3) * (-parseInt(_0x38b805(0x6a1)) / 0x4) +
				-parseInt(_0x38b805(0x58b)) / 0x5 +
				(parseInt(_0x38b805(0xdd)) / 0x6) * (parseInt(_0x38b805(0x6e6)) / 0x7) +
				-parseInt(_0x38b805(0x6b0)) / 0x8 +
				parseInt(_0x38b805(0x2ac)) / 0x9;
			if (_0x5d4cea === _0x431981) break;
			else _0x412a10["push"](_0x412a10["shift"]());
		} catch (_0x11c613) {
			_0x412a10["push"](_0x412a10["shift"]());
		}
	}
})(a0_0x38d8, 0xe4afc),
	(() => {
		"use strict";
		var _0x3b44c1,
			_0x2d484d = {
				0xa6: (_0x433eda, _0x5bfe70, _0x2931d0) => {
					var _0x5d9431 = a0_0x1be4;
					_0x2931d0["d"](_0x5bfe70, {
						RR: () => _0x2bc3e5,
						lG: () => _0x518e52,
						hu: () => _0x179e04,
						Ax: () => _0x447595,
						R$: () => _0x22d9a5,
						$7: () => _0x1499e1,
						p5: () => _0x4166ee,
						mg: () => _0x170004,
						aM: () => _0x490bcb,
						Or: () => _0x16385e,
						Lh: () => _0x4f668e,
						tb: () => _0xe0047c,
						_F: () => _0x1aaca4,
						l6: () => _0x2bef3a,
						ON: () => _0x2c2b99,
						ZP: () => _0x2164b8,
						lx: () => _0x4a3b1d,
						n5: () => _0x2f912e,
					});
					var _0x1cb257 = _0x2931d0(0x2374);
					class _0x3c38cc extends Phaser["GameObjects"]["Text"] {
						constructor(_0x539c0b) {
							var _0x53ff38 = _0x5d9431;
							super(_0x539c0b, 0xa, 0x64, "", {
								color: "white",
								fontSize: "28px",
							}),
								_0x539c0b["add"]["existing"](this),
								this["setOrigin"](0x0);
						}
						["update"]() {
							var _0x18f0b3 = _0x5d9431;
							this["setText"]("fps:\x20" + Math["floor"](this["scene"]["game"]["loop"]["actualFps"]));
						}
					}
					var _0x45a932,
						_0x448651 = _0x2931d0(0x153f);
					class _0x29631d extends Phaser["Geom"]["Rectangle"] {
						constructor(_0x2b4a00 = 0x1, _0x1f5c3c = 0x1, _0x44dac4 = 0x0, _0x51f4a3 = 0x0) {
							var _0xd31e29 = _0x5d9431;
							super(0x0, 0x0, 0x0, 0x0),
								(this["index"] = 0x1),
								(this["width"] =
									_0x44dac4 > 0x0
										? _0x44dac4
										: _0x2164b8["Core"]["scene"]["renderer"]["width"] * _0x2b4a00),
								(this["height"] =
									_0x51f4a3 > 0x0
										? _0x51f4a3
										: _0x2164b8["Core"]["scene"]["renderer"]["height"] * _0x1f5c3c),
								(this["halfWidth"] = 0.5 * this["width"]),
								(this["halfHeight"] = 0.5 * this["height"]);
						}
						["CheckAllAndDespawnIfOutside"](_0x40a97e) {
							var _0x5d0c14 = _0x5d9431;
							(this["x"] = _0x2164b8["Core"]["Player"]["x"] - this["halfWidth"]),
								(this["y"] = _0x2164b8["Core"]["Player"]["y"] - this["halfHeight"]);
							for (let _0x214a32 = 0x0; _0x214a32 < _0x40a97e["length"]; _0x214a32++) {
								const _0x7435f8 = _0x40a97e[_0x214a32];
								(_0x7435f8["isCullable"] || _0x7435f8["isTeleportOnCull"]) &&
									(this["contains"](_0x7435f8["x"], _0x7435f8["y"]) ||
										(_0x7435f8["isTeleportOnCull"] && _0x7435f8["OnTeleportOnCull"](),
										_0x7435f8["DeSpawn"]()));
							}
						}
						["DespawnIfOutside"](_0xdc19be) {
							var _0x30aa7c = _0x5d9431;
							const _0x2ecf0b = _0xdc19be[this["index"] % _0xdc19be["length"]];
							if ((this["index"]++, !_0x2ecf0b)) return !0x1;
							if (!_0x2ecf0b["isCullable"] && !_0x2ecf0b["isTeleportOnCull"]) return !0x1;
							if (
								((this["x"] = _0x2164b8["Core"]["Player"]["x"] - this["halfWidth"]),
								(this["y"] = _0x2164b8["Core"]["Player"]["y"] - this["halfHeight"]),
								!this["contains"](_0x2ecf0b["x"], _0x2ecf0b["y"]))
							) {
								if (_0x2ecf0b["isTeleportOnCull"]) return _0x2ecf0b["OnTeleportOnCull"](), !0x1;
								_0x2ecf0b["DeSpawn"]();
							}
							return !0x0;
						}
						["Contains"](_0x5d7036) {
							var _0x143e4b = _0x5d9431;
							return (
								(this["x"] = _0x2164b8["Core"]["Player"]["x"] - this["halfWidth"]),
								(this["y"] = _0x2164b8["Core"]["Player"]["y"] - this["halfHeight"]),
								this["contains"](_0x5d7036["x"], _0x5d7036["y"])
							);
						}
					}
					!(function (_0x3f2e5d) {
						var _0x303075 = _0x5d9431;
						(_0x3f2e5d[(_0x3f2e5d["VOID"] = 0x0)] = "VOID"),
							(_0x3f2e5d["ANTONIO"] = "ANTONIO"),
							(_0x3f2e5d["IMELDA"] = "IMELDA"),
							(_0x3f2e5d["PASQUALINA"] = "PASQUALINA"),
							(_0x3f2e5d["GENNARO"] = "GENNARO"),
							(_0x3f2e5d["ARCA"] = "CIRO"),
							(_0x3f2e5d["PORTA"] = "PORTA"),
							(_0x3f2e5d["EXDASH"] = "EXDASH"),
							(_0x3f2e5d["MORTACCIO"] = "MORTACCIO"),
							(_0x3f2e5d["CAVALLO"] = "CAVALLO"),
							(_0x3f2e5d["PAESANO"] = "CAMILLO"),
							(_0x3f2e5d["RED"] = "RED"),
							(_0x3f2e5d["LAMA"] = "LAMA"),
							(_0x3f2e5d["DOMMARIO"] = "DOMMARIO"),
							(_0x3f2e5d["CROCI"] = "CROCI"),
							(_0x3f2e5d["GERMANA"] = "GERMANA"),
							(_0x3f2e5d["LORDO"] = "LORDO"),
							(_0x3f2e5d["POPPEA"] = "POPPEA"),
							(_0x3f2e5d["PUGNALA"] = "PUGNALA"),
							(_0x3f2e5d["GIOVANNA"] = "GIOVANNA"),
							(_0x3f2e5d["CONCETTA"] = "CONCETTA"),
							(_0x3f2e5d["ASSUNTA"] = "ASSUNTA"),
							(_0x3f2e5d["DEATH"] = "DEATH"),
							(_0x3f2e5d["DETH"] = "DETH"),
							(_0x3f2e5d["PANINI"] = "PANINI"),
							(_0x3f2e5d["GRAZIELLA"] = "GRAZIELLA"),
							(_0x3f2e5d["VERANDA"] = "VERANDA"),
							(_0x3f2e5d["TATANKA"] = "TATANKA"),
							(_0x3f2e5d["LATODILATO"] = "LATODILATO"),
							(_0x3f2e5d["LATODISOPRO"] = "LATODISOPRO"),
							(_0x3f2e5d["LATODISOTTO"] = "LATODISOTTO"),
							(_0x3f2e5d["LATOEVEST"] = "LATOEVEST"),
							(_0x3f2e5d["MAREMMA"] = "MAREMMA"),
							(_0x3f2e5d["FEBBRA"] = "FEBBRA"),
							(_0x3f2e5d["MARIA"] = "MARIA"),
							(_0x3f2e5d["MARIANNA"] = "MARIANNA"),
							(_0x3f2e5d["MARIASOFIA"] = "MARIASOFIA"),
							(_0x3f2e5d["BESUGO"] = "BESUGO"),
							(_0x3f2e5d["ANDRIA"] = "ANDRIA"),
							(_0x3f2e5d["NOSTRO"] = "NOSTRO"),
							(_0x3f2e5d["FINO"] = "FINO"),
							(_0x3f2e5d["PINO"] = "PINO"),
							(_0x3f2e5d["SIGMA"] = "SIGMA"),
							(_0x3f2e5d["AVATAR"] = "AVATAR"),
							(_0x3f2e5d["IOLO"] = "IOLO"),
							(_0x3f2e5d["PEPPE"] = "PEPPE"),
							(_0x3f2e5d["PEPPINO"] = "PEPPINO"),
							(_0x3f2e5d["SMITH"] = "SMITH"),
							(_0x3f2e5d["NEO"] = "NEO"),
							(_0x3f2e5d["PIRIPIRI"] = "PIRIPIRI"),
							(_0x3f2e5d["PINEYE"] = "PINEYE"),
							(_0x3f2e5d["PENTA"] = "PENTA"),
							(_0x3f2e5d["ODDEEO"] = "ODDEEO");
					})(_0x45a932 || (_0x45a932 = {}));
					const _0x2485a8 = _0x45a932;
					var _0x174262;
					!(function (_0x1e149f) {
						var _0x125aa = _0x5d9431;
						(_0x1e149f[(_0x1e149f["VOID"] = 0x0)] = "VOID"),
							(_0x1e149f["MAGIC_MISSILE"] = "MAGIC_MISSILE"),
							(_0x1e149f["HOLY_MISSILE"] = "HOLY_MISSILE"),
							(_0x1e149f["WHIP"] = "WHIP"),
							(_0x1e149f["VAMPIRICA"] = "VAMPIRICA"),
							(_0x1e149f["AXE"] = "AXE"),
							(_0x1e149f["SCYTHE"] = "SCYTHE"),
							(_0x1e149f["KNIFE"] = "KNIFE"),
							(_0x1e149f["THOUSAND"] = "THOUSAND"),
							(_0x1e149f["HOLYWATER"] = "HOLYWATER"),
							(_0x1e149f["BORA"] = "BORA"),
							(_0x1e149f["DIAMOND"] = "DIAMOND"),
							(_0x1e149f["FIREBALL"] = "FIREBALL"),
							(_0x1e149f["HELLFIRE"] = "HELLFIRE"),
							(_0x1e149f["HOLYBOOK"] = "HOLYBOOK"),
							(_0x1e149f["VESPERS"] = "VESPERS"),
							(_0x1e149f["CROSS"] = "CROSS"),
							(_0x1e149f["HEAVENSWORD"] = "HEAVENSWORD"),
							(_0x1e149f["GARLIC"] = "GARLIC"),
							(_0x1e149f["VORTEX"] = "VORTEX"),
							(_0x1e149f["LAUREL"] = "LAUREL"),
							(_0x1e149f["THORNS"] = "THORNS"),
							(_0x1e149f["LIGHTNING"] = "LIGHTNING"),
							(_0x1e149f["LOOP"] = "LOOP"),
							(_0x1e149f["PENTAGRAM"] = "PENTAGRAM"),
							(_0x1e149f["SIRE"] = "SIRE"),
							(_0x1e149f["SILF"] = "SILF"),
							(_0x1e149f["SILF2"] = "SILF2"),
							(_0x1e149f["SILF3"] = "SILF3"),
							(_0x1e149f["BONE"] = "BONE"),
							(_0x1e149f["LANCET"] = "LANCET"),
							(_0x1e149f["CHERRY"] = "CHERRY"),
							(_0x1e149f["NDUJA"] = "NDUJA"),
							(_0x1e149f["MIGHT"] = "POWER"),
							(_0x1e149f["AREA"] = "AREA"),
							(_0x1e149f["SPEED"] = "SPEED"),
							(_0x1e149f["COOLDOWN"] = "COOLDOWN"),
							(_0x1e149f["DURATION"] = "DURATION"),
							(_0x1e149f["AMOUNT"] = "AMOUNT"),
							(_0x1e149f["MAXHEALTH"] = "MAXHEALTH"),
							(_0x1e149f["ARMOR"] = "ARMOR"),
							(_0x1e149f["MOVESPEED"] = "MOVESPEED"),
							(_0x1e149f["MAGNET"] = "MAGNET"),
							(_0x1e149f["GROWTH"] = "GROWTH"),
							(_0x1e149f["LUCK"] = "LUCK"),
							(_0x1e149f["GREED"] = "GREED"),
							(_0x1e149f["REVIVAL"] = "REVIVAL"),
							(_0x1e149f["SHIELD"] = "SHIELD"),
							(_0x1e149f["REGEN"] = "REGEN"),
							(_0x1e149f["CURSE"] = "CURSE"),
							(_0x1e149f["SILVER"] = "SILVER"),
							(_0x1e149f["GOLD"] = "GOLD");
					})(_0x174262 || (_0x174262 = {}));
					const _0x5324b3 = _0x174262,
						_0x11010a = {
							[_0x2485a8["ANTONIO"]]: [
								{
									level: 0x1,
									startingWeapon: _0x5324b3["WHIP"],
									cooldown: 0x1,
									charName: "Antonio",
									surname: "Belpaese",
									spriteName: "Antonio_01.png",
									walkingFrames: 0x4,
									description: "Gains 10% more damage every 10 levels (max +50%).",
									isBought: !0x0,
									price: 0x0,
									maxHp: 0x64,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x1,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									showcase: [
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["VAMPIRICA"],
									],
									debugTime: 0x1,
									debugEnemies: 0xc8,
								},
								{
									power: 0.1,
									level: 0xa,
								},
								{
									power: 0.1,
									level: 0x14,
									growth: 0x1,
								},
								{
									power: 0.1,
									level: 0x1e,
								},
								{
									power: 0.1,
									level: 0x28,
									growth: 0x1,
								},
								{
									power: 0.1,
									level: 0x32,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["IMELDA"]]: [
								{
									level: 0x1,
									startingWeapon: _0x5324b3["MAGIC_MISSILE"],
									cooldown: 0x1,
									charName: "Imelda",
									surname: "Belpaese",
									spriteName: "Imelda_01.png",
									walkingFrames: 0x4,
									description: "Gains 10% more experience every 5 levels (max +30%).",
									isBought: !0x1,
									price: 0xa,
									maxHp: 0x64,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x1,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["MAGIC_MISSILE"],
										_0x5324b3["MAGIC_MISSILE"],
										_0x5324b3["MAGIC_MISSILE"],
										_0x5324b3["MAGIC_MISSILE"],
										_0x5324b3["MAGIC_MISSILE"],
										_0x5324b3["MAGIC_MISSILE"],
										_0x5324b3["MAGIC_MISSILE"],
										_0x5324b3["HOLYWATER"],
										_0x5324b3["HOLYWATER"],
										_0x5324b3["HOLYWATER"],
										_0x5324b3["HOLYWATER"],
										_0x5324b3["HOLYWATER"],
										_0x5324b3["HOLYWATER"],
										_0x5324b3["HOLYWATER"],
										_0x5324b3["HOLYWATER"],
										_0x5324b3["HOLY_MISSILE"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
									],
									debugTime: 0xb4,
									debugEnemies: 0x1f4,
								},
								{
									growth: 0.1,
									level: 0x5,
								},
								{
									growth: 0.1,
									level: 0xa,
								},
								{
									growth: 0.1,
									level: 0xf,
								},
								{
									growth: 0x1,
									level: 0x14,
								},
								{
									growth: 0x1,
									level: 0x28,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["PASQUALINA"]]: [
								{
									level: 0x1,
									startingWeapon: _0x5324b3["DIAMOND"],
									cooldown: 0x1,
									charName: "Pasqualina",
									surname: "Belpaese",
									spriteName: "Pasqualina_01.png",
									walkingFrames: 0x4,
									description: "Projectiles get 10% faster every 5 levels (max +30%).",
									isBought: !0x1,
									price: 0x64,
									maxHp: 0x64,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x1,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 1.1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["MOVESPEED"],
										_0x5324b3["MOVESPEED"],
										_0x5324b3["MOVESPEED"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
									],
									debugTime: 0xf0,
									debugEnemies: 0x1f4,
								},
								{
									speed: 0.1,
									level: 0x5,
								},
								{
									speed: 0.1,
									level: 0xa,
								},
								{
									speed: 0.1,
									level: 0xf,
								},
								{
									growth: 0x1,
									level: 0x14,
								},
								{
									growth: 0x1,
									level: 0x28,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["GENNARO"]]: [
								{
									level: 0x1,
									startingWeapon: _0x5324b3["KNIFE"],
									charName: "Gennaro",
									surname: "Belpaese",
									spriteName: "Gennaro_01.png",
									walkingFrames: 0x4,
									description: "Permanent +1 projectile (all weapons).",
									isBought: !0x1,
									price: 0x1f4,
									maxHp: 0x64,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x1,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["KNIFE"],
										_0x5324b3["KNIFE"],
										_0x5324b3["KNIFE"],
										_0x5324b3["KNIFE"],
										_0x5324b3["KNIFE"],
										_0x5324b3["KNIFE"],
										_0x5324b3["KNIFE"],
										_0x5324b3["AXE"],
										_0x5324b3["AXE"],
										_0x5324b3["AXE"],
										_0x5324b3["AXE"],
										_0x5324b3["AXE"],
										_0x5324b3["AXE"],
										_0x5324b3["AXE"],
										_0x5324b3["AXE"],
										_0x5324b3["LIGHTNING"],
										_0x5324b3["LIGHTNING"],
										_0x5324b3["LIGHTNING"],
										_0x5324b3["LIGHTNING"],
										_0x5324b3["LIGHTNING"],
										_0x5324b3["LIGHTNING"],
										_0x5324b3["LIGHTNING"],
										_0x5324b3["LIGHTNING"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
									],
									debugTime: 0x3c,
									debugEnemies: 0x190,
								},
								{
									growth: 0x1,
									level: 0x14,
								},
								{
									growth: 0x1,
									level: 0x28,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["ARCA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["FIREBALL"],
									charName: "Arca",
									surname: "Ladonna",
									spriteName: "Arca_01.png",
									walkingFrames: 0x6,
									description: "Weapon cooldown is reduced by 5% every 10 levels (max -15%).",
									portraitName: "p_arca.png",
									isBought: !0x1,
									price: 0x1f4,
									maxHp: 0x64,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x1,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["FIREBALL"],
										_0x5324b3["FIREBALL"],
										_0x5324b3["FIREBALL"],
										_0x5324b3["FIREBALL"],
										_0x5324b3["FIREBALL"],
										_0x5324b3["FIREBALL"],
										_0x5324b3["FIREBALL"],
										_0x5324b3["FIREBALL"],
										_0x5324b3["CROSS"],
										_0x5324b3["CROSS"],
										_0x5324b3["CROSS"],
										_0x5324b3["CROSS"],
										_0x5324b3["CROSS"],
										_0x5324b3["CROSS"],
										_0x5324b3["CROSS"],
										_0x5324b3["CROSS"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["LAUREL"],
										_0x5324b3["HELLFIRE"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["ARMOR"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
									],
									debugTime: 0x78,
									debugEnemies: 0x190,
								},
								{
									cooldown: -0.05,
									level: 0xa,
								},
								{
									cooldown: -0.05,
									level: 0x14,
									growth: 0x1,
								},
								{
									cooldown: -0.05,
									level: 0x1e,
								},
								{
									growth: 0x1,
									level: 0x28,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["PORTA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["LIGHTNING"],
									charName: "Porta",
									surname: "Ladonna",
									spriteName: "Porta_01.png",
									walkingFrames: 0x7,
									description: "Permanent +30% area. Starts with temporary cooldown bonus.",
									portraitName: "p_porta.png",
									isBought: !0x1,
									price: 0x1f4,
									maxHp: 0x64,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x1,
									power: 0x1,
									cooldown: 0.1,
									area: 1.3,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
									],
									debugTime: 0x12c,
									debugEnemies: 0xc8,
								},
								{
									level: 0x2,
									cooldown: 0.3,
								},
								{
									level: 0x3,
									cooldown: 0.3,
								},
								{
									level: 0x4,
									cooldown: 0.3,
								},
								{
									growth: 0x1,
									level: 0x14,
								},
								{
									growth: 0x1,
									level: 0x28,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["LAMA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AXE"],
									charName: "Lama",
									surname: "Ladonna",
									spriteName: "Lama_01.png",
									walkingFrames: 0x4,
									description: "Gains +5% Might, MoveSpeed, and Curse every 10 levels (max +20%).",
									portraitName: "p_lama.png",
									isBought: !0x1,
									price: 0x1f4,
									maxHp: 0x6e,
									armor: 0x2,
									regen: 0x0,
									moveSpeed: 1.1,
									power: 1.1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 1.1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
									],
									debugTime: 0x12c,
									debugEnemies: 0xc8,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
								{
									level: 0xa,
									might: 0.05,
									curse: 0.05,
									moveSpeed: 0.05,
								},
								{
									level: 0x14,
									might: 0.05,
									curse: 0.05,
									moveSpeed: 0.05,
									growth: 0x1,
								},
								{
									level: 0x1e,
									might: 0.05,
									curse: 0.05,
									moveSpeed: 0.05,
								},
								{
									level: 0x28,
									might: 0.05,
									curse: 0.05,
									moveSpeed: 0.05,
									growth: 0x1,
								},
							],
							[_0x2485a8["PAESANO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["GARLIC"],
									charName: "Poe",
									surname: "Ratcho",
									spriteName: "Old3_01.png",
									walkingFrames: 0x5,
									description: "Permanent +25% pickup radius and -30 max health.",
									portraitName: "p_poe.png",
									isBought: !0x1,
									price: 0x1f4,
									maxHp: 0x46,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x1,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0.25,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["GARLIC"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["MAXHEALTH"],
										_0x5324b3["REGEN"],
										_0x5324b3["REGEN"],
										_0x5324b3["REGEN"],
										_0x5324b3["REGEN"],
										_0x5324b3["REGEN"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["CURSE"],
										_0x5324b3["CURSE"],
										_0x5324b3["CURSE"],
										_0x5324b3["CURSE"],
										_0x5324b3["CURSE"],
									],
								},
								{
									growth: 0x1,
									level: 0x14,
								},
								{
									growth: 0x1,
									level: 0x28,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["GERMANA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["HOLYWATER"],
									prefix: "Suor",
									charName: "Clerici",
									surname: "",
									spriteName: "Suora_01.png",
									walkingFrames: 0x4,
									description:
										"Permanent +0.5 HP/s and +30 Max Health. Starts with temporary area bonus.",
									portraitName: "p_clerici.png",
									isBought: !0x1,
									price: 0x1f4,
									maxHp: 0x82,
									armor: 0x0,
									regen: 0.5,
									moveSpeed: 0x1,
									power: 0x1,
									cooldown: 0x1,
									area: 0x5,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MAGNET"],
										_0x5324b3["MAGNET"],
										_0x5324b3["MAGNET"],
										_0x5324b3["MAGNET"],
										_0x5324b3["MAGNET"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["HOLY_MISSILE"],
										_0x5324b3["VESPERS"],
										_0x5324b3["SCYTHE"],
										_0x5324b3["HELLFIRE"],
										_0x5324b3["THOUSAND"],
									],
								},
								{
									growth: 0x1,
									level: 0x14,
								},
								{
									growth: 0x1,
									level: 0x28,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
								{
									level: 0x2,
									area: -0x1,
								},
								{
									level: 0x3,
									area: -0x1,
								},
								{
									level: 0x4,
									area: -0x1,
								},
								{
									level: 0x5,
									area: -0x1,
								},
							],
							[_0x2485a8["DOMMARIO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["HOLYBOOK"],
									charName: "Dommario",
									surname: "",
									spriteName: "Dommario_01.png",
									walkingFrames: 0x5,
									description: "Permanent +40% duration and speed, -40% move speed.",
									portraitName: "p_dommario.png",
									isBought: !0x1,
									price: 0x1f4,
									maxHp: 0x64,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0.6,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 1.4,
									duration: 1.4,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
									],
								},
								{
									growth: 0x1,
									level: 0x14,
								},
								{
									growth: 0x1,
									level: 0x28,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["CROCI"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["CROSS"],
									charName: "Krochi",
									surname: "Freetto",
									spriteName: "Krochi_01.png",
									walkingFrames: 0x4,
									description: "Starts with 1 Revival. Gains 1 more Revival at level 33.",
									portraitName: "p_croci.png",
									isBought: !0x1,
									price: 0x1f4,
									maxHp: 0x64,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 1.2,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x1,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
									],
								},
								{
									growth: 0x1,
									level: 0x14,
								},
								{
									growth: 0x1,
									level: 0x28,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
								{
									level: 0x21,
									revivals: 0x1,
								},
							],
							[_0x2485a8["POPPEA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["SILVER"],
									charName: "Poppea",
									surname: "Pecorina",
									spriteName: "Krochi_01.png",
									walkingFrames: 0x4,
									description: "Effects last longer for every 10 levels.",
									isBought: !0x0,
									price: 0x1,
									maxHp: 0x64,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x1,
									power: 0x1,
									cooldown: 0.85,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["DURATION"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["DURATION"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["DURATION"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["DURATION"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["DURATION"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["MAGNET"],
										_0x5324b3["MAGNET"],
										_0x5324b3["MAGNET"],
										_0x5324b3["MAGNET"],
										_0x5324b3["MAGNET"],
									],
								},
								{
									duration: 0.05,
									level: 0xa,
								},
								{
									duration: 0.05,
									level: 0x14,
								},
								{
									duration: 0.05,
									level: 0x1e,
								},
								{
									duration: 0.05,
									level: 0x28,
								},
								{
									duration: 0.05,
									level: 0x32,
								},
								{
									duration: 0.05,
									level: 0x3c,
								},
								{
									duration: 0.05,
									level: 0x46,
								},
								{
									duration: 0.05,
									level: 0x50,
								},
								{
									duration: 0.05,
									level: 0x5a,
								},
							],
							[_0x2485a8["MORTACCIO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["BONE"],
									charName: "Mortaccio",
									surname: "",
									spriteName: "Mortaccio_01.png",
									portraitName: "p_mortaccio.png",
									walkingFrames: 0x4,
									description: "Gets more projectiles every 20 levels (max+3).",
									isBought: !0x1,
									price: 0x1f4,
									maxHp: 0x64,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x1,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["BONE"],
										_0x5324b3["BONE"],
										_0x5324b3["BONE"],
										_0x5324b3["BONE"],
										_0x5324b3["BONE"],
										_0x5324b3["BONE"],
										_0x5324b3["BONE"],
										_0x5324b3["BONE"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["DIAMOND"],
										_0x5324b3["THOUSAND"],
										_0x5324b3["HOLY_MISSILE"],
										_0x5324b3["SCYTHE"],
										_0x5324b3["VESPERS"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["SPEED"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AMOUNT"],
									],
									debugTime: 0x6cc,
									debugEnemies: 0x1f4,
								},
								{
									amount: 0x1,
									level: 0x14,
									growth: 0x1,
								},
								{
									amount: 0x1,
									level: 0x28,
									growth: 0x1,
								},
								{
									amount: 0x1,
									level: 0x3c,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["CAVALLO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["CHERRY"],
									prefix: "Yatta",
									charName: "Cavallo",
									surname: "",
									spriteName: "Cavallo_01.png",
									portraitName: "p_cavallo.png",
									walkingFrames: 0x4,
									description: "Gets more projectiles every 20 levels (max+3).",
									isBought: !0x1,
									price: 0x1f4,
									maxHp: 0x64,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x1,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["CHERRY"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["AREA"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["MIGHT"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["DURATION"],
										_0x5324b3["LUCK"],
										_0x5324b3["LUCK"],
										_0x5324b3["LUCK"],
										_0x5324b3["LUCK"],
										_0x5324b3["LUCK"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["COOLDOWN"],
										_0x5324b3["AMOUNT"],
										_0x5324b3["AMOUNT"],
									],
									debugTime: 0x5dc,
									debugEnemies: 0xc8,
								},
								{
									amount: 0x1,
									level: 0x14,
									growth: 0x1,
								},
								{
									amount: 0x1,
									level: 0x28,
									growth: 0x1,
								},
								{
									amount: 0x1,
									level: 0x3c,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["EXDASH"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["SILF2"],
									charName: "Exdash",
									surname: "Exiviiq",
									spriteName: "Exdash_01.png",
									walkingFrames: 0x6,
									description: "At least they're lucky.",
									isBought: !0x1,
									price: 0x309,
									maxHp: 0x4d,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0.9,
									power: 0.9,
									cooldown: 1.1,
									area: 0.9,
									speed: 0.5,
									duration: 0.9,
									amount: 0x0,
									luck: 0x2,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
										_0x5324b3["SILF2"],
									],
								},
								{
									luck: 0.1,
									level: 0xa,
								},
								{
									luck: 0.1,
									level: 0x14,
									growth: 0x1,
								},
								{
									luck: 0.1,
									level: 0x1e,
								},
								{
									luck: 0.1,
									level: 0x28,
									growth: 0x1,
								},
								{
									luck: 0.1,
									level: 0x32,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["NOSTRO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["SCYTHE"],
									prefix: "Mask of the",
									charName: "Red Death",
									surname: "",
									spriteName: "XLReaper_i01.png",
									walkingFrames: 0x8,
									description: "A blasphemous mockery.",
									isBought: !0x1,
									price: 0x29a,
									maxHp: 0xff,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x2,
									power: 1.2,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x0,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x0,
									revivals: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
								{
									growth: 0x1,
									level: 0x14,
								},
								{
									growth: 0x1,
									level: 0x28,
								},
								{
									level: 0x15,
									growth: -0x1,
								},
								{
									level: 0x29,
									growth: -0x1,
								},
							],
							[_0x2485a8["DEATH"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOTTO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["ASSUNTA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATOEVEST  ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["DETH"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODILATO ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["GRAZIELLA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOPRO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["SMITH"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODILATO ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["IOLO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOPRO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["LATODISOPRO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOTTO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["LATODISOTTO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATOEVEST  ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["LORDO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODILATO ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["PUGNALA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOPRO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["FINO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOTTO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["LATOEVEST"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOTTO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["MARIASOFIA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATOEVEST  ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["MARIANNA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODILATO ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["SIGMA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATOEVEST  ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["LATODILATO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODILATO ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["MAREMMA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOPRO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["MARIA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOTTO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["PANINI"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATOEVEST  ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["PENTA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODILATO ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["PINEYE"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOPRO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["ODDEEO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOTTO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["TATANKA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATOEVEST  ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["VERANDA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODILATO ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["GIOVANNA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOPRO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["VOID"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOTTO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["CONCETTA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATOEVEST  ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["RED"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODILATO ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["AVATAR"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATOEVEST  ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["PIRIPIRI"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOTTO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["FEBBRA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOPRO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["POPPEA"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOTTO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["PINO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATOEVEST  ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["PEPPE"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODILATO ",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["PEPPINO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOPRO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
							[_0x2485a8["NEO"]]: [
								{
									hidden: !0x0,
									level: 0x1,
									startingWeapon: _0x5324b3["AMOUNT"],
									charName: "LATODISOPRO",
									surname: "",
									spriteName: "_0x00000000_i01.png",
									walkingFrames: 0x4,
									description: "",
									isBought: !0x1,
									price: 0xa2c2a,
									maxHp: 0x1,
									armor: 0x0,
									regen: 0x0,
									moveSpeed: 0x0,
									power: 0x1,
									cooldown: 0x1,
									area: 0x1,
									speed: 0x1,
									duration: 0x1,
									amount: 0x1,
									luck: 0x1,
									growth: 0x1,
									greed: 0x1,
									curse: 0x1,
									magnet: 0x1,
									revival: 0x0,
									rerolls: 0x0,
									skips: 0x0,
									showcase: [],
								},
							],
						};
					var _0x19af00;
					!(function (_0x2a87e4) {
						var _0x2b3069 = _0x5d9431;
						(_0x2a87e4[(_0x2a87e4["NONE"] = 0x0)] = "NONE"),
							(_0x2a87e4[(_0x2a87e4["DEFAULT"] = 0x1)] = "DEFAULT"),
							(_0x2a87e4[(_0x2a87e4["TIMEFREEZE"] = 0x2)] = "TIMEFREEZE"),
							(_0x2a87e4[(_0x2a87e4["FIRE"] = 0x3)] = "FIRE"),
							(_0x2a87e4[(_0x2a87e4["DARK"] = 0x4)] = "DARK"),
							(_0x2a87e4[(_0x2a87e4["LIGHT"] = 0x5)] = "LIGHT"),
							(_0x2a87e4[(_0x2a87e4["PUSH"] = 0x6)] = "PUSH"),
							(_0x2a87e4[(_0x2a87e4["PRISM"] = 0x7)] = "PRISM");
					})(_0x19af00 || (_0x19af00 = {}));
					const _0xed2036 = _0x19af00;
					var _0x213242;
					!(function (_0x4aa8f6) {
						var _0x201d19 = _0x5d9431;
						(_0x4aa8f6["Treasure1"] = "Treasure1"),
							(_0x4aa8f6["Treasure2"] = "Treasure2"),
							(_0x4aa8f6["Treasure3"] = "Treasure3"),
							(_0x4aa8f6["ThingFound"] = "ThingFound"),
							(_0x4aa8f6["BGM_GameOver"] = "BGM_GameOver"),
							(_0x4aa8f6["BGM_Intro"] = "BGM_Intro"),
							(_0x4aa8f6["ClickIn"] = "ClickIn"),
							(_0x4aa8f6["ClickOut"] = "ClickOut"),
							(_0x4aa8f6["Holywater"] = "Holywater"),
							(_0x4aa8f6["Lightning"] = "Lightning"),
							(_0x4aa8f6["Shot"] = "Shot"),
							(_0x4aa8f6["MagicMissile"] = "MagicMissile"),
							(_0x4aa8f6["Whip"] = "Whip"),
							(_0x4aa8f6["LevelUp"] = "LevelUp"),
							(_0x4aa8f6["Hit"] = "Hit"),
							(_0x4aa8f6["Coin"] = "Coin"),
							(_0x4aa8f6["Gem"] = "Gem"),
							(_0x4aa8f6["Roast"] = "Roast"),
							(_0x4aa8f6["Vacuum"] = "Vacuum"),
							(_0x4aa8f6["Rosary"] = "Rosary"),
							(_0x4aa8f6["Orologion"] = "Orologion"),
							(_0x4aa8f6["PentagramSFX"] = "PentagramSFX"),
							(_0x4aa8f6["LossSFX"] = "LossSFX"),
							(_0x4aa8f6["Explosion"] = "Explosion"),
							(_0x4aa8f6["Explosion2"] = "Explosion2"),
							(_0x4aa8f6["Alert"] = "Alert"),
							(_0x4aa8f6["LittleHeart"] = "LittleHeart"),
							(_0x4aa8f6["Fireloop"] = "Fireloop"),
							(_0x4aa8f6["Whistle"] = "Whistle");
					})(_0x213242 || (_0x213242 = {}));
					const _0x522ca7 = _0x213242;
					class _0x3e4f64 extends Phaser["Physics"]["Arcade"]["Sprite"] {
						constructor(_0x1ecac1, _0x207974, _0x49c2f0, _0x4d19dc) {
							var _0xb33037 = _0x5d9431;
							super(_0x1ecac1, _0x207974, _0x49c2f0, "characters", "Antonio_01.png"),
								(this["radius"] = 0x9),
								(this["lastFacedDirection"] = new Phaser["Math"]["Vector2"](0x1, 0x0)),
								(this["hp"] = 0x64),
								(this["isDead"] = !0x1),
								(this["xp"] = 0x0),
								(this["onHPRecoveryCallback"] = null),
								(this["level"] = 0x1),
								(this["maxHp"] = 0x64),
								(this["power"] = 0x1),
								(this["area"] = 0x1),
								(this["speed"] = 0x1),
								(this["cooldown"] = 0x1),
								(this["amount"] = 0x0),
								(this["moveSpeed"] = 0x1),
								(this["growth"] = 0x1),
								(this["duration"] = 0x1),
								(this["luck"] = 0x1),
								(this["shields"] = 0x0),
								(this["armor"] = 0x0),
								(this["greed"] = 0x1),
								(this["regen"] = 0x0),
								(this["shieldInvulTime"] = 0xf0),
								(this["revivals"] = 0x0),
								(this["rerolls"] = 0x0),
								(this["skips"] = 0x0),
								(this["curse"] = 0x1),
								(this["startingWeapon"] = _0x5324b3["WHIP"]),
								(this["characterType"] = _0x2485a8["ANTONIO"]),
								(this["ghosts"] = new Array()),
								(this["posHistory"] = new Array()),
								(this["maxHistory"] = 0x3),
								(this["historyIndex"] = 0x0),
								(this["HasWalkingAnimation"] = !0x1),
								(this["invulTime"] = 0x0),
								(this["_invul"] = !0x1),
								(this["receivingDamage"] = !0x1),
								(this["characterType"] = _0x4d19dc),
								_0x1ecac1["add"]["existing"](this),
								_0x1ecac1["physics"]["add"]["existing"](this),
								(this["onHPRecoveryCallback"] = null),
								this["setOrigin"](0.5, 0x1),
								this["body"]["setCircle"](this["radius"]),
								this["body"]["setOffset"](0x6, 0x10),
								(this["body"]["immovable"] = !0x0),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								this["setAngle"](-0x5),
								(this["wiggleTween"] = this["scene"]["tweens"]["add"]({
									targets: this,
									angle: 0x5,
									duration: 0xfa,
									ease: "Linear",
									loop: -0x1,
									yoyo: !0x0,
								})),
								this["wiggleTween"]["pause"]();
							for (let _0x280eab = 0x0; _0x280eab <= this["maxHistory"]; _0x280eab++)
								this["posHistory"]["push"](new Phaser["Math"]["Vector2"](_0x207974, _0x49c2f0));
							(this["rt"] = this["scene"]["add"]["renderTexture"](0x0, 0x0, 0x190, 0x190)),
								this["rt"]["setOrigin"](0.5, 0.5),
								(this["WorldBoxCollider"] = new Phaser["Geom"]["Rectangle"](
									0x0,
									0x0,
									this["scene"]["renderer"]["width"],
									this["scene"]["renderer"]["height"]
								)),
								(this["PfxEmitter"] = this["scene"]["add"]["particles"]("vfx")["createEmitter"]({
									frame: ["WhiteDot.png"],
									quantity: 0xa,
									lifespan: 0x7d0,
									alpha: {
										start: 0x1,
										end: 0x0,
									},
									angle: {
										min: 0xe1,
										max: 0x13b,
									},
									speed: {
										min: 0x4b,
										max: 0x7d,
									},
									scale: {
										start: 0x2 * _0x1fa5bb["PixelScale"],
										end: 0x0,
									},
									gravityY: 0x12c,
									tint: 0xff0000,
									bounce: 0.1,
									bounds: {
										x: 0x0,
										y: -0x2,
										w: 0x0,
										h: 0x1,
									},
									collideTop: !0x1,
									collideBottom: !0x0,
									collideLeft: !0x1,
									collideRight: !0x1,
									on: !0x1,
								}));
							const _0x343a49 = _0x11010a[this["characterType"]][0x0];
							if (_0x343a49["walkingFrames"]) {
								this["HasWalkingAnimation"] = !0x0;
								const _0x22cb0c = this["anims"]["generateFrameNames"]("characters", {
									start: 0x1,
									end: _0x343a49["walkingFrames"],
									zeroPad: 0x2,
									prefix: _0x343a49["spriteName"]["replace"]("01.png", ""),
									suffix: ".png",
								});
								this["anims"]["create"]({
									key: "walk",
									frames: _0x22cb0c,
									frameRate: 0x8,
									repeat: -0x1,
								}),
								!global["anims_disabled"].value && this["anims"]["play"]("walk"),
									this["anims"]["pause"]();
							}
							this["regenTimer"] = this["scene"]["time"]["addEvent"]({
								delay: 0x3e8,
								repeat: -0x1,
								callback: () => {
									var _0x23cbdc = _0xb33037;
									this["Regenerate"]();
								},
							});
						}
						get ["IsInvul"]() {
							var _0x417f7e = _0x5d9431;
							return this["_invul"];
						}
						set ["IsInvul"](_0x3ce18e) {
							var _0x47e428 = _0x5d9431;
							this["_invul"] != _0x3ce18e &&
								((this["_invul"] = _0x3ce18e),
								this["_invul"] ? this["setTintFill"](0xffffbb) : this["clearTint"]());
						}
						["RecoverHp"](_0x562c73) {
							var _0x566547 = _0x5d9431;
							if (this["isDead"]) return;
							let _0x53dd51 = Math["min"](this["maxHp"] - this["hp"], _0x562c73);
							this["onHPRecoveryCallback"] && this["onHPRecoveryCallback"](_0x53dd51),
								(this["hp"] += _0x53dd51),
								this["hp"] > this["maxHp"] && (this["hp"] = this["maxHp"]),
								_0x2164b8["Core"]["PlayerUI"]["Update"](),
								_0x53dd51 < 0x2328 && _0x2164b8["Core"]["PlayerOptions"]["AddHeal"](_0x53dd51);
						}
						["Regenerate"]() {
							var _0x456f81 = _0x5d9431;
							this["regen"] > 0x0 && this["RecoverHp"](this["regen"]);
						}
						["LevelUp"]() {
							var _0x20f3f3 = _0x5d9431;
							this["level"]++;
							var _0x288c42 = _0x11010a[this["characterType"]];
							if (
								(_0x288c42 &&
									(_0x288c42 = _0x288c42["find"](
										(_0x5c0142) => _0x5c0142["level"] === this["level"]
									)),
								_0x288c42)
							) {
								for (const _0x26ee7a in _0x288c42)
									this["hasOwnProperty"](_0x26ee7a) &&
										"level" != _0x26ee7a &&
										(this[_0x26ee7a] += _0x288c42[_0x26ee7a]);
								_0x288c42["cooldown"] && _0x2164b8["Core"]["ResetWeaponCooldowns"]();
							}
						}
						["MakeLevelOne"]() {
							var _0x59a45f = _0x5d9431;
							(this["level"] = 0x0), (this["shieldInvulTime"] = 0xf0);
							let _0x51cfc2 = _0x11010a[this["characterType"]][this["level"]];
							for (const _0x459ad8 in _0x51cfc2)
								this["hasOwnProperty"](_0x459ad8) && (this[_0x459ad8] = _0x51cfc2[_0x459ad8]);
							(this["hp"] = this["maxHp"]),
								_0x51cfc2["magnet"] > 0x0 &&
									((_0x2164b8["Core"]["Magnet"]["radius"] +=
										_0x2164b8["Core"]["Magnet"]["radius"] * _0x51cfc2["magnet"]),
									_0x2164b8["Core"]["Magnet"]["RefreshSize"](),
									(_0x2164b8["Core"]["Magnet"]["percentage"] += _0x51cfc2["magnet"])),
								this["setFrame"](_0x51cfc2["spriteName"]);
						}
						["GetDamaged"](
							_0x3a70cf = 0x1,
							_0x4df27b = _0xed2036["NONE"],
							_0x587eb7 = 0x1,
							_0x44af44 = ""
						) {
							var _0xbfe217 = _0x5d9431;
							if (!this["receivingDamage"] && !(this["IsInvul"] || this["hp"] <= 0x0)) {
								if (this["shields"] > 0x0)
									return (
										(this["shields"] -= 0x1),
										this["OnGetDamaged"](0xffffbb, this["shieldInvulTime"], !0x1),
										void _0x2164b8["Core"]["scene"]["events"]["emit"]("Player_LostShield")
									);
								this["armor"] > 0x0 && (_0x3a70cf -= this["armor"]) < 0x1 && (_0x3a70cf = 0x1),
									(this["hp"] -= _0x3a70cf),
									this["hp"] <= 0x0
										? ((this["hp"] = 0x0), this["Die"](), _0x2164b8["Core"]["GameOver"]())
										: this["OnGetDamaged"](),
									_0x2164b8["Core"]["PlayerUI"]["Update"]();
							}
						}
						["OnGetDamaged"](_0x470c19 = 0xff0000, _0x56b6cd = 0x78, _0x15132b = !0x0) {
							var _0x3d33dd = _0x5d9431;
							this["receivingDamage"] ||
								(this["setTintFill"](_0x470c19),
								(this["_blinkTimeout"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
									delay: _0x56b6cd,
									loop: !0x1,
									callback: () => {
										var _0x322731 = _0x3d33dd;
										this["restoreTint"](), this["PfxEmitter"]["stop"]();
									},
								})),
								(this["_blinkTimeout"]["name"] = "Blink"),
								_0x15132b &&
									((this["PfxEmitter"]["bounds"]["y"] = this["y"] + 0xc8),
									this["PfxEmitter"]["setPosition"](this["x"], this["y"] - 0x8),
									this["PfxEmitter"]["start"](),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["Hit"],
										{
											volume: 0.4,
											detune: 0x3e8 + 0x1f4 * Math["random"](),
										},
										0x96,
										0x3
									),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["LossSFX"],
										{
											volume: 0.1,
											detune: -0x1f4 * Math["random"]() - 0x1f4,
										},
										0x1c2,
										0x1
									)),
								(this["receivingDamage"] = !0x0));
						}
						["OnDeath"]() {
							var _0x4dd969 = _0x5d9431,
								_0x251220;
							null === (_0x251220 = this["_blinkTimeout"]) ||
								void 0x0 === _0x251220 ||
								_0x251220["destroy"](),
								this["wiggleTween"]["pause"](),
								this["setTintFill"](0xff0000),
								this["scene"]["tweens"]["add"]({
									targets: this,
									scaleX: 0x2 * _0x1fa5bb["PixelScale"],
									duration: 0x3e8,
									ease: "Bounce.Out",
								}),
								this["scene"]["tweens"]["add"]({
									targets: this,
									scaleY: 0x0,
									duration: 0x3e8,
									ease: "Linear",
								}),
								(this["PfxEmitter"]["bounds"]["y"] = this["y"] - 0x2),
								this["PfxEmitter"]["setPosition"](this["x"], this["y"] - 0x8),
								this["PfxEmitter"]["start"](),
								_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
									delay: 0xfa,
									loop: !0x1,
									callback: () => {
										var _0x2c6f99 = _0x4dd969;
										this["PfxEmitter"]["stop"]();
									},
								}),
								_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
									delay: 0x4e2,
									loop: !0x1,
									callback: () => {
										var _0x554742 = _0x4dd969;
										_0x2164b8["Core"]["SceneManager"]["GameOver"]();
									},
								});
						}
						["Die"]() {
							var _0x3128bf = _0x5d9431;
							(this["isDead"] = !0x0), (this["body"]["enable"] = !0x1), this["OnDeath"]();
						}
						["Revive"](_0x3ded90 = 0x1) {
							var _0x39a640 = _0x5d9431;
							(this["isDead"] = !0x1),
								(this["body"]["enable"] = !0x0),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								this["RecoverHp"](this["maxHp"] * _0x3ded90),
								this["SetInvulForMilliSeconds"](0x7d0),
								_0x2164b8["Core"]["PlayerUI"]["Update"]();
						}
						["SetInvulForMilliSeconds"](_0x159bdc) {
							(this["IsInvul"] = !0x0), (this["invulTime"] += _0x159bdc);
						}
						["SetInvulForMilliSecondsNonCumulative"](_0x42dd03) {
							var _0x9cb83b = _0x5d9431;
							(this["IsInvul"] = !0x0), this["invulTime"] < _0x42dd03 && (this["invulTime"] = _0x42dd03);
						}
						["restoreTint"]() {
							var _0x12f0ac = _0x5d9431;
							this["setTint"](0xffffff), (this["receivingDamage"] = !0x1);
						}
						["SetCollideWithWorld"](_0xdaa714) {
							var _0x4082a3 = _0x5d9431;
							this["setCollideWorldBounds"](_0xdaa714);
						}
						["Update"](_0x262ee6 = 0x0) {
							var _0x379e8a = _0x5d9431;
							if (!this["isDead"]) {
								(this["invulTime"] -= _0x262ee6),
									this["invulTime"] <= 0x0 && (this["invulTime"] = 0x0),
									(this["IsInvul"] = this["invulTime"] > 0x0),
									this["setDepth"](0x0),
									this["body"]["velocity"]["x"] < 0x0 && this["setFlipX"](!0x0),
									this["body"]["velocity"]["x"] > 0x0 && this["setFlipX"](!0x1),
									!global["anims_disabled"].value ?
									0x0 == this["body"]["velocity"]["x"] && 0x0 == this["body"]["velocity"]["y"]
										? (this["wiggleTween"]["pause"](),
										  this["setAngle"](0x0),
										  this["anims"]["pause"]())
										: this["HasWalkingAnimation"]
										? this["anims"]["resume"]()
										: this["wiggleTween"]["isPaused"]() && this["wiggleTween"]["play"]() : '',
									this["historyIndex"] < this["maxHistory"]
										? this["historyIndex"]++
										: (this["historyIndex"] = 0x0),
									this["posHistory"][this["historyIndex"]]["copy"](this["body"]["position"]),
									this["rt"]["clear"](),
									this["rt"]["setDepth"](this["depth"] - 0x1),
									(this["rt"]["alpha"] = 0.65),
									this["rt"]["setTint"](0xe0e0ff, 0xff, 0xe0e0ff, 0xff);
								for (let _0x388111 = 0x0; _0x388111 <= this["maxHistory"]; _0x388111++) {
									var _0x190f8c = _0x388111 + this["historyIndex"],
										_0x5340f8 = this["posHistory"][_0x190f8c % this["maxHistory"]];
									this["rt"]["draw"](
										this,
										0.5 * this["rt"]["width"] + _0x5340f8["x"] - this["body"]["x"],
										0.5 * this["rt"]["height"] + _0x5340f8["y"] - this["body"]["y"],
										0.1 - 0.1 * _0x388111,
										0xff
									);
								}
								this["rt"]["copyPosition"](this),
									(this["WorldBoxCollider"]["x"] =
										this["x"] - 0.5 * this["scene"]["renderer"]["width"]),
									(this["WorldBoxCollider"]["y"] =
										this["y"] - 0.5 * this["scene"]["renderer"]["height"]);
							}
						}
					}
					class _0x5e96c6 extends Phaser["Physics"]["Arcade"]["Sprite"] {
						constructor(_0x1521e0, _0x1a8a85, _0x20a2f2) {
							var _0x4c353f = _0x5d9431;
							super(_0x1521e0, _0x1a8a85, _0x20a2f2, "vfx", "WhiteDot.png"),
								(this["radius"] = 0x1e),
								(this["percentage"] = 0x1),
								(this["visible"] = !0x1),
								_0x1521e0["physics"]["add"]["existing"](this),
								this["setScale"](_0x2164b8["Core"]["Player"]["scale"]),
								this["body"]["setCircle"](this["radius"], -this["radius"], -this["radius"]),
								(this["percentage"] = 0x1);
						}
						["RefreshSize"]() {
							var _0x4eacfa = _0x5d9431;
							this["body"]["setCircle"](this["radius"], -this["radius"], -this["radius"]);
						}
						["Update"]() {
							var _0x4ee3b0 = _0x5d9431;
							this["copyPosition"](_0x2164b8["Core"]["Player"]), (this["y"] -= 0xc);
						}
					}
					var _0x52357c;
					!(function (_0x4c1962) {
						var _0x10a704 = _0x5d9431;
						(_0x4c1962["VOID"] = ""),
							(_0x4c1962["WHIP"] = "WHIP"),
							(_0x4c1962["COIN"] = "COIN"),
							(_0x4c1962["COINBAG1"] = "COINBAG1"),
							(_0x4c1962["COINBAG2"] = "COINBAG2"),
							(_0x4c1962["COINBAGMAX"] = "COINBAGMAX"),
							(_0x4c1962["GEM"] = "GEM"),
							(_0x4c1962["CLOVER"] = "CLOVER"),
							(_0x4c1962["TREASURE"] = "TREASURE"),
							(_0x4c1962["ROSARY"] = "ROSARY"),
							(_0x4c1962["VACUUM"] = "VACUUM"),
							(_0x4c1962["OROLOGION"] = "OROLOGION"),
							(_0x4c1962["ROAST"] = "ROAST"),
							(_0x4c1962["WEAPON"] = "WEAPON"),
							(_0x4c1962["STATS_TREASURE_1"] = "STATS_TREASURE_1"),
							(_0x4c1962["STATS_TREASURE_2"] = "STATS_TREASURE_2"),
							(_0x4c1962["STATS_TREASURE_3"] = "STATS_TREASURE_3"),
							(_0x4c1962["NFT"] = "NFT"),
							(_0x4c1962["LITTLEHEART"] = "LITTLEHEART");
					})(_0x52357c || (_0x52357c = {}));
					const _0x3bf2f1 = _0x52357c,
						_0x171870 = {
							[_0x3bf2f1["GEM"]]: {
								name: "Experience Gem",
								description: "Increases experience.",
								tips: "",
								texture: "items",
								frameName: "GemBlue.png",
								pickedupAmount: 0x0,
								rarity: 0x0,
								unlocksAt: 0x186a0,
								value: 0x32,
								inTreasures: !0x1,
								seen: !0x0,
							},
							[_0x3bf2f1["COIN"]]: {
								name: "Gold Coin",
								description: "Adds 1 to your gold coins total.",
								tips: "",
								frameName: "CoinGold.png",
								texture: "items",
								pickedupAmount: 0x0,
								rarity: 0x32,
								unlocksAt: 0x0,
								value: 0x1,
								inTreasures: !0x1,
								seen: !0x0,
							},
							[_0x3bf2f1["COINBAG1"]]: {
								name: "Coin Bag",
								description: "Adds 10 to your gold coins total.",
								tips: "",
								texture: "items",
								frameName: "MoneyBagRed.png",
								pickedupAmount: 0x0,
								rarity: 0xa,
								unlocksAt: 0x0,
								inTreasures: !0x1,
								value: 0xa,
							},
							[_0x3bf2f1["COINBAG2"]]: {
								name: "Big Coin Bag",
								description: "Adds 25 to your gold coins total.",
								tips: "",
								texture: "items",
								frameName: "MoneyBagGreen.png",
								pickedupAmount: 0x0,
								rarity: 0x0,
								unlocksAt: 0x186a0,
								hidden: !0x0,
								value: 0x19,
							},
							[_0x3bf2f1["COINBAGMAX"]]: {
								name: "Rich Coin Bag",
								description: "Adds 100 to your gold coins total.",
								tips: "Drop rate affected by Luck.",
								texture: "items",
								frameName: "MoneyBagColor.png",
								pickedupAmount: 0x0,
								rarity: 0x1,
								unlocksAt: 0x5,
								value: 0x64,
								isRare: !0x0,
							},
							[_0x3bf2f1["ROSARY"]]: {
								name: "Rosary",
								description: "Destroys all enemies in sight.",
								tips: "Drop rate affected by Luck.",
								texture: "items",
								frameName: "Rosary1.png",
								pickedupAmount: 0x0,
								rarity: 0x1,
								unlocksAt: 0x8,
								value: 0x0,
								isRare: !0x0,
							},
							[_0x3bf2f1["NFT"]]: {
								name: "Nduja Fritta",
								description: "Temporarily emits cones of flames. Affected by player stats.",
								tips: "Drop rate affected by Luck.",
								texture: "items",
								frameName: "Nft1.png",
								pickedupAmount: 0x0,
								rarity: 0x1,
								unlocksAt: 0x0,
								value: 0x0,
								isRare: !0x0,
							},
							[_0x3bf2f1["OROLOGION"]]: {
								name: "Orologion",
								description: "Freezes all enemies in time for 10 seconds.",
								tips: "Drop rate affected by Luck.",
								texture: "items",
								frameName: "PocketWatch1.png",
								pickedupAmount: 0x0,
								rarity: 0x2,
								unlocksAt: 0x4,
								value: 0x0,
								isRare: !0x0,
							},
							[_0x3bf2f1["VACUUM"]]: {
								name: "Vacuum",
								description: "Gathers all experience gems left on the ground.",
								tips: "Drop rate affected by Luck.",
								texture: "items",
								frameName: "Vacuum1.png",
								pickedupAmount: 0x0,
								rarity: 0x2,
								unlocksAt: 0xc,
								value: 0x0,
								isRare: !0x0,
							},
							[_0x3bf2f1["ROAST"]]: {
								name: "Floor Chicken",
								description: "Restores 30 health points.",
								tips: "Drop rate affected by Luck.",
								texture: "items",
								frameName: "Roast.png",
								pickedupAmount: 0x0,
								rarity: 0xc,
								unlocksAt: 0x0,
								value: 0x1e,
								isRare: !0x0,
							},
							[_0x3bf2f1["LITTLEHEART"]]: {
								name: "Little Heart",
								description: "Pick up to recover 1 HP.",
								tips: "",
								texture: "items",
								frameName: "HeartMini.png",
								pickedupAmount: 0x0,
								rarity: 0x0,
								unlocksAt: 0xf4240,
								inTreasures: !0x1,
								hidden: !0x0,
								value: 0x0,
							},
							[_0x3bf2f1["CLOVER"]]: {
								name: "Little Clover",
								description: "Pick up to get 10% luckier.",
								tips: "",
								texture: "items",
								frameName: "Clover2.png",
								pickedupAmount: 0x0,
								rarity: 0.5,
								unlocksAt: 0x0,
								inTreasures: !0x1,
								value: 0.1,
							},
							[_0x3bf2f1["TREASURE"]]: {
								name: "Treasure Chest",
								description: "Awards coins and power ups. Dropped by strong enemies.",
								tips: "Quality affected by Luck.",
								texture: "items",
								frameName: "BoxOpen.png",
								pickedupAmount: 0x0,
								rarity: 0x0,
								unlocksAt: 0xf4240,
								inTreasures: !0x1,
								value: 0x0,
							},
							[_0x3bf2f1["WEAPON"]]: {
								name: "Weapon",
								description: "NA",
								tips: "",
								texture: "items",
								frameName: "",
								pickedupAmount: 0x0,
								rarity: 0x0,
								unlocksAt: 0xf4240,
								inTreasures: !0x1,
								hidden: !0x0,
								value: 0x0,
							},
							[_0x3bf2f1["STATS_TREASURE_1"]]: {
								name: "",
								description: "1",
								tips: "",
								texture: "items",
								frameName: "BoxOpen.png",
								pickedupAmount: 0x0,
								rarity: 0x0,
								unlocksAt: 0xf4240,
								inTreasures: !0x1,
								hidden: !0x0,
								value: 0x0,
							},
							[_0x3bf2f1["STATS_TREASURE_2"]]: {
								name: "",
								description: "2",
								tips: "",
								texture: "items",
								frameName: "BoxOpen2.png",
								pickedupAmount: 0x0,
								rarity: 0x0,
								unlocksAt: 0xf4240,
								inTreasures: !0x1,
								hidden: !0x0,
								value: 0x0,
							},
							[_0x3bf2f1["STATS_TREASURE_3"]]: {
								name: "",
								description: "3",
								tips: "",
								texture: "items",
								frameName: "BoxOpen3.png",
								pickedupAmount: 0x0,
								rarity: 0x0,
								unlocksAt: 0xf4240,
								inTreasures: !0x1,
								hidden: !0x0,
								value: 0x0,
							},
						};
					class _0x5e0767 extends Phaser["Physics"]["Arcade"]["Sprite"] {
						constructor(_0x2b19ba, _0x404753, _0x4ea78b, _0x5e9158) {
							var _0x42c1a1 = _0x5d9431;
							super(_0x2b19ba["scene"], _0x404753, _0x4ea78b, "items"),
								(this["DEFAULT_SPEED"] = 0xfa),
								(this["radius"] = 0xa),
								(this["frameName"] = "GemRed.png"),
								(this["speed"] = this["DEFAULT_SPEED"]),
								(this["goToPlayer"] = !0x1),
								(this["time"] = 0x0),
								(this["originPos"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["currentDirection"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["value"] = 0x0),
								(this["isStationary"] = !0x1),
								(this["owner"] = null),
								(this["isCullable"] = !0x0),
								(this["isTeleportOnCull"] = !0x1),
								(this["pool"] = _0x2b19ba),
								(this["itemType"] = _0x5e9158);
							var _0x4ab5e1 = _0x171870[_0x5e9158];
							(this["frameName"] = _0x4ab5e1["frameName"]),
								(this["value"] = _0x4ab5e1["value"]),
								this["setFrame"](this["frameName"]),
								_0x2b19ba["scene"]["add"]["existing"](this),
								_0x2b19ba["scene"]["physics"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								this["body"]["setCircle"](this["radius"]),
								(this["originPos"]["x"] = _0x404753),
								(this["originPos"]["y"] = _0x4ea78b),
								(this["vacuumTween"] = this["scene"]["tweens"]["add"]({
									targets: this,
									time: 0x1,
									duration: 0x1f4,
									ease: "Linear",
								})),
								this["vacuumTween"]["pause"]();
						}
						["OnTeleportOnCull"]() {}
						["Init"](_0x416b0e = -0x3e8, _0x4af9b3 = -0x3e8) {
							var _0x2d79e6 = _0x5d9431;
							this["setPosition"](_0x416b0e, _0x4af9b3), this["OnRecycle"]();
						}
						["OnRecycle"]() {
							var _0x362478 = _0x5d9431;
							this["setActive"](!0x0),
								this["setVisible"](!0x0),
								this["setFrame"](this["frameName"]),
								(this["body"]["enable"] = !0x0),
								(this["goToPlayer"] = !0x1),
								(this["speed"] = this["DEFAULT_SPEED"]),
								(this["value"] = _0x171870[this["itemType"]]["value"]);
						}
						["DeSpawn"]() {
							var _0x32ef14 = _0x5d9431;
							this["setActive"](!0x1),
								this["setVisible"](!0x1),
								(this["body"]["enable"] = !0x1),
								this["setVelocity"](0x0),
								this["anims"]["stop"](),
								this["pool"]["Return"](this);
						}
						["GetTaken"]() {
							var _0x54fab4 = _0x5d9431;
							this["DeSpawn"](), (_0x171870[this["itemType"]]["pickedupAmount"] += 0x1);
						}
						["Update"](_0x14989d = 0x0) {
							var _0x5b2daa = _0x5d9431;
							this["goToPlayer"] && !this["isStationary"] && this["GoToPlayer"]();
						}
						["Vacuum"]() {
							var _0x4b14b1 = _0x5d9431;
							return (
								!this["goToPlayer"] &&
								(this["vacuumTween"]["restart"](),
								(this["time"] = -0x1),
								(this["goToPlayer"] = !0x0),
								!0x0)
							);
						}
						["GoToPlayer"]() {
							var _0x1c8210 = _0x5d9431;
							(this["currentDirection"]["x"] = _0x2164b8["Core"]["Player"]["x"] - this["x"]),
								(this["currentDirection"]["y"] = _0x2164b8["Core"]["Player"]["y"] - 0x8 - this["y"]),
								this["currentDirection"]["normalize"](),
								this["setVelocity"](
									this["speed"] * this["currentDirection"]["x"] * this["time"],
									this["speed"] * this["currentDirection"]["y"] * this["time"]
								),
								this["speed"]++;
						}
						["SetSeenItem"](_0x518f58) {
							var _0xf1db50 = _0x5d9431;
							void 0x0 ===
								_0x2164b8["Core"]["PlayerOptions"]["CollectedItems"]["find"](
									(_0x1d802d) => _0x1d802d === _0x518f58
								) &&
								((_0x171870[_0x518f58]["seen"] = !0x0),
								_0x2164b8["Core"]["PlayerOptions"]["CollectedItems"]["push"](_0x518f58),
								_0x2164b8["Core"]["PlayerOptions"]["SaveCollection"]());
						}
					}
					const _0x3954b8 = _0x5e0767;
					class _0x2fc624 extends _0x3954b8 {
						constructor(_0x24b1c1, _0xcf479f, _0x2e855a, _0x17565e = _0x3bf2f1["COIN"]) {
							var _0x358db1 = _0x5d9431;
							super(_0x24b1c1, _0xcf479f, _0x2e855a, _0x17565e),
								(this["landingLocation"] = {
									x: 0x0,
									y: 0x0,
								}),
								(this["time"] = 0x0),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]);
						}
						["Update"]() {
							var _0x598cb6 = _0x5d9431;
							super["Update"](), this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]);
						}
						["GetTaken"]() {
							var _0x4dd5f2 = _0x5d9431;
							_0x2164b8["Core"]["PlayerOptions"]["AddCoins"](this["value"]),
								_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](this["itemType"]),
								_0x2164b8["Core"]["MainUI"]["UpdateCoins"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Coin"], {
									volume: 0.5,
								}),
								super["GetTaken"]();
						}
					}
					class _0x19cf83 extends _0x3954b8 {
						constructor(_0x4cd360, _0x35c95e, _0x5ba0a6, _0x13b38a = 0x0) {
							var _0x8356b9 = _0x5d9431;
							super(_0x4cd360, _0x35c95e, _0x5ba0a6, _0x3bf2f1["GEM"]),
								(this["frameName"] = "GemBlue.png"),
								(this["landingLocation"] = {
									x: 0x0,
									y: 0x0,
								}),
								(this["value"] = _0x13b38a),
								this["SetValue"](this["value"]),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								this["setFrame"](this["frameName"]);
							var _0x2fccbb = 0x2 * (Math["random"]() - 0.5) * Math["PI"],
								_0x49ffbb = 0x64,
								_0x2eb462 = Math["cos"](_0x2fccbb),
								_0xac3930 = Math["sin"](_0x2fccbb),
								_0x4de1ae = {
									x: _0x35c95e + _0x2eb462 * _0x49ffbb,
									y: _0x5ba0a6 + _0xac3930 * _0x49ffbb * 0x2,
								};
							(this["landingLocation"] = {
								x: _0x35c95e + _0x2eb462 * _0x49ffbb,
								y: _0x5ba0a6 + _0xac3930 * _0x49ffbb,
							}),
								_0x2164b8["Core"]["scene"]["tweens"]["add"]({
									targets: this,
									time: 0x1,
									duration: 0x1f4,
									ease: "Linear",
								});
							var _0x1daf46 = new Phaser["Math"]["Vector2"](_0x35c95e, _0x5ba0a6),
								_0x30f23e = new Phaser["Math"]["Vector2"](_0x4de1ae["x"], _0x4de1ae["y"]),
								_0x10582a = new Phaser["Math"]["Vector2"](_0x4de1ae["x"], _0x4de1ae["y"]),
								_0x253bee = new Phaser["Math"]["Vector2"](
									this["landingLocation"]["x"],
									this["landingLocation"]["y"]
								);
							this["curve"] = new Phaser["Curves"]["CubicBezier"](
								_0x1daf46,
								_0x30f23e,
								_0x10582a,
								_0x253bee
							);
						}
						static ["getDetune"]() {
							var _0x57b464 = _0x5d9431;
							return 0x3c * _0x19cf83["detunes"][_0x19cf83["detune"]++ % _0x19cf83["detunes"]["length"]];
						}
						["SetValue"](_0x5d4aa8) {
							var _0x31bf76 = _0x5d9431;
							switch (((this["value"] = _0x5d4aa8), this["value"])) {
								case 0x1:
								case 0x2:
									this["frameName"] = "GemBlue.png";
									break;
								case 0x3:
								case 0x4:
								case 0x5:
								case 0x6:
								case 0x7:
								case 0x8:
								case 0x9:
									this["frameName"] = "GemGreen.png";
									break;
								default:
									this["frameName"] = "GemRed.png";
							}
							this["setFrame"](this["frameName"]);
						}
						["FollowCurve"]() {
							var _0xd0b212 = _0x5d9431,
								_0x34cf36 = new Phaser["Math"]["Vector2"](0x0, 0x0);
							this["curve"]["getPoint"](this["time"], _0x34cf36),
								this["setPosition"](_0x34cf36["x"], _0x34cf36["y"]);
						}
						["Update"]() {
							var _0x315b63 = _0x5d9431;
							super["Update"](),
								this["setDepth"](
									this["y"] - _0x2164b8["Core"]["Player"]["y"] - this["scene"]["renderer"]["height"]
								);
						}
						["GetTaken"]() {
							var _0xbf2862 = _0x5d9431;
							(_0x2164b8["Core"]["Player"]["xp"] +=
								this["value"] * _0x2164b8["Core"]["Player"]["growth"]),
								_0x2164b8["Sound"]["PlaySound"](
									_0x522ca7["Gem"],
									{
										volume: 0.1,
									},
									0x1,
									0x1
								),
								_0x2164b8["Core"]["PlayerUI"]["Update"](),
								_0x2164b8["Core"]["CheckForLevelUp"](),
								super["GetTaken"]();
						}
					}
					(_0x19cf83["detunes"] = [
						0x0, 0x1, 0x2, 0x4, 0x7, 0x8, 0x9, 0xb, 0x2, 0x3, 0x4, 0x6, 0x9, 0xa, 0xb, 0xd, 0x10, 0xd, 0xb,
						0xa, 0x9, 0x6, 0x4, 0x2,
					]),
						(_0x19cf83["detune"] = 0x0);
					class _0x416823 extends _0x3954b8 {
						constructor(_0x4b40eb, _0x109ad0, _0x3885a4) {
							var _0x2fbe69 = _0x5d9431;
							super(_0x4b40eb, _0x109ad0, _0x3885a4, _0x3bf2f1["VACUUM"]),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]);
							const _0x1352d4 = this["anims"]["generateFrameNames"]("items", {
								start: 0x1,
								end: 0x3,
								zeroPad: 0x0,
								prefix: "Vacuum",
								suffix: ".png",
							});
							this["anims"]["create"]({
								key: "idle",
								frames: _0x1352d4,
								frameRate: 0xa,
								repeat: -0x1,
							});
						}
						["OnRecycle"]() {
							var _0x544a9b = _0x5d9431;
							super["OnRecycle"](), !global["anims_disabled"].value ? this["anims"]["play"]("idle") : '';
						}
						["Update"]() {
							var _0x2abd78 = _0x5d9431;
							super["Update"](), this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]);
						}
						["GetTaken"]() {
							var _0x2c32cf = _0x5d9431;
							_0x2164b8["Core"]["TurnOnVacuum"](),
								_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](this["itemType"]),
								this["SetSeenItem"](this["itemType"]),
								super["GetTaken"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Vacuum"], {
									volume: 0.6,
									rate: 0x1,
								});
						}
					}
					class _0x2e9adf extends _0x3954b8 {
						constructor(_0x5d2dc3, _0x428f7a, _0x26a4b2) {
							var _0x1811e6 = _0x5d9431;
							super(_0x5d2dc3, _0x428f7a, _0x26a4b2, _0x3bf2f1["ROSARY"]),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]);
							const _0x3c3114 = this["anims"]["generateFrameNames"]("items", {
								start: 0x1,
								end: 0x3,
								zeroPad: 0x0,
								prefix: "Rosary",
								suffix: ".png",
							});
							this["anims"]["create"]({
								key: "idle",
								frames: _0x3c3114,
								frameRate: 0xa,
								repeat: -0x1,
							});
						}
						["OnRecycle"]() {
							var _0x4414cc = _0x5d9431;
							super["OnRecycle"](), !global["anims_disabled"].value ? this["anims"]["play"]("idle") : '';
						}
						["Update"]() {
							var _0x161b3c = _0x5d9431;
							super["Update"](), this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]);
						}
						["GetTaken"]() {
							var _0x989d6f = _0x5d9431;
							_0x2164b8["Core"]["RosaryDamage"](),
								_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](this["itemType"]),
								this["SetSeenItem"](this["itemType"]),
								super["GetTaken"]();
						}
					}
					class _0x532bcd extends _0x3954b8 {
						constructor(_0x5ef109, _0x257d88, _0x519516) {
							var _0x229461 = _0x5d9431;
							super(_0x5ef109, _0x257d88, _0x519516, _0x3bf2f1["OROLOGION"]),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]);
							const _0x43a8fa = this["anims"]["generateFrameNames"]("items", {
								start: 0x1,
								end: 0x3,
								zeroPad: 0x0,
								prefix: "PocketWatch",
								suffix: ".png",
							});
							this["anims"]["create"]({
								key: "idle",
								frames: _0x43a8fa,
								frameRate: 0xa,
								repeat: -0x1,
							});
						}
						["OnRecycle"]() {
							var _0x4b8b04 = _0x5d9431;
							super["OnRecycle"](), !global["anims_disabled"].value ? this["anims"]["play"]("idle") : '';
						}
						["Update"]() {
							var _0xc35da6 = _0x5d9431;
							super["Update"](), this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]);
						}
						["GetTaken"]() {
							var _0x2f7b99 = _0x5d9431;
							_0x2164b8["Core"]["TimeStop"](),
								_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](this["itemType"]),
								this["SetSeenItem"](this["itemType"]),
								super["GetTaken"]();
						}
					}
					class _0x5453f9 extends _0x3954b8 {
						constructor(_0x5c5184, _0x6724ff, _0x5450ea, _0x13f316 = _0x3bf2f1["COINBAG1"]) {
							var _0x44ddf5 = _0x5d9431;
							super(_0x5c5184, _0x6724ff, _0x5450ea, _0x13f316),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]);
						}
						["Update"]() {
							var _0x2074c2 = _0x5d9431;
							super["Update"](), this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]);
						}
						["GetTaken"]() {
							var _0x1e0f40 = _0x5d9431;
							_0x2164b8["Core"]["PlayerOptions"]["AddCoins"](this["value"]),
								_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](this["itemType"]),
								_0x2164b8["Core"]["MainUI"]["UpdateCoins"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Coin"], {
									volume: 0.5,
								}),
								this["SetSeenItem"](this["itemType"]),
								super["GetTaken"]();
						}
					}
					class _0x54b338 extends _0x3954b8 {
						constructor(_0x5bf591, _0x4d7bcb, _0x2fcffe) {
							var _0x2e9e77 = _0x5d9431;
							super(_0x5bf591, _0x4d7bcb, _0x2fcffe, _0x3bf2f1["CLOVER"]),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]);
						}
						["Update"]() {
							var _0x48bb63 = _0x5d9431;
							super["Update"](), this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]);
						}
						["GetTaken"]() {
							var _0x36146e = _0x5d9431;
							(_0x2164b8["Core"]["Player"]["luck"] += this["value"]),
								_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](this["itemType"]),
								this["SetSeenItem"](this["itemType"]),
								super["GetTaken"]();
						}
					}
					class _0x40bc50 extends _0x3954b8 {
						constructor(_0x42ec08, _0x313350, _0xb83e30) {
							var _0x2f4859 = _0x5d9431;
							super(_0x42ec08, _0x313350, _0xb83e30, _0x3bf2f1["ROAST"]),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]);
						}
						["Update"]() {
							var _0x2b17a1 = _0x5d9431;
							super["Update"](), this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]);
						}
						["GetTaken"]() {
							var _0x3612a1 = _0x5d9431;
							_0x2164b8["Core"]["Player"]["RecoverHp"](this["value"]),
								_0x2164b8["Core"]["Player"]["SetInvulForMilliSeconds"](0x12c),
								_0x2164b8["Core"]["ShowRecoveryAt"](
									_0x2164b8["Core"]["Player"]["x"],
									_0x2164b8["Core"]["Player"]["y"],
									this["value"]
								),
								_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](this["itemType"]),
								this["SetSeenItem"](this["itemType"]),
								super["GetTaken"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Roast"], {
									volume: 0.6,
									rate: 0x1,
								});
						}
					}
					class _0x20a082 extends _0x3954b8 {
						constructor(_0x3a4f8d, _0x5580d2, _0x2d3434) {
							var _0x5c3cbb = _0x5d9431;
							super(_0x3a4f8d, _0x5580d2, _0x2d3434, _0x3bf2f1["COINBAGMAX"]),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]);
						}
						["Update"](_0x2bad62) {
							var _0x19ed96 = _0x5d9431;
							super["Update"](_0x2bad62),
								this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]);
						}
						["GetTaken"]() {
							var _0x18d69c = _0x5d9431;
							_0x2164b8["Core"]["PlayerOptions"]["AddCoins"](this["value"]),
								_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](this["itemType"]),
								_0x2164b8["Core"]["MainUI"]["UpdateCoins"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Coin"], {
									volume: 0.65,
								}),
								this["SetSeenItem"](this["itemType"]),
								super["GetTaken"]();
						}
					}
					class _0x3f7e0e extends _0x3954b8 {
						constructor(_0x5eda78, _0x37d855, _0x23a6ec) {
							var _0x16753d = _0x5d9431;
							super(_0x5eda78, _0x37d855, _0x23a6ec, _0x3bf2f1["TREASURE"]),
								(this["radius"] = 0x14),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								(this["Cursor"] = this["scene"]["add"]["sprite"](
									_0x37d855,
									_0x23a6ec,
									"UI",
									"arrow_01.png"
								)),
								this["Cursor"]["setDepth"](0x270f),
								this["Cursor"]["setScale"](0x2),
								this["Cursor"]["setAlpha"](0.75),
								this["Cursor"]["setBlendMode"](_0x1cb257["BlendModes"]["ADD"]);
							const _0x418afa = this["anims"]["generateFrameNames"]("UI", {
								start: 0x1,
								end: 0x8,
								zeroPad: 0x2,
								prefix: "arrow_",
								suffix: ".png",
							});
							this["Cursor"]["anims"]["create"]({
								key: "idle",
								frames: _0x418afa,
								frameRate: 0x10,
								repeat: -0x1,
							}),
								this["Cursor"]["play"]("idle"),
								this["body"]["setCircle"](0x10, -0x8, -0x8);
						}
						["OnRecycle"]() {
							var _0x192607 = _0x5d9431;
							super["OnRecycle"](),
								(this["goToPlayer"] = !0x0),
								this["Cursor"]["setVisible"](!0x0),
								null != _0x2164b8["Core"]["Stage"]["minTreasureY"] &&
									(this["y"] < _0x2164b8["Core"]["Stage"]["minTreasureY"]
										? (this["y"] = _0x2164b8["Core"]["Stage"]["minTreasureY"])
										: this["y"] > _0x2164b8["Core"]["Stage"]["maxTreasureY"] &&
										  (this["y"] = _0x2164b8["Core"]["Stage"]["maxTreasureY"]));
						}
						["DeSpawn"]() {
							var _0x3e6003 = _0x5d9431;
							super["DeSpawn"](), this["Cursor"]["setVisible"](!0x1);
						}
						["Update"]() {
							var _0x2c39eb = _0x5d9431;
							if (
								(super["Update"](),
								this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]),
								Math["abs"](this["x"] - _0x2164b8["Core"]["Player"]["x"]) <
									0.5 * this["scene"]["renderer"]["width"] &&
									Math["abs"](this["y"] - _0x2164b8["Core"]["Player"]["y"]) <
										0.5 * this["scene"]["renderer"]["height"])
							)
								this["Cursor"]["copyPosition"](this),
									(this["Cursor"]["y"] -= 0x18),
									this["Cursor"]["setAngle"](0x5a),
									this["Cursor"]["setAlpha"](0x1),
									this["Cursor"]["setBlendMode"](_0x1cb257["BlendModes"]["NORMAL"]);
							else {
								var _0x2dc0a6 = this["AngleFromTargetRadians"](this);
								this["Cursor"]["setAngle"](Phaser["Math"]["RadToDeg"](_0x2dc0a6)),
									this["Cursor"]["copyPosition"](_0x2164b8["Core"]["Player"]),
									(this["Cursor"]["x"] +=
										0.45 * Math["cos"](_0x2dc0a6) * this["scene"]["renderer"]["width"]),
									(this["Cursor"]["y"] +=
										0.45 * Math["sin"](_0x2dc0a6) * this["scene"]["renderer"]["height"]),
									this["Cursor"]["setAlpha"](0.75),
									this["Cursor"]["setBlendMode"](_0x1cb257["BlendModes"]["ADD"]);
							}
							let _0x416a14 = this["safeXY"](this["x"], this["y"]);
							(this["x"] = _0x416a14["x"]), (this["y"] = _0x416a14["y"]);
						}
						["safeXY"](_0x1f993e, _0x1e2a0a) {
							var _0x252aa0 = _0x5d9431;
							if (
								_0x2164b8["Core"]["Stage"]["tilingTileset"] &&
								_0x2164b8["Core"]["Stage"]["tilingTileset"]["isPointWithinCollisionLayer"](
									_0x1f993e,
									_0x1e2a0a
								)
							) {
								(this["currentDirection"]["x"] = _0x2164b8["Core"]["Player"]["x"] - _0x1f993e),
									(this["currentDirection"]["y"] = _0x2164b8["Core"]["Player"]["y"] - _0x1e2a0a),
									this["currentDirection"]["normalize"]();
								let _0x2f417c = _0x1f993e + 0x4 * this["currentDirection"]["x"],
									_0x17b8bd = _0x1e2a0a + 0x4 * this["currentDirection"]["y"];
								return new Phaser["Geom"]["Point"](_0x2f417c, _0x17b8bd);
							}
							return new Phaser["Geom"]["Point"](_0x1f993e, _0x1e2a0a);
						}
						["GetTaken"]() {
							var _0x4a0154 = _0x5d9431;
							switch (
								(this["Cursor"]["setVisible"](!0x1),
								this["SetSeenItem"](this["itemType"]),
								_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](this["itemType"]),
								this["CurrentTreasureLevel"])
							) {
								case 0x1:
									(_0x171870[_0x3bf2f1["STATS_TREASURE_1"]]["pickedupAmount"] += 0x1),
										_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](
											_0x3bf2f1["STATS_TREASURE_1"]
										);
									break;
								case 0x2:
									(_0x171870[_0x3bf2f1["STATS_TREASURE_2"]]["pickedupAmount"] += 0x1),
										_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](
											_0x3bf2f1["STATS_TREASURE_2"]
										);
									break;
								case 0x3:
									(_0x171870[_0x3bf2f1["STATS_TREASURE_3"]]["pickedupAmount"] += 0x1),
										_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](
											_0x3bf2f1["STATS_TREASURE_3"]
										);
							}
							_0x2164b8["Core"]["TreasureQueue"]["push"](
								new (class {
									constructor(_0x2e94bf, _0x2651c3, _0x1949bd) {
										var _0x2b7c3b = _0x4a0154;
										(this["level"] = 0x1),
											(this["level"] = _0x2e94bf),
											(this["chances"] = new Array()),
											(this["prizeTypes"] = _0x2651c3),
											(this["fixedPrizes"] = _0x1949bd);
									}
								})(
									this["CurrentTreasureLevel"],
									this["CurrentTreasureTypes"],
									this["CurrentFixedTreasures"]
								)
							),
								super["GetTaken"]();
						}
						["TurnTowards"](_0x3c2ae6) {
							var _0x1ec393 = _0x5d9431;
							let _0x8d2571 = new Phaser["Math"]["Vector2"](0x0, 0x0);
							(_0x8d2571["x"] = _0x3c2ae6["body"]["position"]["x"] - _0x2164b8["Core"]["Player"]["x"]),
								(_0x8d2571["y"] =
									_0x3c2ae6["body"]["position"]["y"] - _0x2164b8["Core"]["Player"]["y"]),
								_0x8d2571["normalize"]();
							let _0x51cb09 = new Phaser["Math"]["Vector2"](_0x8d2571["x"], _0x8d2571["y"]);
							var _0x1b13d8 = Phaser["Math"]["Vector2"]["RIGHT"];
							return Phaser["Math"]["RadToDeg"](
								Math["atan2"](_0x51cb09["y"] - _0x1b13d8["y"], _0x51cb09["x"] - _0x1b13d8["x"])
							);
						}
						["AngleFromTargetRadians"](_0x454efc) {
							var _0x4a93fd = _0x5d9431,
								_0x17797e = _0x2164b8["Core"]["Player"]["body"]["position"];
							return Math["atan2"](_0x454efc["y"] - _0x17797e["y"], _0x454efc["x"] - _0x17797e["x"]);
						}
					}
					const _0x41a274 = {
						[_0x5324b3["WHIP"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["WHIP"],
								name: "Whip",
								description: "Attacks horizontally, passes through enemies.",
								tips: "Ignores: speed, duration.",
								texture: "items",
								frameName: "Whip.png",
								isUnlocked: !0x0,
								poolLimit: 0xa,
								rarity: 0x64,
								interval: 0x546,
								repeatInterval: 0x64,
								power: 0x1,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								hitsWalls: !0x1,
							},
							{
								amount: 0x1,
							},
							{
								power: 0.5,
							},
							{
								power: 0.5,
								area: 0.1,
							},
							{
								power: 0.5,
							},
							{
								power: 0.5,
								area: 0.1,
							},
							{
								power: 0.5,
							},
							{
								power: 0.5,
								addEvolvedWeapon: _0x5324b3["VAMPIRICA"],
							},
						],
						[_0x5324b3["VAMPIRICA"]]: [
							{
								hidden: !0x1,
								level: 0x1,
								bulletType: _0x5324b3["VAMPIRICA"],
								name: "Bloody Tear",
								description: "Evolved Whip. Can deal critical damage and absorb HP.",
								tips: "Requires: Hollow Heart",
								texture: "items",
								frameName: "Whip2.png",
								isEvolution: !0x0,
								evolvesFrom: [_0x5324b3["WHIP"]],
								requires: [_0x5324b3["MAXHEALTH"]],
								hitVFX: _0xed2036["DARK"],
								isUnlocked: !0x0,
								poolLimit: 0xa,
								rarity: 0x1,
								interval: 0x546,
								repeatInterval: 0x64,
								power: 0x4,
								area: 1.3,
								speed: 0x1,
								amount: 0x2,
								critChance: 0.1,
								critMul: 0x2,
								hitsWalls: !0x1,
							},
						],
						[_0x5324b3["MAGIC_MISSILE"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["MAGIC_MISSILE"],
								name: "Magic Wand",
								description: "Fires at the nearest enemy.",
								tips: "Ignores: duration.",
								texture: "items",
								frameName: "WandHoly.png",
								isUnlocked: !0x0,
								poolLimit: 0x3c,
								rarity: 0x64,
								interval: 0x4b0,
								repeatInterval: 0x64,
								power: 0x1,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								penetrating: 0x1,
							},
							{
								amount: 0x1,
							},
							{
								interval: -0xc8,
							},
							{
								amount: 0x1,
							},
							{
								power: 0x1,
							},
							{
								amount: 0x1,
							},
							{
								penetrating: 0x1,
							},
							{
								power: 0x1,
								addEvolvedWeapon: _0x5324b3["HOLY_MISSILE"],
							},
						],
						[_0x5324b3["HOLY_MISSILE"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["HOLY_MISSILE"],
								name: "Holy Wand",
								description: "Evolved Magic Wand. Fires with no delay.",
								tips: "Requires: Empty Tome.",
								texture: "items",
								frameName: "WandHoly2.png",
								isEvolution: !0x0,
								evolvesFrom: [_0x5324b3["MAGIC_MISSILE"]],
								requires: [_0x5324b3["COOLDOWN"]],
								volume: 0.1,
								poolLimit: 0x3c,
								rarity: 0x1,
								interval: 0x1f4,
								repeatInterval: 0x64,
								power: 0x3,
								area: 0x1,
								speed: 0x2,
								amount: 0x4,
								penetrating: 0x2,
							},
						],
						[_0x5324b3["KNIFE"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["KNIFE"],
								name: "Knife",
								description: "Fires quickly in the faced direction.",
								tips: "Ignores: duration.",
								texture: "items",
								frameName: "Knife.png",
								isUnlocked: !0x0,
								poolLimit: 0x3c,
								rarity: 0x64,
								interval: 0x3e8,
								repeatInterval: 0x64,
								power: 0.65,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								penetrating: 0x1,
								knockback: 0.5,
							},
							{
								amount: 0x1,
							},
							{
								amount: 0x1,
								power: 0.5,
							},
							{
								amount: 0x1,
								repeatInterval: -0x14,
							},
							{
								penetrating: 0x1,
							},
							{
								amount: 0x1,
								repeatInterval: -0x14,
							},
							{
								amount: 0x1,
								power: 0.5,
							},
							{
								penetrating: 0x1,
								repeatInterval: -0x14,
								addEvolvedWeapon: _0x5324b3["THOUSAND"],
							},
						],
						[_0x5324b3["THOUSAND"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["THOUSAND"],
								name: "Thousand Edge",
								description: "Evolved Knife. Fires with no delay.",
								tips: "Requires: Bracer.",
								texture: "items",
								frameName: "Knife2.png",
								isEvolution: !0x0,
								volume: 0.2,
								evolvesFrom: [_0x5324b3["KNIFE"]],
								requires: [_0x5324b3["SPEED"]],
								poolLimit: 0x3c,
								rarity: 0x1,
								interval: 0x15e,
								repeatInterval: 0x32,
								power: 1.65,
								area: 0x1,
								speed: 1.5,
								amount: 0x6,
								penetrating: 0x3,
								knockback: 0.5,
							},
						],
						[_0x5324b3["AXE"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["AXE"],
								name: "Axe",
								description: "High damage, high Area scaling.",
								tips: "Ignores: duration.",
								texture: "items",
								frameName: "Axe.png",
								isUnlocked: !0x0,
								poolLimit: 0x1e,
								rarity: 0x64,
								interval: 0xfa0,
								repeatInterval: 0xc8,
								power: 0x2,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								penetrating: 0x3,
								duration: 0x7d0,
								hitsWalls: !0x1,
							},
							{
								amount: 0x1,
							},
							{
								power: 0x2,
							},
							{
								penetrating: 0x2,
							},
							{
								amount: 0x1,
							},
							{
								power: 0x2,
							},
							{
								penetrating: 0x2,
							},
							{
								power: 0x2,
								addEvolvedWeapon: _0x5324b3["SCYTHE"],
							},
						],
						[_0x5324b3["SCYTHE"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["SCYTHE"],
								name: "Death Spiral",
								description: "Evolved Axe. Passes through enemies.",
								tips: "Requires: Candelabrador.",
								texture: "items",
								frameName: "Scythe.png",
								isEvolution: !0x0,
								evolvesFrom: [_0x5324b3["AXE"]],
								requires: [_0x5324b3["AREA"]],
								poolLimit: 0x14,
								rarity: 0x1,
								interval: 0xfa0,
								repeatInterval: 0x32,
								power: 0x6,
								area: 1.2,
								speed: 0.8,
								amount: 0x9,
								penetrating: 0x3e8,
								hitsWalls: !0x1,
							},
						],
						[_0x5324b3["CROSS"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["CROSS"],
								name: "Cross",
								description: "Aims at nearest enemy, has boomerang effect.",
								tips: "Ignores: duration.",
								texture: "items",
								frameName: "Cross.png",
								isUnlocked: !0x1,
								poolLimit: 0xf,
								rarity: 0x50,
								interval: 0x7d0,
								repeatInterval: 0x64,
								power: 0.5,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								hitsWalls: !0x1,
							},
							{
								power: 0x1,
							},
							{
								speed: 0.25,
								area: 0.1,
							},
							{
								amount: 0x1,
							},
							{
								power: 0x1,
							},
							{
								speed: 0.25,
								area: 0.1,
							},
							{
								amount: 0x1,
							},
							{
								power: 0x1,
								addEvolvedWeapon: _0x5324b3["HEAVENSWORD"],
							},
						],
						[_0x5324b3["HEAVENSWORD"]]: [
							{
								hidden: !0x1,
								level: 0x1,
								bulletType: _0x5324b3["HEAVENSWORD"],
								name: "Heaven Sword",
								description: "Evolved Cross. Can deal critical damage.",
								tips: "Requires: Clover.",
								texture: "items",
								frameName: "HeavenSword.png",
								isEvolution: !0x0,
								evolvesFrom: [_0x5324b3["CROSS"]],
								requires: [_0x5324b3["LUCK"]],
								hitVFX: _0xed2036["LIGHT"],
								poolLimit: 0xa,
								rarity: 0x1,
								isUnlocked: !0x1,
								interval: 0xce4,
								repeatInterval: 0x1f4,
								power: 7.7,
								area: 1.2,
								speed: 0x2,
								amount: 0x1,
								critChance: 0.1,
								critMul: 2.5,
								hitsWalls: !0x1,
							},
						],
						[_0x5324b3["HOLYBOOK"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["HOLYBOOK"],
								name: "King Bible",
								description: "Orbits around the character.",
								tips: "Best with: speed, duration, area.",
								texture: "items",
								frameName: "HolyBook.png",
								isUnlocked: !0x0,
								poolLimit: 0x14,
								rarity: 0x50,
								interval: 0xbb8,
								repeatInterval: 0x0,
								power: 0x1,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								duration: 0xbb8,
								hitBoxDelay: 0x6a4,
								intervalDependsOnDuration: !0x0,
								hitsWalls: !0x1,
							},
							{
								amount: 0x1,
							},
							{
								speed: 0.3,
								area: 0.25,
							},
							{
								duration: 0x1f4,
								power: 0x1,
							},
							{
								amount: 0x1,
							},
							{
								speed: 0.3,
								area: 0.25,
							},
							{
								duration: 0x1f4,
								power: 0x1,
							},
							{
								amount: 0x1,
								addEvolvedWeapon: _0x5324b3["VESPERS"],
							},
						],
						[_0x5324b3["VESPERS"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["VESPERS"],
								name: "Unholy Vespers",
								description: "Evolved King Bible. Never ends.",
								tips: "Requires: Spellbinder.",
								texture: "items",
								frameName: "UnholyBook.png",
								isEvolution: !0x0,
								evolvesFrom: [_0x5324b3["HOLYBOOK"]],
								requires: [_0x5324b3["DURATION"]],
								hitVFX: _0xed2036["DARK"],
								poolLimit: 0x14,
								rarity: 0x1,
								interval: 0xbb8,
								repeatInterval: 0x0,
								power: 0x3,
								area: 1.75,
								speed: 1.5,
								amount: 0x4,
								duration: 0xbb8,
								hitBoxDelay: 0x6a4,
								knockback: 0x4,
								hitsWalls: !0x1,
								intervalDependsOnDuration: !0x1,
							},
						],
						[_0x5324b3["FIREBALL"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["FIREBALL"],
								name: "Fire Wand",
								description: "Fires at a random enemy, deals heavy damage.",
								tips: "Ignores: duration.",
								texture: "items",
								frameName: "WandFire.png",
								hitVFX: _0xed2036["FIRE"],
								isUnlocked: !0x1,
								poolLimit: 0xf,
								rarity: 0x50,
								interval: 0xbb8,
								repeatInterval: 0x14,
								power: 0x2,
								area: 0x1,
								speed: 0.75,
								amount: 0x3,
								duration: 0x64,
							},
							{
								power: 0x1,
							},
							{
								power: 0x1,
								speed: 0.2,
							},
							{
								power: 0x1,
							},
							{
								power: 0x1,
								speed: 0.2,
							},
							{
								power: 0x1,
							},
							{
								power: 0x1,
								speed: 0.2,
							},
							{
								power: 0x1,
								addEvolvedWeapon: _0x5324b3["HELLFIRE"],
							},
						],
						[_0x5324b3["HELLFIRE"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["HELLFIRE"],
								name: "Hellfire",
								description: "Evolved Fire Wand. Passes through enemies.",
								tips: "Requires: Spinach.",
								texture: "items",
								frameName: "Hellfire.png",
								hitVFX: _0xed2036["FIRE"],
								poolLimit: 0xa,
								rarity: 0x1,
								isEvolution: !0x0,
								evolvesFrom: [_0x5324b3["FIREBALL"]],
								requires: [_0x5324b3["MIGHT"]],
								interval: 0xbb8,
								repeatInterval: 0xc8,
								power: 0xa,
								area: 0x1,
								speed: 0x1,
								amount: 0x2,
								duration: 0x64,
								hitsWalls: !0x1,
							},
						],
						[_0x5324b3["GARLIC"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["GARLIC"],
								name: "Garlic",
								description: "Damages nearby enemies. Reduces resistance to knockback and freeze.",
								tips: "Ignores: amount, duration, speed.",
								texture: "items",
								frameName: "Garlic.png",
								isUnlocked: !0x1,
								poolLimit: 0x32,
								rarity: 0x46,
								interval: 0x514,
								repeatInterval: 0x0,
								power: 0.5,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								knockback: 0x0,
								hitsWalls: !0x1,
							},
							{
								area: 0.4,
								power: 0.2,
							},
							{
								interval: -0x64,
								power: 0.1,
							},
							{
								area: 0.2,
								power: 0.1,
							},
							{
								interval: -0x64,
								power: 0.2,
							},
							{
								area: 0.2,
								power: 0.1,
							},
							{
								interval: -0x64,
								power: 0.1,
							},
							{
								area: 0.2,
								power: 0.2,
								addEvolvedWeapon: _0x5324b3["VORTEX"],
							},
						],
						[_0x5324b3["VORTEX"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["VORTEX"],
								name: "Soul Eater",
								description: "Evolved Garlic. Steals hearts. Power increases when recovering HP.",
								tips: "Requires: Pummarola.",
								texture: "items",
								frameName: "OrbOrange.png",
								isEvolution: !0x0,
								isUnlocked: !0x1,
								poolLimit: 0x32,
								rarity: 0x1,
								evolvesFrom: [_0x5324b3["GARLIC"]],
								requires: [_0x5324b3["REGEN"]],
								interval: 0x3e8,
								hitVFX: _0xed2036["DARK"],
								repeatInterval: 0x0,
								power: 0x2,
								area: 0x3,
								speed: 0x1,
								amount: 0x1,
								knockback: 0x0,
								hitsWalls: !0x1,
							},
						],
						[_0x5324b3["HOLYWATER"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["HOLYWATER"],
								name: "Santa Water",
								description: "Generates damaging zones.",
								tips: "Ignores: speed.",
								texture: "items",
								frameName: "HolyWater.png",
								isUnlocked: !0x0,
								poolLimit: 0x14,
								rarity: 0x64,
								interval: 0x1194,
								repeatInterval: 0x12c,
								power: 0x1,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								duration: 0x7d0,
								hitBoxDelay: 0x1f4,
								knockback: 0x0,
								hitsWalls: !0x1,
							},
							{
								amount: 0x1,
								area: 0.2,
							},
							{
								power: 0x1,
								duration: 0x1f4,
							},
							{
								amount: 0x1,
								area: 0.2,
							},
							{
								power: 0x1,
								duration: 0xfa,
							},
							{
								amount: 0x1,
								area: 0.2,
							},
							{
								power: 0.5,
								duration: 0xfa,
							},
							{
								power: 0.5,
								area: 0.2,
								addEvolvedWeapon: _0x5324b3["BORA"],
							},
						],
						[_0x5324b3["BORA"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["BORA"],
								name: "La Borra",
								description: "Evolved Santa Water. Damaging zones follow you and grow when they move.",
								tips: "Requires: Attractorb.",
								texture: "items",
								frameName: "Water2.png",
								isEvolution: !0x0,
								evolvesFrom: [_0x5324b3["HOLYWATER"]],
								requires: [_0x5324b3["MAGNET"]],
								hitVFX: _0xed2036["LIGHT"],
								isEvolution: !0x0,
								isUnlocked: !0x1,
								poolLimit: 0x1e,
								rarity: 0x1,
								interval: 0xfa0,
								repeatInterval: 0x12c,
								power: 0x4,
								area: 0x2,
								speed: 0x1,
								amount: 0x4,
								duration: 0xfa0,
								hitBoxDelay: 0x1f4,
								knockback: 0x0,
								hitsWalls: !0x1,
							},
						],
						[_0x5324b3["LIGHTNING"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["LIGHTNING"],
								name: "Lightning Ring",
								description: "Strikes at random enemies.",
								tips: "Ignores: speed, duration.",
								texture: "items",
								frameName: "LighningRing.png",
								isUnlocked: !0x1,
								poolLimit: 0x32,
								rarity: 0x50,
								interval: 0x1194,
								repeatInterval: 0x32,
								power: 1.5,
								area: 0x1,
								speed: 0x1,
								amount: 0x2,
								hitsWalls: !0x1,
							},
							{
								amount: 0x1,
							},
							{
								area: 0x1,
								power: 0x1,
							},
							{
								amount: 0x1,
							},
							{
								area: 0x1,
								power: 0x2,
							},
							{
								amount: 0x1,
							},
							{
								area: 0x1,
								power: 0x2,
							},
							{
								amount: 0x1,
								addEvolvedWeapon: _0x5324b3["LOOP"],
							},
						],
						[_0x5324b3["LOOP"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["LOOP"],
								name: "Thunder Loop",
								description: "Evolved Lightning Ring. Projectiles strike twice.",
								tips: "Requires: Duplicator.",
								texture: "items",
								frameName: "Thunderloop.png",
								evolvesFrom: [_0x5324b3["LIGHTNING"]],
								requires: [_0x5324b3["AMOUNT"]],
								isEvolution: !0x0,
								isUnlocked: !0x1,
								repeatInterval: 0x0,
								poolLimit: 0x32,
								rarity: 0x1,
								interval: 0x1194,
								power: 6.5,
								area: 0x4,
								speed: 0x1,
								amount: 0x6,
								hitsWalls: !0x1,
							},
						],
						[_0x5324b3["SILF"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["SILF"],
								name: "Peachone",
								description: "Bombards in a circling zone.",
								tips: "Best with: cooldown, duration.",
								texture: "items",
								frameName: "Silf1.png",
								hitVFX: _0xed2036["LIGHT"],
								isUnlocked: !0x1,
								poolLimit: 0x3c,
								rarity: 0x32,
								interval: 0x3e8,
								repeatInterval: 0x19,
								power: 0x1,
								area: 0x1,
								speed: 0.8,
								amount: 0x4,
								duration: 0xfa0,
								knockback: 0x2,
								hitsWalls: !0x1,
							},
							{
								amount: 0x1,
								area: 0.4,
							},
							{
								amount: 0x1,
								power: 0x1,
							},
							{
								amount: 0x1,
								interval: -0xfa,
							},
							{
								amount: 0x1,
								area: 0.4,
							},
							{
								amount: 0x1,
								power: 0x1,
							},
							{
								amount: 0x1,
								interval: -0xfa,
							},
							{
								amount: 0x1,
								area: 0.4,
							},
						],
						[_0x5324b3["SILF2"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["SILF2"],
								name: "Ebony Wings",
								description: "Bombards in a circling zone.",
								tips: "Best with: cooldown, duration.",
								texture: "items",
								frameName: "Silf2.png",
								hitVFX: _0xed2036["DARK"],
								isUnlocked: !0x1,
								poolLimit: 0x3c,
								rarity: 0x32,
								interval: 0x3e8,
								repeatInterval: 0x19,
								power: 0x1,
								area: 0x1,
								speed: 0.8,
								amount: 0x4,
								duration: 0xfa0,
								knockback: 0x2,
								hitsWalls: !0x1,
							},
							{
								amount: 0x1,
								area: 0.4,
							},
							{
								amount: 0x1,
								power: 0x1,
							},
							{
								amount: 0x1,
								interval: -0xfa,
							},
							{
								amount: 0x1,
								area: 0.4,
							},
							{
								amount: 0x1,
								power: 0x1,
							},
							{
								amount: 0x1,
								interval: -0xfa,
							},
							{
								amount: 0x1,
								area: 0.4,
								addEvolvedWeapon: _0x5324b3["SILF3"],
							},
						],
						[_0x5324b3["SILF3"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["SILF3"],
								name: "Vandalier",
								description: "Union of Ebony Wings and Peachone.",
								tips: "",
								texture: "items",
								frameName: "Silf3.png",
								isEvolution: !0x0,
								evolvesFrom: [_0x5324b3["SILF"], _0x5324b3["SILF2"]],
								requires: [_0x5324b3["SILF"]],
								requiresLevel: 0x8,
								hitVFX: _0xed2036["PRISM"],
								hidden: !0x1,
								isUnlocked: !0x1,
								poolLimit: 0x50,
								rarity: 0x1,
								interval: 0x3e8,
								repeatInterval: 0x19,
								power: 2.8,
								area: 2.2,
								speed: 0x1,
								amount: 0x14,
								duration: 0xfa0,
								knockback: 0x2,
								hitsWalls: !0x1,
							},
							{
								area: 0.2,
							},
							{
								interval: -0xfa,
							},
							{
								area: 0.2,
							},
							{
								interval: -0xfa,
							},
							{
								area: 0.2,
							},
							{
								interval: -0xfa,
							},
							{
								area: 0.2,
							},
						],
						[_0x5324b3["DIAMOND"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["DIAMOND"],
								name: "Runetracer",
								description: "Passes through enemies, bounces around.",
								tips: "Best with: speed, duration.",
								texture: "items",
								frameName: "Diamond2.png",
								isUnlocked: !0x1,
								poolLimit: 0x1e,
								rarity: 0x50,
								interval: 0xbb8,
								repeatInterval: 0xc8,
								power: 0x1,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								duration: 0x8ca,
								hitBoxDelay: 0x1f4,
								intervalDependsOnDuration: !0x1,
							},
							{
								power: 0.5,
								speed: 0.2,
							},
							{
								power: 0.5,
								duration: 0xfa,
							},
							{
								amount: 0x1,
							},
							{
								power: 0.5,
								speed: 0.2,
							},
							{
								power: 0.5,
								duration: 0xfa,
							},
							{
								amount: 0x1,
							},
							{
								duration: 0x1f4,
							},
						],
						[_0x5324b3["PENTAGRAM"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["PENTAGRAM"],
								name: "Pentagram",
								description: "Erases everything in sight.",
								tips: "Best with: cooldown and luck only.",
								texture: "items",
								frameName: "Pentagram.png",
								isUnlocked: !0x1,
								poolLimit: 0xa,
								rarity: 0x3c,
								interval: 0x15f90,
								repeatInterval: 0x0,
								power: 0x0,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								knockback: -0x2,
								chance: 0.1,
								hitsWalls: !0x1,
							},
							{
								interval: -0x2710,
							},
							{
								chance: 0.15,
								desc: "25% chance to not erase items.",
							},
							{
								interval: -0x2710,
							},
							{
								chance: 0.2,
								desc: "45% chance to not erase items.",
							},
							{
								interval: -0x2710,
							},
							{
								chance: 0.2,
								desc: "65% chance to not erase items.",
							},
						],
						[_0x5324b3["LANCET"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["LANCET"],
								name: "Clock Lancet",
								description: "Chance to freeze enemies in time.",
								tips: "Ignores: power, speed, amount, area.",
								texture: "items",
								frameName: "Lancet.png",
								hitVFX: _0xed2036["TIMEFREEZE"],
								isUnlocked: !0x1,
								poolLimit: 0xa,
								rarity: 0x46,
								interval: 0x7d0,
								repeatInterval: 0x0,
								power: 0x0,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								duration: 0x7d0,
								knockback: 0x0,
								hitsWalls: !0x1,
							},
							{
								duration: 0x3e8,
							},
							{
								interval: -0x1f4,
							},
							{
								duration: 0x3e8,
							},
							{
								duration: 0x3e8,
							},
							{
								interval: -0x1f4,
							},
							{
								duration: 0x3e8,
							},
						],
						[_0x5324b3["LAUREL"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["LAUREL"],
								name: "Laurel",
								description: "Shields from damage when active.",
								tips: "Best with: cooldown only.",
								texture: "items",
								frameName: "Laurel.png",
								isUnlocked: !0x0,
								poolLimit: 0x5,
								rarity: 0x3c,
								interval: 0x2710,
								repeatInterval: 0x0,
								power: 0x1,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								charges: 0x1,
								hitsWalls: !0x1,
							},
							{
								interval: -0x1f4,
								shieldInvulTime: 0xc8,
							},
							{
								interval: -0x1f4,
								shieldInvulTime: 0xc8,
							},
							{
								charges: 0x1,
							},
							{
								interval: -0x1f4,
								shieldInvulTime: 0xc8,
							},
							{
								interval: -0x1f4,
								shieldInvulTime: 0xc8,
							},
							{
								charges: 0x1,
							},
						],
						[_0x5324b3["BONE"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["BONE"],
								name: "Bone",
								description: "Throws a bouncing projectile.",
								tips: "Best with: duration, speed.",
								texture: "items",
								frameName: "Bone.png",
								isUnlocked: !0x1,
								poolLimit: 0x19,
								rarity: 0x1,
								interval: 0xbb8,
								repeatInterval: 0x0,
								power: 0.5,
								area: 1.2,
								speed: 0.75,
								amount: 0x1,
								duration: 0x7d0,
							},
							{
								duration: 0xc8,
								area: 0.2,
							},
							{
								power: 0x2,
								amount: 0x1,
							},
							{
								speed: 0.5,
								area: 0.2,
							},
							{
								power: 0x2,
								amount: 0x1,
							},
							{
								duration: 0xc8,
							},
							{
								power: 0x2,
							},
							{
								duration: 0xc8,
								speed: 0.5,
							},
						],
						[_0x5324b3["CHERRY"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["CHERRY"],
								name: "Cherry Bomb",
								description: "Throws a bouncing projectile. Explodes, sometimes.",
								tips: "Best with: luck.",
								texture: "items",
								frameName: "Cherry.png",
								isUnlocked: !0x1,
								poolLimit: 0x19,
								rarity: 0x1,
								interval: 0xbb8,
								repeatInterval: 0x12c,
								power: 0x1,
								area: 0x1,
								speed: 0x1,
								amount: 0x1,
								duration: 0x7d0,
								chance: 0.4,
							},
							{
								area: 0.25,
								speed: 0.3,
							},
							{
								chance: 0.1,
								desc: "50% chance to explode.",
							},
							{
								amount: 0x1,
							},
							{
								area: 0.25,
								power: 0.5,
							},
							{
								chance: 0.1,
								desc: "60% chance to explode.",
							},
							{
								area: 0.25,
								speed: 0.3,
							},
							{
								area: 0.25,
								power: 0.5,
							},
						],
						[_0x5324b3["NDUJA"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["NDUJA"],
								name: "",
								description: "",
								tips: "",
								texture: "items",
								frameName: "Nft1.png",
								hidden: !0x0,
								isUnlocked: !0x1,
								isSpecialOnly: !0x0,
								hitVFX: _0xed2036["FIRE"],
								poolLimit: 0x32,
								rarity: 0x0,
								interval: 0x1f4,
								repeatInterval: 0x28,
								power: 0x3,
								area: 0x2,
								speed: 0x3,
								amount: 0xc,
								duration: 0x3e8,
							},
						],
						[_0x5324b3["MIGHT"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["MIGHT"],
								name: "Spinach",
								description: "Raises inflicted damage by 10%.",
								texture: "items",
								frameName: "Leaf.png",
								isUnlocked: !0x0,
								rarity: 0x64,
								isPowerUp: !0x0,
								power: 0.1,
							},
							{
								power: 0.1,
							},
							{
								power: 0.1,
							},
							{
								power: 0.1,
							},
							{
								power: 0.1,
							},
						],
						[_0x5324b3["ARMOR"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["ARMOR"],
								name: "Armor",
								description: "Reduces incoming damage by 1.",
								texture: "items",
								frameName: "ArmorIron.png",
								isUnlocked: !0x0,
								rarity: 0x64,
								isPowerUp: !0x0,
								armor: 0x1,
							},
							{
								armor: 0x1,
							},
							{
								armor: 0x1,
							},
							{
								armor: 0x1,
							},
							{
								armor: 0x1,
							},
						],
						[_0x5324b3["MAXHEALTH"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["MAXHEALTH"],
								name: "Hollow Heart",
								description: "Augments max health by 20%.",
								texture: "items",
								frameName: "HeartBlack.png",
								isUnlocked: !0x1,
								rarity: 0x5a,
								isPowerUp: !0x0,
								maxHp: 0.2,
							},
							{
								maxHp: 0.2,
							},
							{
								maxHp: 0.2,
							},
							{
								maxHp: 0.2,
							},
							{
								maxHp: 0.2,
							},
						],
						[_0x5324b3["REGEN"]]: [
							{
								level: 0x1,
								hidden: !0x1,
								bulletType: _0x5324b3["REGEN"],
								name: "Pummarola",
								description: "Character recovers 0.2 HP per second.",
								texture: "items",
								frameName: "HeartRuby.png",
								isUnlocked: !0x1,
								rarity: 0x5a,
								isPowerUp: !0x0,
								regen: 0.2,
							},
							{
								regen: 0.2,
							},
							{
								regen: 0.2,
							},
							{
								regen: 0.2,
							},
							{
								regen: 0.2,
							},
						],
						[_0x5324b3["COOLDOWN"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["COOLDOWN"],
								name: "Empty Tome",
								description: "Reduces weapons cooldown by 8%.",
								texture: "items",
								frameName: "Book2.png",
								isUnlocked: !0x1,
								rarity: 0x32,
								isPowerUp: !0x0,
								cooldown: -0.08,
							},
							{
								cooldown: -0.08,
							},
							{
								cooldown: -0.08,
							},
							{
								cooldown: -0.08,
							},
							{
								cooldown: -0.08,
							},
						],
						[_0x5324b3["AREA"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["AREA"],
								name: "Candelabrador",
								description: "Augments area of attacks by 10%.",
								texture: "items",
								frameName: "Candelabra.png",
								isUnlocked: !0x1,
								rarity: 0x64,
								isPowerUp: !0x0,
								area: 0.1,
							},
							{
								area: 0.1,
							},
							{
								area: 0.1,
							},
							{
								area: 0.1,
							},
							{
								area: 0.1,
							},
						],
						[_0x5324b3["SPEED"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["SPEED"],
								name: "Bracer",
								description: "Increases projectiles speed by 10%.",
								texture: "items",
								frameName: "Gauntlet.png",
								isUnlocked: !0x1,
								rarity: 0x64,
								isPowerUp: !0x0,
								speed: 0.1,
							},
							{
								speed: 0.1,
							},
							{
								speed: 0.1,
							},
							{
								speed: 0.1,
							},
							{
								speed: 0.1,
							},
						],
						[_0x5324b3["DURATION"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["DURATION"],
								name: "Spellbinder",
								description: "Increases duration of weapon effects by 10%.",
								texture: "items",
								frameName: "EmblemEye.png",
								isUnlocked: !0x1,
								rarity: 0x64,
								isPowerUp: !0x0,
								duration: 0.1,
							},
							{
								duration: 0.1,
							},
							{
								duration: 0.1,
							},
							{
								duration: 0.1,
							},
							{
								duration: 0.1,
							},
						],
						[_0x5324b3["AMOUNT"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["AMOUNT"],
								name: "Duplicator",
								description: "Weapons fire more projectiles.",
								texture: "items",
								frameName: "Ring.png",
								isUnlocked: !0x1,
								rarity: 0x32,
								isPowerUp: !0x0,
								amount: 0x1,
							},
							{
								amount: 0x1,
							},
						],
						[_0x5324b3["MOVESPEED"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["MOVESPEED"],
								name: "Wings",
								description: "Character moves 10% faster.",
								texture: "items",
								frameName: "Wing.png",
								isUnlocked: !0x1,
								rarity: 0x32,
								isPowerUp: !0x0,
								moveSpeed: 0.1,
							},
							{
								moveSpeed: 0.1,
							},
							{
								moveSpeed: 0.1,
							},
							{
								moveSpeed: 0.1,
							},
							{
								moveSpeed: 0.1,
							},
						],
						[_0x5324b3["MAGNET"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["MAGNET"],
								name: "Attractorb",
								description: "Character pickups items from further away.",
								texture: "items",
								frameName: "OrbGlow.png",
								isUnlocked: !0x1,
								rarity: 0x64,
								isPowerUp: !0x0,
								magnet: 0.5,
							},
							{
								magnet: 0.33,
							},
							{
								magnet: 0.25,
							},
							{
								magnet: 0.2,
							},
							{
								magnet: 0.33,
							},
						],
						[_0x5324b3["LUCK"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["LUCK"],
								name: "Clover",
								description: "Character gets 10% luckier.",
								texture: "items",
								frameName: "Clover.png",
								isUnlocked: !0x1,
								rarity: 0x64,
								isPowerUp: !0x0,
								luck: 0.1,
							},
							{
								luck: 0.1,
							},
							{
								luck: 0.1,
							},
							{
								luck: 0.1,
							},
							{
								luck: 0.1,
							},
						],
						[_0x5324b3["GROWTH"]]: [
							{
								level: 0x1,
								bulletType: _0x5324b3["GROWTH"],
								name: "Crown",
								description: "Character gains 8% more experience.",
								texture: "items",
								frameName: "Crown.png",
								rarity: 0x50,
								isPowerUp: !0x0,
								growth: 0.08,
							},
							{
								growth: 0.08,
							},
							{
								growth: 0.08,
							},
							{
								growth: 0.08,
							},
							{
								growth: 0.08,
							},
						],
						[_0x5324b3["GREED"]]: [
							{
								level: 0x1,
								hidden: !0x1,
								bulletType: _0x5324b3["GREED"],
								name: "Stone Mask",
								description: "Character earns 10% more coins.",
								texture: "items",
								frameName: "Mask.png",
								isUnlocked: !0x1,
								rarity: 0x50,
								isPowerUp: !0x0,
								greed: 0.1,
							},
							{
								greed: 0.1,
							},
							{
								greed: 0.1,
							},
							{
								greed: 0.1,
							},
							{
								greed: 0.1,
							},
						],
						[_0x5324b3["CURSE"]]: [
							{
								level: 0x1,
								hidden: !0x1,
								bulletType: _0x5324b3["CURSE"],
								name: "Skull O'Maniac",
								description: "Increases enemy speed, health, quantity, and frequency by 10%.",
								texture: "items",
								frameName: "Curse.png",
								isUnlocked: !0x1,
								rarity: 0x28,
								isPowerUp: !0x0,
								curse: 0.1,
							},
							{
								curse: 0.1,
							},
							{
								curse: 0.1,
							},
							{
								curse: 0.1,
							},
							{
								curse: 0.1,
							},
						],
						[_0x5324b3["REVIVAL"]]: [
							{
								level: 0x1,
								hidden: !0x1,
								bulletType: _0x5324b3["REVIVAL"],
								name: "Tiragisú",
								description: "Revives once with 50% health.",
								texture: "items",
								frameName: "Tiramisu.png",
								isUnlocked: !0x1,
								rarity: 0x28,
								isPowerUp: !0x0,
								revivals: 0x1,
							},
							{
								revivals: 0x1,
							},
						],
					};
					class _0x1153f1 extends _0x3954b8 {
						constructor(_0x47e183, _0x5821ca, _0x17499e) {
							var _0xcfa3e1 = _0x5d9431;
							super(_0x47e183, _0x5821ca, _0x17499e, _0x3bf2f1["WEAPON"]),
								(this["weaponType"] = _0x5324b3["VOID"]),
								(this["particlesInterval"] = 0xc8),
								(this["totalTime"] = 0x64),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								(this["isStationary"] = !0x0),
								(this["shadow"] = new Phaser["GameObjects"]["Sprite"](
									_0x2164b8["Core"]["scene"],
									_0x5821ca,
									_0x17499e,
									"items",
									"ShadowSpot.png"
								)),
								(this["glow"] = new Phaser["GameObjects"]["Sprite"](
									_0x2164b8["Core"]["scene"],
									_0x5821ca,
									_0x17499e,
									"vfx",
									"round.png"
								));
						}
						["OnRecycle"]() {
							var _0x38fd04 = _0x5d9431,
								_0x3005e5,
								_0x19de75,
								_0x460223;
							super["OnRecycle"](),
								(this["colorValue"] = 0x0),
								null === (_0x3005e5 = this["floatTween"]) ||
									void 0x0 === _0x3005e5 ||
									_0x3005e5["stop"](),
								this["floatTween"] && this["scene"]["tweens"]["remove"](this["floatTween"]),
								(this["floatTween"] = this["scene"]["tweens"]["add"]({
									targets: this,
									y: this["y"] - 0x8,
									duration: 0x3e8,
									ease: "Sine.easeInOut",
									loop: -0x1,
									yoyo: !0x0,
								})),
								null === (_0x19de75 = this["shadowTween"]) ||
									void 0x0 === _0x19de75 ||
									_0x19de75["stop"](),
								this["shadowTween"] && this["scene"]["tweens"]["remove"](this["shadowTween"]),
								(this["shadowTween"] = this["scene"]["tweens"]["add"]({
									targets: this["shadow"],
									scale: 0.75,
									duration: 0x3e8,
									ease: "Sine.easeInOut",
									loop: -0x1,
									yoyo: !0x0,
								})),
								this["scene"]["add"]["existing"](this["shadow"]),
								this["shadow"]["setPosition"](this["x"], this["y"]),
								this["shadow"]["setScale"](0x1),
								this["shadow"]["setAlpha"](0.5),
								this["scene"]["add"]["existing"](this["glow"]),
								this["glow"]["setPosition"](this["x"], this["y"]),
								this["glow"]["setBlendMode"](_0x1cb257["BlendModes"]["ADD"]),
								this["glow"]["setAlpha"](0.5),
								null === (_0x460223 = this["glowTween"]) ||
									void 0x0 === _0x460223 ||
									_0x460223["stop"](),
								this["glowTween"] && this["scene"]["tweens"]["remove"](this["glowTween"]),
								(this["glowTween"] = this["scene"]["tweens"]["add"]({
									targets: this["glow"],
									alpha: 0x0,
									duration: 0x1f4,
									loop: -0x1,
									yoyo: !0x0,
								}));
						}
						["DeSpawn"]() {
							var _0x44d515 = _0x5d9431;
							super["DeSpawn"](),
								this["floatTween"]["remove"](),
								this["shadowTween"]["remove"](),
								this["scene"]["tweens"]["remove"](this["shadowTween"]),
								this["scene"]["tweens"]["remove"](this["floatTween"]),
								this["scene"]["children"]["remove"](this["shadow"]),
								this["scene"]["children"]["remove"](this["glow"]);
						}
						["Update"](_0x428e6a) {
							var _0x19a1bc = _0x5d9431;
							super["Update"](_0x428e6a),
								this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]),
								this["shadow"]["setDepth"](this["y"] - _0x2164b8["Core"]["Player"]["y"]),
								this["glow"]["setPosition"](this["x"], this["y"]),
								this["glow"]["setDepth"](this["y"] - _0x2164b8["Core"]["Player"]["y"]),
								(this["totalTime"] += _0x428e6a),
								this["totalTime"] > this["particlesInterval"] &&
									((this["totalTime"] = 0x0),
									_0x2164b8["Core"]["SpawnPickupParticlesAt"](this["x"], this["y"])),
								(this["colorValue"] += 0.1),
								this["glow"]["setTint"](
									Phaser["Display"]["Color"]["GetColor"](
										0xff * Math["abs"](Math["sin"](this["colorValue"])),
										0xff * Math["abs"](Math["cos"](0.5 * this["colorValue"])),
										0xc8 + 0x37 * Math["abs"](Math["cos"](this["colorValue"]))
									)
								);
						}
						["SetWeaponType"](_0x1aa48c) {
							var _0x2012ab = _0x5d9431,
								_0x40de56 = _0x41a274[_0x1aa48c][0x0];
							this["setTexture"](_0x40de56["texture"], _0x40de56["frameName"]),
								(this["weaponType"] = _0x1aa48c);
						}
						["GetTaken"]() {
							var _0x1f678f = _0x5d9431;
							(_0x2164b8["Core"]["CurrentFoundItem"] = this["weaponType"]),
								_0x2164b8["Core"]["SwapToItemFoundScene"](),
								super["GetTaken"]();
						}
					}
					class _0x20c7e7 extends _0x5453f9 {
						constructor(_0x4fc926, _0x3d7340, _0x215cf5) {
							var _0x11a5fb = _0x5d9431;
							super(_0x4fc926, _0x3d7340, _0x215cf5, _0x3bf2f1["COINBAG2"]);
						}
					}
					class _0x9c64b5 extends _0x3954b8 {
						constructor(_0xd98166, _0x43d680, _0x34e81a) {
							var _0x4d1aa8 = _0x5d9431;
							super(_0xd98166, _0x43d680, _0x34e81a, _0x3bf2f1["NFT"]),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]);
							const _0xd8f027 = this["anims"]["generateFrameNames"]("items", {
								start: 0x1,
								end: 0x4,
								zeroPad: 0x0,
								prefix: "Nft",
								suffix: ".png",
							});
							this["anims"]["create"]({
								key: "idle",
								frames: _0xd8f027,
								frameRate: 0xa,
								repeat: -0x1,
							});
						}
						["OnRecycle"]() {
							var _0x317c98 = _0x5d9431;
							super["OnRecycle"](), !global["anims_disabled"].value ? this["anims"]["play"]("idle") : '';
						}
						["Update"]() {
							var _0x22216e = _0x5d9431;
							super["Update"](), this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]);
						}
						["GetTaken"]() {
							var _0x34fe1c = _0x5d9431,
								_0x5eb72f;
							_0x2164b8["Core"]["HiddenWeapons"]["find"](
								(_0x1cd75f) => _0x1cd75f["bulletType"] === _0x5324b3["NDUJA"]
							) || _0x2164b8["Core"]["AddHiddenWeapon"](_0x5324b3["NDUJA"]),
								_0x9c64b5["timerEvent"] &&
									(null === (_0x5eb72f = _0x9c64b5["timerEvent"]) ||
										void 0x0 === _0x5eb72f ||
										_0x5eb72f["destroy"]()),
								(_0x9c64b5["timerEvent"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
									delay: 0x2710 * _0x2164b8["Core"]["Player"]["duration"],
									callback: () => {
										var _0x1c57bd = _0x34fe1c;
										_0x2164b8["Core"]["RemoveHiddenWeapon"](_0x5324b3["NDUJA"]);
									},
								})),
								_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["push"](this["itemType"]),
								this["SetSeenItem"](this["itemType"]),
								super["GetTaken"]();
						}
					}
					class _0x131f92 extends _0x3954b8 {
						constructor(_0x781361, _0x5c6ee5, _0x1e8925) {
							var _0x326663 = _0x5d9431;
							super(_0x781361, _0x5c6ee5, _0x1e8925, _0x3bf2f1["LITTLEHEART"]),
								_0x2164b8["Core"]["scene"]["add"]["existing"](this),
								this["setScale"](_0x1fa5bb["PixelScale"]);
						}
						["Update"]() {
							var _0x55be60 = _0x5d9431;
							super["Update"](), this["setDepth"](0x9 + this["y"] - _0x2164b8["Core"]["Player"]["y"]);
						}
						["GetTaken"]() {
							var _0xd33243 = _0x5d9431;
							_0x2164b8["Core"]["Player"]["RecoverHp"](0x1),
								_0x2164b8["Core"]["ShowRecoveryAt"](
									_0x2164b8["Core"]["Player"]["x"],
									_0x2164b8["Core"]["Player"]["y"],
									0x1
								),
								this["SetSeenItem"](this["itemType"]),
								super["GetTaken"](),
								_0x2164b8["Sound"]["PlaySound"](
									_0x522ca7["LittleHeart"],
									{
										volume: 0.35,
										rate: 1.2,
										detune: 0xc8 * (Math["random"]() - 0.5),
									},
									0x32,
									0x3
								);
						}
					}
					class _0x1237a1 extends Phaser["GameObjects"]["Group"] {
						constructor(_0x5e0e16) {
							var _0xd61c51 = _0x5d9431;
							super(_0x5e0e16),
								(this["stored"] = new Array()),
								(this["spawned"] = new Array()),
								this["Init"]();
							for (let _0x15e1d0 in _0x3bf2f1)
								(this["stored"][_0x15e1d0] = new Array()), (this["spawned"][_0x15e1d0] = new Array());
						}
						["Init"]() {
							var _0x427ab7 = _0x5d9431;
							this["scene"]["add"]["existing"](this);
						}
						["SpawnAt"](_0x2ff8a3, _0xd71f0e, _0x5791fb) {
							var _0x4dda9c = _0x5d9431;
							const _0x32acde = this["Spawn"](_0x5791fb);
							return (
								this["scene"]["children"]["add"](_0x32acde),
								_0x32acde["setPosition"](_0x2ff8a3, _0xd71f0e),
								_0x32acde["OnRecycle"](),
								_0x32acde
							);
						}
						["Spawn"](_0x5a4cce) {
							var _0x1c9687 = _0x5d9431;
							let _0x229bbb;
							return (
								this["stored"][_0x5a4cce]
									? (_0x229bbb = this["stored"][_0x5a4cce]["pop"]())
									: ((this["stored"][_0x5a4cce] = new Array()),
									  (this["spawned"][_0x5a4cce] = new Array())),
								_0x229bbb || ((_0x229bbb = this["Make"](_0x5a4cce)), _0x229bbb["Init"]()),
								this["add"](_0x229bbb, !0x0),
								this["spawned"][_0x5a4cce]["push"](_0x229bbb),
								_0x2164b8["Core"]["PickupGroup"]["add"](_0x229bbb, !0x1),
								_0x229bbb
							);
						}
						["Return"](_0xa85ab0) {
							var _0x3b1b24 = _0x5d9431;
							this["scene"]["children"]["remove"](_0xa85ab0),
								this["remove"](_0xa85ab0, !0x0, !0x1),
								this["spawned"][_0xa85ab0["itemType"]]["splice"](
									this["spawned"][_0xa85ab0["itemType"]]["indexOf"](_0xa85ab0),
									0x1
								),
								_0x2164b8["Core"]["PickupGroup"]["remove"](_0xa85ab0, !0x1),
								this["stored"][_0xa85ab0["itemType"]]["push"](_0xa85ab0);
						}
						["Make"](_0x1e7e7c) {
							var _0x126038 = _0x5d9431;
							switch (_0x1e7e7c) {
								default:
								case _0x3bf2f1["COIN"]:
									return new _0x2fc624(this, 0x0, 0x0);
								case _0x3bf2f1["COINBAG1"]:
									return new _0x5453f9(this, 0x0, 0x0);
								case _0x3bf2f1["COINBAG2"]:
									return new _0x20c7e7(this, 0x0, 0x0);
								case _0x3bf2f1["COINBAGMAX"]:
									return new _0x20a082(this, 0x0, 0x0);
								case _0x3bf2f1["GEM"]:
									return new _0x19cf83(this, 0x0, 0x0);
								case _0x3bf2f1["VACUUM"]:
									return new _0x416823(this, 0x0, 0x0);
								case _0x3bf2f1["ROSARY"]:
									return new _0x2e9adf(this, 0x0, 0x0);
								case _0x3bf2f1["NFT"]:
									return new _0x9c64b5(this, 0x0, 0x0);
								case _0x3bf2f1["OROLOGION"]:
									return new _0x532bcd(this, 0x0, 0x0);
								case _0x3bf2f1["ROAST"]:
									return new _0x40bc50(this, 0x0, 0x0);
								case _0x3bf2f1["CLOVER"]:
									return new _0x54b338(this, 0x0, 0x0);
								case _0x3bf2f1["TREASURE"]:
									return new _0x3f7e0e(this, 0x0, 0x0);
								case _0x3bf2f1["WEAPON"]:
									return new _0x1153f1(this, 0x0, 0x0);
								case _0x3bf2f1["LITTLEHEART"]:
									return new _0x131f92(this, 0x0, 0x0);
							}
						}
					}
					var _0x547aab;
					!(function (_0x3176b7) {
						var _0x327c70 = _0x5d9431;
						(_0x3176b7["PreloadScene"] = "PreloadScene"),
							(_0x3176b7["IntroScene"] = "IntroScene"),
							(_0x3176b7["MainScene"] = "MainScene"),
							(_0x3176b7["UI_levelUpScene"] = "UI_levelUpScene"),
							(_0x3176b7["UI_topBar"] = "UI_topBar"),
							(_0x3176b7["UI_mainMenu"] = "UI_mainMenu"),
							(_0x3176b7["CharSelectionScene"] = "CharSelectionScene"),
							(_0x3176b7["PowerUpScene"] = "PowerUpScene"),
							(_0x3176b7["OmniScene"] = "OmniScene"),
							(_0x3176b7["OptionsScene"] = "OptionsScene"),
							(_0x3176b7["GameOverScene"] = "GameOverScene"),
							(_0x3176b7["PauseScene"] = "PauseScene"),
							(_0x3176b7["CollectionWeaponScene"] = "CollectionScene"),
							(_0x3176b7["UI_treasureScene"] = "UI_treasureScene"),
							(_0x3176b7["PostGameScene"] = "PostGameScene"),
							(_0x3176b7["CollectionAchievementsScene"] = "CollectionAchievementsScene"),
							(_0x3176b7["DebugScene"] = "DebugScene"),
							(_0x3176b7["TilesetScene"] = "TilesetScene"),
							(_0x3176b7["StageSelectionScene"] = "StageSelectionScene"),
							(_0x3176b7["UI_overlayScene"] = "UI_overlayScene"),
							(_0x3176b7["UI_creditsScene"] = "UI_creditsScene"),
							(_0x3176b7["UI_resolutionScene"] = "UI_resolutionScene"),
							(_0x3176b7["UI_newItemFoundScene"] = "UI_newItemFoundScene");
					})(_0x547aab || (_0x547aab = {}));
					const _0x53d8cd = _0x547aab;
					class _0x493d34 {
						constructor(_0x5cf024, _0x317085) {
							var _0x2d443f = _0x5d9431;
							(this["weight"] = 0x0),
								(this["itemType"] = _0x3bf2f1["COIN"]),
								(this["itemType"] = _0x5cf024),
								(this["weight"] = _0x317085);
						}
					}
					const _0x3ef78a = class {
							constructor(_0x250618, _0x4403a3) {
								var _0x2c66c3 = _0x5d9431;
								(this["weight"] = 0x0),
									(this["weaponType"] = _0x5324b3["WHIP"]),
									(this["weaponType"] = _0x250618),
									(this["weight"] = _0x4403a3);
							}
						},
						_0x13f358 = class {
							constructor() {
								var _0x5d24ee = _0x5d9431;
								(this["defaultXPfactor"] = 0x5),
									(this["currentXPfactor"] = 0x5),
									(this["previousXPfactor"] = 0x5),
									(this["chanceForExistingPowerUp"] = 0.3),
									(this["levelUpOptions"] = 0x3),
									(this["maxTrueWeapons"] = 0x6),
									(this["maxPowerUpWeapons"] = 0x6),
									(this["WeaponStore"] = new Array()),
									(this["ExcludedWeapons"] = new Array()),
									(this["SpecialWeapons"] = new Array()),
									(this["accumulatedWeight"] = 0x0),
									(this["WeightedStore"] = new Array());
							}
							["CalculateXPfactor"]() {
								var _0xd43ce9 = _0x5d9431;
								let _0x197236 =
									this["defaultXPfactor"] +
									1.5 * Math["floor"](_0x2164b8["Core"]["Player"]["level"] / 0x14);
								_0x197236 = Math["min"](_0x197236, 0x8);
								let _0xc7c687 =
									this["defaultXPfactor"] +
									1.5 * Math["floor"]((_0x2164b8["Core"]["Player"]["level"] - 0x1) / 0x14);
								(_0xc7c687 = Math["min"](_0xc7c687, 0x8)),
									(this["currentXPfactor"] =
										_0x197236 *
										_0x2164b8["Core"]["Player"]["level"] *
										_0x2164b8["Core"]["Player"]["level"]),
									(this["previousXPfactor"] =
										_0xc7c687 *
										(_0x2164b8["Core"]["Player"]["level"] - 0x1) *
										(_0x2164b8["Core"]["Player"]["level"] - 0x1));
							}
							get ["XpRequiredToLevelUp"]() {
								var _0x3804aa = _0x5d9431;
								return this["currentXPfactor"];
							}
							get ["PreviousXpRequiredToLevelUp"]() {
								return this["previousXPfactor"];
							}
							["GetLevelUpOptions"]() {
								var _0x1e467f = _0x5d9431;
								return Math["random"]() > 0x1 / _0x2164b8["Core"]["Player"]["luck"]
									? this["levelUpOptions"] + 0x1
									: this["levelUpOptions"];
							}
							get ["ChanceForExistingPowerUp"]() {
								var _0x8441d0 = _0x5d9431;
								return (
									(_0x2164b8["Core"]["Player"]["level"] % 0x2 == 0x0 ? 0x2 : 0x1) *
										this["chanceForExistingPowerUp"] +
									0x1 -
									0x1 / _0x2164b8["Core"]["Player"]["luck"]
								);
							}
							["HasPowerupsInStore"]() {
								return this["WeightedStore"]["length"] > 0x0;
							}
							["Init"]() {
								var _0x573d17 = _0x5d9431;
								this["CalculateXPfactor"]();
								for (const _0x5dfeeb in _0x41a274) {
									_0x41a274[_0x5dfeeb][0x0]["isEvolution"]
										? this["ExcludedWeapons"]["push"](_0x5dfeeb)
										: _0x41a274[_0x5dfeeb][0x0]["isUnlocked"]
										? (0x0 === _0x41a274[_0x5dfeeb][0x0]["rarity"] ||
												_0x41a274[_0x5dfeeb][0x0]["isSpecialOnly"]) &&
										  this["ExcludedWeapons"]["push"](_0x5dfeeb)
										: this["ExcludedWeapons"]["push"](_0x5dfeeb);
									for (const _0xf50af7 in _0x41a274[_0x5dfeeb])
										this["WeaponStore"]["push"](_0x5dfeeb);
								}
								this["calculateWeights"]();
							}
							["GetRemainingWeaponsAndPowerUps"]() {
								var _0x473a46 = _0x5d9431;
								for (
									var _0x20f135 = new Array(), _0x147926 = 0x0;
									_0x147926 < this["WeaponStore"]["length"];
									_0x147926++
								) {
									var _0x5bb966 = this["WeaponStore"][_0x147926];
									this["ExcludedWeapons"]["indexOf"](_0x5bb966) > -0x1 ||
										_0x20f135["indexOf"](_0x5bb966) > -0x1 ||
										_0x20f135["push"](_0x5bb966);
								}
								return _0x20f135;
							}
							["GetExistingNotMaxedWeapons"]() {
								var _0x1fb4ce = _0x5d9431,
									_0x5bcb1a = _0x2164b8["Core"]["Weapons"]["map"](
										(_0x1e30ce) => _0x1e30ce["bulletType"]
									),
									_0x411a63 = new Array();
								for (let _0x40998d = 0x0; _0x40998d < _0x5bcb1a["length"]; _0x40998d++) {
									const _0x4abfd0 = _0x5bcb1a[_0x40998d];
									-0x1 !== this["WeaponStore"]["indexOf"](_0x4abfd0) &&
										(this["ExcludedWeapons"]["indexOf"](_0x4abfd0) > -0x1 ||
											_0x5bcb1a["indexOf"](_0x4abfd0) > -0x1 ||
											_0x411a63["push"](_0x4abfd0));
								}
								return _0x411a63;
							}
							["PullRemainingPowerUp"]() {
								var _0x1dbc95 = _0x5d9431,
									_0x5e0529,
									_0x58b539 = 0x0,
									_0x1bc50a = new Array();
								for (const _0x298448 in _0x41a274)
									if (!(this["ExcludedWeapons"]["indexOf"](_0x298448) > -0x1)) {
										var _0x10375f = _0x41a274[_0x298448][0x0];
										_0x10375f["isPowerUp"] &&
											((_0x58b539 += _0x10375f["rarity"]),
											_0x10375f["rarity"] > 0x0 &&
												_0x1bc50a["push"](new _0x3ef78a(_0x298448, _0x58b539)));
									}
								var _0x3e9b34 = Math["random"]() * _0x58b539;
								return null ===
									(_0x5e0529 = _0x1bc50a["find"]((_0x4ae280) => _0x4ae280["weight"] >= _0x3e9b34)) ||
									void 0x0 === _0x5e0529
									? void 0x0
									: _0x5e0529["weaponType"];
							}
							["PullExistingRemainingWeapon"](_0x2e60af = !0x0) {
								var _0x36ad6d = _0x5d9431,
									_0x36921a,
									_0x979deb = 0x0,
									_0xcd6f23 = new Array(),
									_0xdf574a = _0x2164b8["Core"]["Weapons"]["map"](
										(_0x123ce6) => _0x123ce6["bulletType"]
									);
								for (let _0x36d936 = 0x0; _0x36d936 < _0xdf574a["length"]; _0x36d936++) {
									const _0x2c98f8 = _0xdf574a[_0x36d936];
									if (!(this["ExcludedWeapons"]["indexOf"](_0x2c98f8) > -0x1)) {
										var _0x526a5a = _0x41a274[_0x2c98f8][0x0];
										(!_0x2e60af && _0x526a5a["isPowerUp"]) ||
											((_0x979deb += _0x526a5a["rarity"]),
											_0x526a5a["rarity"] > 0x0 &&
												_0xcd6f23["push"](new _0x3ef78a(_0x2c98f8, _0x979deb)));
									}
								}
								var _0x50d500 = Math["random"]() * _0x979deb;
								return null ===
									(_0x36921a = _0xcd6f23["find"]((_0x2382db) => _0x2382db["weight"] >= _0x50d500)) ||
									void 0x0 === _0x36921a
									? void 0x0
									: _0x36921a["weaponType"];
							}
							["PullExisting"](_0xfd1efb) {
								var _0x4780e5 = _0x5d9431,
									_0x283633;
								return null ===
									(_0x283633 = this["WeightedStore"]["find"](
										(_0x2b4f64) => _0x2b4f64["weaponType"] == _0xfd1efb
									)) || void 0x0 === _0x283633
									? void 0x0
									: _0x283633["weaponType"];
							}
							["PullEvolution"]() {
								var _0x2d6695 = _0x5d9431,
									_0x25c483 = 0x0,
									_0x149ecf = new Array();
								this["SpecialWeapons"]["forEach"]((_0x9b9751) => {
									var _0x4f3c55 = _0x2d6695;
									if (_0x41a274[_0x9b9751]) {
										var _0x1dbf41 = _0x41a274[_0x9b9751][0x0];
										if (_0x1dbf41["isEvolution"] && _0x1dbf41["rarity"] > 0x0) {
											let _0x45b04b = _0x1dbf41["requires"],
												_0x15e302 = _0x1dbf41["requiresLevel"]
													? _0x1dbf41["requiresLevel"]
													: 0x0,
												_0x354845 = _0x2164b8["Core"]["Weapons"],
												_0x390ea3 = !0x0;
											for (let _0x136627 = 0x0; _0x136627 < _0x45b04b["length"]; _0x136627++) {
												const _0x298226 = _0x45b04b[_0x136627];
												if (
													!_0x354845["find"](
														(_0x140b9d) =>
															_0x140b9d["bulletType"] === _0x298226 &&
															_0x140b9d["level"] >= _0x15e302
													)
												) {
													_0x390ea3 = !0x1;
													break;
												}
											}
											_0x390ea3 &&
												((_0x25c483 += _0x1dbf41["rarity"]),
												_0x149ecf["push"](new _0x3ef78a(_0x9b9751, _0x25c483)));
										}
									}
								});
								var _0x8ce13e = Math["random"]() * _0x25c483,
									_0x2316ae = _0x149ecf["find"]((_0x10ab9d) => _0x10ab9d["weight"] >= _0x8ce13e);
								return (
									_0x2316ae &&
										this["SpecialWeapons"]["splice"](
											this["SpecialWeapons"]["findIndex"](
												(_0x77bed3) =>
													_0x77bed3 ==
													(null == _0x2316ae ? void 0x0 : _0x2316ae["weaponType"])
											),
											0x1
										),
									this["calculateWeights"](),
									null == _0x2316ae ? void 0x0 : _0x2316ae["weaponType"]
								);
							}
							["calculateWeights"]() {
								var _0x217ae7 = _0x5d9431;
								(this["accumulatedWeight"] = 0x0), (this["WeightedStore"] = new Array());
								for (const _0x4ea7ee in _0x41a274) {
									if (this["ExcludedWeapons"]["indexOf"](_0x4ea7ee) > -0x1) continue;
									if (this["SpecialWeapons"]["indexOf"](_0x4ea7ee) > -0x1) continue;
									const _0x523228 = _0x41a274[_0x4ea7ee][0x0];
									if (_0x523228["isPowerUp"]) {
										if (
											!_0x2164b8["Core"]["Weapons"]["find"](
												(_0x12d81b) => _0x12d81b["bulletType"] === _0x4ea7ee
											) &&
											_0x2164b8["Core"]["Weapons"]["filter"](
												(_0x2367d6) => 0x1 == _0x2367d6["isPowerUp"]
											)["length"] >= this["maxPowerUpWeapons"]
										)
											continue;
									} else {
										if (
											!_0x2164b8["Core"]["Weapons"]["find"](
												(_0x4472af) => _0x4472af["bulletType"] === _0x4ea7ee
											) &&
											_0x2164b8["Core"]["Weapons"]["filter"](
												(_0x397d9c) => 0x1 != _0x397d9c["isPowerUp"]
											)["length"] >= this["maxTrueWeapons"]
										)
											continue;
									}
									(this["accumulatedWeight"] += _0x523228["rarity"]),
										_0x523228["rarity"] > 0x0 &&
											this["WeightedStore"]["push"](
												new _0x3ef78a(_0x4ea7ee, this["accumulatedWeight"])
											);
								}
							}
							["CalculateWeightsWithExclusions"](_0x23e1d6) {
								var _0x5cb6d9 = _0x5d9431;
								(this["accumulatedWeight"] = 0x0), (this["WeightedStore"] = new Array());
								for (const _0x21aff6 in _0x41a274) {
									if (this["ExcludedWeapons"]["indexOf"](_0x21aff6) > -0x1) continue;
									if (this["SpecialWeapons"]["indexOf"](_0x21aff6) > -0x1) continue;
									if (_0x23e1d6["indexOf"](_0x21aff6) > -0x1) continue;
									const _0x4f9604 = _0x41a274[_0x21aff6][0x0];
									if (_0x4f9604["isPowerUp"]) {
										if (
											!_0x2164b8["Core"]["Weapons"]["find"](
												(_0x4233ab) => _0x4233ab["bulletType"] === _0x21aff6
											) &&
											_0x2164b8["Core"]["Weapons"]["filter"](
												(_0x9d0e47) => 0x1 == _0x9d0e47["isPowerUp"]
											)["length"] >= this["maxPowerUpWeapons"]
										)
											continue;
									} else {
										if (
											!_0x2164b8["Core"]["Weapons"]["find"](
												(_0x1b36d8) => _0x1b36d8["bulletType"] === _0x21aff6
											) &&
											_0x2164b8["Core"]["Weapons"]["filter"](
												(_0xd797a1) => 0x1 != _0xd797a1["isPowerUp"]
											)["length"] >= this["maxTrueWeapons"]
										)
											continue;
									}
									(this["accumulatedWeight"] += _0x4f9604["rarity"]),
										_0x4f9604["rarity"] > 0x0 &&
											this["WeightedStore"]["push"](
												new _0x3ef78a(_0x21aff6, this["accumulatedWeight"])
											);
								}
							}
							["GetRandomWeightedWeaponOrPowerup"]() {
								var _0x4f5a17 = _0x5d9431,
									_0x3ba7ee,
									_0x1ee25c = Math["random"]() * this["accumulatedWeight"];
								return null ===
									(_0x3ba7ee = this["WeightedStore"]["find"](
										(_0x5de444) => _0x5de444["weight"] >= _0x1ee25c
									)) || void 0x0 === _0x3ba7ee
									? void 0x0
									: _0x3ba7ee["weaponType"];
							}
							["GetRandomWeightedWeapon"]() {
								var _0x7e732f = _0x5d9431,
									_0x2bca8a,
									_0x2a16b2 = 0x0,
									_0x578d2e = new Array();
								for (const _0x52e87c in _0x41a274)
									if (!(this["ExcludedWeapons"]["indexOf"](_0x52e87c) > -0x1)) {
										var _0x4347c0 = _0x41a274[_0x52e87c][0x0];
										_0x4347c0["isPowerUp"] ||
											((_0x2a16b2 += _0x4347c0["rarity"]),
											_0x4347c0["rarity"] > 0x0 &&
												_0x578d2e["push"](new _0x3ef78a(_0x52e87c, _0x2a16b2)));
									}
								var _0x2d66f7 = Math["random"]() * _0x2a16b2;
								return null ===
									(_0x2bca8a = _0x578d2e["find"]((_0x5d3c0e) => _0x5d3c0e["weight"] >= _0x2d66f7)) ||
									void 0x0 === _0x2bca8a
									? void 0x0
									: _0x2bca8a["weaponType"];
							}
							["GetLevelUpPowerups"]() {
								var _0x1b3509 = _0x5d9431,
									_0x475f33 = new Array(),
									_0x304f00 = 0x0,
									_0x40919a = this["GetRandomExistingWeapon"]();
								_0x40919a && _0x475f33["push"](_0x40919a),
									(_0x40919a = this["GetRandomExistingWeapon"]()) &&
										_0x475f33["indexOf"](_0x40919a) <= -0x1 &&
										_0x475f33["push"](_0x40919a);
								for (
									var _0x296fc5 = this["GetLevelUpOptions"]();
									_0x475f33["length"] < _0x296fc5 && _0x304f00 < 0x3e8;

								) {
									var _0x2a86ff;
									_0x304f00++,
										void 0x0 !==
											(_0x2a86ff =
												_0x2164b8["Core"]["Player"]["level"] <= 0x3
													? this["GetRandomWeightedWeapon"]()
													: this["GetRandomWeightedWeaponOrPowerup"]()) &&
											_0x475f33["indexOf"](_0x2a86ff) <= -0x1 &&
											_0x475f33["push"](_0x2a86ff);
								}
								return _0x475f33["reverse"](), _0x475f33;
							}
							["RerollLevelUpPowerups"](_0x254cc0) {
								var _0xc67b48 = _0x5d9431,
									_0x3613f9 = new Array(),
									_0x56f568 = 0x0,
									_0x3a30b6 = this["GetRandomExistingWeapon"]();
								_0x3a30b6 && _0x3613f9["push"](_0x3a30b6);
								var _0x30637e = this["GetLevelUpOptions"]();
								for (
									this["CalculateWeightsWithExclusions"](_0x254cc0);
									_0x3613f9["length"] < _0x30637e && _0x56f568 < 0x3e8;

								) {
									var _0x496b14;
									_0x56f568++,
										void 0x0 !== (_0x496b14 = this["GetRandomWeightedWeaponOrPowerup"]()) &&
											_0x3613f9["indexOf"](_0x496b14) <= -0x1 &&
											_0x3613f9["push"](_0x496b14);
								}
								return _0x3613f9["reverse"](), _0x3613f9;
							}
							["GetLevelUpItems"]() {
								var _0x571831 = _0x5d9431,
									_0x5d3dd2 = new Array();
								return (
									_0x5d3dd2["push"](_0x3bf2f1["COINBAG2"]),
									_0x5d3dd2["push"](_0x3bf2f1["ROAST"]),
									_0x5d3dd2["reverse"](),
									_0x5d3dd2
								);
							}
							["RemoveFromStore"](_0x147321) {
								var _0x1e92af = _0x5d9431;
								this["WeaponStore"]["splice"](this["WeaponStore"]["indexOf"](_0x147321), 0x1),
									-0x1 === this["WeaponStore"]["indexOf"](_0x147321) &&
										this["ExcludedWeapons"]["push"](_0x147321),
									this["calculateWeights"]();
							}
							["GetRandomExistingWeapon"]() {
								var _0x514687 = _0x5d9431,
									_0x2b30b5;
								if (Math["random"]() <= this["ChanceForExistingPowerUp"])
									for (
										var _0xe7f410 = _0x2164b8["Core"]["Weapons"]["map"](
											(_0x5974d8) => _0x5974d8["bulletType"]
										);
										_0xe7f410["length"] > 0x0;

									) {
										var _0x3005ec;
										_0x3005ec =
											Math["random"]() > 0.5
												? _0xe7f410[0x0]
												: _0xe7f410[Math["floor"](Math["random"]() * _0xe7f410["length"])];
										var _0x31aaac =
											null ===
												(_0x2b30b5 = _0x2164b8["Core"]["Weapons"]["find"](
													(_0x254d6f) => _0x254d6f["bulletType"] === _0x3005ec
												)) || void 0x0 === _0x2b30b5
												? void 0x0
												: _0x2b30b5["level"];
										if (
											(_0x31aaac || (_0x31aaac = 0x0),
											2.5 * (_0x31aaac + 0x1) > _0x2164b8["Core"]["Player"]["level"])
										)
											_0xe7f410["splice"](_0xe7f410["indexOf"](_0x3005ec), 0x1);
										else {
											if (-0x1 != this["WeaponStore"]["indexOf"](_0x3005ec)) return _0x3005ec;
											_0xe7f410["splice"](_0xe7f410["indexOf"](_0x3005ec), 0x1);
										}
									}
								return null;
							}
							["AddLateWeapon"](_0x24702c) {
								var _0xf1dc1 = _0x5d9431;
								if (
									!_0x2164b8["Core"]["Weapons"]["find"](
										(_0x17b23a) => _0x17b23a["bulletType"] === _0x24702c
									)
								) {
									this["SpecialWeapons"]["push"](_0x24702c);
									var _0x15d25c = this["ExcludedWeapons"]["find"](
										(_0x594721) => _0x594721 === _0x24702c
									);
									if (_0x15d25c) {
										var _0x71d6b8 = this["ExcludedWeapons"]["indexOf"](_0x15d25c);
										_0x71d6b8 > -0x1 && this["ExcludedWeapons"]["splice"](_0x71d6b8, 0x1);
									}
									this["calculateWeights"]();
								}
							}
							["GetSpecialWeapon"](_0x30f480) {
								var _0x165214 = _0x5d9431,
									_0x4a520b = this["SpecialWeapons"]["indexOf"](_0x30f480);
								return _0x4a520b > -0x1
									? (this["SpecialWeapons"]["splice"](_0x4a520b, 0x1), _0x30f480)
									: null;
							}
						};
					var _0x5b4abe = _0x2931d0(0xc84);
					class _0x2d2169 {}
					(_0x2d2169["SelectionHighlight"] = {
						sourceKey: "UI",
						sourceFrame: "selectionSquareActive_03.png",
						sourceLayout: {
							width: 0x7,
							height: 0x7,
						},
					}),
						(_0x2d2169["ProgressBox"] = {
							sourceKey: "UI",
							sourceFrame: "frameB9.png",
							sourceLayout: {
								width: 0x6,
								height: 0x6,
							},
						}),
						(_0x2d2169["MenuBackground"] = {
							sourceKey: "UI",
							sourceFrame: "frame5_c4.png",
							sourceLayout: {
								width: 0xc,
								height: 0xc,
							},
						}),
						(_0x2d2169["PanelBackground"] = {
							sourceKey: "UI",
							sourceFrame: "frame1_c2.png",
							sourceLayout: {
								width: 0xc,
								height: 0xc,
							},
						}),
						(_0x2d2169["PanelBackgroundAdd"] = {
							sourceKey: "UI",
							sourceFrame: "frame5_c4_ad.png",
							sourceLayout: {
								width: 0xc,
								height: 0xc,
							},
						}),
						(_0x2d2169["GreenButton"] = {
							sourceKey: "UI",
							sourceFrame: "button_c5_normal.png",
							sourceLayout: {
								width: 0x9,
								height: 0xe,
							},
						}),
						(_0x2d2169["BackButton"] = {
							sourceKey: "UI",
							sourceFrame: "button_c8_normal.png",
							sourceLayout: {
								width: 0x9,
								height: 0xe,
							},
						}),
						(_0x2d2169["OptionsButton"] = {
							sourceKey: "UI",
							sourceFrame: "button_c9_normal.png",
							sourceLayout: {
								width: 0x9,
								height: 0xe,
							},
						}),
						(_0x2d2169["OptionsMiniButton"] = {
							sourceKey: "UI",
							sourceFrame: "button_c9_normal_mini.png",
							sourceLayout: {
								width: 0x9,
								height: 0x7,
							},
						}),
						(_0x2d2169["DisabledButton"] = {
							sourceKey: "UI",
							sourceFrame: "button_c9_desaturated.png",
							sourceLayout: {
								width: 0x9,
								height: 0xe,
							},
						}),
						(_0x2d2169["DisabledMiniButton"] = {
							sourceKey: "UI",
							sourceFrame: "button_c9_normal_mini_desaturated.png",
							sourceLayout: {
								width: 0x9,
								height: 0x7,
							},
						}),
						(_0x2d2169["Scrollbar"] = {
							sourceKey: "UI",
							sourceFrame: "sliderrail_c4.png",
							sourceLayout: {
								width: 0x4,
								height: 0x8,
							},
						});
					const _0x395ea9 = _0x2d2169;
					class _0x57a4c7 {
						constructor(_0x2b10da) {
							var _0x2e3b70 = _0x5d9431;
							(this["hpBarOffset"] = new Phaser["Math"]["Vector2"](-0x10, 0x2)),
								(this["hpBarHeight"] = 0x4),
								(this["hpBarWidth"] = 0x20),
								(this["progressHeight"] = 0xa),
								(this["scene"] = _0x2b10da),
								(this["progressBox"] = new _0x5b4abe["NineSlice"](
									this["scene"],
									_0x395ea9["ProgressBox"],
									{
										x: 0x0,
										y: 0x0,
										width: this["scene"]["renderer"]["width"],
										height: 0x12,
									}
								)),
								this["progressBox"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["progressBox"]["setScrollFactor"](0x0),
								this["scene"]["add"]["existing"](this["progressBox"]),
								(this["progressBar"] = this["scene"]["add"]["graphics"]()),
								this["progressBar"]["setScrollFactor"](0x0),
								(this["hpBarBG"] = this["scene"]["add"]
									["sprite"](
										0.5 * this["scene"]["renderer"]["width"] + this["hpBarOffset"]["x"],
										0.5 * this["scene"]["renderer"]["height"] + this["hpBarOffset"]["y"],
										"characters",
										"blackDot.png"
									)
									["setOrigin"](0x0, 0x0)
									["setScale"](this["hpBarWidth"], this["hpBarHeight"])
									["setScrollFactor"](0x0)
									["setDepth"](_0x1fa5bb["ZInGameUI"] - 0x3)),
								(this["hpBar"] = this["scene"]["add"]
									["sprite"](
										0.5 * this["scene"]["renderer"]["width"] + this["hpBarOffset"]["x"],
										0.5 * this["scene"]["renderer"]["height"] + this["hpBarOffset"]["y"],
										"characters",
										"whiteDot.png"
									)
									["setOrigin"](0x0, 0x0)
									["setScale"](this["hpBarWidth"], this["hpBarHeight"])
									["setTint"](0xe00808)
									["setScrollFactor"](0x0)
									["setDepth"](_0x1fa5bb["ZInGameUI"] - 0x3)),
								this["progressBox"]["setDepth"](_0x1fa5bb["ZInGameUI"] - 0x2),
								this["progressBar"]["setDepth"](_0x1fa5bb["ZInGameUI"] - 0x1);
						}
						["Update"]() {
							var _0x519546 = _0x5d9431;
							this["hpBar"]["setScale"](
								Math["max"](
									0x0,
									(_0x2164b8["Core"]["Player"]["hp"] / _0x2164b8["Core"]["Player"]["maxHp"]) *
										this["hpBarWidth"]
								),
								this["hpBarHeight"]
							),
								this["progressBar"]["clear"](),
								this["progressBar"]["fillStyle"](0x2266dd, 0x1);
							const _0x39e8da = this["scene"]["renderer"]["width"] - 0x8,
								_0x200390 =
									((_0x2164b8["Core"]["Player"]["xp"] -
										_0x2164b8["Core"]["LevelUpFactory"]["PreviousXpRequiredToLevelUp"]) /
										(_0x2164b8["Core"]["LevelUpFactory"]["XpRequiredToLevelUp"] -
											_0x2164b8["Core"]["LevelUpFactory"]["PreviousXpRequiredToLevelUp"])) *
									_0x39e8da;
							this["progressBar"]["fillRect"](
								0x4,
								0x4,
								Math["min"](_0x200390, _0x39e8da),
								this["progressHeight"]
							);
						}
					}
					var _0x40b239;
					!(function (_0x750b4d) {
						var _0x3902d7 = _0x5d9431;
						(_0x750b4d["MIGHT"] = "POWER"),
							(_0x750b4d["REGEN"] = "REGEN"),
							(_0x750b4d["MAXHEALTH"] = "MAXHEALTH"),
							(_0x750b4d["ARMOR"] = "ARMOR"),
							(_0x750b4d["AREA"] = "AREA"),
							(_0x750b4d["SPEED"] = "SPEED"),
							(_0x750b4d["COOLDOWN"] = "COOLDOWN"),
							(_0x750b4d["DURATION"] = "DURATION"),
							(_0x750b4d["AMOUNT"] = "AMOUNT"),
							(_0x750b4d["MOVESPEED"] = "MOVESPEED"),
							(_0x750b4d["MAGNET"] = "MAGNET"),
							(_0x750b4d["LUCK"] = "LUCK"),
							(_0x750b4d["GROWTH"] = "GROWTH"),
							(_0x750b4d["GREED"] = "GREED"),
							(_0x750b4d["CURSE"] = "CURSE"),
							(_0x750b4d["TIME"] = "TIME"),
							(_0x750b4d["SHIELD"] = "SHIELD"),
							(_0x750b4d["REVIVAL"] = "REVIVAL"),
							(_0x750b4d["LEVELUP"] = "LEVELUP"),
							(_0x750b4d["INVUL"] = "INVUL"),
							(_0x750b4d["REROLL"] = "REROLL"),
							(_0x750b4d["SKIP"] = "SKIP");
					})(_0x40b239 || (_0x40b239 = {}));
					const _0x300df5 = _0x40b239,
						_0x4a95c8 = {
							[_0x300df5["MIGHT"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["MIGHT"],
									name: "Might",
									description: "Raises inflicted damage by 5% per rank (max +25%).",
									texture: "items",
									frameName: "Leaf.png",
									isPowerUp: !0x0,
									price: 0xc8,
									power: 0.05,
									unlockedRank: 0x5,
								},
								{
									power: 0.05,
								},
								{
									power: 0.05,
								},
								{
									power: 0.05,
								},
								{
									power: 0.05,
								},
							],
							[_0x300df5["ARMOR"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["ARMOR"],
									name: "Armor",
									description: "Reduces incoming damage by 1 per rank (max -3)",
									texture: "items",
									frameName: "ArmorIron.png",
									isPowerUp: !0x0,
									price: 0x258,
									armor: 0x1,
									unlockedRank: 0x3,
								},
								{
									armor: 0x1,
								},
								{
									armor: 0x1,
								},
							],
							[_0x300df5["MAXHEALTH"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["MAXHEALTH"],
									name: "Max Health",
									description: "Augments max health by 20% per rank (max +60%)",
									texture: "items",
									frameName: "HeartBlack.png",
									isPowerUp: !0x0,
									price: 0xc8,
									maxHp: 0.1,
									unlockedRank: 0x3,
								},
								{
									maxHp: 0.1,
								},
								{
									maxHp: 0.1,
								},
							],
							[_0x300df5["REGEN"]]: [
								{
									level: 0x0,
									hidden: !0x1,
									bulletType: _0x300df5["REGEN"],
									name: "Recovery",
									description: "Recovers 0.1 HP per rank (max 0.5) per second.",
									texture: "items",
									frameName: "HeartRuby.png",
									isPowerUp: !0x0,
									price: 0xc8,
									regen: 0.1,
									unlockedRank: 0x5,
								},
								{
									regen: 0.1,
								},
								{
									regen: 0.1,
								},
								{
									regen: 0.1,
								},
								{
									regen: 0.1,
								},
							],
							[_0x300df5["COOLDOWN"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["COOLDOWN"],
									name: "Cooldown",
									description: "Uses weapons 2.5% faster per rank (max 5%).",
									texture: "items",
									frameName: "Book2.png",
									isPowerUp: !0x0,
									price: 0x384,
									cooldown: -0.025,
									unlockedRank: 0x2,
								},
								{
									cooldown: -0.025,
								},
							],
							[_0x300df5["AREA"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["AREA"],
									name: "Area",
									description: "Augments area of attacks by 5% per rank (max +10%).",
									texture: "items",
									frameName: "Candelabra.png",
									isPowerUp: !0x0,
									price: 0x12c,
									area: 0.05,
									unlockedRank: 0x2,
								},
								{
									area: 0.05,
								},
							],
							[_0x300df5["SPEED"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["SPEED"],
									name: "Speed",
									description: "Projectiles move 10% faster per rank (max 20%).",
									texture: "items",
									frameName: "Gauntlet.png",
									isPowerUp: !0x0,
									price: 0x12c,
									speed: 0.1,
									unlockedRank: 0x2,
								},
								{
									speed: 0.1,
								},
							],
							[_0x300df5["DURATION"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["DURATION"],
									name: "Duration",
									description: "Effects from weapons last 15% longer per rank (max +30%).",
									texture: "items",
									frameName: "EmblemEye.png",
									isPowerUp: !0x0,
									price: 0x12c,
									duration: 0.15,
									unlockedRank: 0x2,
								},
								{
									duration: 0.15,
								},
							],
							[_0x300df5["AMOUNT"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["AMOUNT"],
									name: "Amount",
									description: "Fires 1 more projectile (all weapons).",
									texture: "items",
									frameName: "Ring.png",
									isPowerUp: !0x0,
									price: 0x1388,
									amount: 0x1,
									unlockedRank: 0x1,
								},
							],
							[_0x300df5["MOVESPEED"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["MOVESPEED"],
									name: "MoveSpeed",
									description: "Character moves 5% faster per rank (max 10%).",
									texture: "items",
									frameName: "Wing.png",
									isPowerUp: !0x0,
									price: 0x12c,
									moveSpeed: 0.05,
									unlockedRank: 0x2,
								},
								{
									moveSpeed: 0.05,
								},
							],
							[_0x300df5["MAGNET"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["MAGNET"],
									name: "Magnet",
									description: "Items pickup range +25% per rank (max +50%).",
									texture: "items",
									frameName: "OrbGlow.png",
									isPowerUp: !0x0,
									price: 0x12c,
									magnet: 0.25,
									unlockedRank: 0x2,
								},
								{
									magnet: 0.25,
								},
							],
							[_0x300df5["LUCK"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["LUCK"],
									name: "Luck",
									description: "Chance to get lucky goes up by 10% per rank (max +30%).",
									texture: "items",
									frameName: "Clover.png",
									isPowerUp: !0x0,
									price: 0x258,
									luck: 0.1,
									unlockedRank: 0x3,
								},
								{
									luck: 0.1,
								},
								{
									luck: 0.1,
								},
							],
							[_0x300df5["GROWTH"]]: [
								{
									level: 0x0,
									bulletType: _0x300df5["GROWTH"],
									name: "Growth",
									description: "Gains 3% more experience per rank (max 15%).",
									texture: "items",
									frameName: "Crown.png",
									isPowerUp: !0x0,
									price: 0x384,
									growth: 0.03,
									unlockedRank: 0x5,
								},
								{
									growth: 0.03,
								},
								{
									growth: 0.03,
								},
								{
									growth: 0.03,
								},
								{
									growth: 0.03,
								},
							],
							[_0x300df5["GREED"]]: [
								{
									level: 0x0,
									hidden: !0x1,
									bulletType: _0x300df5["GREED"],
									name: "Greed",
									description: "Gains 10% more coins per rank (max +50%).",
									texture: "items",
									frameName: "Mask.png",
									isPowerUp: !0x0,
									price: 0xc8,
									greed: 0.1,
									unlockedRank: 0x5,
								},
								{
									greed: 0.1,
								},
								{
									greed: 0.1,
								},
								{
									greed: 0.1,
								},
								{
									greed: 0.1,
								},
							],
							[_0x300df5["CURSE"]]: [
								{
									level: 0x0,
									hidden: !0x1,
									bulletType: _0x300df5["CURSE"],
									name: "Curse",
									description:
										"Increases enemy speed, health, quantity, and frequency by 10% per rank (max +50%).",
									texture: "items",
									frameName: "Curse.png",
									isPowerUp: !0x0,
									price: 0x682,
									curse: 0.1,
									unlockedRank: 0x5,
								},
								{
									curse: 0.1,
								},
								{
									curse: 0.1,
								},
								{
									curse: 0.1,
								},
								{
									curse: 0.1,
								},
							],
							[_0x300df5["REVIVAL"]]: [
								{
									level: 0x0,
									hidden: !0x1,
									bulletType: _0x300df5["REVIVAL"],
									name: "Revival",
									description: "Revives once with 50% health.",
									texture: "items",
									frameName: "Tiramisu.png",
									isPowerUp: !0x0,
									price: 0x2710,
									revivals: 0x1,
									unlockedRank: 0x1,
								},
							],
							[_0x300df5["REROLL"]]: [
								{
									level: 0x0,
									hidden: !0x0,
									bulletType: _0x300df5["REROLL"],
									name: "Reroll",
									description: "Once per rank, allows to get different choices when leveling up.",
									texture: "items",
									frameName: "Dice.png",
									isPowerUp: !0x0,
									isAnUnlockable: !0x0,
									price: 0x1388,
									rerolls: 0x1,
									unlockedRank: 0x0,
									specialBG: !0x0,
								},
								{
									rerolls: 0x1,
								},
								{
									rerolls: 0x1,
								},
							],
							[_0x300df5["SKIP"]]: [
								{
									level: 0x0,
									hidden: !0x0,
									bulletType: _0x300df5["SKIP"],
									name: "Skip",
									description:
										"Once per rank, allows to skip level up choices and get Experience instead.",
									texture: "items",
									frameName: "Skip.png",
									isPowerUp: !0x0,
									isAnUnlockable: !0x0,
									price: 0x3e8,
									skips: 0x1,
									unlockedRank: 0x0,
									specialBG: !0x0,
								},
								{
									skips: 0x1,
								},
								{
									skips: 0x1,
								},
							],
						};
					class _0x2ccf37 extends Phaser["GameObjects"]["Container"] {
						constructor(_0x4fee51, _0x49f6b5, _0x805a9d, _0x8c5923, _0x318d2e, _0x25d531) {
							var _0x3a8307 = _0x5d9431;
							super(_0x4fee51, _0x49f6b5, _0x805a9d),
								(this["myListOfStats"] = [
									{
										name: "maxHp",
										powerupType: _0x300df5["MAXHEALTH"],
										value: 0x64,
										type: "health",
									},
									{
										name: "regen",
										powerupType: _0x300df5["REGEN"],
										value: 0x0,
										type: "percentagePerSecond",
									},
									{
										name: "armor",
										powerupType: _0x300df5["ARMOR"],
										value: 0x0,
										type: "flat",
									},
									{
										name: "moveSpeed",
										powerupType: _0x300df5["MOVESPEED"],
										value: 0x1,
										type: "percentage1",
									},
									{
										type: "newLine",
									},
									{
										name: "power",
										powerupType: _0x300df5["MIGHT"],
										value: 0x1,
										type: "percentage1",
									},
									{
										name: "area",
										powerupType: _0x300df5["AREA"],
										value: 0x1,
										type: "percentage1",
									},
									{
										name: "speed",
										powerupType: _0x300df5["SPEED"],
										value: 0x1,
										type: "percentage1",
									},
									{
										name: "duration",
										powerupType: _0x300df5["DURATION"],
										value: 0x1,
										type: "percentage1",
									},
									{
										name: "amount",
										powerupType: _0x300df5["AMOUNT"],
										value: 0x0,
										type: "flat",
									},
									{
										name: "cooldown",
										powerupType: _0x300df5["COOLDOWN"],
										value: 0x1,
										type: "percentage1",
									},
									{
										type: "newLine",
									},
									{
										name: "luck",
										powerupType: _0x300df5["LUCK"],
										value: 0x1,
										type: "percentage1",
									},
									{
										name: "growth",
										powerupType: _0x300df5["GROWTH"],
										value: 0x1,
										type: "percentage1",
									},
									{
										name: "greed",
										powerupType: _0x300df5["GREED"],
										value: 0x1,
										type: "percentage1",
									},
									{
										name: "curse",
										powerupType: _0x300df5["CURSE"],
										value: 0x1,
										type: "percentage1",
									},
									{
										name: "magnet",
										powerupType: _0x300df5["MAGNET"],
										value: 0x0,
										type: "percentagePlusOne",
									},
									{
										type: "newLine",
									},
									{
										name: "revivals",
										powerupType: _0x300df5["REVIVAL"],
										value: 0x0,
										type: "flat",
									},
									{
										name: "rerolls",
										powerupType: _0x300df5["REROLL"],
										value: 0x0,
										type: "flat",
									},
									{
										name: "skips",
										powerupType: _0x300df5["SKIP"],
										value: 0x0,
										type: "flat",
									},
								]),
								(this["char"] = _0x25d531),
								this["setScale"](_0x1fa5bb["PixelScale"]);
							for (let _0xe3705d = 0x0; _0xe3705d < this["myListOfStats"]["length"]; _0xe3705d++) {
								const _0x2f8674 = this["myListOfStats"][_0xe3705d];
								if ("newLine" === _0x2f8674["type"]) continue;
								let _0x269703 = _0x4a95c8[_0x2f8674["powerupType"]];
								if (void 0x0 === _0x269703) continue;
								_0x269703 = _0x4a95c8[_0x2f8674["powerupType"]][0x0];
								let _0xdc427a = new Phaser["GameObjects"]["Image"](
										this["scene"],
										0x6,
										0x10 + 0x10 * _0xe3705d,
										_0x269703["texture"],
										_0x269703["frameName"]
									)
										["setOrigin"](0x0, 0.5)
										["setScale"](_0x1fa5bb["PixelScale"]),
									_0xad02e2 = new Phaser["GameObjects"]["Text"](
										this["scene"],
										0x18,
										0x10 + 0x10 * _0xe3705d,
										_0x269703["name"],
										{}
									)
										["setOrigin"](0x0, 0.5)
										["setScale"](_0x1fa5bb["PixelScale"]),
									_0x24bcd1 = new Phaser["GameObjects"]["Text"](
										this["scene"],
										0xba,
										0x10 + 0x10 * _0xe3705d,
										_0x269703["value"],
										{}
									)
										["setOrigin"](0x1, 0.5)
										["setScale"](_0x1fa5bb["PixelScale"]);
								this["add"](_0xdc427a),
									this["add"](_0xad02e2),
									this["add"](_0x24bcd1),
									(_0x2f8674["valueTextObject"] = _0x24bcd1);
							}
							var _0x67033e = {
								x: 0x0,
								y: 0x0,
								width: _0x8c5923,
								height: 0x20 + 0x10 * (this["myListOfStats"]["length"] - 0x1),
							};
							(this["Background"] = new _0x5b4abe["NineSlice"](
								this["scene"],
								{
									sourceKey: "UI",
									sourceFrame: "frame1_c2.png",
									sourceLayout: {
										width: 0xc,
										height: 0xc,
									},
								},
								_0x67033e
							)),
								this["addAt"](this["Background"], 0x0),
								this["AssignData"](this["char"]);
						}
						["Open"]() {
							var _0x47b051 = _0x5d9431;
							(this["scaleY"] = 0x0),
								(this["OnEnterTween"] = this["scene"]["tweens"]["add"]({
									targets: this,
									scaleY: 0x1,
									duration: 0x96,
								}));
						}
						["OnClick"]() {}
						["AssignData"](_0x345127) {
							var _0x24a43e = _0x5d9431,
								_0x3da292;
							this["char"] = _0x345127;
							var _0x5186a1 = _0x11010a[this["char"]];
							if (void 0x0 !== _0x5186a1) {
								_0x5186a1 = _0x11010a[this["char"]][0x0];
								for (let _0xeb3751 = 0x0; _0xeb3751 < this["myListOfStats"]["length"]; _0xeb3751++) {
									const _0x2529e8 = this["myListOfStats"][_0xeb3751];
									if (_0x5186a1["hasOwnProperty"](_0x2529e8["name"])) {
										_0x2529e8["value"] = _0x5186a1[_0x2529e8["name"]];
										let _0x2b1968 = !0x1;
										var _0x2295d0 = _0x4a95c8[_0x2529e8["powerupType"]];
										if (void 0x0 !== _0x2295d0) {
											let _0x34da85 = _0x4a95c8[_0x2529e8["powerupType"]][0x0];
											for (let _0x2889a3 = 0x0; _0x2889a3 < _0x34da85["level"]; _0x2889a3++)
												if (void 0x0 !== _0x2295d0[_0x2889a3][_0x2529e8["name"]]) {
													if (_0x2529e8["powerupType"] === _0x300df5["MAXHEALTH"]) {
														let _0x163993 = _0x5186a1[_0x2529e8["name"]],
															_0xe84b5a = _0x2295d0[_0x2889a3][_0x2529e8["name"]];
														(_0x2529e8["value"] += _0x163993 * _0xe84b5a),
															(_0x2b1968 = !0x0);
													} else
														(_0x2529e8["value"] += _0x2295d0[_0x2889a3][_0x2529e8["name"]]),
															(_0x2b1968 = !0x0);
												}
										}
										null === (_0x3da292 = _0x2529e8["valueTextObject"]) ||
											void 0x0 === _0x3da292 ||
											(_0x3da292["text"] = this["GetStatDisplayTextValue"](_0x2529e8)),
											_0x2529e8["valueTextObject"] &&
												_0x2529e8["valueTextObject"]["setTint"](
													_0x2b1968 ? 0xffff00 : 0xffffff
												);
									}
								}
							}
						}
						["AssignPlayer"](_0xf714fb) {
							var _0x539524 = _0x5d9431,
								_0x22f69c,
								_0x24e225,
								_0x2b2250;
							for (let _0x2bacfa = 0x0; _0x2bacfa < this["myListOfStats"]["length"]; _0x2bacfa++) {
								const _0x5e50e8 = this["myListOfStats"][_0x2bacfa];
								_0xf714fb["hasOwnProperty"](_0x5e50e8["name"])
									? ((_0x5e50e8["value"] = _0xf714fb[_0x5e50e8["name"]]),
									  null === (_0x22f69c = _0x5e50e8["valueTextObject"]) ||
											void 0x0 === _0x22f69c ||
											(_0x22f69c["text"] = this["GetStatDisplayTextValue"](_0x5e50e8)),
									  null === (_0x24e225 = _0x5e50e8["valueTextObject"]) ||
											void 0x0 === _0x24e225 ||
											_0x24e225["setTint"](0xffffff))
									: "magnet" === _0x5e50e8["name"] &&
									  (null === (_0x2b2250 = _0x5e50e8["valueTextObject"]) ||
											void 0x0 === _0x2b2250 ||
											(_0x2b2250["text"] = _0x2164b8["Core"]["Magnet"]["radius"]["toFixed"]()));
							}
						}
						["GetStatDisplayTextValue"](_0x14ce42) {
							var _0x3d723b = _0x5d9431;
							switch (_0x14ce42["type"]) {
								case "health":
									return _0x14ce42["value"]["toFixed"]();
								case "flat": {
									let _0x21f039 =
										(_0x14ce42["value"] >= 0x0 ? "+" : "") + _0x14ce42["value"]["toFixed"]();
									return "+0" === _0x21f039 ? "-" : _0x21f039;
								}
								case "percentagePerSecond": {
									let _0x86905b = _0x14ce42["value"]["toFixed"](0x1);
									return "0.0" === _0x86905b ? "-" : _0x86905b;
								}
								case "percentage1": {
									let _0x4181a3 =
										(_0x14ce42["value"] >= 0x1 ? "+" : "") +
										Math["round"](0x64 * (_0x14ce42["value"] - 0x1)) +
										"%";
									return "+0%" === _0x4181a3 ? "-" : _0x4181a3;
								}
								case "percentagePlusOne": {
									let _0x2bba29 =
										(_0x14ce42["value"] + 0x1 >= 0x1 ? "+" : "") +
										Math["round"](0x64 * _0x14ce42["value"]) +
										"%";
									return "+0%" === _0x2bba29 ? "-" : _0x2bba29;
								}
								default:
									return "";
							}
						}
					}
					const _0x1ef4d8 = _0x2ccf37;
					class _0x861388 {
						static ["ForceResize"](_0xd51ac6, _0x582981 = devicePixelRatio) {
							var _0x16f843 = _0x5d9431;
							const _0x58d90c = Math["round"](
									window["innerWidth"] * Math["min"](devicePixelRatio, _0x582981)
								),
								_0x4f3b4f = Math["round"](
									window["innerHeight"] * Math["min"](devicePixelRatio, _0x582981)
								);
							(_0xd51ac6["scale"]["parent"]["width"] = Math["round"](window["innerWidth"])),
								(_0xd51ac6["scale"]["parent"]["height"] = Math["round"](window["innerHeight"])),
								(_0xd51ac6["scale"]["canvas"]["width"] = _0x58d90c),
								(_0xd51ac6["scale"]["canvas"]["height"] = _0x4f3b4f),
								(_0xd51ac6["scale"]["canvas"]["style"]["width"] =
									Math["round"](window["innerWidth"]) + "px"),
								(_0xd51ac6["scale"]["canvas"]["style"]["height"] =
									Math["round"](window["innerHeight"]) + "px");
						}
						static ["LerpColor"](_0x46dfd7, _0x21cc19, _0x1760fb) {
							var _0xb69c1 = _0x46dfd7 >> 0x10,
								_0x285322 = (_0x46dfd7 >> 0x8) & 0xff,
								_0x5609d3 = 0xff & _0x46dfd7;
							return (
								((0x1 << 0x18) +
									((_0xb69c1 + _0x1760fb * ((_0x21cc19 >> 0x10) - _0xb69c1)) << 0x10) +
									((_0x285322 + _0x1760fb * (((_0x21cc19 >> 0x8) & 0xff) - _0x285322)) << 0x8) +
									(_0x5609d3 + _0x1760fb * ((0xff & _0x21cc19) - _0x5609d3))) |
								0x0
							);
						}
					}
					_0x861388["CalculateAndSetContainerSize"] = function (_0x5830df) {
						var _0x547f6f = _0x5d9431,
							_0x175456 = _0x5830df["scene"]["renderer"]["height"],
							_0x5eea9a = 0x0,
							_0x4600ac = _0x5830df["scene"]["renderer"]["width"],
							_0x471337 = 0x0;
						_0x5830df["iterate"]((_0x29fc5c) => {
							var _0x44259c = _0x547f6f,
								_0x16a5cf = _0x29fc5c["x"],
								_0x43c379 = _0x29fc5c["y"],
								_0x4ca61e = _0x29fc5c["displayWidth"],
								_0x5600c9 = _0x29fc5c["displayHeight"],
								_0x49ba90 = _0x43c379 - _0x5600c9 * _0x29fc5c["originY"],
								_0x556cab = _0x43c379 + _0x5600c9 * (0x1 - _0x29fc5c["originY"]),
								_0x31dc98 = _0x16a5cf - _0x4ca61e * _0x29fc5c["originX"],
								_0x2a73ab = _0x16a5cf + _0x4ca61e * (0x1 - _0x29fc5c["originY"]);
							_0x556cab > _0x5eea9a && (_0x5eea9a = _0x556cab),
								_0x49ba90 < _0x175456 && (_0x175456 = _0x49ba90),
								_0x31dc98 < _0x4600ac && (_0x4600ac = _0x31dc98),
								_0x2a73ab > _0x471337 && (_0x471337 = _0x2a73ab);
						});
						var _0x431bdc = Math["abs"](_0x175456 - _0x5eea9a),
							_0x380724 = Math["abs"](_0x471337 - _0x4600ac);
						_0x5830df["setSize"](_0x380724, _0x431bdc);
					};
					const _0x38ad94 = _0x861388;
					class _0x132296 {
						constructor() {
							var _0x6c31b2 = _0x5d9431;
							(this["level"] = 0x0), (this["isWeapon"] = !0x0);
						}
					}
					class _0x5a261c {
						constructor(_0x20e366) {
							var _0x43d6af = _0x5d9431;
							(this["WeaponSprites"] = new Array()),
								(this["WeaponIcons"] = new Array()),
								(this["PowerUpIcons"] = new Array()),
								(this["xIncrease"] = 0x10),
								(this["yOffset"] = 0x12),
								(this["cols"] = 0x6),
								(this["scene"] = _0x20e366),
								(this["SurvivedSecondsText"] = this["scene"]["add"]
									["text"](0.5 * this["scene"]["renderer"]["width"], 0x19, "0:00", {
										color: "white",
										fontSize: "20px",
										fontStyle: "bold",
									})
									["setScrollFactor"](0x0)
									["setOrigin"](0.5, 0x0)),
								(this["PlayerLevelText"] = this["scene"]["add"]
									["text"](this["scene"]["renderer"]["width"] - 0x4, 0x9, "LV 99", {
										color: "white",
										fontSize: "12px",
										fontStyle: "bold",
									})
									["setScrollFactor"](0x0)
									["setOrigin"](0x1, 0.5)),
								(this["CoinsIcon"] = this["scene"]["add"]
									["image"](this["scene"]["renderer"]["width"] - 0x4, 0x19, "UI", "CoinGold.png")
									["setScrollFactor"](0x0)
									["setOrigin"](0x1, 0.5)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setDepth"](_0x1fa5bb["ZInGameUI"] - 0x3)),
								(this["KillsIcon"] = this["scene"]["add"]
									["image"](
										0.85 * this["scene"]["renderer"]["width"] - 0x4,
										0x19,
										"UI",
										"SkullToken.png"
									)
									["setScrollFactor"](0x0)
									["setOrigin"](0x1, 0.5)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setDepth"](_0x1fa5bb["ZInGameUI"] - 0x3)),
								(this["KillsText"] = this["scene"]["add"]
									["text"](
										this["KillsIcon"]["x"] - this["KillsIcon"]["displayWidth"] - 0x4,
										this["KillsIcon"]["y"],
										"9999",
										{
											color: "white",
											fontSize: "12px",
											fontStyle: "bold",
										}
									)
									["setScrollFactor"](0x0)
									["setOrigin"](0x1, 0.5)
									["setDepth"](_0x1fa5bb["ZInGameUI"] - 0x3)),
								(this["PlayerCoinsText"] = this["scene"]["add"]
									["text"](
										this["CoinsIcon"]["x"] - this["CoinsIcon"]["displayWidth"] - 0x4,
										this["CoinsIcon"]["y"],
										"9999",
										{
											color: "white",
											fontSize: "12px",
											fontStyle: "bold",
										}
									)
									["setScrollFactor"](0x0)
									["setOrigin"](0x1, 0.5)
									["setDepth"](_0x1fa5bb["ZInGameUI"] - 0x3)),
								(this["WeaponSlots"] = this["scene"]["add"]
									["image"](0x1, 0x12, "UI", "weaponSlots.psd")
									["setScrollFactor"](0x0)
									["setOrigin"](0x0)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setDepth"](_0x1fa5bb["ZInGameUI"] - 0x3)),
								this["PlayerCoinsText"]["setDepth"](Number["MAX_SAFE_INTEGER"]),
								this["CoinsIcon"]["setDepth"](Number["MAX_SAFE_INTEGER"]),
								this["PlayerLevelText"]["setDepth"](Number["MAX_SAFE_INTEGER"]),
								this["SurvivedSecondsText"]["setDepth"](Number["MAX_SAFE_INTEGER"]),
								this["KillsIcon"]["setDepth"](Number["MAX_SAFE_INTEGER"]),
								this["KillsText"]["setDepth"](Number["MAX_SAFE_INTEGER"]),
								(this["StatsPanel"] = new _0x1ef4d8(
									this["scene"],
									_0x2bef3a["left"],
									0x80,
									0xc8,
									0x122,
									_0x2164b8["Core"]["Player"]["characterType"]
								)),
								this["scene"]["add"]["existing"](this["StatsPanel"]),
								_0x38ad94["CalculateAndSetContainerSize"](this["StatsPanel"]),
								(this["StatsPanel"]["x"] = 0x8),
								(this["StatsPanel"]["y"] = _0x170004 - this["StatsPanel"]["displayHeight"] - 0x8),
								this["StatsPanel"]["AssignPlayer"](_0x2164b8["Core"]["Player"]),
								this["StatsPanel"]["setVisible"](!_0xe0047c),
								this["StatsPanel"]["setVisible"](!0x1),
								this["StatsPanel"]["setScrollFactor"](0x0),
								this["StatsPanel"]["setDepth"](Number["MAX_SAFE_INTEGER"]);
						}
						["SetSurvivedSeconds"](_0x30fd9f) {
							var _0x2c0ab3 = _0x5d9431;
							this["SurvivedSecondsText"]["setText"](_0x5a261c["FormatTime"](_0x30fd9f));
						}
						["UpdateCoins"]() {
							var _0x49b6b1 = _0x5d9431;
							this["PlayerCoinsText"]["text"] = _0x2164b8["Core"]["PlayerOptions"]["RunCoins"]
								["toFixed"](0x0)
								["toLocaleString"]();
						}
						["UpdateKills"]() {
							var _0x256a64 = _0x5d9431;
							this["KillsText"]["text"] = _0x2164b8["Core"]["PlayerOptions"]["RunEnemies"]
								["toFixed"](0x0)
								["toLocaleString"]();
						}
						["UpdatePlayerLevel"]() {
							var _0x47f062 = _0x5d9431;
							this["PlayerLevelText"]["text"] = _0x2164b8["Lang"]["getLang"]("ingame_level", [
								_0x2164b8["Core"]["Player"]["level"]["toString"](),
							]);
						}
						static ["FormatTime"](_0x50aa87) {
							var _0x3b6aa4 = _0x5d9431;
							return (
								Math["floor"](_0x50aa87 / 0x3c) +
								":" +
								(_0x50aa87 % 0x3c)["toString"]()["padStart"](0x2, "0")
							);
						}
						["Add"](_0x78d7e0) {
							var _0x2a0d4c = _0x5d9431,
								_0x326951 = _0x41a274[_0x78d7e0][0x0],
								_0x57499d =
									_0x326951["isPowerUp"] || this["WeaponIcons"]["length"] >= 0x6
										? this["PowerUpIcons"]["find"](
												(_0x39dd21) => _0x39dd21["weaponType"] == _0x78d7e0
										  )
										: this["WeaponIcons"]["find"](
												(_0x502f7a) => _0x502f7a["weaponType"] == _0x78d7e0
										  );
							if (_0x57499d) _0x57499d["level"]++;
							else {
								var _0x2baadd = new _0x132296();
								(_0x2baadd["weaponType"] = _0x78d7e0),
									(_0x2baadd["level"] = 0x1),
									(_0x2baadd["isWeapon"] = !(
										_0x326951["isPowerUp"] || this["WeaponIcons"]["length"] >= 0x6
									));
								var _0x4b7d97 = _0x2baadd["isWeapon"]
										? this["xIncrease"] * this["WeaponIcons"]["length"]
										: this["xIncrease"] * (this["PowerUpIcons"]["length"] % this["cols"]),
									_0x198977 = _0x2baadd["isWeapon"]
										? this["yOffset"]
										: this["yOffset"] +
										  this["xIncrease"] +
										  this["xIncrease"] *
												Math["floor"](this["PowerUpIcons"]["length"] / this["cols"]),
									_0x708feb = this["scene"]["add"]
										["image"](_0x4b7d97, _0x198977, _0x326951["texture"], _0x326951["frameName"])
										["setOrigin"](0x0, 0x0)
										["setScrollFactor"](0x0)
										["setDepth"](_0x1fa5bb["ZInGameUI"] - 0x2);
								_0x708feb["setScale"](0x10 / _0x708feb["width"]),
									(_0x2baadd["image"] = _0x708feb),
									_0x2baadd["isWeapon"]
										? this["WeaponIcons"]["push"](_0x2baadd)
										: this["PowerUpIcons"]["push"](_0x2baadd);
							}
							this["RearrangeIcons"]();
						}
						["Remove"](_0x3f5c36) {
							var _0xb1bcf4 = _0x5d9431,
								_0x94ffe2;
							_0x41a274[_0x3f5c36][0x0],
								(_0x94ffe2 = this["PowerUpIcons"]["find"](
									(_0xea35f7) => _0xea35f7["weaponType"] == _0x3f5c36
								))
									? (this["scene"]["children"]["remove"](_0x94ffe2["image"]),
									  this["PowerUpIcons"]["splice"](this["PowerUpIcons"]["indexOf"](_0x94ffe2), 0x1))
									: (_0x94ffe2 = this["WeaponIcons"]["find"](
											(_0x11c12d) => _0x11c12d["weaponType"] == _0x3f5c36
									  )) &&
									  (this["scene"]["children"]["remove"](_0x94ffe2["image"]),
									  this["WeaponIcons"]["splice"](this["WeaponIcons"]["indexOf"](_0x94ffe2), 0x1)),
								this["RearrangeIcons"]();
						}
						["RearrangeIcons"]() {
							var _0x43112c = _0x5d9431;
							for (let _0x5028ab = 0x0; _0x5028ab < this["WeaponIcons"]["length"]; _0x5028ab++) {
								const _0x1a4059 = this["WeaponIcons"][_0x5028ab]["image"];
								(_0x1a4059["x"] = this["xIncrease"] * _0x5028ab), (_0x1a4059["y"] = this["yOffset"]);
							}
							for (let _0x201b13 = 0x0; _0x201b13 < this["PowerUpIcons"]["length"]; _0x201b13++) {
								const _0x494df8 = this["PowerUpIcons"][_0x201b13]["image"];
								(_0x494df8["x"] = this["xIncrease"] * (_0x201b13 % this["cols"])),
									(_0x494df8["y"] =
										this["yOffset"] +
										this["xIncrease"] +
										this["xIncrease"] * Math["floor"](_0x201b13 / this["cols"]));
							}
						}
						["AddWeaponIcon"](_0x4c2376) {
							var _0x58cc23 = _0x5d9431;
							this["Add"](_0x4c2376);
						}
					}
					var _0x5e3a43;
					!(function (_0x11ec25) {
						var _0x480924 = _0x5d9431;
						(_0x11ec25["FOREST"] = "FOREST"),
							(_0x11ec25["SINKING"] = "SINKING"),
							(_0x11ec25["ENTRANCE"] = "ENTRANCE"),
							(_0x11ec25["LIBRARY"] = "LIBRARY"),
							(_0x11ec25["TEST"] = "TEST"),
							(_0x11ec25["TESTONE"] = "TESTONE"),
							(_0x11ec25["CASTLE"] = "CASTLE"),
							(_0x11ec25["GREENACRES"] = "GREENACRES");
					})(_0x5e3a43 || (_0x5e3a43 = {}));
					const _0x2f4d79 = _0x5e3a43;
					var _0x2df94d,
						_0x573366 = _0x2931d0(0x2080);
					!(function (_0x39f11a) {
						var _0x2f76b0 = _0x5d9431;
						(_0x39f11a["BAT1"] = "BAT1"),
							(_0x39f11a["BAT2"] = "BAT2"),
							(_0x39f11a["BAT3"] = "BAT3"),
							(_0x39f11a["BAT4"] = "BAT4"),
							(_0x39f11a["BAT5"] = "BAT5"),
							(_0x39f11a["BATSWARM"] = "BATSWARM"),
							(_0x39f11a["ZOMBIE"] = "ZOMBIE"),
							(_0x39f11a["SKELETON"] = "SKELETON"),
							(_0x39f11a["WEREWOLF"] = "WEREWOLF"),
							(_0x39f11a["GHOST"] = "GHOST"),
							(_0x39f11a["GHOSTSWARM"] = "GHOSTSWARM"),
							(_0x39f11a["FLOWER"] = "FLOWER"),
							(_0x39f11a["MUDMAN1"] = "MUDMAN1"),
							(_0x39f11a["MUDMAN2"] = "MUDMAN2"),
							(_0x39f11a["test"] = "test"),
							(_0x39f11a["ARMOR"] = "ARMOR"),
							(_0x39f11a["JELLYFISH"] = "JELLYFISH"),
							(_0x39f11a["BOSS_WEREWOLF"] = "BOSS_WEREWOLF"),
							(_0x39f11a["MUD"] = "MUD"),
							(_0x39f11a["BUER"] = "BUER"),
							(_0x39f11a["MUMMY"] = "MUMMY"),
							(_0x39f11a["ECTO1"] = "ECTO1"),
							(_0x39f11a["ECTO2"] = "ECTO2"),
							(_0x39f11a["WITCH1"] = "WITCH1"),
							(_0x39f11a["WITCH2"] = "WITCH2"),
							(_0x39f11a["MEDUSA1"] = "MEDUSA1"),
							(_0x39f11a["MEDUSA2"] = "MEDUSA2"),
							(_0x39f11a["MEDUSA2_AGGRO"] = "MEDUSA2_AGGRO"),
							(_0x39f11a["DULL1"] = "DULL1"),
							(_0x39f11a["DULL2"] = "DULL2"),
							(_0x39f11a["SKULL2"] = "SKULL2"),
							(_0x39f11a["SKULL2_SWARM"] = "SKULL2_SWARM"),
							(_0x39f11a["SHADEBLUE"] = "SHADEBLUE"),
							(_0x39f11a["SHADERED"] = "SHADERED"),
							(_0x39f11a["XLBAT"] = "XLBAT"),
							(_0x39f11a["XLMUMMY"] = "XLMUMMY"),
							(_0x39f11a["XLMANTIS"] = "XLMANTIS"),
							(_0x39f11a["XLFLOWER"] = "XLFLOWER"),
							(_0x39f11a["XLMEDUSA"] = "XLMEDUSA"),
							(_0x39f11a["BOSS_XLMUMMY"] = "BOSS_XLMUMMY"),
							(_0x39f11a["BOSS_XLBAT"] = "BOSS_XLBAT"),
							(_0x39f11a["BOSS_XLMANTIS"] = "BOSS_XLMANTIS"),
							(_0x39f11a["BOSS_XLFLOWER"] = "BOSS_XLFLOWER"),
							(_0x39f11a["BOSS_XLDEATH"] = "BOSS_XLDEATH"),
							(_0x39f11a["BOSS_ECTO"] = "BOSS_ECTO"),
							(_0x39f11a["BOSS_MUD"] = "BOSS_MUD"),
							(_0x39f11a["BOSS_BUER"] = "BOSS_BUER"),
							(_0x39f11a["BOSS_XLMEDUSA"] = "BOSS_XLMEDUSA"),
							(_0x39f11a["BOSS_COUNT1"] = "BOSS_COUNT1"),
							(_0x39f11a["BOSS_COUNT2"] = "BOSS_COUNT2"),
							(_0x39f11a["BOSS_MEDUSA1"] = "BOSS_MEDUSA1"),
							(_0x39f11a["BOSS_WITCH2"] = "BOSS_WITCH2");
					})(_0x2df94d || (_0x2df94d = {}));
					const _0x3b89df = _0x2df94d;
					var _0x15f32e;
					!(function (_0xc06ea8) {
						var _0x2ee40b = _0x5d9431;
						(_0xc06ea8[(_0xc06ea8["HPxLevel"] = 0x0)] = "HPxLevel"),
							(_0xc06ea8[(_0xc06ea8["FixedDirection"] = 0x1)] = "FixedDirection"),
							(_0xc06ea8[(_0xc06ea8["SelfDestruct"] = 0x2)] = "SelfDestruct"),
							(_0xc06ea8[(_0xc06ea8["Medusa"] = 0x3)] = "Medusa"),
							(_0xc06ea8[(_0xc06ea8["_0x2fe496"] = 0x4)] = "_0x2fe496"),
							(_0xc06ea8[(_0xc06ea8["_0x2fe497"] = 0x5)] = "_0x2fe497"),
							(_0xc06ea8[(_0xc06ea8["_0x2fe498"] = 0x6)] = "_0x2fe498"),
							(_0xc06ea8[(_0xc06ea8["_0x2fe499"] = 0x7)] = "_0x2fe499"),
							(_0xc06ea8[(_0xc06ea8["_0x2fe49a"] = 0x8)] = "_0x2fe49a"),
							(_0xc06ea8[(_0xc06ea8["_0x2fe49b"] = 0x9)] = "_0x2fe49b"),
							(_0xc06ea8[(_0xc06ea8["_0x2fe49c"] = 0xa)] = "_0x2fe49c"),
							(_0xc06ea8[(_0xc06ea8["_0x2fe49d"] = 0xb)] = "_0x2fe49d"),
							(_0xc06ea8[(_0xc06ea8["_0x2fe49e"] = 0xc)] = "_0x2fe49e"),
							(_0xc06ea8[(_0xc06ea8["_0x2fe49f"] = 0xd)] = "_0x2fe49f");
					})(_0x15f32e || (_0x15f32e = {}));
					const _0x44ffbb = _0x15f32e,
						_0x3317fb = {
							[_0x3b89df["BAT1"]]: [
								{
									level: 0x1,
									maxHp: 0.1,
									speed: 0x8c,
									power: 0x5,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x2,
									xp: 0x1,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Bat1_0.png"],
								},
							],
							[_0x3b89df["BAT2"]]: [
								{
									level: 0x1,
									maxHp: 0.5,
									speed: 0x8c,
									power: 0x5,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x2,
									xp: 0x1,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Bat2_0.png"],
								},
							],
							[_0x3b89df["BAT3"]]: [
								{
									level: 0x1,
									maxHp: 0.5,
									speed: 0x8c,
									power: 0x5,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x2,
									killedAmount: 0x0,
									xp: 0x1,
									end: 0x10,
									idleFrameCount: 0x4,
									textureName: "enemies",
									frameNames: ["Bat3_0.png"],
								},
							],
							[_0x3b89df["BAT4"]]: [
								{
									level: 0x1,
									maxHp: 0x5,
									speed: 0x8c,
									power: 0xa,
									skills: [_0x44ffbb["HPxLevel"]],
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x2,
									killedAmount: 0x0,
									xp: 0x1e,
									end: 0x1d,
									idleFrameCount: 0x4,
									textureName: "enemies",
									frameNames: ["Bat4_0.png"],
								},
							],
							[_0x3b89df["BAT5"]]: [
								{
									level: 0x1,
									maxHp: 0x5,
									speed: 0x8c,
									power: 0xa,
									skills: [_0x44ffbb["HPxLevel"]],
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x2,
									killedAmount: 0x0,
									xp: 0x1e,
									end: 0x1d,
									idleFrameCount: 0x4,
									textureName: "enemies",
									frameNames: ["Bat5_0.png"],
								},
							],
							[_0x3b89df["BATSWARM"]]: [
								{
									level: 0x1,
									maxHp: 0.1,
									speed: 0x2bc,
									power: 0x1,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x2,
									xp: 0x1,
									idleFrameCount: 0x4,
									skills: [_0x44ffbb["FixedDirection"]],
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x10,
									frameNames: ["Bat1_0.png", "Bat2_0.png", "Bat3_0.png"],
								},
							],
							[_0x3b89df["SKELETON"]]: [
								{
									level: 0x1,
									maxHp: 1.5,
									speed: 0x64,
									power: 0xa,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x5,
									killedAmount: 0x0,
									xp: 0x2,
									end: 0x12,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: [
										"Skeleton1_0.png",
										"Skeleton2_0.png",
										"Skeleton3_0.png",
										"Skeleton4_0.png",
										"Skeleton5_0.png",
										"Skeleton6_0.png",
									],
								},
							],
							[_0x3b89df["JELLYFISH"]]: [
								{
									level: 0x1,
									maxHp: 0x5,
									speed: 0x14,
									power: 0x1,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x2,
									killedAmount: 0x0,
									xp: 0x2,
									end: 0x1d,
									textureName: "enemies",
									frameNames: ["Jellyfish_0.png"],
								},
							],
							[_0x3b89df["FLOWER"]]: [
								{
									level: 0x1,
									maxHp: 0x3,
									speed: 0x14,
									power: 0x1,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x2,
									killedAmount: 0x0,
									skills: [_0x44ffbb["HPxLevel"]],
									xp: 0x2,
									end: 0x1d,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["Flower1_0.png", "Flower2_0.png"],
								},
							],
							[_0x3b89df["ZOMBIE"]]: [
								{
									level: 0x1,
									maxHp: 0x1,
									speed: 0x64,
									power: 0xa,
									knockback: 0.8,
									maxKnockback: 0x3,
									deathKB: 0x4,
									killedAmount: 0x0,
									xp: 0x1,
									end: 0x14,
									idleFrameCount: 0x4,
									textureName: "enemies",
									frameNames: ["Ghoul1_0.png", "Ghoul2_0.png", "Ghoul3_0.png"],
								},
							],
							[_0x3b89df["MUDMAN1"]]: [
								{
									level: 0x1,
									maxHp: 0x7,
									speed: 0x64,
									power: 0xa,
									knockback: 0.3,
									maxKnockback: 0x3,
									deathKB: 0x2,
									killedAmount: 0x0,
									xp: 2.5,
									end: 0x1d,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["Mudman1_0.png"],
								},
							],
							[_0x3b89df["MUDMAN2"]]: [
								{
									level: 0x1,
									maxHp: 0xf,
									speed: 0x64,
									power: 0xa,
									knockback: 0.3,
									maxKnockback: 0x3,
									deathKB: 0x2,
									killedAmount: 0x0,
									xp: 2.5,
									end: 0x1d,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["Mudman2_0.png"],
								},
							],
							[_0x3b89df["WEREWOLF"]]: [
								{
									level: 0x1,
									maxHp: 0x12,
									speed: 0x82,
									power: 0xe,
									knockback: 0.8,
									maxKnockback: 0x3,
									deathKB: 0x7,
									killedAmount: 0x0,
									xp: 0x2,
									end: 0x15,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["Werewolf1_0.png"],
								},
							],
							[_0x3b89df["GHOST"]]: [
								{
									level: 0x1,
									maxHp: 0x1,
									speed: 0xc8,
									power: 0x5,
									knockback: 0x0,
									maxKnockback: 0x3,
									deathKB: 0x0,
									killedAmount: 0x0,
									xp: 1.5,
									end: 0xb,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["Ghost_0.png"],
									alpha: 0.5,
								},
							],
							[_0x3b89df["GHOSTSWARM"]]: [
								{
									level: 0x1,
									maxHp: 0x1,
									speed: 0x2bc,
									power: 0x5,
									knockback: 0x0,
									maxKnockback: 0x3,
									deathKB: 0x0,
									killedAmount: 0x0,
									xp: 1.5,
									end: 0xb,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["Ghost_0.png"],
									skills: [_0x44ffbb["FixedDirection"]],
									alpha: 0.5,
								},
							],
							[_0x3b89df["ARMOR"]]: [
								{
									level: 0x1,
									maxHp: 0x4,
									speed: 0x50,
									power: 0xa,
									knockback: 0.5,
									maxKnockback: 0x3,
									deathKB: 0x5,
									killedAmount: 0x0,
									xp: 0x3,
									end: 0x1d,
									textureName: "enemies",
									frameNames: [
										"Armor1_0.png",
										"Armor2_0.png",
										"Armor3_0.png",
										"Armor4_0.png",
										"Armor5_0.png",
									],
								},
							],
							[_0x3b89df["MUD"]]: [
								{
									level: 0x1,
									maxHp: 0.5,
									speed: 0x8c,
									power: 0x5,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x1,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Mud_0.png"],
								},
							],
							[_0x3b89df["BUER"]]: [
								{
									level: 0x1,
									maxHp: 0.3,
									speed: 0xc8,
									power: 0x3,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x2,
									skills: [_0x44ffbb["HPxLevel"]],
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Buer_0.png"],
								},
							],
							[_0x3b89df["SHADEBLUE"]]: [
								{
									level: 0x1,
									maxHp: 1.5,
									speed: 0x12c,
									power: 0x3,
									skills: [_0x44ffbb["SelfDestruct"]],
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x2,
									moreX: 0x14,
									moreY: 0x3c,
									alpha: 0.75,
									passThroughWalls: !0x0,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0xb,
									frameNames: ["ShadeBlue_0.png"],
								},
							],
							[_0x3b89df["SHADERED"]]: [
								{
									level: 0x1,
									maxHp: 1.1,
									speed: 0x14a,
									power: 0x3,
									skills: [_0x44ffbb["SelfDestruct"], _0x44ffbb["HPxLevel"]],
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x2,
									moreX: 0x32,
									moreY: 0x3c,
									alpha: 0.75,
									idleFrameCount: 0x3,
									passThroughWalls: !0x0,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0xc,
									frameNames: ["ShadeRed_0.png"],
								},
							],
							[_0x3b89df["BOSS_COUNT1"]]: [
								{
									level: 0x1e,
									maxHp: 0x19,
									speed: 0xd2,
									power: 0x1e,
									skills: [_0x44ffbb["HPxLevel"]],
									res_Freeze: 1.1,
									res_Rosary: 0x1,
									res_Debuffs: 0x1,
									knockback: 0x0,
									maxKnockback: 0x1,
									deathKB: 0x1,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x32,
									passThroughWalls: !0x0,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x16,
									frameNames: ["XLCount1_0.png"],
									colliderOverride: {
										radius: 0.3,
										offsetY: 0x10,
									},
								},
							],
							[_0x3b89df["BOSS_COUNT2"]]: [
								{
									level: 0x1e,
									maxHp: 0x14,
									speed: 0xa0,
									power: 0x1e,
									skills: [_0x44ffbb["HPxLevel"]],
									res_Freeze: 0x1,
									knockback: 0x0,
									maxKnockback: 0x1,
									deathKB: 0x1,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x32,
									idleFrameCount: 0x6,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1b,
									frameNames: ["XLCount2_0.png"],
								},
							],
							[_0x3b89df["SKULL2"]]: [
								{
									level: 0x1,
									maxHp: 0.65,
									speed: 0x8c,
									power: 0x14,
									skills: [_0x44ffbb["HPxLevel"]],
									knockback: 0x0,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x2,
									alpha: 0.75,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x8,
									frameNames: ["Skull2_0.png"],
								},
							],
							[_0x3b89df["SKULL2_SWARM"]]: [
								{
									level: 0x1,
									maxHp: 2.5,
									speed: 0x2bc,
									power: 0x3,
									knockback: 0x0,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x2,
									alpha: 0.75,
									skills: [_0x44ffbb["FixedDirection"]],
									passThroughWalls: !0x0,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x8,
									frameNames: ["Skull2_0.png"],
								},
							],
							[_0x3b89df["MUMMY"]]: [
								{
									level: 0x1,
									maxHp: 1.5,
									speed: 0x8c,
									power: 0x3,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x2,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Mummy_0.png"],
								},
							],
							[_0x3b89df["MEDUSA1"]]: [
								{
									level: 0x1,
									maxHp: 0.1,
									speed: 0xf0,
									maxSpeed: 0x154,
									power: 0x1,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x1,
									passThroughWalls: !0x0,
									idleFrameCount: 0x4,
									skills: [_0x44ffbb["Medusa"], _0x44ffbb["FixedDirection"]],
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Medusa1_0.png"],
								},
							],
							[_0x3b89df["MEDUSA1_FAST"]]: [
								{
									level: 0x1,
									maxHp: 0.1,
									speed: 0x258,
									maxSpeed: 0x2bc,
									power: 0x1,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x1,
									passThroughWalls: !0x0,
									idleFrameCount: 0x4,
									skills: [_0x44ffbb["Medusa"], _0x44ffbb["FixedDirection"]],
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Medusa1_0.png"],
								},
							],
							[_0x3b89df["MEDUSA2"]]: [
								{
									level: 0x1,
									maxHp: 2.5,
									speed: 0xf0,
									maxSpeed: 0x154,
									power: 0x1,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x2,
									idleFrameCount: 0x4,
									skills: [_0x44ffbb["Medusa"], _0x44ffbb["FixedDirection"]],
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Medusa2_0.png"],
								},
							],
							[_0x3b89df["MEDUSA2_AGGRO"]]: [
								{
									level: 0x1,
									maxHp: 2.5,
									speed: 0xf0,
									maxSpeed: 0x154,
									power: 0x1,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x2,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Medusa2_0.png"],
								},
							],
							[_0x3b89df["MEDUSA2_FAST"]]: [
								{
									level: 0x1,
									maxHp: 2.5,
									speed: 0x258,
									maxSpeed: 0x2bc,
									power: 0x1,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x2,
									passThroughWalls: !0x0,
									idleFrameCount: 0x4,
									skills: [_0x44ffbb["Medusa"], _0x44ffbb["FixedDirection"]],
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Medusa2_0.png"],
								},
							],
							[_0x3b89df["ECTO1"]]: [
								{
									level: 0x1,
									maxHp: 0.1,
									speed: 0xa0,
									maxSpeed: 0xc8,
									power: 0x2,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x1,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Ecto1_0.png"],
								},
							],
							[_0x3b89df["ECTO2"]]: [
								{
									level: 0x1,
									maxHp: 1.3,
									speed: 0xa0,
									maxSpeed: 0xc8,
									power: 0x4,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x1,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Ecto2_0.png"],
								},
							],
							[_0x3b89df["DULL1"]]: [
								{
									level: 0x1,
									maxHp: 0x7,
									speed: 0x64,
									power: 0x8,
									knockback: 0.3,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x2,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Dullahan1_0.png"],
								},
							],
							[_0x3b89df["DULL2"]]: [
								{
									level: 0x1,
									maxHp: 0xf,
									speed: 0x64,
									power: 0x8,
									knockback: 0.2,
									maxKnockback: 0x3,
									deathKB: 0x2,
									xp: 0x2,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Dullahan2_0.png"],
								},
							],
							[_0x3b89df["WITCH1"]]: [
								{
									level: 0x1,
									maxHp: 0x16,
									speed: 0x82,
									power: 0xe,
									knockback: 0.8,
									maxKnockback: 0x3,
									deathKB: 0x0,
									xp: 0x3,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Witch1_0.png"],
								},
							],
							[_0x3b89df["WITCH2"]]: [
								{
									level: 0xa,
									maxHp: 0x32,
									speed: 0xc8,
									power: 0x14,
									knockback: 1.5,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x3,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Witch2_0.png"],
								},
							],
							[_0x3b89df["XLMEDUSA"]]: [
								{
									level: 0xa,
									maxHp: 0x50,
									speed: 0x96,
									power: 0xf,
									knockback: 0x1,
									maxKnockback: 0x3,
									deathKB: 0x1,
									xp: 0x3,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["XLMedusa_0.png"],
								},
							],
							[_0x3b89df["XLBAT"]]: [
								{
									level: 0xa,
									maxHp: 0x1b,
									speed: 0x8c,
									power: 0xa,
									knockback: 0.1,
									maxKnockback: 0x3,
									deathKB: 0x2,
									killedAmount: 0x0,
									xp: 2.5,
									end: 0x11,
									idleFrameCount: 0x4,
									textureName: "enemies",
									frameNames: ["XLBat_0.png"],
									colliderOverride: {
										radius: 0.3,
										offsetY: -0x8,
									},
								},
							],
							[_0x3b89df["XLMANTIS"]]: [
								{
									level: 0xa,
									maxHp: 0x32,
									speed: 0x50,
									power: 0x14,
									knockback: 0x0,
									maxKnockback: 0x3,
									deathKB: 0x0,
									killedAmount: 0x0,
									xp: 0x3,
									end: 0x1d,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["XLMantis_0.png"],
								},
							],
							[_0x3b89df["XLMUMMY"]]: [
								{
									level: 0xa,
									maxHp: 0x32,
									speed: 0x50,
									power: 0x14,
									knockback: 0x0,
									maxKnockback: 0x3,
									deathKB: 0x0,
									killedAmount: 0x0,
									xp: 0x3,
									end: 0x1d,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["XLMummy_0.png"],
								},
							],
							[_0x3b89df["XLFLOWER"]]: [
								{
									level: 0xa,
									maxHp: 0x32,
									speed: 0x50,
									power: 0x14,
									knockback: 0x0,
									maxKnockback: 0x3,
									deathKB: 0x0,
									killedAmount: 0x0,
									xp: 0x3,
									end: 0x1d,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["XLFlower1_0.png"],
								},
							],
							[_0x3b89df["BOSS_WEREWOLF"]]: [
								{
									level: 0x1,
									maxHp: 0x14,
									speed: 0x82,
									power: 0x14,
									skills: [_0x44ffbb["HPxLevel"]],
									knockback: 0.1,
									maxKnockback: 0x1,
									deathKB: 0x7,
									killedAmount: 0x0,
									xp: 0x2,
									end: 0x15,
									scale: 1.5,
									textureName: "enemies",
									frameNames: ["Werewolf1_0.png"],
								},
							],
							[_0x3b89df["BOSS_XLMUMMY"]]: [
								{
									level: 0xf,
									maxHp: 0x19,
									speed: 0x50,
									power: 0x14,
									skills: [_0x44ffbb["HPxLevel"]],
									res_Freeze: 1.1,
									knockback: 0x0,
									maxKnockback: 0x1,
									deathKB: 0x5,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x19,
									end: 0x1d,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["XLMummy_0.png"],
								},
							],
							[_0x3b89df["BOSS_XLBAT"]]: [
								{
									level: 0xf,
									maxHp: 0x32,
									speed: 0x8c,
									power: 0x14,
									skills: [_0x44ffbb["HPxLevel"]],
									res_Freeze: 0x1,
									knockback: 0x0,
									maxKnockback: 0x1,
									deathKB: 0x5,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x19,
									end: 0x17,
									textureName: "enemies",
									frameNames: ["XLBat_0.png"],
								},
							],
							[_0x3b89df["test"]]: [
								{
									level: 0xf,
									maxHp: 0x32,
									speed: 0x8c,
									power: 0x14,
									skills: [_0x44ffbb["HPxLevel"]],
									res_Freeze: 0x1,
									knockback: 0x0,
									maxKnockback: 0x1,
									deathKB: 0x5,
									killedAmount: 0x0,
									scale: 0x1,
									xp: 0x1,
									end: 0x17,
									textureName: "enemies",
									frameNames: ["test_i01.png"],
								},
							],
							[_0x3b89df["BOSS_XLMANTIS"]]: [
								{
									level: 0xf,
									maxHp: 0xf,
									speed: 0xa0,
									power: 0x14,
									skills: [_0x44ffbb["HPxLevel"]],
									res_Freeze: 1.1,
									knockback: 0x0,
									maxKnockback: 0x1,
									deathKB: 0x5,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x32,
									end: 0x17,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["XLMantis_0.png"],
								},
							],
							[_0x3b89df["BOSS_XLFLOWER"]]: [
								{
									level: 0x1e,
									maxHp: 0xf,
									speed: 0xa0,
									power: 0x1e,
									skills: [_0x44ffbb["HPxLevel"]],
									res_Freeze: 1.1,
									knockback: 0x0,
									maxKnockback: 0x1,
									deathKB: 0x1,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x32,
									end: 0x1d,
									textureName: "enemies",
									idleFrameCount: 0x4,
									frameNames: ["XLFlower1_0.png"],
								},
							],
							[_0x3b89df["BOSS_XLDEATH"]]: [
								{
									level: 0x64,
									maxHp: 0xffff,
									speed: 0x4b0,
									power: 0xffff,
									skills: [_0x44ffbb["HPxLevel"], _0x44ffbb["_0x2fe496"], _0x44ffbb["_0x2fe499"]],
									res_Freeze: 0x1,
									res_Rosary: 0x1,
									res_Knockback: 0x1,
									res_Debuffs: 0x1,
									knockback: -0.5,
									maxKnockback: 0x0,
									deathKB: 0x0,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x0,
									end: 0x1d,
									idleFrameCount: 0x8,
									textureName: "enemies",
									frameNames: ["XLReaper_0.png"],
								},
							],
							[_0x3b89df["BOSS_XLDEATH"]]: [
								{
									level: 0x64,
									maxHp: 0xffff,
									speed: 0x4b0,
									power: 0xffff,
									skills: [_0x44ffbb["HPxLevel"], _0x44ffbb["_0x2fe496"], _0x44ffbb["_0x2fe498"]],
									res_Freeze: 0x1,
									res_Rosary: 0x1,
									res_Knockback: 0x1,
									res_Debuffs: 0x1,
									knockback: -0.5,
									maxKnockback: 0x0,
									deathKB: 0x0,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x0,
									end: 0x1d,
									idleFrameCount: 0x8,
									textureName: "enemies",
									frameNames: ["XLReaper_0.png"],
								},
							],
							[_0x3b89df["BOSS_XLDETH"]]: [
								{
									level: 0x64,
									maxHp: 0xffff,
									speed: 0x4b0,
									power: 0xffff,
									skills: [_0x44ffbb["HPxLevel"], _0x44ffbb["_0x2fe496"], _0x44ffbb["_0x2fe497"]],
									res_Freeze: 0x1,
									res_Rosary: 0x1,
									res_Knockback: 0x1,
									res_Debuffs: 0x1,
									knockback: -0.5,
									maxKnockback: 0x0,
									deathKB: 0x0,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x0,
									end: 0x1d,
									idleFrameCount: 0x8,
									textureName: "enemies",
									frameNames: ["XLReaper_0.png"],
								},
							],
							[_0x3b89df["BOSS_XLDETH"]]: [
								{
									level: 0x64,
									maxHp: 0xffff,
									speed: 0x4b0,
									power: 0xffff,
									skills: [_0x44ffbb["HPxLevel"], _0x44ffbb["_0x2fe496"], _0x44ffbb["_0x2fe496"]],
									res_Freeze: 0x1,
									res_Rosary: 0x1,
									res_Knockback: 0x1,
									res_Debuffs: 0x1,
									knockback: -0.5,
									maxKnockback: 0x0,
									deathKB: 0x0,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x0,
									end: 0x1d,
									idleFrameCount: 0x8,
									textureName: "enemies",
									frameNames: ["XLReaper_0.png"],
								},
							],
							[_0x3b89df["BOSS_ECTO"]]: [
								{
									level: 0x1,
									maxHp: 0x5,
									speed: 0xaa,
									power: 0xa,
									skills: [_0x44ffbb["HPxLevel"]],
									knockback: 0x1,
									maxKnockback: 0x1,
									deathKB: 0x2,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x1e,
									end: 0x1d,
									idleFrameCount: 0x4,
									textureName: "enemies",
									frameNames: ["Ecto2_0.png"],
								},
							],
							[_0x3b89df["BOSS_MUD"]]: [
								{
									level: 0x1,
									maxHp: 0x5,
									speed: 0xaa,
									power: 0xa,
									skills: [_0x44ffbb["HPxLevel"]],
									knockback: 0x1,
									maxKnockback: 0x1,
									deathKB: 0x2,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x1e,
									end: 0x1d,
									idleFrameCount: 0x4,
									textureName: "enemies",
									frameNames: ["Mud_0.png"],
								},
							],
							[_0x3b89df["BOSS_BUER"]]: [
								{
									level: 0x1,
									maxHp: 0x5,
									speed: 0xaa,
									power: 0xa,
									skills: [_0x44ffbb["HPxLevel"]],
									knockback: 0x1,
									maxKnockback: 0x1,
									deathKB: 0x2,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x1e,
									end: 0x1d,
									idleFrameCount: 0x4,
									textureName: "enemies",
									frameNames: ["Buer_0.png"],
								},
							],
							[_0x3b89df["BOSS_MEDUSA1"]]: [
								{
									level: 0x1,
									maxHp: 0x4,
									speed: 0xaa,
									power: 0xa,
									skills: [_0x44ffbb["HPxLevel"]],
									knockback: 0x1,
									maxKnockback: 0x1,
									deathKB: 0x2,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x1e,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Medusa1_0.png"],
								},
							],
							[_0x3b89df["BOSS_XLMEDUSA"]]: [
								{
									level: 0xf,
									maxHp: 0xf,
									speed: 0xa0,
									power: 0x14,
									skills: [_0x44ffbb["HPxLevel"]],
									res_Freeze: 1.1,
									knockback: 0.5,
									maxKnockback: 0x1,
									deathKB: 0x2,
									killedAmount: 0x0,
									scale: 1.5,
									xp: 0x1e,
									end: 0x1d,
									idleFrameCount: 0x4,
									textureName: "enemies",
									frameNames: ["XLMedusa_0.png"],
								},
							],
							[_0x3b89df["BOSS_WITCH2"]]: [
								{
									level: 0xa,
									maxHp: 0xf,
									speed: 0xc8,
									power: 0x1e,
									skills: [_0x44ffbb["HPxLevel"]],
									scale: 1.5,
									res_Freeze: 1.1,
									knockback: 0.6,
									maxKnockback: 0x1,
									deathKB: 0x1,
									xp: 0x3,
									idleFrameCount: 0x4,
									killedAmount: 0x0,
									textureName: "enemies",
									end: 0x1d,
									frameNames: ["Witch2_0.png"],
								},
							],
						};
					var _0x38aa87;
					!(function (_0xf48463) {
						var _0x43022a = _0x5d9431;
						(_0xf48463["CANDLE"] = "CANDLE"),
							(_0xf48463["CANDELABRA"] = "CANDELABRA"),
							(_0xf48463["BRAZIER"] = "BRAZIER"),
							(_0xf48463["BRAZIER2"] = "BRAZIER2");
					})(_0x38aa87 || (_0x38aa87 = {}));
					const _0x15e0c0 = _0x38aa87,
						_0x2abb02 = {
							[_0x15e0c0["BRAZIER"]]: {
								textureName: "items",
								frameName: "Brazier",
								destroyedAmount: 0x0,
								maxHp: 0x1,
								destructibleType: _0x15e0c0["BRAZIER"],
							},
							[_0x15e0c0["BRAZIER2"]]: {
								textureName: "items",
								frameName: "Brazier2",
								destroyedAmount: 0x0,
								maxHp: 0x1,
								destructibleType: _0x15e0c0["BRAZIER"],
							},
							[_0x15e0c0["CANDELABRA"]]: {
								textureName: "items",
								frameName: "Candelabrone",
								destroyedAmount: 0x0,
								maxHp: 0x1,
								destructibleType: _0x15e0c0["CANDELABRA"],
							},
							[_0x15e0c0["CANDLE"]]: {
								textureName: "items",
								frameName: "Candelabrone",
								destroyedAmount: 0x0,
								maxHp: 0x1,
								destructibleType: _0x15e0c0["CANDLE"],
							},
						};
					var _0x412bcb;
					!(function (_0x4637bc) {
						var _0x4da9a9 = _0x5d9431;
						(_0x4637bc["ReachLV5"] = "ReachLV5"),
							(_0x4637bc["ReachLV10"] = "ReachLV10"),
							(_0x4637bc["Have6DifferentWeapons"] = "Have6DifferentWeapons"),
							(_0x4637bc["GetFireWandToLevel4"] = "GetFireWandToLevel4"),
							(_0x4637bc["GetHolyBookToLevel4"] = "GetHolyBookToLevel4"),
							(_0x4637bc["GetHolyWaterToLevel4"] = "GetHolyWaterToLevel4"),
							(_0x4637bc["GetLightningRingToLevel4"] = "GetLightningRingToLevel4"),
							(_0x4637bc["GetMagicMissileToLevel7"] = "GetMagicMissileToLevel7"),
							(_0x4637bc["GetPeachoneToLevel7"] = "GetPeachoneToLevel7"),
							(_0x4637bc["GetRunetracerToLevel7"] = "GetRunetracerToLevel7"),
							(_0x4637bc["Survive1Minute"] = "Survive1Minute"),
							(_0x4637bc["Survive5MinutesWithDiamond"] = "Survive5MinutesWithDiamond"),
							(_0x4637bc["Survive10Minutes"] = "Survive10Minutes"),
							(_0x4637bc["Survive20Minutes"] = "Survive20Minutes"),
							(_0x4637bc["Destroy20Candles"] = "Destroy20Candles"),
							(_0x4637bc["Eat5PotRoast"] = "Eat5PotRoast"),
							(_0x4637bc["FindAClover"] = "FindAClover"),
							(_0x4637bc["FindAVacuum"] = "FindAVacuum"),
							(_0x4637bc["FindAnOrologion"] = "FindAnOrologion"),
							(_0x4637bc["FindARosary"] = "FindARosary"),
							(_0x4637bc["Defeat5000Enemies"] = "Defeat5000Enemies"),
							(_0x4637bc["Defeat3000Skeletons"] = "Defeat3000Skeletons"),
							(_0x4637bc["DefeatBossMadForest"] = "DefeatBossMadForest"),
							(_0x4637bc["ReachLV20InMadForest"] = "ReachLV20InMadForest"),
							(_0x4637bc["DefeatBossLibrary"] = "DefeatBossLibrary"),
							(_0x4637bc["Survive5MinutesWithKnife"] = "Survive5MinutesWithKnife"),
							(_0x4637bc["FindAStoneMask"] = "FindAStoneMask"),
							(_0x4637bc["GetGarlicToLevel7"] = "GetGarlicToLevel7"),
							(_0x4637bc["EvolveWhip"] = "EvolveWhip"),
							(_0x4637bc["EvolveMagicWand"] = "EvolveMagicWand"),
							(_0x4637bc["EvolveKnife"] = "EvolveKnife"),
							(_0x4637bc["EvolveAxe"] = "EvolveAxe"),
							(_0x4637bc["EvolveCross"] = "EvolveCross"),
							(_0x4637bc["EvolveKingBible"] = "EvolveKingBible"),
							(_0x4637bc["EvolveFireWand"] = "EvolveFireWand"),
							(_0x4637bc["EvolveGarlic"] = "EvolveGarlic"),
							(_0x4637bc["UniteBirds"] = "UniteBirds"),
							(_0x4637bc["Recover1000HP"] = "Recover1000HP"),
							(_0x4637bc["Earn5000CoinsInASingleRun"] = "Earn5000CoinsInASingleRun"),
							(_0x4637bc["Unlock2Hypers"] = "Unlock2Hypers"),
							(_0x4637bc["Survive20MinutesWithCross"] = "Survive20MinutesWithCross"),
							(_0x4637bc["Defeat100KEnemies"] = "Defeat100KEnemies"),
							(_0x4637bc["EvolveSantaWater"] = "EvolveSantaWater"),
							(_0x4637bc["EvolveLightning"] = "EvolveLightning"),
							(_0x4637bc["ReachLV100WithMortaccio"] = "ReachLV100WithMortaccio"),
							(_0x4637bc["Survive30MinutesInGreenAcres"] = "Survive30MinutesInGreenAcres"),
							(_0x4637bc["Survive30MinutesWithAxe"] = "Survive30MinutesWithAxe"),
							(_0x4637bc["Survive20MinutesWithCurse"] = "Survive20MinutesWithCurse"),
							(_0x4637bc["Defeat3000Buers"] = "Defeat3000Buers"),
							(_0x4637bc["ReachLV100WithCavallo"] = "ReachLV100WithCavallo");
					})(_0x412bcb || (_0x412bcb = {}));
					const _0x40d1e4 = _0x412bcb,
						_0x5b281e = {
							[_0x40d1e4["ReachLV5"]]: {
								description: "Reach Level 5.",
								weaponToUnlock: _0x5324b3["MOVESPEED"],
								achieved: !0x1,
							},
							[_0x40d1e4["ReachLV10"]]: {
								description: "Reach Level 10.",
								weaponToUnlock: _0x5324b3["GROWTH"],
								achieved: !0x1,
							},
							[_0x40d1e4["ReachLV20InMadForest"]]: {
								description: "Reach Level 20 in Mad Forest.",
								stageToUnlock: _0x2f4d79["LIBRARY"],
								achieved: !0x1,
							},
							[_0x40d1e4["ReachLV100WithMortaccio"]]: {
								description: "Reach Level 100 with Mortaccio.",
								powerUpToUnlock: _0x300df5["REROLL"],
								achieved: !0x1,
							},
							[_0x40d1e4["ReachLV100WithCavallo"]]: {
								description: "Reach Level 100 with Yatta Cavallo.",
								powerUpToUnlock: _0x300df5["REROLL"],
								achieved: !0x1,
							},
							[_0x40d1e4["Survive1Minute"]]: {
								description: "Survive 1 minute with any character.",
								weaponToUnlock: _0x5324b3["MAXHEALTH"],
								achieved: !0x1,
							},
							[_0x40d1e4["Survive5MinutesWithDiamond"]]: {
								description: "Survive 5 minutes with Pasqualina.",
								weaponToUnlock: _0x5324b3["DIAMOND"],
								achieved: !0x1,
							},
							[_0x40d1e4["Survive5MinutesWithKnife"]]: {
								description: "Survive 5 minutes with Gennaro.",
								weaponToUnlock: _0x5324b3["REGEN"],
								achieved: !0x1,
							},
							[_0x40d1e4["Survive10Minutes"]]: {
								description: "Survive 10 minutes with any character.",
								weaponToUnlock: _0x5324b3["SILF"],
								achieved: !0x1,
							},
							[_0x40d1e4["Survive20Minutes"]]: {
								description: "Survive 20 minutes with any character.",
								weaponToUnlock: _0x5324b3["PENTAGRAM"],
								achieved: !0x1,
							},
							[_0x40d1e4["Survive20MinutesWithCross"]]: {
								description: "Survive 20 minutes with Krochi.",
								weaponToUnlock: _0x5324b3["REVIVAL"],
								achieved: !0x1,
							},
							[_0x40d1e4["Survive20MinutesWithCurse"]]: {
								description: "Survive 20 minutes with at least +10% Curse.",
								characterToUnlock: _0x2485a8["LAMA"],
								achieved: !0x1,
							},
							[_0x40d1e4["Survive30MinutesWithAxe"]]: {
								description: "Survive 30 minutes with Lama.",
								weaponToUnlock: _0x5324b3["CURSE"],
								achieved: !0x1,
							},
							[_0x40d1e4["Survive30MinutesInGreenAcres"]]: {
								description: "Survive 30 minutes in Green Acres.",
								powerUpToUnlock: _0x300df5["SKIP"],
								achieved: !0x1,
							},
							[_0x40d1e4["GetFireWandToLevel4"]]: {
								description: "Get Fire Wand to Level 4.",
								characterToUnlock: _0x2485a8["ARCA"],
								achieved: !0x1,
							},
							[_0x40d1e4["GetHolyBookToLevel4"]]: {
								description: "Get King Bible to Level 4.",
								weaponToUnlock: _0x5324b3["SPEED"],
								achieved: !0x1,
							},
							[_0x40d1e4["GetHolyWaterToLevel4"]]: {
								description: "Get Santa Water to Level 4.",
								weaponToUnlock: _0x5324b3["AREA"],
								achieved: !0x1,
							},
							[_0x40d1e4["GetLightningRingToLevel4"]]: {
								description: "Get Lightning Ring to Level 4.",
								characterToUnlock: _0x2485a8["PORTA"],
								achieved: !0x1,
							},
							[_0x40d1e4["GetMagicMissileToLevel7"]]: {
								description: "Get Magic Wand to Level 7.",
								weaponToUnlock: _0x5324b3["AMOUNT"],
								achieved: !0x1,
							},
							[_0x40d1e4["GetPeachoneToLevel7"]]: {
								description: "Get Peachone to Level 7.",
								weaponToUnlock: _0x5324b3["SILF2"],
								achieved: !0x1,
							},
							[_0x40d1e4["GetRunetracerToLevel7"]]: {
								description: "Get Runetracer to Level 7.",
								weaponToUnlock: _0x5324b3["DURATION"],
								achieved: !0x1,
							},
							[_0x40d1e4["GetGarlicToLevel7"]]: {
								description: "Get Garlic to Level 7.",
								characterToUnlock: _0x2485a8["PAESANO"],
								achieved: !0x1,
							},
							[_0x40d1e4["Have6DifferentWeapons"]]: {
								description: "Hold 6 different weapons at once.",
								weaponToUnlock: _0x5324b3["COOLDOWN"],
								achieved: !0x1,
							},
							[_0x40d1e4["Recover1000HP"]]: {
								description: "Recover a total of 1000 HP.",
								characterToUnlock: _0x2485a8["GERMANA"],
								achieved: !0x1,
							},
							[_0x40d1e4["Earn5000CoinsInASingleRun"]]: {
								description: "Earn 5000 coins in a single run.",
								characterToUnlock: _0x2485a8["DOMMARIO"],
								achieved: !0x1,
							},
							[_0x40d1e4["Destroy20Candles"]]: {
								description: "Destroy 20 light sources.",
								weaponToUnlock: _0x5324b3["FIREBALL"],
								achieved: !0x1,
							},
							[_0x40d1e4["Eat5PotRoast"]]: {
								description: "Find 5 Floor Chickens.",
								weaponToUnlock: _0x5324b3["GARLIC"],
								achieved: !0x1,
							},
							[_0x40d1e4["FindAClover"]]: {
								description: "Find a Little Clover.",
								weaponToUnlock: _0x5324b3["LUCK"],
								achieved: !0x1,
							},
							[_0x40d1e4["FindAVacuum"]]: {
								description: "Find a Vacuum.",
								weaponToUnlock: _0x5324b3["MAGNET"],
								achieved: !0x1,
							},
							[_0x40d1e4["FindAnOrologion"]]: {
								description: "Find an Orologion.",
								weaponToUnlock: _0x5324b3["LANCET"],
								achieved: !0x1,
							},
							[_0x40d1e4["FindARosary"]]: {
								description: "Find a Rosary.",
								weaponToUnlock: _0x5324b3["CROSS"],
								achieved: !0x1,
							},
							[_0x40d1e4["FindAStoneMask"]]: {
								description: "Find a Stone Mask.",
								weaponToUnlock: _0x5324b3["GREED"],
								achieved: !0x1,
							},
							[_0x40d1e4["Defeat3000Skeletons"]]: {
								description: "Defeat a total of 3000 skeletons.",
								weaponToUnlock: _0x5324b3["BONE"],
								characterToUnlock: _0x2485a8["MORTACCIO"],
								achieved: !0x1,
							},
							[_0x40d1e4["Defeat3000Buers"]]: {
								description: "Defeat a total of 3000 Lion Heads.",
								weaponToUnlock: _0x5324b3["CHERRY"],
								characterToUnlock: _0x2485a8["CAVALLO"],
								achieved: !0x1,
							},
							[_0x40d1e4["Defeat5000Enemies"]]: {
								description: "Defeat a total of 5000 enemies.",
								weaponToUnlock: _0x5324b3["LIGHTNING"],
								achieved: !0x1,
							},
							[_0x40d1e4["Defeat100KEnemies"]]: {
								description: "Defeat a total of 100000 enemies.",
								characterToUnlock: _0x2485a8["CROCI"],
								achieved: !0x1,
							},
							[_0x40d1e4["DefeatBossMadForest"]]: {
								description: "Defeat the giant Blue Venus in the Mad Forest.",
								hyperToUnlock: _0x2f4d79["FOREST"],
								achieved: !0x1,
							},
							[_0x40d1e4["DefeatBossLibrary"]]: {
								description: "Defeat the Nesuferit in the Inlaid Library.",
								hyperToUnlock: _0x2f4d79["LIBRARY"],
								achieved: !0x1,
							},
							[_0x40d1e4["Unlock2Hypers"]]: {
								description: "Unlock Hyper mode for 2 stages.",
								stageToUnlock: _0x2f4d79["GREENACRES"],
								hyperToUnlock: _0x2f4d79["GREENACRES"],
								achieved: !0x1,
							},
							[_0x40d1e4["EvolveWhip"]]: {
								description: "Evolve the Whip.",
								goldPrize: 0x1f4,
								weaponIcon: _0x5324b3["VAMPIRICA"],
								achieved: !0x1,
							},
							[_0x40d1e4["EvolveMagicWand"]]: {
								description: "Evolve the Magic Wand.",
								goldPrize: 0x1f4,
								weaponIcon: _0x5324b3["HOLY_MISSILE"],
								achieved: !0x1,
							},
							[_0x40d1e4["EvolveKnife"]]: {
								description: "Evolve the Knife.",
								goldPrize: 0x1f4,
								weaponIcon: _0x5324b3["THOUSAND"],
								achieved: !0x1,
							},
							[_0x40d1e4["EvolveAxe"]]: {
								description: "Evolve the Axe.",
								goldPrize: 0x1f4,
								weaponIcon: _0x5324b3["SCYTHE"],
								achieved: !0x1,
							},
							[_0x40d1e4["EvolveSantaWater"]]: {
								description: "Evolve the Santa Water.",
								goldPrize: 0x1f4,
								weaponIcon: _0x5324b3["BORA"],
								achieved: !0x1,
							},
							[_0x40d1e4["EvolveLightning"]]: {
								description: "Evolve the Lightning Ring.",
								goldPrize: 0x1f4,
								weaponIcon: _0x5324b3["LOOP"],
								achieved: !0x1,
							},
							[_0x40d1e4["EvolveKingBible"]]: {
								description: "Evolve the King Bible.",
								goldPrize: 0x1f4,
								weaponIcon: _0x5324b3["VESPERS"],
								achieved: !0x1,
							},
							[_0x40d1e4["EvolveCross"]]: {
								description: "Evolve the Cross.",
								goldPrize: 0x1f4,
								weaponIcon: _0x5324b3["HEAVENSWORD"],
								achieved: !0x1,
							},
							[_0x40d1e4["EvolveFireWand"]]: {
								description: "Evolve the Fire Wand.",
								goldPrize: 0x1f4,
								weaponIcon: _0x5324b3["HELLFIRE"],
								achieved: !0x1,
							},
							[_0x40d1e4["EvolveGarlic"]]: {
								description: "Evolve the Garlic.",
								goldPrize: 0x1f4,
								weaponIcon: _0x5324b3["VORTEX"],
								achieved: !0x1,
							},
							[_0x40d1e4["UniteBirds"]]: {
								description: "Unite Ebony Wings and Peachone.",
								goldPrize: 0x1f4,
								weaponIcon: _0x5324b3["SILF3"],
								achieved: !0x1,
							},
						};
					var _0x3ef14d;
					!(function (_0x188c90) {
						var _0x156fc1 = _0x5d9431;
						(_0x188c90["POWERUP"] = "POWERUP"),
							(_0x188c90["EXISTING_WEAPON"] = "EXISTING_WEAPON"),
							(_0x188c90["EXISTING_ANY"] = "EXISTING_ANY"),
							(_0x188c90["FILLER"] = "FILLER"),
							(_0x188c90["RANDOM"] = "RANDOM"),
							(_0x188c90["FIXED"] = "FIXED"),
							(_0x188c90["EVOLUTION"] = "EVOLUTION");
					})(_0x3ef14d || (_0x3ef14d = {}));
					const _0x49ae78 = _0x3ef14d;
					var _0x2035ac;
					!(function (_0x230132) {
						var _0x26031f = _0x5d9431;
						(_0x230132["STANDARD"] = "STANDARD"),
							(_0x230132["HORIZONTAL"] = "HORIZONTAL"),
							(_0x230132["VERTICAL"] = "VERTICAL"),
							(_0x230132["SCRIPTED"] = "SCRIPTED");
					})(_0x2035ac || (_0x2035ac = {}));
					const _0x193cca = _0x2035ac;
					var _0x79df02;
					!(function (_0x39059a) {
						var _0x3e0603 = _0x5d9431;
						(_0x39059a["FLOWER_WALL"] = "FLOWER_WALL"),
							(_0x39059a["JELLY_WALL"] = "JELLY_WALL"),
							(_0x39059a["BAT_SWARM"] = "BAT_SWARM"),
							(_0x39059a["GHOST_SWARM"] = "GHOST_SWARM"),
							(_0x39059a["ERASE_ENEMIES"] = "ERASE_ENEMIES"),
							(_0x39059a["MEDUSA_SWARM"] = "MEDUSA_SWARM"),
							(_0x39059a["MEDUSA_WALL"] = "MEDUSA_WALL"),
							(_0x39059a["SKULL_SWARM"] = "SKULL_SWARM"),
							(_0x39059a["SHADE_BOMB_RED"] = "SHADE_BOMB_RED");
					})(_0x79df02 || (_0x79df02 = {}));
					const _0x1f7fad = _0x79df02;
					var _0x51732d;
					!(function (_0xc59909) {
						var _0x15bc7a = _0x5d9431;
						(_0xc59909["BGM_Forest"] = "BGM_Forest"),
							(_0xc59909["BGM_Library"] = "BGM_Library"),
							(_0xc59909["BGM_Library_Legacy"] = "BGM_Library_Legacy"),
							(_0xc59909["BGM_GreenAcres"] = "BGM_GreenAcres");
					})(_0x51732d || (_0x51732d = {}));
					const _0x1e47fc = _0x51732d,
						_0x117b45 = {
							[_0x2f4d79["FOREST"]]: [
								{
									stageName: "Mad Forest",
									description:
										"The Castle is a lie, but there's still free roast chicken here, so it's all good.",
									uiTexture: "UI",
									uiFrame: "stage_forest.png",
									texture: "UI",
									frameName: "stage_forest_icon.png",
									unlocked: !0x0,
									BGM: _0x1e47fc["BGM_Forest"],
									tips: "",
									hyperTips: "50% Gold bonus",
									mods: {
										PlayerPxSpeed: 0x1,
										EnemySpeed: 0x1,
										ProjectileSpeed: 0x1,
										GoldMultiplier: 0x1,
										EnemyHealth: 0x1,
									},
									hyper: {
										unlocked: !0x1,
										PlayerPxSpeed: 1.75,
										EnemySpeed: 1.75,
										ProjectileSpeed: 1.25,
										GoldMultiplier: 1.5,
										EnemyHealth: 0x1,
										EnemyMinimumMul: 1.25,
										StartingSpawns: 0x14,
										BGM_rate: 1.25,
										BGM_detune: 0x64,
										BGM_ignoreModsForNewSoundtrack: !0x1,
										BGM_new_rate: 1.25,
										BGM_new_detune: 0x64,
									},
									tileset: {
										setKey: "ForestTexturePacked",
										setPath: "assets/tilesets/ForestTexturePacked.png",
										mapKey: "Forest",
										mapPath: "assets/tilesets/Forest.json",
										isTiling: !0x0,
									},
									startingSpawns: 0x5,
									minute: 0x0,
									destructibleType: _0x15e0c0["BRAZIER"],
									destructibleFreq: 0x3e8,
									destructibleChance: 0xa,
									destructibleChanceMax: 0x32,
									maxDestructibles: 0xa,
									BGTextureName: "bg_forest",
									dayNight: !0x0,
									tilemapTiledJSON: {
										name: "",
										path: "",
									},
									tilemapTiledIMG: {
										name: "",
										path: "",
									},
									tilemapPos: {
										x: 0x0,
										y: 0x0,
									},
									minimum: 0xa,
									frequency: 0x3e8,
									enemies: [_0x3b89df["BAT3"]],
								},
								{
									minute: 0x1,
									minimum: 0x1e,
									frequency: 0x3e8,
									enemies: [_0x3b89df["ZOMBIE"], _0x3b89df["BAT1"]],
									bosses: [_0x3b89df["BAT4"]],
									treasure: {
										chances: [0x0, 0x0, 0x1e],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
										fixedPrizes: [_0x5324b3["AMOUNT"]],
									},
								},
								{
									minute: 0x2,
									minimum: 0x32,
									frequency: 0x1f4,
									enemies: [_0x3b89df["BAT1"], _0x3b89df["BAT2"], _0x3b89df["BAT3"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0x1388,
											repeat: 0x2,
										},
									],
								},
								{
									minute: 0x3,
									minimum: 0x28,
									frequency: 0xfa,
									enemies: [_0x3b89df["SKELETON"]],
									bosses: [_0x3b89df["BAT4"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0x1388,
											repeat: 0x1,
											chance: 0xa,
										},
									],
									treasure: {
										chances: [0x0, 0x5, 0x28],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EXISTING_WEAPON"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x4,
									minimum: 0x1e,
									frequency: 0x1f4,
									enemies: [_0x3b89df["SKELETON"], _0x3b89df["GHOST"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0x1388,
											repeat: 0x1,
											chance: 0xa,
										},
									],
								},
								{
									minute: 0x5,
									minimum: 0xa,
									frequency: 0x3e8,
									enemies: [_0x3b89df["MUDMAN2"]],
									bosses: [_0x3b89df["XLMANTIS"]],
									events: [
										{
											eventType: _0x1f7fad["FLOWER_WALL"],
											chance: 0x0,
											duration: 0x7530,
										},
									],
									treasure: {
										chances: [0x1, 0x5, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EXISTING_WEAPON"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x6,
									minimum: 0x14,
									frequency: 0x1f4,
									enemies: [_0x3b89df["ZOMBIE"], _0x3b89df["MUDMAN2"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0x1388,
											repeat: 0x1,
											chance: 0xa,
										},
									],
								},
								{
									minute: 0x7,
									minimum: 0x50,
									frequency: 0x1f4,
									enemies: [_0x3b89df["BAT2"], _0x3b89df["BAT3"], _0x3b89df["MUDMAN1"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0x1388,
											chance: 0x50,
											repeat: 0x5,
										},
									],
									bosses: [_0x3b89df["BAT4"]],
									treasure: {
										chances: [0x3, 0xa, 0x32],
										level: 0x2,
										prizeTypes: [
											_0x49ae78["EXISTING_WEAPON"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x8,
									minimum: 0x64,
									frequency: 0x5dc,
									enemies: [_0x3b89df["ZOMBIE"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0x3a98,
											chance: 0x50,
											repeat: 0x2,
										},
									],
									bosses: [_0x3b89df["XLBAT"]],
								},
								{
									minute: 0x9,
									minimum: 0x1e,
									frequency: 0x1f4,
									enemies: [_0x3b89df["XLBAT"], _0x3b89df["ZOMBIE"]],
									bosses: [_0x3b89df["BAT5"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0x3a98,
											chance: 0x46,
											repeat: 0x2,
										},
									],
									treasure: {
										chances: [0x3, 0xa, 0x32],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EXISTING_WEAPON"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_WEAPON"],
											_0x49ae78["EXISTING_WEAPON"],
										],
									},
								},
								{
									minute: 0xa,
									minimum: 0xa,
									frequency: 0x1f4,
									enemies: [_0x3b89df["MUDMAN1"], _0x3b89df["MUDMAN2"]],
									bosses: [_0x3b89df["BOSS_XLMANTIS"]],
									events: [
										{
											eventType: _0x1f7fad["FLOWER_WALL"],
										},
									],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_WEAPON"],
											_0x49ae78["EXISTING_WEAPON"],
										],
									},
								},
								{
									minute: 0xb,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [_0x3b89df["SKELETON"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0x1388,
											repeat: 0x1,
											chance: 0xa,
										},
									],
								},
								{
									minute: 0xc,
									minimum: 0x14,
									frequency: 0xfa,
									enemies: [_0x3b89df["WEREWOLF"], _0x3b89df["GHOST"], _0x3b89df["SKELETON"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0x1388,
											repeat: 0x1,
											chance: 0xa,
										},
									],
									bosses: [_0x3b89df["BAT4"]],
									treasure: {
										chances: [0x1, 0x5, 0x32],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0xd,
									minimum: 0x96,
									frequency: 0x1f4,
									enemies: [_0x3b89df["WEREWOLF"], _0x3b89df["GHOST"], _0x3b89df["GHOST"]],
									events: [
										{
											eventType: _0x1f7fad["GHOST_SWARM"],
											delay: 0x4b0,
											chance: 0x46,
											repeat: 0x14,
										},
										{
											eventType: _0x1f7fad["GHOST_SWARM"],
											delay: 0x8fc,
											chance: 0x46,
											repeat: 0x14,
										},
									],
								},
								{
									minute: 0xe,
									minimum: 0x14,
									frequency: 0x64,
									enemies: [_0x3b89df["XLBAT"], _0x3b89df["WEREWOLF"]],
									bosses: [_0x3b89df["BAT5"]],
									treasure: {
										chances: [0x3, 0xa, 0x50],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0xf,
									minimum: 0x64,
									frequency: 0x64,
									enemies: [_0x3b89df["WEREWOLF"], _0x3b89df["XLBAT"], _0x3b89df["MUDMAN2"]],
									bosses: [_0x3b89df["BOSS_WEREWOLF"]],
									events: [
										{
											eventType: _0x1f7fad["FLOWER_WALL"],
											chance: 0x50,
										},
									],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x10,
									minimum: 0x64,
									frequency: 0x64,
									enemies: [_0x3b89df["XLMANTIS"], _0x3b89df["MUDMAN1"], _0x3b89df["MUDMAN2"]],
									bosses: [_0x3b89df["BAT4"]],
									treasure: {
										chances: [0x1, 0x5, 0x32],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x11,
									minimum: 0x14,
									frequency: 0x3e8,
									enemies: [_0x3b89df["XLMUMMY"]],
								},
								{
									minute: 0x12,
									minimum: 0x3c,
									frequency: 0x1f4,
									enemies: [_0x3b89df["XLMUMMY"], _0x3b89df["MUDMAN1"]],
									bosses: [_0x3b89df["BAT5"]],
									treasure: {
										chances: [0x3, 0xa, 0x50],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x13,
									minimum: 0x64,
									frequency: 0x1f4,
									enemies: [_0x3b89df["XLMUMMY"], _0x3b89df["MUDMAN1"]],
								},
								{
									minute: 0x14,
									minimum: 0x64,
									frequency: 0x64,
									enemies: [_0x3b89df["XLMUMMY"], _0x3b89df["MUDMAN2"], _0x3b89df["XLBAT"]],
									bosses: [_0x3b89df["BOSS_XLMUMMY"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0x4b0,
											chance: 0x46,
											repeat: 0x14,
										},
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0x8fc,
											chance: 0x46,
											repeat: 0x14,
										},
									],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x15,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [_0x3b89df["FLOWER"]],
									bosses: [_0x3b89df["XLFLOWER"]],
								},
								{
									minute: 0x16,
									minimum: 0xc8,
									frequency: 0x64,
									enemies: [_0x3b89df["FLOWER"], _0x3b89df["XLMUMMY"]],
									bosses: [_0x3b89df["BAT4"]],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x17,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [_0x3b89df["FLOWER"], _0x3b89df["XLMUMMY"]],
									bosses: [_0x3b89df["BAT5"]],
									treasure: {
										chances: [0x3, 0xa, 0x50],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x18,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [_0x3b89df["FLOWER"], _0x3b89df["XLMUMMY"]],
									bosses: [_0x3b89df["XLFLOWER"]],
								},
								{
									minute: 0x19,
									minimum: 0x64,
									frequency: 0x64,
									enemies: [_0x3b89df["XLFLOWER"]],
									bosses: [_0x3b89df["BOSS_XLFLOWER"]],
									events: [
										{
											eventType: _0x1f7fad["FLOWER_WALL"],
											delay: 0x2710,
											repeat: 0x5,
											duration: 0x2710,
										},
									],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x1a,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [_0x3b89df["XLFLOWER"], _0x3b89df["FLOWER"]],
								},
								{
									minute: 0x1b,
									minimum: 0x12c,
									frequency: 0x64,
									bosses: [_0x3b89df["BAT4"]],
									enemies: [_0x3b89df["XLMUMMY"], _0x3b89df["MUDMAN1"], _0x3b89df["MUDMAN2"]],
									events: [
										{
											eventType: _0x1f7fad["GHOST_SWARM"],
										},
										{
											eventType: _0x1f7fad["GHOST_SWARM"],
											delay: 0xbb8,
											repeat: 0x13,
										},
									],
									treasure: {
										chances: [0x3, 0xa, 0x50],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x1c,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [_0x3b89df["XLBAT"], _0x3b89df["BAT4"]],
								},
								{
									minute: 0x1d,
									minimum: 0x12c,
									frequency: 0x64,
									bosses: [_0x3b89df["BAT4"]],
									enemies: [_0x3b89df["BAT4"], _0x3b89df["BAT5"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
										},
										{
											eventType: _0x1f7fad["BAT_SWARM"],
											delay: 0xbb8,
											repeat: 0x13,
										},
									],
									treasure: {
										chances: [0x3, 0xa, 0x50],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x1e,
									minimum: 0x1,
									frequency: 0x2710,
									enemies: [],
									bosses: [_0x3b89df["BOSS_XLDEATH"]],
									events: [
										{
											eventType: _0x1f7fad["ERASE_ENEMIES"],
										},
									],
								},
							],
							[_0x2f4d79["SINKING"]]: [
								{
									stageName: "Old Sanctuary",
									description:
										"Let's check this sinking old sanctuary in Greece real quick, the legend says there's roast chicken in the walls.",
									uiTexture: "UI",
									uiFrame: "stage_sinking.png",
									unlocked: !0x1,
									hidden: !0x0,
									tips: "",
									hyperTips: "Gold multiplier: x1.5",
									hyper: {
										unlocked: !0x1,
										PlayerPxSpeed: 1.5,
										EnemySpeed: 1.6,
										ProjectileSpeed: 1.2,
										GoldMultiplier: 1.5,
										EnemyMinimumMul: 1.25,
										StartingSpawns: 0x14,
										BGM_rate: 1.15,
										BGM_detune: 0x64,
									},
									startingSpawns: 0x3,
									minute: 0x0,
									destructibleType: _0x15e0c0["BRAZIER"],
									destructibleFreq: 0x3e8,
									destructibleChance: 0xa,
									destructibleChanceMax: 0x32,
									maxDestructibles: 0xa,
									BGTextureName: "bg_forest",
									minimum: 0xa,
									frequency: 0x5dc,
									enemies: [_0x3b89df["BAT3"]],
								},
							],
							[_0x2f4d79["LIBRARY"]]: [
								{
									stageName: "Inlaid Library",
									description:
										"This quiet, long library is the ideal place where to rest, meditate, and forage for roast chicken. But what's a stone mask doing here?",
									uiTexture: "UI",
									uiFrame: "stage_library.png",
									frameName: "stage_library_icon.png",
									frameNameUnlock: "stage_library_unlock.png",
									unlocked: !0x1,
									hidden: !0x1,
									BGM: _0x1e47fc["BGM_Library"],
									legacyBGM: _0x1e47fc["BGM_Library_Legacy"],
									tips: "",
									hyperTips: "50% Gold bonus\n10% Luck bonus",
									mods: {
										PlayerPxSpeed: 1.25,
										EnemySpeed: 1.25,
										ProjectileSpeed: 0x1,
										GoldMultiplier: 0x1,
										EnemyHealth: 0x1,
									},
									hyper: {
										unlocked: !0x1,
										PlayerPxSpeed: 1.9,
										EnemySpeed: 1.9,
										ProjectileSpeed: 1.15,
										GoldMultiplier: 1.5,
										LuckBonus: 0.1,
										EnemyHealth: 0x1,
										EnemyMinimumMul: 1.25,
										StartingSpawns: 0x3c,
										BGM_rate: 1.25,
										BGM_detune: 0x64,
										BGM_ignoreModsForNewSoundtrack: !0x1,
										BGM_new_rate: 1.0625,
									},
									tileset: {
										setKey: "LibraryTexturePacked",
										setPath: "assets/tilesets/LibraryTexturePacked.png",
										mapKey: "Library",
										mapPath: "assets/tilesets/Library.json",
										isTiling: !0x0,
									},
									spawnType: _0x193cca["HORIZONTAL"],
									startingSpawns: 0x32,
									minute: 0x0,
									destructibleType: _0x15e0c0["CANDELABRA"],
									destructibleFreq: 0x3e8,
									destructibleChance: 7.5,
									destructibleChanceMax: 0x32,
									maxDestructibles: 0xa,
									BGTextureName: "bg_forest",
									minimum: 0x32,
									frequency: 0xbb8,
									enemies: [_0x3b89df["MUD"]],
									events: [
										{
											eventType: _0x1f7fad["SHADE_BOMB_RED"],
											delay: 0x64,
											moreX: 0x1,
										},
									],
								},
								{
									minute: 0x1,
									minimum: 0x50,
									frequency: 0xbb8,
									enemies: [_0x3b89df["MUD"]],
								},
								{
									minute: 0x2,
									minimum: 0x64,
									frequency: 0xfa0,
									enemies: [_0x3b89df["MUD"], _0x3b89df["ECTO1"]],
									events: [
										{
											eventType: _0x1f7fad["MEDUSA_WALL"],
											moreX: 0x6,
											moreY: _0x3b89df["MEDUSA1"],
										},
										{
											eventType: _0x1f7fad["MEDUSA_SWARM"],
											moreX: 0xc,
											moreY: _0x3b89df["MEDUSA1"],
											delay: 0x1388,
											chance: 0x46,
											repeat: 0x4,
										},
									],
								},
								{
									minute: 0x3,
									minimum: 0x3c,
									frequency: 0xfa0,
									enemies: [_0x3b89df["MUMMY"]],
									bosses: [_0x3b89df["XLMUMMY"]],
									treasure: {
										chances: [0.1, 0x5, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x4,
									minimum: 0x6e,
									frequency: 0xfa0,
									enemies: [_0x3b89df["MUD"], _0x3b89df["MUMMY"]],
								},
								{
									minute: 0x5,
									minimum: 0x64,
									frequency: 0xfa0,
									enemies: [_0x3b89df["MUMMY"]],
									bosses: [_0x3b89df["XLMUMMY"]],
									events: [
										{
											eventType: _0x1f7fad["MEDUSA_WALL"],
											moreX: 0xc,
											moreY: _0x3b89df["MEDUSA1_FAST"],
										},
										{
											eventType: _0x1f7fad["MEDUSA_SWARM"],
											moreX: 0xc,
											moreY: _0x3b89df["MEDUSA1"],
											delay: 0x1388,
											chance: 0x46,
											repeat: 0x5,
										},
									],
									treasure: {
										chances: [0x1, 0x5, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EXISTING_WEAPON"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x6,
									minimum: 0x1e,
									frequency: 0x7d0,
									enemies: [_0x3b89df["DULL1"], _0x3b89df["ECTO1"]],
									events: [
										{
											eventType: _0x1f7fad["SHADE_BOMB_RED"],
											delay: 0x2710,
											chance: 0x32,
											repeat: 0x4,
											moreX: 0x1,
										},
									],
								},
								{
									minute: 0x7,
									minimum: 0x50,
									frequency: 0x7d0,
									enemies: [_0x3b89df["DULL1"], _0x3b89df["ECTO1"], _0x3b89df["ECTO2"]],
									events: [
										{
											eventType: _0x1f7fad["SHADE_BOMB_RED"],
											delay: 0x1388,
											chance: 0x50,
											repeat: 0x8,
											moreX: 0x1,
										},
									],
								},
								{
									minute: 0x8,
									minimum: 0x50,
									frequency: 0x3e8,
									enemies: [_0x3b89df["ECTO2"], _0x3b89df["GHOST"]],
									bosses: [_0x3b89df["BOSS_ECTO"]],
									treasure: {
										chances: [0x3, 0xa, 0x32],
										level: 0x2,
										prizeTypes: [
											_0x49ae78["EXISTING_WEAPON"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x9,
									minimum: 0xc8,
									frequency: 0x1f4,
									enemies: [_0x3b89df["MUMMY"], _0x3b89df["GHOST"]],
									events: [
										{
											eventType: _0x1f7fad["SHADE_BOMB_RED"],
											delay: 0x4e20,
											chance: 0x32,
											repeat: 0x2,
											moreX: 0x2,
										},
									],
								},
								{
									minute: 0xa,
									minimum: 0x64,
									frequency: 0x1f4,
									enemies: [_0x3b89df["ECTO2"]],
									bosses: [_0x3b89df["BOSS_BUER"]],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_WEAPON"],
											_0x49ae78["EXISTING_WEAPON"],
										],
									},
									events: [
										{
											eventType: _0x1f7fad["SHADE_BOMB_RED"],
											moreX: 0x1,
										},
										{
											eventType: _0x1f7fad["SHADE_BOMB_RED"],
											delay: 0x2710,
											chance: 0x50,
											repeat: 0x3,
											moreX: 0x2,
										},
									],
								},
								{
									minute: 0xb,
									minimum: 0x78,
									frequency: 0x7d0,
									enemies: [_0x3b89df["MEDUSA2"], _0x3b89df["BUER"]],
								},
								{
									minute: 0xc,
									minimum: 0x50,
									frequency: 0x3e8,
									enemies: [_0x3b89df["MEDUSA2"], _0x3b89df["DULL1"]],
									events: [
										{
											eventType: _0x1f7fad["MEDUSA_SWARM"],
											moreX: 0xc,
											moreY: _0x3b89df["MEDUSA1_FAST"],
										},
										{
											eventType: _0x1f7fad["MEDUSA_WALL"],
											moreX: 0xc,
											moreY: _0x3b89df["MEDUSA1"],
											delay: 0x1388,
											chance: 0x46,
											repeat: 0x5,
										},
									],
									bosses: [_0x3b89df["BAT4"]],
									treasure: {
										chances: [0x1, 0x5, 0x32],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0xd,
									minimum: 0x78,
									frequency: 0x1f4,
									enemies: [_0x3b89df["MUMMY"], _0x3b89df["DULL1"]],
									bosses: [_0x3b89df["BOSS_MUD"]],
									treasure: {
										chances: [0x1, 0x5, 0x32],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0xe,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [_0x3b89df["MUMMY"], _0x3b89df["MEDUSA2"], _0x3b89df["ECTO2"]],
									bosses: [_0x3b89df["BAT5"]],
									treasure: {
										chances: [0x1, 0x5, 0x32],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0xf,
									minimum: 0x64,
									frequency: 0x64,
									enemies: [_0x3b89df["MEDUSA2_AGGRO"]],
									bosses: [_0x3b89df["BOSS_XLMEDUSA"]],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
									events: [
										{
											eventType: _0x1f7fad["MEDUSA_WALL"],
											moreX: 0xc,
											moreY: _0x3b89df["MEDUSA1_FAST"],
										},
										{
											eventType: _0x1f7fad["MEDUSA_WALL"],
											moreX: 0x6,
											moreY: _0x3b89df["MEDUSA2"],
											delay: 0x32c8,
										},
										{
											eventType: _0x1f7fad["MEDUSA_SWARM"],
											moreX: 0xc,
											moreY: _0x3b89df["MEDUSA1_FAST"],
											delay: 0x7d0,
											chance: 0x5a,
											repeat: 0x19,
										},
									],
								},
								{
									minute: 0x10,
									minimum: 0x64,
									frequency: 0x3e8,
									enemies: [_0x3b89df["WITCH1"], _0x3b89df["DULL1"], _0x3b89df["DULL2"]],
									bosses: [_0x3b89df["BAT4"]],
									treasure: {
										chances: [0x1, 0x5, 0x32],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x11,
									minimum: 0xc8,
									frequency: 0x3e8,
									enemies: [_0x3b89df["WITCH1"], _0x3b89df["ECTO2"], _0x3b89df["ECTO1"]],
									events: [
										{
											eventType: _0x1f7fad["SHADE_BOMB_RED"],
											delay: 0x1388,
											chance: 0x32,
											repeat: 0x4,
											moreX: 0x3,
										},
									],
								},
								{
									minute: 0x12,
									minimum: 0x3c,
									frequency: 0x1f4,
									enemies: [_0x3b89df["WITCH1"], _0x3b89df["BUER"]],
									bosses: [_0x3b89df["BOSS_WITCH2"]],
									treasure: {
										chances: [0x3, 0xa, 0x50],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x13,
									minimum: 0x78,
									frequency: 0x1f4,
									enemies: [_0x3b89df["WITCH1"], _0x3b89df["DULL2"]],
								},
								{
									minute: 0x14,
									minimum: 0x64,
									frequency: 0x64,
									enemies: [_0x3b89df["BUER"], _0x3b89df["DULL2"]],
									bosses: [_0x3b89df["BOSS_COUNT2"]],
									events: [
										{
											eventType: _0x1f7fad["SHADE_BOMB_RED"],
											delay: 0x7d0,
											chance: 0x32,
											repeat: 0x19,
											moreX: 0x2,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											moreX: 0x1,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0x1388,
											moreX: 0x2,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0x3a98,
											moreX: 0x4,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0x61a8,
											moreX: 0x8,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0x88b8,
											moreX: 0x10,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0xafc8,
											moreX: 0x20,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0xd6d8,
											moreX: 0x20,
										},
									],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x15,
									minimum: 0x64,
									frequency: 0x64,
									enemies: [_0x3b89df["BUER"]],
								},
								{
									minute: 0x16,
									minimum: 0x50,
									frequency: 0x3e8,
									enemies: [_0x3b89df["WITCH2"], _0x3b89df["BUER"]],
									events: [
										{
											eventType: _0x1f7fad["SHADE_BOMB_RED"],
											delay: 0x7d0,
											chance: 0x32,
											repeat: 0x19,
											moreX: 0x3,
										},
									],
									bosses: [_0x3b89df["BAT4"]],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x17,
									minimum: 0x78,
									frequency: 0x64,
									enemies: [_0x3b89df["DULL1"], _0x3b89df["DULL2"], _0x3b89df["WITCH2"]],
									bosses: [_0x3b89df["BOSS_BUER"]],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x18,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [_0x3b89df["WITCH2"]],
								},
								{
									minute: 0x19,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [_0x3b89df["SKULL2"], _0x3b89df["WITCH2"], _0x3b89df["XLBAT"]],
									bosses: [_0x3b89df["BOSS_COUNT1"]],
									events: [
										{
											eventType: _0x1f7fad["BAT_SWARM"],
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											moreX: 0x1,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0x1388,
											moreX: 0x2,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0x3a98,
											moreX: 0x4,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0x61a8,
											moreX: 0x8,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0x88b8,
											moreX: 0x10,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0xafc8,
											moreX: 0x20,
										},
										{
											eventType: _0x1f7fad["SKULL_SWARM"],
											delay: 0xd6d8,
											moreX: 0x20,
										},
									],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x1a,
									minimum: 0x64,
									frequency: 0x64,
									enemies: [_0x3b89df["XLMEDUSA"]],
									bosses: [_0x3b89df["BOSS_XLMEDUSA"]],
									treasure: {
										chances: [0x3, 0xa, 0x32],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x1b,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [_0x3b89df["MEDUSA2"], _0x3b89df["XLMEDUSA"]],
									bosses: [_0x3b89df["BOSS_XLMEDUSA"]],
									treasure: {
										chances: [0x3, 0xa, 0x32],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
									events: [
										{
											eventType: _0x1f7fad["MEDUSA_SWARM"],
											moreX: 0xc,
											moreY: _0x3b89df["MEDUSA2_FAST"],
										},
										{
											eventType: _0x1f7fad["MEDUSA_WALL"],
											moreX: 0xc,
											moreY: _0x3b89df["MEDUSA2_FAST"],
											delay: 0x7d0,
											chance: 0x5a,
											repeat: 0x19,
										},
									],
								},
								{
									minute: 0x1c,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [_0x3b89df["WITCH1"], _0x3b89df["BOSS_MEDUSA1"]],
									bosses: [_0x3b89df["BOSS_XLMEDUSA"]],
									treasure: {
										chances: [0x3, 0xa, 0x64],
										level: 0x1,
										prizeTypes: [
											_0x49ae78["EVOLUTION"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
											_0x49ae78["EXISTING_ANY"],
										],
									},
								},
								{
									minute: 0x1d,
									minimum: 0x12c,
									frequency: 0x64,
									enemies: [
										_0x3b89df["BOSS_MUD"],
										_0x3b89df["BOSS_ECTO"],
										_0x3b89df["BOSS_BUER"],
										_0x3b89df["BOSS_MEDUSA1"],
									],
									events: [
										{
											eventType: _0x1f7fad["SHADE_BOMB_RED"],
											delay: 0x3e8,
											chance: 0x3c,
											repeat: 0x32,
											moreX: 0x4,
										},
									],
								},
								{
									minute: 0x1e,
									minimum: 0x1,
									frequency: 0x2710,
									enemies: [],
									bosses: [_0x3b89df["BOSS_XLDEATH"]],
									events: [
										{
											eventType: _0x1f7fad["ERASE_ENEMIES"],
										},
									],
								},
							],
							[_0x2f4d79["GREENACRES"]]: [
								{
									stageName: "Green Acres",
									description: "A place not made for mortals. Fate changes every minute.",
									uiTexture: "UI",
									uiFrame: "stage_green.png",
									texture: "UI",
									frameName: "stage_green_unlock.png",
									unlocked: !0x1,
									hidden: !0x1,
									BGM: _0x1e47fc["BGM_GreenAcres"],
									legacyBGM: _0x1e47fc["BGM_GreenAcres"],
									tips: "Enemies health +50%",
									hyperTips: "50% Gold bonus\n10% Luck bonus",
									mods: {
										PlayerPxSpeed: 1.25,
										EnemySpeed: 1.25,
										ProjectileSpeed: 0x1,
										GoldMultiplier: 0x1,
										EnemyHealth: 1.5,
									},
									hyper: {
										unlocked: !0x1,
										PlayerPxSpeed: 1.9,
										EnemySpeed: 1.9,
										ProjectileSpeed: 1.15,
										GoldMultiplier: 1.5,
										EnemyHealth: 1.5,
										LuckBonus: 0.1,
										LuckBonus: 0.1,
										EnemyMinimumMul: 1.25,
										StartingSpawns: 0x3c,
										BGM_rate: 1.0625,
										BGM_detune: 0x0,
										BGM_ignoreModsForNewSoundtrack: !0x1,
										BGM_new_rate: 1.0625,
										BGM_new_detune: 0x0,
									},
									randomMinutes: !0x0,
									dayNight: !0x1,
									startingSpawns: 0x1e,
									minute: 0x0,
									destructibleType: _0x15e0c0["BRAZIER2"],
									destructibleFreq: 0x3e8,
									destructibleChance: 0xa,
									destructibleChanceMax: 0x32,
									maxDestructibles: 0xa,
									BGTextureName: "bg_forest",
									tilemapTiledJSON: {
										name: "",
										path: "",
									},
									tilemapTiledIMG: {
										name: "",
										path: "",
									},
									tilemapPos: {
										x: 0x0,
										y: 0x0,
									},
									minimum: 0x1,
									frequency: 0x3e8,
									enemies: [_0x3b89df["BAT3"]],
								},
								{
									minute: 0x1,
									minimum: 0x1,
									frequency: 0x2710,
									enemies: [],
									bosses: [],
									events: [],
								},
								{
									minute: 0x2,
									minimum: 0x1,
									frequency: 0x2710,
									enemies: [],
									bosses: [],
									events: [],
								},
								{
									minute: 0x3,
								},
								{
									minute: 0x4,
								},
								{
									minute: 0x5,
								},
								{
									minute: 0x6,
								},
								{
									minute: 0x7,
								},
								{
									minute: 0x8,
								},
								{
									minute: 0x9,
								},
								{
									minute: 0xa,
								},
								{
									minute: 0xb,
								},
								{
									minute: 0xc,
								},
								{
									minute: 0xd,
								},
								{
									minute: 0xe,
								},
								{
									minute: 0xf,
								},
								{
									minute: 0x10,
								},
								{
									minute: 0x11,
								},
								{
									minute: 0x12,
								},
								{
									minute: 0x13,
								},
								{
									minute: 0x14,
								},
								{
									minute: 0x15,
								},
								{
									minute: 0x16,
								},
								{
									minute: 0x17,
								},
								{
									minute: 0x18,
								},
								{
									minute: 0x19,
								},
								{
									minute: 0x1a,
								},
								{
									minute: 0x1b,
								},
								{
									minute: 0x1c,
								},
								{
									minute: 0x1d,
								},
								{
									minute: 0x1e,
									minimum: 0x1,
									frequency: 0x2710,
									enemies: [],
									bosses: [_0x3b89df["BOSS_XLDEATH"]],
									events: [
										{
											eventType: _0x1f7fad["ERASE_ENEMIES"],
										},
									],
								},
							],
						};
					class _0x39596a {
						static ["GetNewAchievementsEarnedOnThisRun"]() {
							var _0x2d3184 = _0x5d9431;
							(this["NewAchievements"] = new Array()), _0x2164b8["Core"]["Weapons"];
							var _0x32109f = 0x0;
							for (const _0x277ba2 in _0x3317fb) _0x32109f += _0x3317fb[_0x277ba2][0x0]["killedAmount"];
							_0x32109f >= 0x1388 && this["UnlockAchievement"](_0x40d1e4["Defeat5000Enemies"]),
								_0x32109f >= 0x186a0 && this["UnlockAchievement"](_0x40d1e4["Defeat100KEnemies"]),
								_0x3317fb[_0x3b89df["SKELETON"]][0x0]["killedAmount"] >= 0xbb8 &&
									this["UnlockAchievement"](_0x40d1e4["Defeat3000Skeletons"]),
								_0x3317fb[_0x3b89df["BUER"]][0x0]["killedAmount"] >= 0xbb8 &&
									this["UnlockAchievement"](_0x40d1e4["Defeat3000Buers"]),
								_0x3317fb[_0x3b89df["BOSS_XLFLOWER"]][0x0]["killedAmount"] >= 0x1 &&
									_0x2164b8["Core"]["PlayerOptions"]["SelectedStage"] === _0x2f4d79["FOREST"] &&
									this["UnlockAchievement"](_0x40d1e4["DefeatBossMadForest"]),
								_0x3317fb[_0x3b89df["BOSS_COUNT1"]][0x0]["killedAmount"] >= 0x1 &&
									_0x2164b8["Core"]["PlayerOptions"]["SelectedStage"] === _0x2f4d79["LIBRARY"] &&
									this["UnlockAchievement"](_0x40d1e4["DefeatBossLibrary"]);
							var _0x1b7b72 = 0x0;
							for (const _0x4e6b80 in _0x2abb02) _0x1b7b72 += _0x2abb02[_0x4e6b80]["destroyedAmount"];
							return (
								_0x1b7b72 >= 0x14 && this["UnlockAchievement"](_0x40d1e4["Destroy20Candles"]),
								_0x171870[_0x3bf2f1["ROAST"]]["pickedupAmount"] >= 0x5 &&
									this["UnlockAchievement"](_0x40d1e4["Eat5PotRoast"]),
								_0x171870[_0x3bf2f1["CLOVER"]]["pickedupAmount"] >= 0x1 &&
									this["UnlockAchievement"](_0x40d1e4["FindAClover"]),
								_0x171870[_0x3bf2f1["ROSARY"]]["pickedupAmount"] >= 0x1 &&
									this["UnlockAchievement"](_0x40d1e4["FindARosary"]),
								_0x171870[_0x3bf2f1["VACUUM"]]["pickedupAmount"] >= 0x1 &&
									this["UnlockAchievement"](_0x40d1e4["FindAVacuum"]),
								_0x171870[_0x3bf2f1["OROLOGION"]]["pickedupAmount"] >= 0x1 &&
									this["UnlockAchievement"](_0x40d1e4["FindAnOrologion"]),
								_0x41a274[_0x5324b3["GREED"]][0x0]["seen"] >= 0x1 &&
									this["UnlockAchievement"](_0x40d1e4["FindAStoneMask"]),
								Math["random"]() < _0x171870[_0x3bf2f1["CLOVER"]]["pickedupAmount"] / 0xffff &&
									((_0x11010a[_0x2485a8["EXDASH"]][0x0]["hidden"] = !0x1),
									(_0x11010a[_0x2485a8["EXDASH"]][0x0]["isBought"] = !0x0),
									-0x1 ==
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["indexOf"](
											_0x2485a8["EXDASH"]
										) &&
										(_0x2164b8["Core"]["PlayerOptions"]["BoughtCharacters"]["push"](
											_0x2485a8["EXDASH"]
										),
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
											_0x2485a8["EXDASH"]
										),
										_0x2164b8["Core"]["PlayerOptions"]["Save"](),
										console["log"]("JustUseTheCheat"))),
								_0x3317fb[_0x3b89df["BOSS_XLDEATH"]][0x0]["killedAmount"] > 0x0 &&
									_0x3317fb[_0x3b89df["BOSS_XLDEATH"]][0x0]["killedAmount"] >= 0x1 &&
									((_0x11010a[_0x2485a8["NOSTRO"]][0x0]["hidden"] = !0x1),
									-0x1 ==
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["indexOf"](
											_0x2485a8["NOSTRO"]
										) &&
										(_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
											_0x2485a8["NOSTRO"]
										),
										_0x2164b8["Core"]["PlayerOptions"]["Save"]())),
								(_0x2164b8["Core"]["Weapons"]["find"](
									(_0x5b6494) =>
										_0x5b6494["bulletType"] == _0x5324b3["FIREBALL"] && _0x5b6494["level"] >= 0x4
								) ||
									_0x2164b8["Core"]["Weapons"]["find"](
										(_0x1357a3) => _0x1357a3["bulletType"] == _0x5324b3["HELLFIRE"]
									)) &&
									this["UnlockAchievement"](_0x40d1e4["GetFireWandToLevel4"]),
								(_0x2164b8["Core"]["Weapons"]["find"](
									(_0x29a128) =>
										_0x29a128["bulletType"] == _0x5324b3["HOLYBOOK"] && _0x29a128["level"] >= 0x4
								) ||
									_0x2164b8["Core"]["Weapons"]["find"](
										(_0x5debbc) => _0x5debbc["bulletType"] == _0x5324b3["VESPERS"]
									)) &&
									this["UnlockAchievement"](_0x40d1e4["GetHolyBookToLevel4"]),
								(_0x2164b8["Core"]["Weapons"]["find"](
									(_0x1cfdee) =>
										_0x1cfdee["bulletType"] == _0x5324b3["HOLYWATER"] && _0x1cfdee["level"] >= 0x4
								) ||
									_0x2164b8["Core"]["Weapons"]["find"](
										(_0x247978) => _0x247978["bulletType"] == _0x5324b3["BORA"]
									)) &&
									this["UnlockAchievement"](_0x40d1e4["GetHolyWaterToLevel4"]),
								(_0x2164b8["Core"]["Weapons"]["find"](
									(_0x48fe1c) =>
										_0x48fe1c["bulletType"] == _0x5324b3["MAGIC_MISSILE"] &&
										_0x48fe1c["level"] >= 0x7
								) ||
									_0x2164b8["Core"]["Weapons"]["find"](
										(_0x502a44) => _0x502a44["bulletType"] == _0x5324b3["HOLY_MISSILE"]
									)) &&
									this["UnlockAchievement"](_0x40d1e4["GetMagicMissileToLevel7"]),
								(_0x2164b8["Core"]["Weapons"]["find"](
									(_0x119e93) =>
										_0x119e93["bulletType"] == _0x5324b3["LIGHTNING"] && _0x119e93["level"] >= 0x4
								) ||
									_0x2164b8["Core"]["Weapons"]["find"](
										(_0x396886) => _0x396886["bulletType"] == _0x5324b3["LOOP"]
									)) &&
									this["UnlockAchievement"](_0x40d1e4["GetLightningRingToLevel4"]),
								(_0x2164b8["Core"]["Weapons"]["find"](
									(_0x433246) =>
										_0x433246["bulletType"] == _0x5324b3["SILF"] && _0x433246["level"] >= 0x7
								) ||
									_0x2164b8["Core"]["Weapons"]["find"](
										(_0x19eca1) => _0x19eca1["bulletType"] == _0x5324b3["SILF3"]
									)) &&
									this["UnlockAchievement"](_0x40d1e4["GetPeachoneToLevel7"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x1efe83) =>
										_0x1efe83["bulletType"] == _0x5324b3["DIAMOND"] && _0x1efe83["level"] >= 0x7
								) && this["UnlockAchievement"](_0x40d1e4["GetRunetracerToLevel7"]),
								(_0x2164b8["Core"]["Weapons"]["find"](
									(_0x3d1401) =>
										_0x3d1401["bulletType"] == _0x5324b3["GARLIC"] && _0x3d1401["level"] >= 0x7
								) ||
									_0x2164b8["Core"]["Weapons"]["find"](
										(_0x563621) => _0x563621["bulletType"] == _0x5324b3["VORTEX"]
									)) &&
									this["UnlockAchievement"](_0x40d1e4["GetGarlicToLevel7"]),
								_0x2164b8["Core"]["Weapons"]["length"] >= 0x6 &&
									this["UnlockAchievement"](_0x40d1e4["Have6DifferentWeapons"]),
								_0x2164b8["Core"]["PlayerOptions"]["LifetimeHeal"] >= 0x3e8 &&
									this["UnlockAchievement"](_0x40d1e4["Recover1000HP"]),
								_0x2164b8["Core"]["PlayerOptions"]["RunCoins"] >= 0x1388 &&
									this["UnlockAchievement"](_0x40d1e4["Earn5000CoinsInASingleRun"]),
								_0x2164b8["Core"]["Player"]["level"] >= 0x64 &&
									_0x2164b8["Core"]["Player"]["characterType"] === _0x2485a8["MORTACCIO"] &&
									this["UnlockAchievement"](_0x40d1e4["ReachLV100WithMortaccio"]),
								_0x2164b8["Core"]["Player"]["level"] >= 0x64 &&
									_0x2164b8["Core"]["Player"]["characterType"] === _0x2485a8["CAVALLO"] &&
									this["UnlockAchievement"](_0x40d1e4["ReachLV100WithCavallo"]),
								_0x2164b8["Core"]["Player"]["level"] >= 0x14 &&
									_0x2164b8["Core"]["PlayerOptions"]["SelectedStage"] === _0x2f4d79["FOREST"] &&
									this["UnlockAchievement"](_0x40d1e4["ReachLV20InMadForest"]),
								_0x2164b8["Core"]["Player"]["level"] >= 0xa &&
									this["UnlockAchievement"](_0x40d1e4["ReachLV10"]),
								_0x2164b8["Core"]["Player"]["level"] >= 0x5 &&
									this["UnlockAchievement"](_0x40d1e4["ReachLV5"]),
								_0x2164b8["Core"]["SurvivedSeconds"] >= 0x3c &&
									this["UnlockAchievement"](_0x40d1e4["Survive1Minute"]),
								_0x2164b8["Core"]["SurvivedSeconds"] >= 0x12c &&
									_0x2164b8["Core"]["Player"]["characterType"] === _0x2485a8["PASQUALINA"] &&
									this["UnlockAchievement"](_0x40d1e4["Survive5MinutesWithDiamond"]),
								_0x2164b8["Core"]["SurvivedSeconds"] >= 0x12c &&
									_0x2164b8["Core"]["Player"]["characterType"] === _0x2485a8["GENNARO"] &&
									this["UnlockAchievement"](_0x40d1e4["Survive5MinutesWithKnife"]),
								_0x2164b8["Core"]["SurvivedSeconds"] >= 0x258 &&
									this["UnlockAchievement"](_0x40d1e4["Survive10Minutes"]),
								_0x2164b8["Core"]["SurvivedSeconds"] >= 0x4b0 &&
									this["UnlockAchievement"](_0x40d1e4["Survive20Minutes"]),
								_0x2164b8["Core"]["SurvivedSeconds"] >= 0x4b0 &&
									_0x2164b8["Core"]["Player"]["characterType"] === _0x2485a8["CROCI"] &&
									this["UnlockAchievement"](_0x40d1e4["Survive20MinutesWithCross"]),
								_0x2164b8["Core"]["SurvivedSeconds"] >= 0x4b0 &&
									_0x2164b8["Core"]["Player"]["curse"] > 0x1 &&
									this["UnlockAchievement"](_0x40d1e4["Survive20MinutesWithCurse"]),
								_0x2164b8["Core"]["SurvivedSeconds"] >= 0x708 &&
									_0x2164b8["Core"]["Player"]["characterType"] === _0x2485a8["LAMA"] &&
									this["UnlockAchievement"](_0x40d1e4["Survive30MinutesWithAxe"]),
								_0x2164b8["Core"]["SurvivedSeconds"] >= 0x708 &&
									_0x2164b8["Core"]["PlayerOptions"]["SelectedStage"] === _0x2f4d79["GREENACRES"] &&
									this["UnlockAchievement"](_0x40d1e4["Survive30MinutesInGreenAcres"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x5efbce) => _0x5efbce["bulletType"] == _0x5324b3["VAMPIRICA"]
								) && this["UnlockAchievement"](_0x40d1e4["EvolveWhip"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x562fbb) => _0x562fbb["bulletType"] == _0x5324b3["HOLY_MISSILE"]
								) && this["UnlockAchievement"](_0x40d1e4["EvolveMagicWand"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x2dfae9) => _0x2dfae9["bulletType"] == _0x5324b3["THOUSAND"]
								) && this["UnlockAchievement"](_0x40d1e4["EvolveKnife"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x353ef3) => _0x353ef3["bulletType"] == _0x5324b3["SCYTHE"]
								) && this["UnlockAchievement"](_0x40d1e4["EvolveAxe"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x12f29b) => _0x12f29b["bulletType"] == _0x5324b3["BORA"]
								) && this["UnlockAchievement"](_0x40d1e4["EvolveSantaWater"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x1f9d83) => _0x1f9d83["bulletType"] == _0x5324b3["LOOP"]
								) && this["UnlockAchievement"](_0x40d1e4["EvolveLightning"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x28df19) => _0x28df19["bulletType"] == _0x5324b3["HEAVENSWORD"]
								) && this["UnlockAchievement"](_0x40d1e4["EvolveCross"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x49542a) => _0x49542a["bulletType"] == _0x5324b3["VESPERS"]
								) && this["UnlockAchievement"](_0x40d1e4["EvolveKingBible"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x14e8fa) => _0x14e8fa["bulletType"] == _0x5324b3["HELLFIRE"]
								) && this["UnlockAchievement"](_0x40d1e4["EvolveFireWand"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x161d8c) => _0x161d8c["bulletType"] == _0x5324b3["VORTEX"]
								) && this["UnlockAchievement"](_0x40d1e4["EvolveGarlic"]),
								_0x2164b8["Core"]["Weapons"]["find"](
									(_0x22a77c) => _0x22a77c["bulletType"] == _0x5324b3["SILF3"]
								) && this["UnlockAchievement"](_0x40d1e4["UniteBirds"]),
								_0x2164b8["Core"]["PlayerOptions"]["UnlockedHypers"]["length"] >= 0x2 &&
									this["UnlockAchievement"](_0x40d1e4["Unlock2Hypers"]),
								this["NewAchievements"]
							);
						}
						static ["UnlockAchievement"](_0x1d93cc) {
							var _0x49c826 = _0x5d9431;
							const _0x1f8f5c = _0x5b281e[_0x1d93cc];
							_0x1f8f5c["achieved"] ||
								((_0x1f8f5c["achieved"] = !0x0),
								_0x1f8f5c["weaponToUnlock"] &&
									(-0x1 ==
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedWeapons"]["indexOf"](
											_0x1f8f5c["weaponToUnlock"]
										) &&
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedWeapons"]["push"](
											_0x1f8f5c["weaponToUnlock"]
										),
									(_0x41a274[_0x1f8f5c["weaponToUnlock"]][0x0]["isUnlocked"] = !0x0)),
								_0x1f8f5c["characterToUnlock"] &&
									(-0x1 ==
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["indexOf"](
											_0x1f8f5c["characterToUnlock"]
										) &&
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
											_0x1f8f5c["characterToUnlock"]
										),
									(_0x11010a[_0x1f8f5c["characterToUnlock"]][0x0]["hidden"] = !0x1)),
								_0x1f8f5c["stageToUnlock"] &&
									(-0x1 ==
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedStages"]["indexOf"](
											_0x1f8f5c["stageToUnlock"]
										) &&
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedStages"]["push"](
											_0x1f8f5c["stageToUnlock"]
										),
									(_0x117b45[_0x1f8f5c["stageToUnlock"]][0x0]["unlocked"] = !0x0)),
								_0x1f8f5c["hyperToUnlock"] &&
									(-0x1 ==
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedHypers"]["indexOf"](
											_0x1f8f5c["hyperToUnlock"]
										) &&
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedHypers"]["push"](
											_0x1f8f5c["hyperToUnlock"]
										),
									(_0x117b45[_0x1f8f5c["hyperToUnlock"]][0x0]["hyper"]["unlocked"] = !0x0)),
								_0x1f8f5c["goldPrize"] &&
									_0x2164b8["Core"]["PlayerOptions"]["AddCoinsFlat"](_0x1f8f5c["goldPrize"]),
								_0x1f8f5c["powerUpToUnlock"] &&
									(console["log"]("PowerUp Max Rank +1: " + _0x1f8f5c["powerUpToUnlock"]),
									_0x2164b8["Core"]["PlayerOptions"]["UnlockedPowerUpRanks"]["push"](
										_0x1f8f5c["powerUpToUnlock"]
									),
									(_0x4a95c8[_0x1f8f5c["powerUpToUnlock"]][0x0]["hidden"] = !0x1),
									(_0x4a95c8[_0x1f8f5c["powerUpToUnlock"]][0x0]["unlockedRank"] += 0x1)),
								-0x1 == _0x2164b8["Core"]["PlayerOptions"]["Achievements"]["indexOf"](_0x1d93cc) &&
									_0x2164b8["Core"]["PlayerOptions"]["Achievements"]["push"](_0x1d93cc),
								this["NewAchievements"]["push"](_0x1d93cc));
						}
						static ["SyncSteamAchievements"]() {
							var _0x492bf9 = _0x5d9431,
								_0x4efc39 = 0x0;
							for (const _0x496568 in _0x5b281e)
								_0x5b281e[_0x496568]["achieved"] &&
									_0x4f668e &&
									(setTimeout(() => {
										var _0xf44c39 = _0x492bf9;
										_0x4f668e["send"]("syncWithSteamAchievement", _0x496568["toString"]());
									}, 0x1f4 * _0x4efc39),
									_0x4efc39++);
						}
						static ["RestoreAchievementUnlocks"]() {
							var _0x349df0 = _0x5d9431;
							try {
								for (const _0x2da544 in _0x5b281e)
									if (_0x5b281e[_0x2da544]["achieved"]) {
										const _0x101c6d = _0x5b281e[_0x2da544];
										_0x101c6d["goldPrize"] ||
											_0x101c6d["powerUpToUnlock"] ||
											((_0x5b281e[_0x2da544]["achieved"] = !0x1),
											this["UnlockAchievement"](_0x2da544));
									}
							} catch (_0x2527c2) {
								throw _0x2527c2;
							}
						}
					}
					_0x39596a["NewAchievements"] = new Array();
					const _0x42c3a = _0x39596a;
					var _0x274d76 = function (_0x52c8a8, _0x406372, _0x399efc, _0xcdb76) {
						return new (_0x399efc || (_0x399efc = Promise))(function (_0x13cc22, _0xb46e8) {
							var _0x56dcc0 = a0_0x1be4;

							function _0x4c41cd(_0x4e26c2) {
								var _0x35d54f = a0_0x1be4;
								try {
									_0x8155b5(_0xcdb76["next"](_0x4e26c2));
								} catch (_0x165694) {
									_0xb46e8(_0x165694);
								}
							}

							function _0x4a9be8(_0xfe7da9) {
								var _0x447762 = a0_0x1be4;
								try {
									_0x8155b5(_0xcdb76["throw"](_0xfe7da9));
								} catch (_0x4dc799) {
									_0xb46e8(_0x4dc799);
								}
							}

							function _0x8155b5(_0x18292c) {
								var _0x122af6 = a0_0x1be4,
									_0x5a672a;
								_0x18292c["done"]
									? _0x13cc22(_0x18292c["value"])
									: ((_0x5a672a = _0x18292c["value"]),
									  _0x5a672a instanceof _0x399efc
											? _0x5a672a
											: new _0x399efc(function (_0x12b827) {
													_0x12b827(_0x5a672a);
											  }))["then"](_0x4c41cd, _0x4a9be8);
							}
							_0x8155b5((_0xcdb76 = _0xcdb76["apply"](_0x52c8a8, _0x406372 || []))["next"]());
						});
					};
					const _0x27669b = class {
						constructor() {
							var _0x13d2e4 = _0x5d9431;
							(this["SelectedCharacter"] = _0x2485a8["ANTONIO"]),
								(this["SelectedStage"] = _0x2f4d79["FOREST"]),
								(this["SelectedHyper"] = !0x1),
								(this["Coins"] = _0x518e52),
								(this["RunCoins"] = 0x0),
								(this["RunEnemies"] = 0x0),
								(this["RunPickups"] = new Array()),
								(this["LifetimeCoins"] = _0x518e52),
								(this["BeginnersLuck"] = 0x0),
								(this["LifetimeSurvived"] = 0x0),
								(this["LifetimeHeal"] = 0x0),
								(this["SoundsEnabled"] = !0x0),
								(this["MusicEnabled"] = !0x0),
								(this["SoundsVolume"] = 0x0),
								(this["MusicVolume"] = 0x0),
								(this["FlashingVFXEnabled"] = !0x0),
								(this["JoystickVisible"] = !0x1),
								(this["DamageNumbersEnabled"] = !0x0),
								(this["StreamSafeEnabled"] = !0x0),
								(this["CheatCodeUsed"] = !0x1),
								(this["Language"] = "en"),
								(this["BoughtCharacters"] = new Array()),
								(this["BoughtPowerups"] = new Array()),
								(this["CollectedWeapons"] = new Array()),
								(this["UnlockedWeapons"] = new Array()),
								(this["UnlockedCharacters"] = new Array()),
								(this["CollectedItems"] = new Array()),
								(this["Achievements"] = new Array()),
								(this["UnlockedStages"] = new Array()),
								(this["UnlockedHypers"] = new Array()),
								(this["UnlockedPowerUpRanks"] = new Array()),
								(this["KillCount"] = {}),
								(this["PickupCount"] = {}),
								(this["DestroyedCount"] = {}),
								(this["checksum"] = "");
						}
						["hasBackup"]() {
							var _0x182c0e = _0x5d9431;
							if (!_0x4f668e) return !0x1;
							try {
								const _0x4c3ded = _0x2931d0(0x1beb);
								let _0x22b2ae = _0x2931d0(0x3f9)["resolve"](__dirname, "SaveDataBackup.sav");
								return _0x4c3ded["existsSync"](_0x22b2ae);
							} catch (_0x2eeb07) {
								return console["log"](_0x2eeb07), !0x1;
							}
						}
						["loadJsonBackup"]() {
							var _0x1b54d3 = _0x5d9431;
							if (_0x4f668e)
								try {
									const _0x28c79f = _0x2931d0(0x1beb),
										_0x277191 = _0x2931d0(0x3f9);
									var _0x579b64 = _0x2931d0(0x17e1);
									let _0x35a7cc = _0x277191["resolve"](__dirname, "SaveDataBackup.sav");
									if (!_0x28c79f["existsSync"](_0x35a7cc))
										return void console["log"]("SaveData Backup not found");
									let _0x7b65e9 = _0x28c79f["readFileSync"](
											_0x277191["resolve"](__dirname, "SaveDataBackup.sav")
										),
										_0x242df5 = JSON["parse"](_0x7b65e9);
									console["log"](_0x242df5);
									let _0xdd7624 = _0x242df5["checksum"];
									_0x242df5["checksum"] = "";
									let _0x4642c6 = JSON["stringify"](_0x242df5);
									const _0x24ed40 = "DefinitelyNotSaveDataSecretKey",
										_0x1a84be = _0x579b64["createHash"]("sha256", _0x24ed40)
											["update"](_0x4642c6)
											["digest"]("hex");
									if ((console["log"](_0x1a84be), _0xdd7624 != _0x1a84be))
										return void console["log"]("SaveData is corrupt");
									console["log"](_0x242df5);
									for (const _0x45140f in _0x242df5)
										this["hasOwnProperty"](_0x45140f) && (this[_0x45140f] = _0x242df5[_0x45140f]);
									this["Save"](), window["location"]["reload"]();
								} catch (_0x4fd41c) {
									console["log"](_0x4fd41c);
								}
						}
						["saveJsonBackup"]() {
							var _0xa0179b = _0x5d9431;
							if ((JSON["stringify"](this), _0x4f668e))
								try {
									const _0x29d6a9 = _0x2931d0(0x1beb),
										_0xfe4fc6 = _0x2931d0(0x3f9),
										_0xaab535 = _0x2931d0(0x17e1);
									let _0x36131a = _0xfe4fc6["resolve"](__dirname, "SaveDataBackup.sav");
									if (_0x29d6a9["existsSync"](_0x36131a)) {
										let _0xe5a9fc = _0xfe4fc6["resolve"](__dirname, "SaveDataBackup.bak.sav");
										_0x29d6a9["renameSync"](_0x36131a, _0xe5a9fc);
									}
									this["checksum"] = "";
									let _0x282e1e = JSON["stringify"](this);
									const _0x3edad8 = "DefinitelyNotSaveDataSecretKey",
										_0x42a508 = _0xaab535["createHash"]("sha256", _0x3edad8)
											["update"](_0x282e1e)
											["digest"]("hex");
									(this["checksum"] = _0x42a508),
										console["log"](_0x42a508),
										_0x29d6a9["writeFileSync"](
											_0xfe4fc6["resolve"](__dirname, "SaveDataBackup.sav"),
											JSON["stringify"](this)
										);
								} catch (_0x33d2fa) {
									console["log"](_0x33d2fa);
								}
						}
						["exportGameData"]() {
							var _0x3aad25 = _0x5d9431;
							if (_0x4f668e)
								try {
									const _0x225c13 = _0x2931d0(0x1beb),
										_0x2030e2 = _0x2931d0(0x3f9);
									_0x225c13["writeFileSync"](
										_0x2030e2["resolve"](__dirname, _0x2c2b99 + "_ACHIEVEMENT_DATA.json"),
										JSON["stringify"](_0x5b281e)
									),
										_0x225c13["writeFileSync"](
											_0x2030e2["resolve"](__dirname, _0x2c2b99 + "_CHARACTER_DATA.json"),
											JSON["stringify"](_0x11010a)
										),
										_0x225c13["writeFileSync"](
											_0x2030e2["resolve"](__dirname, _0x2c2b99 + "_ENEMY_DATA.json"),
											JSON["stringify"](_0x3317fb)
										),
										_0x225c13["writeFileSync"](
											_0x2030e2["resolve"](__dirname, _0x2c2b99 + "_ITEM_DATA.json"),
											JSON["stringify"](_0x171870)
										),
										_0x225c13["writeFileSync"](
											_0x2030e2["resolve"](__dirname, _0x2c2b99 + "_POWERUP_DATA.json"),
											JSON["stringify"](_0x4a95c8)
										),
										_0x225c13["writeFileSync"](
											_0x2030e2["resolve"](__dirname, _0x2c2b99 + "_PROPS_DATA.json"),
											JSON["stringify"](_0x2abb02)
										),
										_0x225c13["writeFileSync"](
											_0x2030e2["resolve"](__dirname, _0x2c2b99 + "_STAGE_DATA.json"),
											JSON["stringify"](_0x117b45)
										),
										_0x225c13["writeFileSync"](
											_0x2030e2["resolve"](__dirname, _0x2c2b99 + "_WEAPON_DATA.json"),
											JSON["stringify"](_0x41a274)
										);
								} catch (_0x5f4e85) {
									console["log"](_0x5f4e85);
								}
						}
						["GetCurrentCoins"]() {
							return this["Coins"];
						}
						["AddCoinsFlat"](_0x2c855f) {
							var _0x22353c = _0x5d9431;
							(this["Coins"] += _0x2c855f), (this["LifetimeCoins"] += _0x2c855f), this["SaveCoins"]();
						}
						["AddCoinsNoRun"](_0x3923c8) {
							var _0x43a6c8 = _0x5d9431;
							(_0x3923c8 *= _0x1fa5bb["GoldMultiplier"]),
								_0x2164b8["Core"]["Player"] && (_0x3923c8 *= _0x2164b8["Core"]["Player"]["greed"]),
								(this["Coins"] += _0x3923c8),
								(this["LifetimeCoins"] += _0x3923c8),
								this["SaveCoins"]();
						}
						["AddCoins"](_0x1db134) {
							var _0xe9a84e = _0x5d9431;
							(_0x1db134 *= _0x1fa5bb["GoldMultiplier"]),
								_0x2164b8["Core"]["Player"] && (_0x1db134 *= _0x2164b8["Core"]["Player"]["greed"]),
								(this["Coins"] += _0x1db134),
								(this["RunCoins"] += _0x1db134),
								(this["LifetimeCoins"] += _0x1db134),
								this["SaveCoins"]();
						}
						["AddHeal"](_0x4efd43) {
							var _0x292d59 = _0x5d9431;
							(this["LifetimeHeal"] += _0x4efd43), this["SaveHeal"]();
						}
						["_set"](_0x346c74, _0x27487a) {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x4f6ed3 = a0_0x1be4;
								yield _0x573366["K"]["set"]({
									key: _0x346c74,
									value: _0x27487a,
								});
							});
						}
						["_get"](_0x4cf037) {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x23b5f1 = a0_0x1be4;
								return yield _0x573366["K"]["get"]({
									key: _0x4cf037,
								});
							});
						}
						["CLEAR"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								return yield _0x573366["K"]["clear"]();
							});
						}
						["Save"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x2532d1 = a0_0x1be4;
								yield this["_set"]("SelectedCharacter", JSON["stringify"](this["SelectedCharacter"])),
									yield this["_set"]("SelectedStage", JSON["stringify"](this["SelectedStage"])),
									yield this["_set"]("SelectedHyper", JSON["stringify"](this["SelectedHyper"])),
									yield this["_set"]("BoughtCharacters", JSON["stringify"](this["BoughtCharacters"])),
									yield this["_set"]("BoughtPowerups", JSON["stringify"](this["BoughtPowerups"])),
									yield this["_set"]("Achievements", JSON["stringify"](this["Achievements"])),
									yield this["SaveCoins"](),
									yield this["SaveOptions"](),
									yield this["SaveCollection"](),
									yield this["SaveUnlocks"](),
									yield this["SaveGameResults"](),
									yield this["SaveBLuck"](),
									this["saveJsonBackup"]();
							});
						}
						["SaveBLuck"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x1e5c79 = a0_0x1be4;
								yield this["_set"]("BLuck", JSON["stringify"](this["BeginnersLuck"]));
							});
						}
						["SaveCoins"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x565af0 = a0_0x1be4;
								yield this["_set"]("Coins", JSON["stringify"](this["Coins"])),
									yield this["_set"]("LifetimeCoins", JSON["stringify"](this["LifetimeCoins"]));
							});
						}
						["SaveHeal"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x6666b1 = a0_0x1be4;
								yield this["_set"]("LifetimeHeal", JSON["stringify"](this["LifetimeHeal"]));
							});
						}
						["SaveOptions"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x3dc82c = a0_0x1be4;
								yield this["_set"]("SoundsVolume", JSON["stringify"](this["SoundsVolume"])),
									yield this["_set"]("MusicVolume", JSON["stringify"](this["MusicVolume"])),
									yield this["_set"](
										"FlashingVFXEnabled",
										JSON["stringify"](this["FlashingVFXEnabled"])
									),
									yield this["_set"](
										"DamageNumbersEnabled",
										JSON["stringify"](this["DamageNumbersEnabled"])
									),
									yield this["_set"](
										"StreamSafeEnabled",
										JSON["stringify"](this["StreamSafeEnabled"])
									),
									yield this["_set"]("JoystickVisible", JSON["stringify"](this["JoystickVisible"])),
									yield this["_set"]("Language", JSON["stringify"](this["Language"])),
									yield this["_set"]("CheatCodeUsed", JSON["stringify"](this["CheatCodeUsed"]));
							});
						}
						["SaveCollection"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x39fcbb = a0_0x1be4;
								yield this["_set"]("CollectedWeapons", JSON["stringify"](this["CollectedWeapons"])),
									yield this["_set"]("CollectedItems", JSON["stringify"](this["CollectedItems"]));
							});
						}
						["SaveUnlocks"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x38ce33 = a0_0x1be4;
								yield this["_set"]("UnlockedWeapons", JSON["stringify"](this["UnlockedWeapons"])),
									yield this["_set"](
										"UnlockedCharacters",
										JSON["stringify"](this["UnlockedCharacters"])
									),
									yield this["_set"]("UnlockedStages", JSON["stringify"](this["UnlockedStages"])),
									yield this["_set"]("UnlockedHypers", JSON["stringify"](this["UnlockedHypers"])),
									yield this["_set"](
										"UnlockedPowerUpRanks",
										JSON["stringify"](this["UnlockedPowerUpRanks"])
									);
							});
						}
						["SaveGameResults"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x4e3541 = a0_0x1be4;
								for (const _0x370089 in _0x3317fb)
									this["KillCount"][_0x370089] = _0x3317fb[_0x370089][0x0]["killedAmount"];
								for (const _0x4f33a6 in _0x171870)
									this["PickupCount"][_0x4f33a6] = _0x171870[_0x4f33a6]["pickedupAmount"];
								for (const _0x1bc4fc in _0x2abb02)
									this["DestroyedCount"][_0x1bc4fc] = _0x2abb02[_0x1bc4fc]["destroyedAmount"];
								yield this["_set"]("KillCount", JSON["stringify"](this["KillCount"])),
									yield this["_set"]("PickupCount", JSON["stringify"](this["PickupCount"])),
									yield this["_set"]("DestroyedCount", JSON["stringify"](this["DestroyedCount"])),
									yield this["_set"]("LifetimeSurvived", JSON["stringify"](this["LifetimeSurvived"])),
									yield this["_set"]("LifetimeHeal", JSON["stringify"](this["LifetimeHeal"]));
							});
						}
						["ClearGameResults"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x3c8da1 = a0_0x1be4;
								yield this["_set"]("KillCount", JSON["stringify"]({})),
									yield this["_set"]("PickupCount", JSON["stringify"]({})),
									yield this["_set"]("DestroyedCount", JSON["stringify"]({})),
									yield this["_set"]("LifetimeSurvived", JSON["stringify"](0x0)),
									yield this["_set"]("LifetimeHeal", JSON["stringify"](0x0));
							});
						}
						["Load"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x271b14 = a0_0x1be4,
									_0xfd9c1a;
								(_0xfd9c1a = yield this["_get"]("SelectedCharacter")),
									(this["SelectedCharacter"] = JSON["parse"](
										_0xfd9c1a["value"] || JSON["stringify"](_0x2485a8["ANTONIO"])
									)),
									(_0xfd9c1a = yield this["_get"]("SelectedStage")),
									(this["SelectedStage"] = JSON["parse"](
										_0xfd9c1a["value"] || JSON["stringify"](_0x2f4d79["FOREST"])
									)),
									(_0xfd9c1a = yield this["_get"]("SelectedHyper")),
									(this["SelectedHyper"] = JSON["parse"](
										_0xfd9c1a["value"] || JSON["stringify"](!0x1)
									)),
									(_0xfd9c1a = yield this["_get"]("Coins")),
									(this["Coins"] = JSON["parse"](_0xfd9c1a["value"] || JSON["stringify"](_0x518e52))),
									(_0xfd9c1a = yield this["_get"]("LifetimeCoins")),
									(this["LifetimeCoins"] = JSON["parse"](
										_0xfd9c1a["value"] || JSON["stringify"](_0x518e52)
									)),
									(_0xfd9c1a = yield this["_get"]("BoughtCharacters")),
									(this["BoughtCharacters"] = JSON["parse"](
										_0xfd9c1a["value"] || JSON["stringify"]([])
									)),
									(_0xfd9c1a = yield this["_get"]("BoughtPowerups")),
									(this["BoughtPowerups"] = JSON["parse"](
										_0xfd9c1a["value"] || JSON["stringify"]([])
									)),
									(_0xfd9c1a = yield this["_get"]("Achievements")),
									(this["Achievements"] = JSON["parse"](_0xfd9c1a["value"] || JSON["stringify"]([]))),
									(_0xfd9c1a = yield this["_get"]("KillCount")),
									(this["KillCount"] = JSON["parse"](_0xfd9c1a["value"] || JSON["stringify"]({}))),
									(_0xfd9c1a = yield this["_get"]("PickupCount")),
									(this["PickupCount"] = JSON["parse"](_0xfd9c1a["value"] || JSON["stringify"]({}))),
									(_0xfd9c1a = yield this["_get"]("DestroyedCount")),
									(this["DestroyedCount"] = JSON["parse"](
										_0xfd9c1a["value"] || JSON["stringify"]({})
									)),
									(_0xfd9c1a = yield this["_get"]("LifetimeSurvived")),
									(this["LifetimeSurvived"] = JSON["parse"](
										_0xfd9c1a["value"] || JSON["stringify"](0x0)
									)),
									(_0xfd9c1a = yield this["_get"]("LifetimeHeal")),
									(this["LifetimeHeal"] = JSON["parse"](
										_0xfd9c1a["value"] || JSON["stringify"](0x0)
									)),
									yield this["LoadOptions"](),
									yield this["LoadCollection"](),
									yield this["LoadUnlocks"](),
									yield this["LoadBLuck"](),
									(this["Coins"] = Math["ceil"](this["Coins"])),
									this["apply"]();
							});
						}
						["LoadOptions"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x269c41 = a0_0x1be4,
									_0x17d699;
								(_0x17d699 = yield this["_get"]("SoundsEnabled")),
									(this["SoundsEnabled"] = JSON["parse"](
										_0x17d699["value"] || JSON["stringify"](!0x0)
									)),
									(_0x17d699 = yield this["_get"]("MusicEnabled")),
									(this["MusicEnabled"] = JSON["parse"](
										_0x17d699["value"] || JSON["stringify"](!0x0)
									)),
									(_0x17d699 = yield this["_get"]("SoundsVolume")),
									(this["SoundsVolume"] = JSON["parse"](
										_0x17d699["value"] || JSON["stringify"](this["SoundsEnabled"] ? 0.5 : 0x0)
									)),
									(_0x17d699 = yield this["_get"]("MusicVolume")),
									(this["MusicVolume"] = JSON["parse"](
										_0x17d699["value"] || JSON["stringify"](this["MusicEnabled"] ? 0.5 : 0x0)
									)),
									(_0x17d699 = yield this["_get"]("FlashingVFXEnabled")),
									(this["FlashingVFXEnabled"] = JSON["parse"](
										_0x17d699["value"] || JSON["stringify"](!0x0)
									)),
									(_0x17d699 = yield this["_get"]("DamageNumbersEnabled")),
									(this["DamageNumbersEnabled"] = JSON["parse"](
										_0x17d699["value"] || JSON["stringify"](!0x0)
									)),
									(_0x17d699 = yield this["_get"]("Language")),
									(this["Language"] = JSON["parse"](_0x17d699["value"] || JSON["stringify"]("en"))),
									(_0x17d699 = yield this["_get"]("StreamSafeEnabled")),
									(this["StreamSafeEnabled"] = JSON["parse"](
										_0x17d699["value"] || JSON["stringify"](!0x0)
									)),
									(_0x17d699 = yield this["_get"]("JoystickVisible")),
									(this["JoystickVisible"] = JSON["parse"](
										_0x17d699["value"] || JSON["stringify"](!0x1)
									)),
									(_0x17d699 = yield this["_get"]("CheatCodeUsed")),
									(this["CheatCodeUsed"] = JSON["parse"](
										_0x17d699["value"] || JSON["stringify"](!0x1)
									));
							});
						}
						["LoadCollection"](_0x25090a = !0x1) {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x30ae5a = a0_0x1be4,
									_0x10c4f9;
								(_0x10c4f9 = yield this["_get"]("CollectedWeapons")),
									(this["CollectedWeapons"] = JSON["parse"](
										_0x10c4f9["value"] || JSON["stringify"]([])
									)),
									(_0x10c4f9 = yield this["_get"]("CollectedItems")),
									(this["CollectedItems"] = JSON["parse"](
										_0x10c4f9["value"] || JSON["stringify"]([])
									));
							});
						}
						["LoadUnlocks"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x134286 = a0_0x1be4,
									_0x503fe9;
								(_0x503fe9 = yield this["_get"]("UnlockedWeapons")),
									(this["UnlockedWeapons"] = JSON["parse"](
										_0x503fe9["value"] || JSON["stringify"]([])
									)),
									(_0x503fe9 = yield this["_get"]("UnlockedCharacters")),
									(this["UnlockedCharacters"] = JSON["parse"](
										_0x503fe9["value"] || JSON["stringify"]([])
									)),
									(_0x503fe9 = yield this["_get"]("UnlockedStages")),
									(this["UnlockedStages"] = JSON["parse"](
										_0x503fe9["value"] || JSON["stringify"]([])
									)),
									(_0x503fe9 = yield this["_get"]("UnlockedHypers")),
									(this["UnlockedHypers"] = JSON["parse"](
										_0x503fe9["value"] || JSON["stringify"]([])
									)),
									(_0x503fe9 = yield this["_get"]("UnlockedPowerUpRanks")),
									(this["UnlockedPowerUpRanks"] = JSON["parse"](
										_0x503fe9["value"] || JSON["stringify"]([])
									));
							});
						}
						["LoadBLuck"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x236815 = a0_0x1be4,
									_0xb73b1c;
								(_0xb73b1c = yield this["_get"]("BLuck")),
									(this["BeginnersLuck"] = JSON["parse"](
										_0xb73b1c["value"] || JSON["stringify"](0x0)
									));
							});
						}
						["apply"]() {
							var _0x5465c6 = _0x5d9431,
								_0x5500ba = 0x0;
							for (let _0x1999df = this["BoughtPowerups"]["length"]; _0x1999df >= 0x0; _0x1999df--)
								"undefined" === this["BoughtPowerups"][_0x1999df] &&
									(this["BoughtPowerups"]["splice"](_0x1999df, 0x1), _0x5500ba++);
							for (let _0x1533c6 = 0x0; _0x1533c6 < _0x5500ba; _0x1533c6++)
								this["BoughtPowerups"]["push"](_0x300df5["ARMOR"]);
							this["BoughtPowerups"]["forEach"]((_0x2ae8a7) => {
								var _0x2c35f7 = _0x5465c6;
								void 0x0 === _0x2ae8a7 && (_0x2ae8a7 = _0x300df5["ARMOR"]);
								var _0x12355c = _0x4a95c8[_0x2ae8a7];
								void 0x0 !== _0x12355c &&
									((_0x12355c = _0x4a95c8[_0x2ae8a7][0x0])["level"] =
										(_0x12355c["level"] || 0x0) + 0x1);
							}),
								this["BoughtCharacters"]["forEach"]((_0x36316b) => {
									var _0x5ac359 = _0x5465c6,
										_0x23833d = _0x11010a[_0x36316b];
									void 0x0 !== _0x23833d &&
										((_0x23833d = _0x11010a[_0x36316b][0x0])["isBought"] = !0x0);
								}),
								this["CollectedWeapons"]["forEach"]((_0x1a163f) => {
									var _0x15c2d0 = _0x5465c6,
										_0x135606 = _0x41a274[_0x1a163f];
									void 0x0 !== _0x135606 && ((_0x135606 = _0x41a274[_0x1a163f][0x0])["seen"] = !0x0);
								}),
								this["CollectedItems"]["forEach"]((_0x4016f3) => {
									var _0x552a59 = _0x5465c6,
										_0x4c777f = _0x171870[_0x4016f3];
									void 0x0 !== _0x4c777f && (_0x4c777f["seen"] = !0x0);
								}),
								this["UnlockedWeapons"]["forEach"]((_0x1099c2) => {
									var _0xb71c54 = _0x5465c6,
										_0x55cb32 = _0x41a274[_0x1099c2];
									void 0x0 !== _0x55cb32 &&
										((_0x55cb32 = _0x41a274[_0x1099c2][0x0])["isUnlocked"] = !0x0);
								}),
								this["UnlockedCharacters"]["forEach"]((_0x22c1ba) => {
									var _0x1d28dc = _0x5465c6,
										_0x1735d6 = _0x11010a[_0x22c1ba];
									void 0x0 !== _0x1735d6 &&
										((_0x1735d6 = _0x11010a[_0x22c1ba][0x0])["hidden"] = !0x1);
								}),
								this["UnlockedStages"]["forEach"]((_0x2c6553) => {
									var _0x5842ba = _0x5465c6,
										_0x5d30b1 = _0x117b45[_0x2c6553];
									void 0x0 !== _0x5d30b1 &&
										((_0x5d30b1 = _0x117b45[_0x2c6553][0x0])["unlocked"] = !0x0);
								}),
								-0x1 === this["UnlockedStages"]["indexOf"](_0x2f4d79["FOREST"]) &&
									this["UnlockedStages"]["push"](_0x2f4d79["FOREST"]),
								(this["UnlockedStages"] = this["UnlockedStages"]
									["sort"]()
									["filter"](
										(_0xb0a36e, _0x28ea21, _0x4ebe16) =>
											!_0x28ea21 || _0xb0a36e != _0x4ebe16[_0x28ea21 - 0x1]
									)),
								this["UnlockedHypers"]["forEach"]((_0x203e39) => {
									var _0x1a4f36 = _0x5465c6,
										_0x410869 = _0x117b45[_0x203e39];
									void 0x0 !== _0x410869 &&
										((_0x410869 = _0x117b45[_0x203e39][0x0]["hyper"])["unlocked"] = !0x0);
								}),
								(this["UnlockedHypers"] = this["UnlockedHypers"]
									["sort"]()
									["filter"](
										(_0x47fd25, _0xf4bebf, _0x330730) =>
											!_0xf4bebf || _0x47fd25 != _0x330730[_0xf4bebf - 0x1]
									)),
								this["Achievements"]["forEach"]((_0x6e7029) => {
									var _0xcd927b = _0x5b281e[_0x6e7029];
									void 0x0 !== _0xcd927b && (_0xcd927b["achieved"] = !0x0);
								}),
								this["UnlockedPowerUpRanks"]["forEach"]((_0x119ad4) => {
									var _0x1c262f = _0x5465c6,
										_0x357120 = _0x4a95c8[_0x119ad4];
									void 0x0 !== _0x357120 &&
										(((_0x357120 = _0x4a95c8[_0x119ad4][0x0])["hidden"] = !0x0),
										(_0x357120["unlockedRank"] = 0x0));
								}),
								this["UnlockedPowerUpRanks"]["forEach"]((_0x465c33) => {
									var _0x109907 = _0x5465c6,
										_0x5eaf80 = _0x4a95c8[_0x465c33];
									void 0x0 !== _0x5eaf80 &&
										(((_0x5eaf80 = _0x4a95c8[_0x465c33][0x0])["hidden"] = !0x1),
										(_0x5eaf80["unlockedRank"] += 0x1));
								});
							for (const _0x136548 in this["KillCount"])
								void 0x0 !== (_0x60bcd3 = _0x3317fb[_0x136548])
									? void 0x0 !== (_0x60bcd3 = _0x3317fb[_0x136548][0x0]) &&
									  (_0x60bcd3["killedAmount"] = this["KillCount"][_0x136548])
									: console["log"]("cannot find: " + _0x136548);
							for (const _0x573d03 in _0x3b89df)
								void 0x0 === (_0x60bcd3 = this["KillCount"][_0x573d03]) &&
									(this["KillCount"][_0x573d03] = 0x0);
							for (const _0x1b226e in this["PickupCount"])
								void 0x0 !== (_0x60bcd3 = _0x171870[_0x1b226e]) &&
									(_0x60bcd3["pickedupAmount"] = this["PickupCount"][_0x1b226e]);
							for (const _0x2539b in _0x3bf2f1)
								void 0x0 === (_0x60bcd3 = this["PickupCount"][_0x2539b]) &&
									(this["PickupCount"][_0x2539b] = 0x0);
							for (const _0x4231bd in this["DestroyedCount"])
								void 0x0 !== (_0x60bcd3 = _0x2abb02[_0x4231bd]) &&
									(_0x60bcd3["destroyedAmount"] = this["DestroyedCount"][_0x4231bd]);
							for (const _0x54c1a2 in _0x15e0c0) {
								var _0x60bcd3;
								void 0x0 === (_0x60bcd3 = this["DestroyedCount"][_0x54c1a2]) &&
									(this["DestroyedCount"][_0x54c1a2] = 0x0);
							}
							_0x42c3a["RestoreAchievementUnlocks"]();
						}
						["RefundAll"]() {
							return _0x274d76(this, void 0x0, void 0x0, function* () {
								var _0x413c2a = a0_0x1be4;
								this["BoughtPowerups"]["forEach"]((_0x53ed19) => {
									var _0x492df8 = _0x413c2a,
										_0x161fd9 = _0x4a95c8[_0x53ed19][0x0];
									void 0x0 !== _0x161fd9 && (_0x161fd9["level"] = 0x0);
								}),
									(this["Coins"] = this["LifetimeCoins"]),
									(this["BoughtPowerups"] = []),
									yield this["Save"](),
									yield this["Load"]();
							});
						}
					};
					class _0x4071dc extends Phaser["Physics"]["Arcade"]["Sprite"] {
						constructor(
							_0x20eb58,
							_0x425557,
							_0x47561b,
							_0x2a783c = "ball",
							_0x1832cd = 0x0,
							_0x5755d1,
							_0x5355d8 = 0x0
						) {
							var _0x51e264 = _0x5d9431;
							super(_0x20eb58["scene"], _0x425557, _0x47561b, _0x2a783c, _0x1832cd),
								(this["isDead"] = !0x1),
								(this["owner"] = null),
								(this["penetrating"] = 0x0),
								(this["bounces"] = 0x0),
								(this["isCullable"] = !0x0),
								(this["isTeleportOnCull"] = !0x1),
								(this["_speed"] = 0x1),
								(this["objectsHit"] = []),
								(this["pool"] = _0x20eb58),
								(this["weapon"] = _0x5755d1),
								(this["indexInWeapon"] = _0x5355d8);
						}
						get ["TrueSpeed"]() {
							var _0x176a10 = _0x5d9431;
							return this["weapon"]["PSpeed"] * _0x1fa5bb["ProjectileSpeed"] * this["_speed"];
						}
						["OnTeleportOnCull"]() {}
						["OnRecycle"]() {
							var _0x3c4346 = _0x5d9431;
							(this["isDead"] = !0x1),
								(this["objectsHit"] = []),
								this["setActive"](!0x0),
								(this["body"]["enable"] = !0x0),
								(this["penetrating"] = this["weapon"]["penetrating"]),
								(this["bounces"] = this["weapon"]["bounces"]);
						}
						["HasAlreadyHitObject"](_0xfda18b) {
							var _0x145780 = _0x5d9431;
							const _0x5bd256 = this["objectsHit"]["indexOf"](_0xfda18b) > -0x1;
							return (
								_0x5bd256 ||
									(this["objectsHit"]["push"](_0xfda18b), this["OnHasHitAnObject"](_0xfda18b)),
								_0x5bd256
							);
						}
						["OnHasHitAnObject"](_0x1daaba = null) {}
						["OnHasHitWall"](_0x2f6f48) {
							this["DeSpawn"]();
						}
						["AimForNearestEnemy"]() {
							var _0x221560 = _0x5d9431,
								_0x19bae4 = this["scene"]["physics"]["closest"](
									_0x2164b8["Core"]["Player"],
									_0x2164b8["Core"]["Enemies"]
								);
							return _0x19bae4
								? (this["ApplyInitialVelocity"](_0x19bae4), !0x0)
								: (this["ApplyPlayerFacingVelocity"](), !0x1);
						}
						["AimForRandomEnemy"]() {
							var _0x4b7765 = _0x5d9431,
								_0x207c07 = Phaser["Math"]["RND"]["pick"](_0x2164b8["Core"]["Enemies"]);
							return _0x207c07
								? (this["ApplyInitialVelocity"](_0x207c07), _0x207c07)
								: (this["ApplyPlayerFacingVelocity"](), null);
						}
						["SetForNearestEnemy"](_0x5f063a) {
							var _0x55a947 = _0x5d9431,
								_0x28e0ad = this["scene"]["physics"]["closest"](
									_0x2164b8["Core"]["Player"],
									_0x2164b8["Core"]["Enemies"]
								);
							if (!_0x28e0ad) {
								let _0x567428 = _0x2164b8["Core"]["Player"]["lastFacedDirection"];
								return (
									_0x567428["normalize"](),
									0x0 === _0x567428["x"] && 0x0 === _0x567428["y"] && (_0x567428["x"] = 0x1),
									(_0x5f063a["x"] = this["TrueSpeed"] * _0x567428["x"]),
									(_0x5f063a["y"] = this["TrueSpeed"] * _0x567428["y"]),
									null
								);
							}
							let _0xe434c7 = new Phaser["Math"]["Vector2"](0x0, 0x0);
							return (
								(_0xe434c7["x"] =
									_0x28e0ad["body"]["position"]["x"] - _0x2164b8["Core"]["Player"]["x"]),
								(_0xe434c7["y"] =
									_0x28e0ad["body"]["position"]["y"] - _0x2164b8["Core"]["Player"]["y"]),
								_0xe434c7["normalize"](),
								(_0x5f063a["x"] = this["TrueSpeed"] * _0xe434c7["x"]),
								(_0x5f063a["y"] = this["TrueSpeed"] * _0xe434c7["y"]),
								_0x28e0ad
							);
						}
						["AimForRandomeEnemyInRect"](_0x2b262a) {
							var _0x533fa6 = _0x5d9431,
								_0x30d5e6 = new Array();
							for (
								let _0x1fcaa5 = 0x0;
								_0x1fcaa5 < _0x2164b8["Core"]["Enemies"]["length"] && _0x30d5e6["length"] < 0xa;
								_0x1fcaa5++
							) {
								const _0x2a2101 = _0x2164b8["Core"]["Enemies"][_0x1fcaa5];
								_0x2b262a["contains"](_0x2a2101["x"], _0x2a2101["y"]) && _0x30d5e6["push"](_0x2a2101);
							}
							return _0x30d5e6["length"] <= 0x0 ? null : Phaser["Math"]["RND"]["pick"](_0x30d5e6);
						}
						["AimForRandomEnemyInScreen"](_0x6c8c0c) {
							var _0xc52532 = _0x5d9431,
								_0x1d135b = this["scene"]["physics"]["overlapRect"](
									_0x6c8c0c["x"],
									_0x6c8c0c["y"],
									_0x6c8c0c["width"],
									_0x6c8c0c["height"]
								);
							return (
								(_0x1d135b = _0x1d135b["filter"](
									(_0x450825) => _0x450825["owner"] && !_0x450825["owner"]["isDead"]
								)),
								Phaser["Math"]["RND"]["pick"](_0x1d135b)
							);
						}
						["AngleFromVelocityRadians"](_0x2a8882) {
							var _0x2c32e0 = _0x5d9431,
								_0x4c5b98 = Phaser["Math"]["Vector2"]["RIGHT"];
							return Math["atan2"](_0x2a8882["y"] - _0x4c5b98["y"], _0x2a8882["x"] - _0x4c5b98["x"]);
						}
						["AngleFromTargetRadians"](_0x1e76a4 = null) {
							var _0x369584 = _0x5d9431;
							_0x1e76a4 || (_0x1e76a4 = Phaser["Math"]["RND"]["pick"](_0x2164b8["Core"]["Enemies"]));
							var _0x2d2f2a = _0x2164b8["Core"]["Player"]["body"]["position"];
							return Math["atan2"](_0x1e76a4["y"] - _0x2d2f2a["y"], _0x1e76a4["x"] - _0x2d2f2a["x"]);
						}
						["ApplyInitialVelocity"](_0x570684, _0x1d7c6e = !0x0) {
							var _0x515495 = _0x5d9431;
							let _0x49682f = new Phaser["Math"]["Vector2"](0x0, 0x0);
							(_0x49682f["x"] = _0x570684["body"]["position"]["x"] - _0x2164b8["Core"]["Player"]["x"]),
								(_0x49682f["y"] =
									_0x570684["body"]["position"]["y"] - _0x2164b8["Core"]["Player"]["y"]),
								_0x49682f["normalize"](),
								this["setVelocity"](
									this["TrueSpeed"] * _0x49682f["x"],
									this["TrueSpeed"] * _0x49682f["y"]
								),
								_0x1d7c6e &&
									this["setAngle"](
										Phaser["Math"]["RadToDeg"](
											this["AngleFromVelocityRadians"](this["body"]["velocity"])
										)
									);
						}
						["ApplyPlayerFacingVelocity"](_0x357bba = !0x0) {
							var _0x118ca6 = _0x5d9431;
							let _0x217b4e = _0x2164b8["Core"]["Player"]["lastFacedDirection"];
							_0x217b4e["normalize"](),
								0x0 === _0x217b4e["x"] && 0x0 === _0x217b4e["y"] && (_0x217b4e["x"] = 0x1),
								this["setVelocity"](
									this["TrueSpeed"] * _0x217b4e["x"],
									this["TrueSpeed"] * _0x217b4e["y"]
								),
								_0x357bba &&
									this["setAngle"](
										Phaser["Math"]["RadToDeg"](
											this["AngleFromVelocityRadians"](this["body"]["velocity"])
										)
									);
						}
						["GetPlayerFacingVelocity"]() {
							var _0x58d4e5 = _0x5d9431;
							let _0x46b015 = _0x2164b8["Core"]["Player"]["lastFacedDirection"];
							return (
								_0x46b015["normalize"](),
								0x0 === _0x46b015["x"] && 0x0 === _0x46b015["y"] && (_0x46b015["x"] = 0x1),
								_0x46b015
							);
						}
						["DeSpawn"]() {
							var _0x7610a1 = _0x5d9431;
							this["setActive"](!0x1), (this["body"]["enable"] = !0x1), this["pool"]["Return"](this);
						}
						["SetTarget"](_0x53e21a) {
							this["target"] = _0x53e21a;
						}
						["Init"](_0x144c16 = -0x3e8, _0x2841d = -0x3e8) {
							var _0x590fd4 = _0x5d9431;
							this["setPosition"](_0x144c16, _0x2841d),
								this["scene"]["physics"]["add"]["existing"](this),
								this["OnRecycle"]();
						}
						["OnDeathAnimationComplete"]() {
							var _0x486948 = _0x5d9431;
							this["OnDeathEnd"]();
						}
						["die"]() {
							var _0x3bb26c = _0x5d9431;
							(this["isDead"] = !0x0), (this["visible"] = !0x1), (this["body"]["enable"] = !0x1);
						}
						["OnDeathEnd"]() {
							var _0x328da0 = _0x5d9431;
							this["pool"]["Return"](this);
						}
						["Update"](_0x45bc41 = 0x0) {}
					}
					const _0x3004d6 = class extends _0x4071dc {
							constructor(_0x1d42a7, _0x8c90c1, _0x204fe9, _0xda0a7d, _0x4aa81b) {
								var _0x57a5c2 = _0x5d9431;
								super(
									_0x1d42a7,
									_0x8c90c1,
									_0x204fe9,
									"vfx",
									"ProjectileHoly1.png",
									_0xda0a7d,
									_0x4aa81b
								),
									(this["PfxEmitter"] = this["scene"]["add"]["particles"]("vfx")),
									this["PfxEmitter"]["createEmitter"]({
										frame: ["PfxHoly1.png", "PfxHoly2.png"],
										speed: {
											min: 0xf,
											max: 0x1e,
										},
										quantity: 0x1,
										lifespan: 0x12c,
										alpha: {
											start: 0x1,
											end: 0x0,
										},
										on: !0x1,
									});
							}
							["OnRecycle"]() {
								var _0x3c0f4a = _0x5d9431;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x8),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									(this["x"] += (Math["random"]() - 0.5) * this["indexInWeapon"] * 0xa),
									(this["y"] += (Math["random"]() - 0.5) * this["indexInWeapon"] * 0xa),
									this["AimForNearestEnemy"]();
								let _0x6ded83 = this["weapon"]["volume"] ? this["weapon"]["volume"] : 0.15;
								_0x2164b8["Sound"]["PlaySound"](
									_0x522ca7["MagicMissile"],
									{
										detune: -0x64 * this["indexInWeapon"],
										volume: _0x6ded83,
									},
									0xc8,
									0xc
								);
							}
							["OnHasHitAnObject"](_0x45563b) {
								var _0x39e7c6 = _0x5d9431;
								_0x45563b["isDead"] ||
									(this["penetrating"]--, this["penetrating"] <= 0x0 && this["DeSpawn"]());
							}
							["Update"]() {
								var _0x5116df = _0x5d9431;
								this["PfxEmitter"]["emitParticleAt"](this["x"], this["y"]);
							}
						},
						_0x4a11ab = class extends _0x3004d6 {},
						_0x2c1385 = class extends _0x4071dc {
							constructor(_0x4f4a00, _0x1b66da, _0x33b631, _0x2c0e78, _0x25bc91) {
								var _0x572226 = _0x5d9431;
								super(_0x4f4a00, _0x1b66da, _0x33b631, "vfx", "slash.png", _0x2c0e78, _0x25bc91),
									(this["previousArea"] = 0x0);
							}
							["Init"](_0x3b7dfe = -0x3e8, _0x7ec9f0 = -0x3e8) {
								var _0x136db1 = _0x5d9431;
								super["Init"](_0x3b7dfe, _0x7ec9f0),
									this["setScale"](0x0),
									(this["previousArea"] = this["weapon"]["PArea"]),
									(this["tween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										scale: _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
										duration: 0x64,
										ease: "Linear",
									}));
							}
							["OnRecycle"]() {
								var _0x5a7c17 = _0x5d9431,
									_0x52b843;
								super["OnRecycle"](),
									(this["alpha"] = 0x1),
									this["tween"] &&
										(this["previousArea"] != this["weapon"]["PArea"] &&
											(this["tween"]["stop"](),
											this["scene"]["tweens"]["remove"](this["tween"]),
											this["setScale"](0x0),
											(this["tween"] = this["scene"]["tweens"]["add"]({
												targets: this,
												scale: _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
												duration: 0x64,
												ease: "Linear",
											}))),
										this["tween"]["restart"]()),
									null === (_0x52b843 = this["tween2"]) ||
										void 0x0 === _0x52b843 ||
										_0x52b843["stop"](),
									(this["tween2"] = this["scene"]["tweens"]["add"]({
										targets: this,
										alpha: 0x0,
										duration: 0x64,
										ease: "Linear",
										delay: 0x64,
										onComplete: () => {
											var _0x39ee10 = _0x5a7c17;
											this["DeSpawn"]();
										},
									}));
								const _0x46b52c = _0x2164b8["Core"]["Player"]["flipX"]
									? this["indexInWeapon"] % 0x2 != 0x1
									: this["indexInWeapon"] % 0x2 == 0x1;
								(this["x"] += _0x46b52c ? -0x40 : 0x40),
									(this["y"] -= 0x10),
									(this["y"] -= 0x10 * this["indexInWeapon"]),
									this["setFlipY"](this["indexInWeapon"] % 0x2 == 0x1),
									this["setFlipX"](_0x46b52c),
									_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Whip"], {
										detune: -0x64 * this["indexInWeapon"],
										volume: 1.7,
										rate: 0x2,
									});
							}
						},
						_0xf03af6 = class extends _0x4071dc {
							constructor(_0x51e409, _0x585dee, _0x5f5f4e, _0x2ac75c, _0x34b179) {
								var _0x22904f = _0x5d9431;
								super(_0x51e409, _0x585dee, _0x5f5f4e, "items", "Diamond2.png", _0x2ac75c, _0x34b179),
									(this["bouncePositions"] = new Array()),
									(this["positions"] = []),
									(this["maxPositions"] = 0x64),
									(this["color"] = 0xff0000),
									(this["save_vel_x"] = 0x0),
									(this["save_vel_y"] = 0x0),
									this["scene"]["physics"]["world"]["on"]("worldbounds", this["Bounce"], this),
									(this["trail"] = this["scene"]["add"]["graphics"]({
										x: 0x0,
										y: 0x0,
										lineStyle: {
											width: 0x1,
											color: 0xff0000,
											alpha: 0x1,
										},
										fillStyle: {
											color: 0xff0000,
											alpha: 0x1,
										},
									}));
							}
							["OnRecycle"]() {
								var _0x1c8e0e = _0x5d9431;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x8),
									(this["_speed"] = 1.1),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									this["setCollideWorldBounds"](!0x0, 0x1, 0x1),
									this["body"]["setBoundsRectangle"](_0x2164b8["Core"]["Player"]["WorldBoxCollider"]),
									(this["body"]["onWorldBounds"] = !0x0),
									(this["trail"]["x"] = this["x"] - _0x2164b8["Core"]["Player"]["x"]),
									(this["trail"]["y"] = this["y"] - _0x2164b8["Core"]["Player"]["y"]),
									(this["color"] = 0xffffff * Math["random"]()),
									(this["trail"]["alpha"] = 0x1),
									(this["alpha"] = 0x1),
									this["clearPositions"](),
									(this["ExpireTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["PDuration"],
										loop: !0x1,
										callback: () => {
											var _0xc0b4d = _0x1c8e0e;
											_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
												this["FadeOut"]();
										},
									})),
									(this["ExpireTimer"]["name"] = "DI Expire"),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["MagicMissile"],
										{
											detune: -0x64 * this["indexInWeapon"],
											volume: 0.15,
										},
										0xc8,
										0xa
									);
							}
							["OnHasHitWall"](_0x15c37e) {
								var _0x182f43 = _0x5d9431;
								(this["save_vel_x"] *= _0x15c37e["faceRight"] || _0x15c37e["faceLeft"] ? -0x1 : 0x1),
									(this["save_vel_y"] *=
										_0x15c37e["faceTop"] || _0x15c37e["faceBottom"] ? -0x1 : 0x1),
									this["setVelocity"](this["save_vel_x"], this["save_vel_y"]),
									(this["objectsHit"] = []);
							}
							["SetTarget"](_0x11a151) {
								var _0x5ef7bb = _0x5d9431;
								super["SetTarget"](_0x11a151);
								var _0x3f832a = this["AngleFromTargetRadians"](this["target"]),
									_0x2e96c1 = [0x0, 0xa, -0xa, 0x14, -0x14, 0x1e, -0x1e, 0x28, -0x28];
								this["scene"]["physics"]["velocityFromRotation"](
									_0x3f832a +
										Phaser["Math"]["DegToRad"](
											_0x2e96c1[this["indexInWeapon"] % _0x2e96c1["length"]]
										),
									this["TrueSpeed"],
									this["body"]["velocity"]
								);
								var _0x424ad4 = Phaser["Math"]["Vector2"]["RIGHT"];
								this["setAngle"](
									Phaser["Math"]["RadToDeg"](
										Math["atan2"](
											this["body"]["velocity"]["y"] - _0x424ad4["y"],
											this["body"]["velocity"]["x"] - _0x424ad4["x"]
										)
									)
								);
							}
							["Bounce"](_0x19b292) {
								this["body"] === _0x19b292 && (this["objectsHit"] = []);
							}
							["FadeOut"]() {
								var _0x2853b0 = _0x5d9431;
								this["scene"]["tweens"]["add"]({
									targets: [this["trail"], this],
									alpha: 0x0,
									duration: 0x64,
									ease: "Linear",
									onComplete: () => {
										var _0x2e8419 = _0x2853b0;
										this["DeSpawn"]();
									},
								});
							}
							get ["customAngle"]() {
								var _0x3d1a70 = _0x5d9431;
								return Phaser["Math"]["RadToDeg"](
									this["AngleFromVelocityRadians"](this["body"]["velocity"])
								);
							}
							["Update"](_0xa18a99) {
								var _0x281e04 = _0x5d9431;
								this["trail"]["setDepth"](
									this["y"] -
										_0x2164b8["Core"]["Player"]["y"] +
										0.5 * this["scene"]["renderer"]["height"]
								);
								let _0x7849d7 = Math["ceil"](_0xa18a99 / 0x10);
								for (let _0x186d29 = 0x0; _0x186d29 < _0x7849d7; _0x186d29++) this["trailUpdate"]();
								(this["save_vel_x"] =
									0x0 == this["body"]["velocity"]["x"]
										? this["save_vel_x"]
										: this["body"]["velocity"]["x"]),
									(this["save_vel_y"] =
										0x0 == this["body"]["velocity"]["y"]
											? this["save_vel_y"]
											: this["body"]["velocity"]["y"]);
							}
							["AngleFromVelocityRadians"](_0x19992d) {
								var _0x1309c3 = _0x5d9431,
									_0x142f61 = Phaser["Math"]["Vector2"]["RIGHT"];
								return Math["atan2"](_0x19992d["y"] - _0x142f61["y"], _0x19992d["x"] - _0x142f61["x"]);
							}
							["clearPositions"]() {
								this["positions"] = [];
							}
							["trailUpdate"]() {
								var _0x257b15 = _0x5d9431;
								const _0x19a709 = 0x2 * _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"];
								if (this["active"])
									this["positions"]["unshift"]([this["x"], this["y"]]),
										this["positions"]["length"] > this["maxPositions"] &&
											this["positions"]["pop"]();
								else {
									if (this["positions"]["length"] > this["maxPositions"] - 0xa) {
										for (var _0xae25ec = 0x0; _0xae25ec < this["positions"]["length"]; _0xae25ec++)
											_0xae25ec > this["maxPositions"] - 0xa &&
												this["positions"]["splice"](_0xae25ec, 0x1);
									}
									this["positions"]["length"] > 0x1
										? (this["positions"]["unshift"]([this["x"], this["y"]]),
										  this["positions"]["pop"]())
										: this["clearPositions"]();
								}
								for (var _0xae25ec of (this["trail"]["clear"](),
								this["trail"]["beginPath"](),
								Array(this["positions"]["length"])["keys"]()))
									0x0 != _0xae25ec &&
										(this["trail"]["lineStyle"](_0x19a709, this["color"], 0x1 / (_0xae25ec / 0x14)),
										this["trail"]["moveTo"](
											this["positions"][_0xae25ec - 0x1][0x0],
											this["positions"][_0xae25ec - 0x1][0x1]
										),
										this["trail"]["lineTo"](
											this["positions"][_0xae25ec][0x0],
											this["positions"][_0xae25ec][0x1]
										));
								this["trail"]["closePath"](),
									this["trail"]["strokePath"](),
									this["trail"]["beginPath"]();
								for (let _0x13171b = 0x0; _0x13171b < 0x32; _0x13171b++)
									0x0 != _0x13171b &&
										this["positions"][_0x13171b] &&
										this["positions"][_0x13171b - 0x1] &&
										(this["trail"]["lineStyle"](
											0.5 * _0x19a709,
											0xffffff,
											0.8 / (_0x13171b / 0x14)
										),
										this["trail"]["moveTo"](
											this["positions"][_0x13171b - 0x1][0x0],
											this["positions"][_0x13171b - 0x1][0x1]
										),
										this["trail"]["lineTo"](
											this["positions"][_0x13171b][0x0],
											this["positions"][_0x13171b][0x1]
										));
								this["trail"]["closePath"](),
									this["trail"]["strokePath"](),
									(this["trail"]["blendMode"] = _0x1cb257["BlendModes"]["ADD"]);
							}
						},
						_0x1ac304 = class extends _0x4071dc {
							constructor(_0x36ae4d, _0x521fd5, _0x201d6b, _0x47b5db, _0x581770) {
								var _0x1d4ad5 = _0x5d9431;
								super(_0x36ae4d, _0x521fd5, _0x201d6b, "items", "HolyWater.png", _0x47b5db, _0x581770),
									(this["radius"] = 0x10),
									(this["exploRadius"] = 0x8),
									(this["isBroken"] = !0x1),
									(this["_currentDirection"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
									(this["_speed"] = 0x2),
									(this["explosionCircle"] = new Phaser["Geom"]["Circle"](
										0x0,
										0x0,
										this["exploRadius"]
									)),
									(this["GroundFx"] = this["scene"]["add"]
										["circle"](0x0, 0x0, this["radius"], 0xff)
										["setOrigin"](0.5)
										["setAlpha"](0.2)
										["setVisible"](!0x1)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])),
									(this["PfxEmitterManager"] = this["scene"]["add"]["particles"]("vfx")),
									(this["PfxEmitter1"] = this["PfxEmitterManager"]["createEmitter"]({
										frame: ["ProjectileFlameHoly.png", "ProjectileFlameBlue.png"],
										speed: {
											min: 0x1,
											max: 0x1,
										},
										quantity: 0x1,
										rotate: {
											min: 0x5a,
											max: 0x5a,
										},
										lifespan: 0x258,
										alpha: {
											start: 0x1,
											end: 0x0,
										},
										scale: {
											start: _0x1fa5bb["PixelScale"] / 0x4,
											end: _0x1fa5bb["PixelScale"],
										},
										emitZone: {
											type: "random",
											source: this["explosionCircle"],
										},
										on: !0x1,
									})),
									(this["PfxEmitter2"] = this["PfxEmitterManager"]["createEmitter"]({
										frame: ["ProjectileFlameHoly.png", "ProjectileFlameBlue.png"],
										speed: {
											min: 0x1,
											max: 0x1,
										},
										quantity: 0x1,
										rotate: {
											min: 0x5a,
											max: 0x5a,
										},
										lifespan: 0x258,
										alpha: {
											start: 0.2,
											end: 0x0,
										},
										scale: {
											start: _0x1fa5bb["PixelScale"] / 0x4,
											end: _0x1fa5bb["PixelScale"] / 0x2,
										},
										blendMode: _0x1cb257["BlendModes"]["ADD"],
										emitZone: {
											type: "random",
											source: this["explosionCircle"],
										},
										on: !0x1,
									})),
									(this["PfxEmitterExplosionManager"] = this["scene"]["add"]["particles"]("vfx")),
									this["PfxEmitterExplosionManager"]["createEmitter"]({
										frame: ["HitCloud2.png"],
										quantity: 0x1,
										rotate: {
											min: 0x0,
											max: 0x168,
										},
										lifespan: 0x96,
										alpha: {
											start: 0x1,
											end: 0.5,
										},
										scale: {
											start: _0x1fa5bb["PixelScale"] / 0x4,
											end: 0x2 * _0x1fa5bb["PixelScale"],
										},
										on: !0x1,
									}),
									this["PfxEmitterExplosionManager"]["createEmitter"]({
										frame: ["HitCloud1.png"],
										quantity: 0x3,
										rotate: {
											min: 0x0,
											max: 0x168,
										},
										lifespan: 0x96,
										alpha: {
											start: 0x1,
											end: 0.5,
										},
										scale: {
											start: _0x1fa5bb["PixelScale"] / 0x4,
											end: _0x1fa5bb["PixelScale"],
										},
										on: !0x1,
									}),
									(this["AngleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										angle: 0x168,
										duration: 0x258,
										ease: "Linear",
										repeat: -0x1,
									}));
							}
							["OnRecycle"]() {
								var _0x39bb32 = _0x5d9431;
								super["OnRecycle"](),
									(this["_speed"] = 0x2),
									this["body"]["setCircle"](
										this["radius"],
										-0.5 * this["radius"],
										-0.5 * this["radius"]
									),
									this["setScale"](_0x1fa5bb["PixelScale"]),
									this["setVisible"](!0x0),
									(this["isBroken"] = !0x1),
									(this["body"]["enable"] = !0x1),
									(this["isCullable"] = !0x1),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									(this["explosionCircle"] = new Phaser["Geom"]["Circle"](
										0x0,
										0x0,
										this["exploRadius"] * this["weapon"]["PArea"] * 0x3
									)),
									this["PfxEmitter1"]["setEmitZone"]({
										type: "random",
										source: this["explosionCircle"],
									}),
									this["PfxEmitter1"]["setQuantity"](
										0x1 + Math["floor"](this["weapon"]["level"] / 0x3)
									),
									this["PfxEmitter2"]["setEmitZone"]({
										type: "random",
										source: this["explosionCircle"],
									}),
									this["PfxEmitter2"]["setQuantity"](
										0x1 + Math["floor"](this["weapon"]["level"] / 0x3)
									);
								var _0x1ed384 = new Phaser["Math"]["Vector2"](
									_0x2164b8["Core"]["Player"]["x"],
									_0x2164b8["Core"]["Player"]["y"]
								);
								(this["x"] =
									_0x1ed384["x"] +
									(Math["random"]() - 0.5) * this["scene"]["renderer"]["width"] * 0.5),
									(this["y"] = _0x1ed384["y"] - 0.6 * this["scene"]["renderer"]["height"]);
								const _0x4af4e4 = this["weapon"],
									_0x41c5a1 = _0x4af4e4["GetAngle"](),
									_0x5a830d = _0x4af4e4["GetRadius"]();
								if (
									((_0x1ed384["x"] += Math["cos"](_0x41c5a1) * _0x5a830d),
									(_0x1ed384["y"] += Math["sin"](_0x41c5a1) * _0x5a830d),
									this["weapon"]["PAmount"] < 0x4 && 0x0 == this["indexInWeapon"])
								) {
									var _0x422bca = this["scene"]["physics"]["closest"](
										_0x2164b8["Core"]["Player"],
										_0x2164b8["Core"]["Enemies"]
									);
									_0x422bca && ((_0x1ed384["x"] = _0x422bca["x"]), (_0x1ed384["y"] = _0x422bca["y"]));
								}
								this["setDepth"](
									this["y"] - _0x2164b8["Core"]["Player"]["y"] + this["scene"]["renderer"]["height"]
								),
									this["PositionTween"] && this["scene"]["tweens"]["remove"](this["PositionTween"]),
									(this["PositionTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										x: _0x1ed384["x"],
										y: _0x1ed384["y"],
										duration: 0x2ee,
										ease: "Linear",
										onComplete: () => {
											this["Break"]();
										},
									}));
							}
							["Break"]() {
								var _0x58c57f = _0x5d9431;
								this["isBroken"] ||
									((this["isBroken"] = !0x0),
									this["setVisible"](!0x1),
									this["setVelocity"](0x0, 0x0),
									(this["objectsHit"] = []),
									(this["body"]["enable"] = !0x0),
									this["GroundFx"]
										["setPosition"](this["x"], this["y"])
										["setVisible"](!0x0)
										["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"])
										["setOrigin"](0.5),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									(this["HitboxTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["hitBoxDelay"],
										loop: !0x0,
										callback: () => {
											var _0x1de76e = _0x58c57f;
											this["objectsHit"] = [];
										},
									})),
									(this["HitboxTimer"]["name"] = "HW Hitbox"),
									(this["ExpireTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["PDuration"],
										loop: !0x1,
										callback: () => {
											var _0x1273e0 = _0x58c57f;
											this["GroundFx"]["setVisible"](!0x1),
												_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
												_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
												this["DeSpawn"]();
										},
									})),
									(this["ExpireTimer"]["name"] = "HW Expire"),
									this["PfxEmitterExplosionManager"]["emitParticleAt"](this["x"], this["y"]),
									this["PfxEmitterManager"]["setDepth"](
										this["y"] -
											_0x2164b8["Core"]["Player"]["y"] -
											0.5 * this["scene"]["renderer"]["height"]
									),
									this["GroundFx"]["setDepth"](
										this["y"] -
											_0x2164b8["Core"]["Player"]["y"] -
											0.5 * this["scene"]["renderer"]["height"]
									),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["Holywater"],
										{
											detune: -0xc8 - -0x32 * this["indexInWeapon"],
											volume: 0.35,
											rate: 0x2,
										},
										0xc8,
										0xc
									));
							}
							["Update"]() {
								var _0x5f3dd1 = _0x5d9431;
								this["isBroken"] && this["PfxEmitterManager"]["emitParticleAt"](this["x"], this["y"]);
							}
							["DeSpawn"]() {
								var _0x5f15b9 = _0x5d9431;
								(this["isCullable"] = !0x0),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									this["GroundFx"]["setVisible"](!0x1),
									super["DeSpawn"]();
							}
						},
						_0x150981 = class extends _0x4071dc {
							constructor(_0x4e2fdf, _0x19b877, _0x56165f, _0x33ff14, _0x5de4e2) {
								var _0x1dc889 = _0x5d9431;
								super(
									_0x4e2fdf,
									_0x19b877,
									_0x56165f,
									"vfx",
									"ProjectileAxe1.png",
									_0x33ff14,
									_0x5de4e2
								),
									(this["posHistory"] = new Array()),
									(this["maxHistory"] = 0x1),
									(this["historyIndex"] = 0x0),
									(this["initialVelocity"] = new Phaser["Math"]["Vector2"]()),
									(this["moveAngle"] = 0x0),
									(this["grav"] = 0.625),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									(this["AngleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										angle: 0x168,
										duration: 0x3e8,
										ease: "Linear",
										repeat: -0x1,
									})),
									(this["MovementTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										moveAngle: Math["PI"],
										duration: 0x3e8,
										ease: "Linear",
									})),
									(this["ghosts"] = new Array());
								for (let _0x6459f8 = 0x0; _0x6459f8 < this["maxHistory"]; _0x6459f8++) {
									this["posHistory"]["push"](new Phaser["Math"]["Vector2"](_0x19b877, _0x56165f));
									var _0x51e473 = this["scene"]["add"]
										["image"](0x0, 0x0, this["texture"]["key"], this["frame"]["name"])
										["setScale"](_0x1fa5bb["PixelScale"])
										["setVisible"](!0x1)
										["setTint"](0xff)
										["setAlpha"](0.75 - 0.25 * _0x6459f8);
									this["ghosts"]["push"](_0x51e473);
								}
							}
							["OnRecycle"]() {
								var _0x198d1e = _0x5d9431,
									_0x2e6f03;
								super["OnRecycle"](),
									this["body"]["setCircle"](0xc),
									(this["_speed"] = 0x2),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]);
								const _0x3d195e =
									_0x2164b8["Core"]["Player"]["lastFacedDirection"]["dot"](
										Phaser["Math"]["Vector2"]["RIGHT"]
									) < 0x0
										? -0x1
										: 0x1;
								var _0x4f66ea =
									((0x2d * _0x3d195e) / this["weapon"]["PAmount"]) * this["indexInWeapon"] - 0x5a;
								this["scene"]["physics"]["velocityFromRotation"](
									Phaser["Math"]["DegToRad"](_0x4f66ea),
									this["TrueSpeed"],
									this["body"]["velocity"]
								),
									(this["initialVelocity"]["x"] = this["body"]["velocity"]["x"]),
									(this["initialVelocity"]["y"] = Math["max"](-0x258, this["body"]["velocity"]["y"]));
								for (let _0x11132b = 0x0; _0x11132b < this["posHistory"]["length"]; _0x11132b++)
									(this["posHistory"][_0x11132b]["x"] = this["x"]),
										(this["posHistory"][_0x11132b]["y"] = this["y"]);
								(this["moveAngle"] = Phaser["Math"]["DegToRad"](_0x4f66ea)),
									(this["MovementTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										moveAngle: Phaser["Math"]["DegToRad"](_0x4f66ea + 0xb4 * _0x3d195e),
										duration: 0x5dc,
										ease: "Linear",
									})),
									null === (_0x2e6f03 = this["ScaleTween"]) ||
										void 0x0 === _0x2e6f03 ||
										_0x2e6f03["stop"](),
									(this["ScaleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										scale: 0x0,
										duration: 0x1f4,
										delay: 0xfa0,
										ease: "Linear",
										onComplete: () => {
											var _0x2826ee = _0x198d1e;
											(this["isCullable"] = !0x0), this["DeSpawn"]();
										},
									})),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["Shot"],
										{
											detune: -0x64 * this["indexInWeapon"],
											volume: 0.45,
										},
										0xc8,
										0xa
									),
									(this["isCullable"] = !0x1);
							}
							["DeSpawn"]() {
								var _0x169b81 = _0x5d9431,
									_0x3eb35a,
									_0x32490e;
								super["DeSpawn"](),
									null === (_0x3eb35a = this["MovementTween"]) ||
										void 0x0 === _0x3eb35a ||
										_0x3eb35a["stop"](),
									null === (_0x32490e = this["ScaleTween"]) ||
										void 0x0 === _0x32490e ||
										_0x32490e["stop"]();
								for (let _0x41a713 = 0x0; _0x41a713 < this["ghosts"]["length"]; _0x41a713++)
									this["ghosts"][_0x41a713]["setVisible"](!0x1);
							}
							["OnHasHitAnObject"](_0x298bcb) {
								var _0x46a3ce = _0x5d9431;
								_0x298bcb["isDead"] ||
									(this["penetrating"]--, this["penetrating"] <= 0x0 && this["DeSpawn"]());
							}
							["getHistoryIndex"](_0x3ddb8b) {
								var _0x3a4345 = _0x5d9431;
								return this["historyIndex"] + _0x3ddb8b >= this["maxHistory"]
									? this["historyIndex"] + _0x3ddb8b - this["maxHistory"]
									: this["historyIndex"] + _0x3ddb8b;
							}
							["Update"](_0x517990) {
								var _0x31d3bb = _0x5d9431;
								(this["initialVelocity"]["y"] += _0x517990 * this["grav"]),
									this["historyIndex"] < this["maxHistory"] - 0x1
										? this["historyIndex"]++
										: (this["historyIndex"] = 0x0);
								for (let _0x20c3a9 = 0x0; _0x20c3a9 < this["ghosts"]["length"]; _0x20c3a9++) {
									var _0x221efc = this["posHistory"][this["getHistoryIndex"](_0x20c3a9)],
										_0x1285d7 = this["ghosts"][_0x20c3a9];
									_0x1285d7["setAngle"](this["angle"]),
										_0x1285d7["setPosition"](_0x221efc["x"], _0x221efc["y"]),
										_0x1285d7["setScale"](this["scale"]),
										_0x1285d7["setVisible"](!0x0);
								}
								this["setVelocity"](this["initialVelocity"]["x"], this["initialVelocity"]["y"]),
									(this["posHistory"][this["historyIndex"]]["x"] = this["x"]),
									(this["posHistory"][this["historyIndex"]]["y"] = this["y"]);
							}
						},
						_0x7d84ce = class extends _0x4071dc {
							constructor(_0x1b6760, _0x1a4d52, _0x3e4048, _0x1a5820, _0x29ceb5) {
								var _0x1a7c99 = _0x5d9431;
								super(
									_0x1b6760,
									_0x1a4d52,
									_0x3e4048,
									"vfx",
									"ProjectileFireball2.png",
									_0x1a5820,
									_0x29ceb5
								),
									this["setScale"](0x0),
									(this["_speed"] = 0.8),
									(this["PfxEmitter"] = this["scene"]["add"]["particles"]("vfx")),
									this["PfxEmitter"]["createEmitter"]({
										frame: ["HitBoom1.png", "HitBoom2.png"],
										rotate: {
											min: 0x0,
											max: 0x168,
										},
										quantity: 0x1,
										lifespan: 0x12c,
										scale: {
											start: 0.5,
											end: 0x0,
										},
										on: !0x1,
									}),
									(this["ScaleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										duration: 0x64,
										ease: "Linear",
										scale: 0.5 * _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
									}));
							}
							["OnRecycle"]() {
								var _0x5e6579 = _0x5d9431;
								super["OnRecycle"](),
									this["body"]["setCircle"](0xc),
									this["setScale"](0x0),
									(this["_speed"] = 0.8),
									(this["y"] -= 0x10),
									this["ScaleTween"] &&
										(this["ScaleTween"]["stop"](),
										this["scene"]["tweens"]["remove"](this["ScaleTween"]),
										this["setScale"](0x0),
										(this["ScaleTween"] = this["scene"]["tweens"]["add"]({
											targets: this,
											duration: 0xc8,
											ease: "Linear",
											scale: _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
										})),
										this["ScaleTween"]["restart"]());
							}
							["SetTarget"](_0x30af79) {
								var _0x31db9c = _0x5d9431;
								super["SetTarget"](_0x30af79);
								var _0x107b12 = this["AngleFromTargetRadians"](this["target"]),
									_0x25ad7d = [
										0x0, 0x5, -0x5, 0xa, -0xa, 0xf, -0xf, 0x14, -0x14, 0x19, -0x19, 0x1e, -0x1e,
										0x23, -0x23, 0x28, -0x28, 0x2d, -0x2d,
									];
								this["scene"]["physics"]["velocityFromRotation"](
									_0x107b12 +
										Phaser["Math"]["DegToRad"](
											_0x25ad7d[this["indexInWeapon"] % _0x25ad7d["length"]]
										),
									this["TrueSpeed"],
									this["body"]["velocity"]
								);
								var _0x3e3213 = Phaser["Math"]["Vector2"]["RIGHT"];
								this["setAngle"](
									Phaser["Math"]["RadToDeg"](
										Math["atan2"](
											this["body"]["velocity"]["y"] - _0x3e3213["y"],
											this["body"]["velocity"]["x"] - _0x3e3213["x"]
										)
									)
								);
							}
							["OnHasHitAnObject"](_0x41f48c) {
								var _0x3cf518 = _0x5d9431;
								_0x41f48c["isDead"] ||
									(this["penetrating"]--, this["penetrating"] <= 0x0 && this["DeSpawn"]());
							}
							["Update"]() {
								var _0x1855c8 = _0x5d9431;
								this["PfxEmitter"]["emitParticleAt"](this["x"], this["y"]);
							}
						},
						_0x150668 = class extends _0x4071dc {
							constructor(_0x109bf8, _0x224077, _0x244c3d, _0x5ba29d, _0x2932b6) {
								var _0x290bca = _0x5d9431;
								super(
									_0x109bf8,
									_0x224077,
									_0x244c3d,
									"vfx",
									"ProjectileKnife3.png",
									_0x5ba29d,
									_0x2932b6
								),
									(this["posHistory"] = new Array()),
									(this["maxHistory"] = 0x1),
									(this["historyIndex"] = 0x0),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									this["setAngle"](-0x5a),
									(this["_speed"] = 0x2),
									(this["ghosts"] = new Array());
								for (let _0x2af9bf = 0x0; _0x2af9bf < this["maxHistory"]; _0x2af9bf++) {
									this["posHistory"]["push"](new Phaser["Math"]["Vector2"](_0x224077, _0x244c3d));
									var _0x2acb09 = this["scene"]["add"]
										["image"](0x0, 0x0, this["texture"]["key"], this["frame"]["name"])
										["setScale"](1.5 * _0x1fa5bb["PixelScale"], 0.75 * _0x1fa5bb["PixelScale"])
										["setVisible"](!0x1)
										["setTint"](0xff)
										["setAlpha"](0.5 - 0.25 * _0x2af9bf);
									this["ghosts"]["push"](_0x2acb09);
								}
							}
							["OnRecycle"]() {
								var _0x54365a = _0x5d9431;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x8),
									(this["_speed"] = 0x2),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]);
								for (let _0x13ae3a = 0x0; _0x13ae3a < this["ghosts"]["length"]; _0x13ae3a++) {
									var _0x591108 = this["ghosts"][_0x13ae3a];
									_0x591108["setScale"](0x2 * this["scale"], 0.75 * this["scale"]),
										_0x591108["setVisible"](!0x0),
										_0x591108["setAngle"](this["angle"]),
										_0x591108["setPosition"](this["x"], this["y"]);
								}
								for (let _0x372df0 = 0x0; _0x372df0 < this["posHistory"]["length"]; _0x372df0++)
									(this["posHistory"][_0x372df0]["x"] = this["x"]),
										(this["posHistory"][_0x372df0]["y"] = this["y"]);
								(this["y"] -= 0xc),
									(this["x"] +=
										(Math["random"]() - 0.5) *
										(0x0 == this["indexInWeapon"] ? 0x0 : 0x28) *
										this["weapon"]["PArea"]),
									(this["y"] +=
										(Math["random"]() - 0.5) *
										(0x0 == this["indexInWeapon"] ? 0x0 : 0x28) *
										this["weapon"]["PArea"]),
									this["ApplyPlayerFacingVelocity"]();
								let _0x5c4e55 = this["weapon"]["volume"] ? this["weapon"]["volume"] : 0.4;
								_0x2164b8["Sound"]["PlaySound"](
									_0x522ca7["Shot"],
									{
										detune: -0x64 * this["indexInWeapon"],
										volume: _0x5c4e55,
									},
									0xc8,
									0xa
								);
							}
							["DeSpawn"]() {
								var _0xb6df9 = _0x5d9431;
								for (let _0x1e4631 = 0x0; _0x1e4631 < this["ghosts"]["length"]; _0x1e4631++)
									this["ghosts"][_0x1e4631]["setVisible"](!0x1);
								super["DeSpawn"]();
							}
							["OnHasHitAnObject"](_0x465f27) {
								var _0x59affd = _0x5d9431;
								_0x465f27["isDead"] ||
									(this["penetrating"]--, this["penetrating"] <= 0x0 && this["DeSpawn"]());
							}
							["getHistoryIndex"](_0x46e2d5) {
								var _0x415afc = _0x5d9431;
								return this["historyIndex"] + _0x46e2d5 >= this["maxHistory"]
									? this["historyIndex"] + _0x46e2d5 - this["maxHistory"]
									: this["historyIndex"] + _0x46e2d5;
							}
							["Update"]() {
								var _0x561260 = _0x5d9431;
								this["historyIndex"] < this["maxHistory"] - 0x1
									? this["historyIndex"]++
									: (this["historyIndex"] = 0x0);
								for (let _0x52310f = 0x0; _0x52310f < this["ghosts"]["length"]; _0x52310f++) {
									var _0x867554 = this["posHistory"][this["getHistoryIndex"](_0x52310f)],
										_0x174e9e = this["ghosts"][_0x52310f];
									_0x174e9e["setAngle"](this["angle"]),
										_0x174e9e["setPosition"](_0x867554["x"], _0x867554["y"]);
								}
								(this["posHistory"][this["historyIndex"]]["x"] = this["x"]),
									(this["posHistory"][this["historyIndex"]]["y"] = this["y"]);
							}
						},
						_0x1fff3d = class extends _0x4071dc {
							constructor(_0x5d7ddd, _0x553121, _0x2f86d4, _0x363a04, _0xed2034) {
								var _0x252b69 = _0x5d9431;
								super(_0x5d7ddd, _0x553121, _0x2f86d4, "vfx", "HolyBook.png", _0x363a04, _0xed2034),
									(this["deltaTime"] = 0x0),
									(this["radius"] = 0x32),
									(this["radiusTimeX"] = 0x1),
									(this["perc"] = 0x1 / 0x10),
									this["setScale"](_0x1fa5bb["PixelScale"] * (0x1 + 0.1 * this["weapon"]["PArea"]));
								var _0x1bd45e = this["scene"]["add"]["particles"]("vfx");
								this["PfxEmitter"] = _0x1bd45e["createEmitter"]({
									frame: ["Page.png"],
									speed: 0x32,
									quantity: 0x1,
									lifespan: 0x12c,
									alpha: {
										start: 0.7,
										end: 0x0,
									},
									on: !0x0,
									follow: this,
									frequency: 0xc8,
								});
							}
							["OnRecycle"]() {
								var _0x211e42 = _0x5d9431,
									_0x34621b;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x8),
									this["setScale"](0x0),
									null === (_0x34621b = this["scaleTween"]) ||
										void 0x0 === _0x34621b ||
										_0x34621b["stop"](),
									(this["scaleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										scale: _0x1fa5bb["PixelScale"] * (0x1 + 0.2 * this["weapon"]["PArea"]),
										duration: 0x1f4,
										onComplete: () => this["PfxEmitter"]["start"](),
									})),
									(this["deltaTime"] =
										((0x2 * Math["PI"]) / this["weapon"]["PAmount"]) * this["indexInWeapon"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									(this["HitboxTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["hitBoxDelay"],
										loop: !0x0,
										callback: () => {
											var _0x183df6 = _0x211e42;
											this["objectsHit"] = [];
										},
									})),
									(this["HitboxTimer"]["name"] = "HB Hitbox"),
									(this["ExpireTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["PDuration"],
										loop: !0x1,
										callback: () => {
											var _0x13a122 = _0x211e42,
												_0x3abce4;
											_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
												_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
												this["PfxEmitter"]["stop"](),
												null === (_0x3abce4 = this["scaleTween"]) ||
													void 0x0 === _0x3abce4 ||
													_0x3abce4["stop"](),
												(this["scaleTween"] = this["scene"]["tweens"]["add"]({
													targets: this,
													scale: 0x0,
													duration: 0x1f4,
													onComplete: () => this["DeSpawn"](),
												}));
										},
									})),
									(this["ExpireTimer"]["name"] = "HB Expire");
							}
							["DeSpawn"]() {
								var _0x339e51 = _0x5d9431,
									_0x231411,
									_0x8f0a3e;
								super["DeSpawn"](),
									null === (_0x231411 = this["scaleTween"]) ||
										void 0x0 === _0x231411 ||
										_0x231411["stop"](),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									null === (_0x8f0a3e = this["PfxEmitter"]) ||
										void 0x0 === _0x8f0a3e ||
										_0x8f0a3e["stop"]();
							}
							["Update"](_0x2db475) {
								var _0x577645 = _0x5d9431;
								(this["deltaTime"] += 0.035 * this["weapon"]["PSpeed"] * _0x2db475 * this["perc"]),
									this["copyPosition"](_0x2164b8["Core"]["Player"]),
									(this["x"] +=
										Math["cos"](this["deltaTime"]) * this["weapon"]["PArea"] * this["radius"]),
									(this["y"] +=
										Math["sin"](this["deltaTime"]) * this["weapon"]["PArea"] * this["radius"]);
							}
						},
						_0x4822bb = class extends _0x4071dc {
							constructor(_0x191199, _0x1f7c1e, _0x14d7e5, _0x4b91c5, _0x59b63) {
								var _0x52e8be = _0x5d9431;
								super(_0x191199, _0x1f7c1e, _0x14d7e5, "vfx", "Page2.png", _0x4b91c5, _0x59b63),
									(this["deltaTime"] = 0x0),
									(this["radius"] = 0x32),
									(this["radiusTimeX"] = 0x1),
									(this["perc"] = 0x1 / 0x10),
									this["setScale"](_0x1fa5bb["PixelScale"] * (0x1 + 0.1 * this["weapon"]["PArea"]));
								let _0x677615 = new Array();
								_0x677615["push"]({
									key: "vfx",
									frame: "g.png",
								}),
									_0x677615["push"]({
										key: "vfx",
										frame: "o.png",
									}),
									_0x677615["push"]({
										key: "vfx",
										frame: "r.png",
									}),
									_0x677615["push"]({
										key: "vfx",
										frame: "g.png",
									}),
									_0x677615["push"]({
										key: "vfx",
										frame: "o.png",
									}),
									_0x677615["push"]({
										key: "vfx",
										frame: "n.png",
									}),
									_0x677615["push"]({
										key: "vfx",
										frame: "z.png",
									}),
									_0x677615["push"]({
										key: "vfx",
										frame: "o.png",
									}),
									_0x677615["push"]({
										key: "vfx",
										frame: "l.png",
									}),
									_0x677615["push"]({
										key: "vfx",
										frame: "a.png",
									}),
									this["anims"]["create"]({
										key: "idle",
										frames: _0x677615,
										frameRate: 0x2,
										repeat: -0x1,
									});
								var _0x396a25 = this["scene"]["add"]["particles"]("vfx");
								this["PfxEmitter"] = _0x396a25["createEmitter"]({
									frame: ["Page2.png"],
									speed: 0x32,
									quantity: 0x2,
									lifespan: 0x12c,
									alpha: {
										start: 0x1,
										end: 0x0,
									},
									on: !0x0,
									follow: this,
									frequency: 0x64,
								});
							}
							["OnRecycle"]() {
								var _0x2b9513 = _0x5d9431,
									_0x43442a;
								super["OnRecycle"](),
								!global["anims_disabled"].value ?
									this["anims"]["play"]("idle") : '',
									this["body"]["setCircle"](0x8),
									this["setScale"](0x0),
									null === (_0x43442a = this["scaleTween"]) ||
										void 0x0 === _0x43442a ||
										_0x43442a["stop"](),
									(this["scaleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										scale: _0x1fa5bb["PixelScale"] * (0x1 + 0.2 * this["weapon"]["PArea"]),
										duration: 0x1f4,
										onComplete: () => this["PfxEmitter"]["start"](),
									})),
									(this["deltaTime"] =
										((0x2 * Math["PI"]) / this["weapon"]["PAmount"]) * this["indexInWeapon"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									(this["HitboxTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["hitBoxDelay"],
										loop: !0x0,
										callback: () => {
											this["objectsHit"] = [];
										},
									})),
									(this["HitboxTimer"]["name"] = "HB Hitbox"),
									(this["ExpireTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["PDuration"],
										loop: !0x1,
										callback: () => {
											var _0x5edbd9 = _0x2b9513,
												_0x53d259;
											_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
												_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
												this["PfxEmitter"]["stop"](),
												null === (_0x53d259 = this["scaleTween"]) ||
													void 0x0 === _0x53d259 ||
													_0x53d259["stop"](),
												(this["scaleTween"] = this["scene"]["tweens"]["add"]({
													targets: this,
													scale: 0x0,
													duration: 0x1f4,
													onComplete: () => this["DeSpawn"](),
												}));
										},
									})),
									(this["ExpireTimer"]["name"] = "HB Expire");
							}
							["DeSpawn"]() {
								var _0x1e49d5 = _0x5d9431,
									_0x299e00;
								super["DeSpawn"](),
									null === (_0x299e00 = this["scaleTween"]) ||
										void 0x0 === _0x299e00 ||
										_0x299e00["stop"](),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]);
							}
							["Update"](_0x4fc36e) {
								var _0x59d50e = _0x5d9431;
								(this["deltaTime"] += 0.035 * this["weapon"]["PSpeed"] * _0x4fc36e * this["perc"]),
									this["copyPosition"](_0x2164b8["Core"]["Player"]),
									(this["x"] +=
										Math["cos"](this["deltaTime"]) * this["weapon"]["PArea"] * this["radius"]),
									(this["y"] +=
										Math["sin"](this["deltaTime"]) * this["weapon"]["PArea"] * this["radius"]);
							}
						},
						_0x3c91f2 = class extends _0x4071dc {
							constructor(_0x516fff, _0x2b0602, _0x226f14, _0x570d25, _0x18483e) {
								var _0x1babaa = _0x5d9431;
								super(
									_0x516fff,
									_0x2b0602,
									_0x226f14,
									"vfx",
									"ProjectileCross2.png",
									_0x570d25,
									_0x18483e
								),
									(this["posHistory"] = new Array()),
									(this["maxHistory"] = 0x3),
									(this["historyIndex"] = 0x0),
									(this["accel"] = 0x1),
									(this["velocity"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
									(this["AngleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										angle: 0x168,
										duration: 0x1f4,
										ease: "Linear",
										repeat: -0x1,
									})),
									(this["AccelTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										accel: -0x2,
										duration: 0x3e8,
										ease: "Linear",
									})),
									(this["ghosts"] = new Array());
								for (let _0x344893 = 0x0; _0x344893 < this["maxHistory"]; _0x344893++) {
									this["posHistory"]["push"](new Phaser["Math"]["Vector2"](_0x2b0602, _0x226f14));
									var _0x2ad6a4 = this["scene"]["add"]
										["image"](0x0, 0x0, this["texture"]["key"], this["frame"]["name"])
										["setScale"](_0x1fa5bb["PixelScale"])
										["setVisible"](!0x1)
										["setTint"](0xffff66)
										["setAlpha"](0.75 - 0.15 * _0x344893);
									this["ghosts"]["push"](_0x2ad6a4);
								}
								this["ghosts"]["reverse"]();
							}
							["OnRecycle"]() {
								var _0x1e9583 = _0x5d9431;
								super["OnRecycle"](),
									this["body"]["setCircle"](0xc),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									(this["accel"] = 1.5 + 0.1 * this["indexInWeapon"]),
									this["AccelTween"]["restart"]();
								for (let _0x559dc6 = 0x0; _0x559dc6 < this["posHistory"]["length"]; _0x559dc6++)
									(this["posHistory"][_0x559dc6]["x"] = this["x"]),
										(this["posHistory"][_0x559dc6]["y"] = this["y"]);
								(this["x"] +=
									(Math["random"]() - 0.5) * this["indexInWeapon"] * 0x14 * this["weapon"]["PArea"]),
									(this["y"] +=
										(Math["random"]() - 0.5) *
										this["indexInWeapon"] *
										0x14 *
										this["weapon"]["PArea"]),
									this["AimForNearestEnemy"](),
									this["velocity"]["copy"](this["body"]["velocity"]),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["Shot"],
										{
											detune: -0x64 * this["indexInWeapon"],
											volume: 0.45,
										},
										0xc8,
										0xa
									),
									this["setDepth"](
										this["y"] -
											_0x2164b8["Core"]["Player"]["y"] +
											0x2 * this["scene"]["renderer"]["height"]
									);
							}
							["DeSpawn"]() {
								var _0x114acf = _0x5d9431;
								super["DeSpawn"]();
								for (let _0xd6c4c0 = 0x0; _0xd6c4c0 < this["ghosts"]["length"]; _0xd6c4c0++)
									this["ghosts"][_0xd6c4c0]["setVisible"](!0x1);
							}
							["getHistoryIndex"](_0x3a23ff) {
								var _0xcd1a45 = _0x5d9431;
								return this["historyIndex"] + _0x3a23ff >= this["maxHistory"]
									? this["historyIndex"] + _0x3a23ff - this["maxHistory"]
									: this["historyIndex"] + _0x3a23ff;
							}
							["Update"]() {
								var _0x3c78ce = _0x5d9431;
								this["historyIndex"] < this["maxHistory"] - 0x1
									? this["historyIndex"]++
									: (this["historyIndex"] = 0x0);
								for (let _0x343a1f = 0x0; _0x343a1f < this["ghosts"]["length"]; _0x343a1f++) {
									var _0x316cfe = this["posHistory"][this["getHistoryIndex"](_0x343a1f)],
										_0x2a2449 = this["ghosts"][_0x343a1f];
									_0x2a2449["setAngle"](this["angle"]),
										_0x2a2449["setPosition"](_0x316cfe["x"], _0x316cfe["y"]),
										_0x2a2449["setScale"](this["scale"]),
										_0x2a2449["setVisible"](!0x0);
								}
								(this["posHistory"][this["historyIndex"]]["x"] = this["x"]),
									(this["posHistory"][this["historyIndex"]]["y"] = this["y"]),
									(this["body"]["velocity"]["x"] = this["velocity"]["x"] * this["accel"]),
									(this["body"]["velocity"]["y"] = this["velocity"]["y"] * this["accel"]);
							}
						},
						_0x589c87 = class extends _0x4071dc {
							constructor(_0x127d8c, _0x138ddf, _0x231d1f, _0x109676, _0x59e029) {
								var _0x4c4b28 = _0x5d9431;
								super(_0x127d8c, _0x138ddf, _0x231d1f, "vfx", "Rings3.png", _0x109676, _0x59e029),
									(this["radius"] = 0x10),
									this["copyPosition"](_0x2164b8["Core"]["Player"]);
							}
							["OnRecycle"]() {
								var _0x4c37b9 = _0x5d9431;
								super["OnRecycle"](),
									this["body"]["setCircle"](this["radius"]),
									this["setScale"](0x2 * _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									this["setVisible"](!0x1),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									(this["ExpireTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["PInterval"],
										loop: !0x1,
										callback: () => {
											var _0x2d3baf = _0x4c37b9;
											_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
												this["DeSpawn"]();
										},
									})),
									(this["ExpireTimer"]["name"] = "G Expire");
							}
							["Update"]() {
								var _0x25fef9 = _0x5d9431;
								this["copyPosition"](_0x2164b8["Core"]["Player"]);
							}
							["Approach"](_0xec0b00, _0x545ff2, _0x33cddd) {
								var _0x2967ca = _0x5d9431;
								return _0xec0b00 < _0x545ff2
									? Math["min"](_0xec0b00 + _0x33cddd, _0x545ff2)
									: Math["max"](_0xec0b00 - _0x33cddd, _0x545ff2);
							}
							["OnHasHitAnObject"](_0x45064c) {
								var _0x2fc757 = _0x5d9431;
								if (!_0x45064c["isDead"]) {
									let _0x5a138a = _0x45064c;
									if (_0x5a138a["res_Debuffs"] >= 0x1) return;
									_0x5a138a["knockback"] < _0x5a138a["maxKnockback"] &&
										(_0x5a138a["knockback"] += 0.3),
										_0x5a138a["res_Freeze"] > 0x0 && (_0x5a138a["res_Freeze"] -= 0.1);
								}
							}
						},
						_0xd54dd4 = class extends _0x4071dc {
							constructor(_0x35c419, _0x16de37, _0x1a9700, _0x580686, _0x10d368) {
								var _0x2a57dd = _0x5d9431;
								super(
									_0x35c419,
									_0x16de37,
									_0x1a9700,
									"vfx",
									"ProjectileBone2.png",
									_0x580686,
									_0x10d368
								),
									(this["bouncePositions"] = new Array()),
									(this["save_vel_x"] = 0x0),
									(this["save_vel_y"] = 0x0),
									this["scene"]["physics"]["world"]["on"]("worldbounds", this["Bounce"], this),
									(this["AngleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										angle: 0x168,
										duration: 0x3e8,
										ease: "Linear",
										repeat: -0x1,
									}));
							}
							["OnRecycle"]() {
								var _0x3cf30c = _0x5d9431,
									_0x4ed339;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x8),
									this["setScale"](0.5 * _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									this["setBounce"](0x1, 0x1),
									(this["isCullable"] = !0x1),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									this["setCollideWorldBounds"](!0x0, 0x1, 0x1),
									this["body"]["setBoundsRectangle"](_0x2164b8["Core"]["Player"]["WorldBoxCollider"]),
									(this["body"]["onWorldBounds"] = !0x0),
									this["AimForRandomEnemy"](),
									this["setAngle"](0x168 * Math["random"]()),
									null === (_0x4ed339 = this["ScaleTween"]) ||
										void 0x0 === _0x4ed339 ||
										_0x4ed339["stop"](),
									(this["ScaleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										scale: 0x0,
										duration: 0x1f4,
										delay: this["weapon"]["PDuration"],
										ease: "Linear",
										onComplete: () => {
											var _0x92254b = _0x3cf30c;
											this["DeSpawn"]();
										},
									})),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["Shot"],
										{
											detune: -0x64 * this["indexInWeapon"],
											volume: 0.45,
										},
										0xc8,
										0xa
									);
							}
							["Bounce"](_0x21aecf) {
								var _0x2ec7c1 = _0x5d9431;
								this["body"] === _0x21aecf && (this["objectsHit"] = []);
							}
							["OnHasHitAnObject"](_0x5770d1) {
								var _0x11f676 = _0x5d9431;
								_0x5770d1["isDead"] ||
									(this["setVelocity"](
										-0x1 * this["body"]["velocity"]["x"],
										-0x1 * this["body"]["velocity"]["y"]
									),
									(this["objectsHit"] = []));
							}
							["OnHasHitWall"](_0x459db7) {
								var _0x10e582 = _0x5d9431;
								(this["save_vel_x"] *= _0x459db7["faceRight"] || _0x459db7["faceLeft"] ? -0x1 : 0x1),
									(this["save_vel_y"] *=
										_0x459db7["faceTop"] || _0x459db7["faceBottom"] ? -0x1 : 0x1),
									this["setVelocity"](this["save_vel_x"], this["save_vel_y"]),
									(this["objectsHit"] = []);
							}
							["Update"]() {
								var _0x4560ff = _0x5d9431;
								(this["save_vel_x"] =
									0x0 == this["body"]["velocity"]["x"]
										? this["save_vel_x"]
										: this["body"]["velocity"]["x"]),
									(this["save_vel_y"] =
										0x0 == this["body"]["velocity"]["y"]
											? this["save_vel_y"]
											: this["body"]["velocity"]["y"]);
							}
							["DeSpawn"]() {
								var _0x5e19ec = _0x5d9431;
								(this["isCullable"] = !0x0),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									super["DeSpawn"]();
							}
						},
						_0x2fa114 = class extends _0x4071dc {
							constructor(_0x1a8a1e, _0x29230a, _0x3e5254, _0x317060, _0x53d14d) {
								var _0x2838c9 = _0x5d9431;
								super(
									_0x1a8a1e,
									_0x29230a,
									_0x3e5254,
									"vfx",
									"ProjectileHellfireLarge.png",
									_0x317060,
									_0x53d14d
								),
									this["setScale"](0x0),
									(this["PfxEmitter"] = this["scene"]["add"]["particles"]("vfx")),
									this["PfxEmitter"]["createEmitter"]({
										frame: ["ProjectileFireball.png", "HitBoom2.png"],
										rotate: {
											min: 0x0,
											max: 0x168,
										},
										quantity: 0x1,
										lifespan: 0x12c,
										scale: {
											start: 1.25,
											end: 0x0,
										},
										on: !0x1,
									}),
									(this["ScaleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										duration: 0x64,
										ease: "Linear",
										scale: _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
									}));
							}
							["OnRecycle"]() {
								var _0x2d18ba = _0x5d9431;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x10),
									this["setScale"](0x0),
									this["setDepth"](
										this["y"] -
											_0x2164b8["Core"]["Player"]["y"] +
											this["scene"]["renderer"]["height"]
									),
									this["PfxEmitter"]["setDepth"](this["depth"] - 0x1),
									this["ScaleTween"] &&
										(this["ScaleTween"]["stop"](),
										this["scene"]["tweens"]["remove"](this["ScaleTween"]),
										this["setScale"](0x0),
										(this["ScaleTween"] = this["scene"]["tweens"]["add"]({
											targets: this,
											duration: 0xc8,
											ease: "Linear",
											scale: _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
										})),
										this["ScaleTween"]["restart"]());
							}
							["SetTarget"](_0x1e6ea5) {
								var _0x5e3c5c = _0x5d9431;
								super["SetTarget"](_0x1e6ea5);
								var _0x5e495a = this["AngleFromTargetRadians"](this["target"]),
									_0x5619d4 = [0x0, 0xa, -0xa, 0x14, -0x14, 0x1e, -0x1e, 0x28, -0x28];
								this["scene"]["physics"]["velocityFromRotation"](
									_0x5e495a +
										Phaser["Math"]["DegToRad"](
											_0x5619d4[this["indexInWeapon"] % _0x5619d4["length"]]
										),
									this["TrueSpeed"],
									this["body"]["velocity"]
								);
								var _0x1ebf6f = Phaser["Math"]["Vector2"]["RIGHT"];
								this["setAngle"](
									Phaser["Math"]["RadToDeg"](
										Math["atan2"](
											this["body"]["velocity"]["y"] - _0x1ebf6f["y"],
											this["body"]["velocity"]["x"] - _0x1ebf6f["x"]
										)
									)
								);
							}
							["Update"]() {
								var _0x2ca344 = _0x5d9431;
								this["PfxEmitter"]["emitParticleAt"](this["x"], this["y"]);
							}
						},
						_0x352e3d = class extends _0x4071dc {
							constructor(_0x3122fc, _0x822b2a, _0xefe5f5, _0x27e269, _0x19b747) {
								super(_0x3122fc, _0x822b2a, _0xefe5f5, "vfx", "Rings3.png", _0x27e269, _0x19b747),
									this["setScale"](0x1);
							}
							["OnRecycle"]() {
								var _0x5b1507 = _0x5d9431;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x10),
									this["setScale"](0x2 * _0x1fa5bb["PixelScale"]),
									this["setVisible"](!0x1),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									(this["ExpireTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: 0x14,
										loop: !0x1,
										callback: () => {
											var _0x26a90b = _0x5b1507;
											_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
												this["DeSpawn"]();
										},
									})),
									(this["ExpireTimer"]["name"] = "Lancet Expire");
							}
							["SetTarget"](_0x223b63) {
								var _0xd92d95 = _0x5d9431;
								super["SetTarget"](_0x223b63),
									(this["x"] += 0x32 * this["target"]["x"] * (0x1 + this["indexInWeapon"])),
									(this["y"] += 0x32 * this["target"]["y"] * (0x1 + this["indexInWeapon"]));
							}
							["OnHasHitAnObject"](_0x55e255) {
								var _0xe82bd5 = _0x5d9431;
								_0x55e255["isDead"] ||
									(_0x55e255["Freeze"] && _0x55e255["Freeze"](this["weapon"]["PDuration"], 0x1));
							}
						},
						_0x53d998 = class extends _0x4071dc {
							constructor(_0x33a3d0, _0xcf1642, _0x4210a5, _0x76e843, _0x204a6f) {
								var _0x1dae70 = _0x5d9431;
								super(
									_0x33a3d0,
									_0xcf1642,
									_0x4210a5,
									"vfx",
									"ProjectileScythe.png",
									_0x76e843,
									_0x204a6f
								),
									(this["posHistory"] = new Array()),
									(this["maxHistory"] = 0x1),
									(this["historyIndex"] = 0x0),
									(this["_velocity"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
									(this["_avelocity"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
									(this["AngleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										angle: 0x168,
										duration: 0x1f4,
										ease: "Linear",
										repeat: -0x1,
									})),
									(this["ghosts"] = new Array());
								for (let _0x3acf82 = 0x0; _0x3acf82 < this["maxHistory"]; _0x3acf82++) {
									this["posHistory"]["push"](new Phaser["Math"]["Vector2"](_0xcf1642, _0x4210a5));
									var _0x151b49 = this["scene"]["add"]
										["image"](0x0, 0x0, this["texture"]["key"], this["frame"]["name"])
										["setScale"](_0x1fa5bb["PixelScale"])
										["setVisible"](!0x1)
										["setTint"](0x0)
										["setAlpha"](0.75 - 0.25 * _0x3acf82);
									this["ghosts"]["push"](_0x151b49);
								}
							}
							["OnRecycle"]() {
								var _0x5bca12 = _0x5d9431;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x10),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]);
								var _0x1125a6 = (0x168 / this["weapon"]["PAmount"]) * this["indexInWeapon"] - 0x5a;
								this["scene"]["physics"]["velocityFromRotation"](
									Phaser["Math"]["DegToRad"](_0x1125a6),
									this["TrueSpeed"],
									this["body"]["velocity"]
								);
								for (let _0x544fe6 = 0x0; _0x544fe6 < this["posHistory"]["length"]; _0x544fe6++)
									(this["posHistory"][_0x544fe6]["x"] = this["x"]),
										(this["posHistory"][_0x544fe6]["y"] = this["y"]);
								_0x2164b8["Sound"]["PlaySound"](
									_0x522ca7["Shot"],
									{
										detune: -0x64 * this["indexInWeapon"],
										volume: 0.4,
									},
									0xc8,
									0xa
								);
							}
							["DeSpawn"]() {
								var _0x2f6944 = _0x5d9431;
								super["DeSpawn"]();
								for (let _0x34f9fe = 0x0; _0x34f9fe < this["ghosts"]["length"]; _0x34f9fe++)
									this["ghosts"][_0x34f9fe]["setVisible"](!0x1);
							}
							["getHistoryIndex"](_0x2bb9d4) {
								var _0x4e1e4f = _0x5d9431;
								return this["historyIndex"] + _0x2bb9d4 >= this["maxHistory"]
									? this["historyIndex"] + _0x2bb9d4 - this["maxHistory"]
									: this["historyIndex"] + _0x2bb9d4;
							}
							["Update"](_0x2e8dce = 0x0) {
								var _0x1bf678 = _0x5d9431;
								this["historyIndex"] < this["maxHistory"] - 0x1
									? this["historyIndex"]++
									: (this["historyIndex"] = 0x0);
								for (let _0x2f6671 = 0x0; _0x2f6671 < this["ghosts"]["length"]; _0x2f6671++) {
									var _0x463561 = this["posHistory"][this["getHistoryIndex"](_0x2f6671)],
										_0x5538a5 = this["ghosts"][_0x2f6671];
									_0x5538a5["setAngle"](this["angle"]),
										_0x5538a5["setPosition"](_0x463561["x"], _0x463561["y"]),
										_0x5538a5["setScale"](this["scale"]),
										_0x5538a5["setVisible"](!0x0);
								}
								(this["posHistory"][this["historyIndex"]]["x"] = this["x"]),
									(this["posHistory"][this["historyIndex"]]["y"] = this["y"]);
							}
						};
					class _0x1bf341 extends Phaser["GameObjects"]["Rope"] {
						constructor(
							_0x2a98b3,
							_0xcbdd30,
							_0x3b88e2,
							_0x3569ab,
							_0x5dd9aa,
							_0x5ae2d5,
							_0x5c6406,
							_0x276abd,
							_0x35245d
						) {
							var _0x252f18 = _0x5d9431;
							super(
								_0x2a98b3,
								_0xcbdd30,
								_0x3b88e2,
								_0x3569ab,
								_0x5dd9aa,
								_0x5ae2d5,
								_0x5c6406,
								_0x276abd,
								_0x35245d
							),
								(this["positions"] = []),
								(this["maxPositions"] = 0x0),
								(this["trail_x"] = 0x0),
								(this["trail_y"] = 0x0),
								(this["maxPositions"] = _0x5ae2d5);
						}
						["resetPoints"](_0x5e302c, _0x385cac) {
							var _0x3f56be = _0x5d9431;
							for (let _0x211e82 = 0x0; _0x211e82 < this["points"]["length"]; _0x211e82++)
								(this["points"][_0x211e82]["x"] = _0x5e302c),
									(this["points"][_0x211e82]["y"] = _0x385cac);
						}
						["reset"]() {
							var _0x2ffb1f = _0x5d9431;
							for (let _0x3b1b80 = 0x0; _0x3b1b80 < this["points"]["length"]; _0x3b1b80++)
								(this["points"][_0x3b1b80]["x"] = this["follower"]["x"]),
									(this["points"][_0x3b1b80]["y"] = this["follower"]["y"]);
						}
						["clearPositions"]() {
							this["positions"] = [];
						}
						["trailUpdate"]() {
							var _0x6aec0e = _0x5d9431;
							if (this["active"]) {
								this["follower"] &&
									((this["trail_x"] = this["follower"]["x"]),
									(this["trail_y"] = this["follower"]["y"])),
									this["positions"]["unshift"]([this["trail_x"], this["trail_y"]]),
									this["positions"]["length"] > this["maxPositions"] && this["positions"]["pop"]();
								for (let _0x519c5b = 0x0; _0x519c5b < this["positions"]["length"]; _0x519c5b++)
									(this["points"][_0x519c5b]["x"] = this["positions"][_0x519c5b][0x0]),
										(this["points"][_0x519c5b]["y"] = this["positions"][_0x519c5b][0x1]);
								this["setDirty"]();
							}
						}
					}
					const _0x34ead4 = _0x1bf341,
						_0x130e1d = class extends _0x4071dc {
							constructor(_0x4a8d77, _0x2f0a39, _0x25f3fa, _0x1598b6, _0x519dc6) {
								var _0x57e021 = _0x5d9431;
								super(_0x4a8d77, _0x2f0a39, _0x25f3fa, "vfx", "HitRed2.png", _0x1598b6, _0x519dc6),
									(this["trail"] = new _0x34ead4(
										this["scene"],
										0x0,
										0x0,
										"vfx",
										"Lightning3.png",
										0x10,
										!0x0
									)),
									(this["trail"]["follower"] = this),
									this["trail"]["setScale"](0x1),
									this["trail"]["setDepth"](Number["MAX_SAFE_INTEGER"] - 0x3e8),
									this["trail"]["setVisible"](!0x1),
									this["scene"]["add"]["existing"](this["trail"]),
									this["setVisible"](!0x1),
									(this["isCullable"] = !0x1),
									(this["_speed"] = 0x0),
									(this["graphics"] = _0x4a8d77["scene"]["add"]
										["graphics"]()
										["fillStyle"]([0xffff, 0xff, 0x88ff, 0xffffff][_0x519dc6 % 0x4], 0.15)
										["fillCircle"](0x0, 0x0, 0x8)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
										["setVisible"](!0x1));
							}
							["OnRecycle"]() {
								var _0x26afd4 = _0x5d9431,
									_0x8bfa7f,
									_0x3cfd79;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x10),
									null === (_0x8bfa7f = this["moveTween"]) ||
										void 0x0 === _0x8bfa7f ||
										_0x8bfa7f["stop"](),
									null === (_0x3cfd79 = this["despawnTween"]) ||
										void 0x0 === _0x3cfd79 ||
										_0x3cfd79["stop"](),
									this["setVisible"](!0x1),
									this["trail"]["setVisible"](!0x1),
									Phaser["Math"]["RND"]["pick"]([0x0, 0x1, 0x2]);
								var _0x9debc9 = this["weapon"]["ScreenRectangle"],
									_0x4b6384 = new Phaser["Math"]["Vector2"](
										_0x2164b8["Core"]["Player"]["x"] - 0.5 * this["scene"]["renderer"]["width"],
										_0x2164b8["Core"]["Player"]["y"] - 0.5 * this["scene"]["renderer"]["height"]
									);
								this["trail"]["clearPositions"](),
									(this["body"]["enable"] = !0x1),
									this["setScale"](0.5 * _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									(_0x9debc9["x"] = _0x4b6384["x"]),
									(_0x9debc9["y"] = _0x4b6384["y"]),
									(this["target"] = this["AimForRandomEnemyInScreen"](_0x9debc9)),
									this["target"]
										? ((this["x"] = this["target"]["x"]),
										  (this["y"] =
												_0x2164b8["Core"]["Player"]["y"] -
												0.6 * this["scene"]["renderer"]["height"]),
										  this["trail"]["resetPoints"](this["x"], this["y"]),
										  this["trail"]["setVisible"](!0x0),
										  (this["moveTween"] = this["scene"]["tweens"]["add"]({
												targets: this,
												y: this["target"]["y"],
												duration: 0x46,
												onComplete: () => {
													var _0x1d8fc0 = _0x26afd4;
													(this["objectsHit"] = []),
														(this["body"]["enable"] = !0x0),
														_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] &&
															(this["graphics"]["setPosition"](
																this["target"]["x"],
																this["target"]["y"]
															),
															this["graphics"]["setVisible"](!0x0),
															this["graphics"]["setScale"](0x0),
															this["graphics"]["setDepth"](
																this["y"] -
																	_0x2164b8["Core"]["Player"]["y"] -
																	0.5 * this["scene"]["renderer"]["height"]
															)),
														_0x2164b8["Sound"]["PlaySound"](
															_0x522ca7["Lightning"],
															{
																detune: -0x64 * this["indexInWeapon"],
																volume: 0.6,
																rate: 0x2,
															},
															0xc8,
															0x4
														),
														(this["despawnTween"] = this["scene"]["tweens"]["add"]({
															targets: this["graphics"],
															scale: _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
															duration: 0x3c,
															onComplete: () => {
																var _0x133253 = _0x1d8fc0;
																this["trail"]["setVisible"](!0x1),
																	this["graphics"]["setVisible"](!0x1),
																	this["DeSpawn"]();
															},
														}));
												},
										  })))
										: this["DeSpawn"]();
							}
							["Update"]() {
								var _0x350644 = _0x5d9431;
								this["trail"]["trailUpdate"]();
							}
						},
						_0x380d5d = class extends _0x4071dc {
							constructor(_0x95a9de, _0x268dd9, _0x1fd64f, _0x5cb309, _0x190d35) {
								var _0xe01922 = _0x5d9431;
								super(_0x95a9de, _0x268dd9, _0x1fd64f, "vfx", "HitWhite1.png", _0x5cb309, _0x190d35),
									(this["bouncePositions"] = new Array()),
									(this["positions"] = []),
									(this["maxPositions"] = 0x64),
									(this["color"] = 0xff0000),
									(this["isKilled"] = !0x0),
									(this["minAngleRotDeg"] = 0xa),
									(this["maxAngleRotDeg"] = 0x14),
									(this["trailAlpha"] = 0.4),
									(this["trail"] = new _0x34ead4(
										this["scene"],
										0x0,
										0x0,
										"vfx",
										"Gradient3_4px.png",
										0x18,
										!0x0
									)
										["setDepth"](Number["MAX_SAFE_INTEGER"] - 0x3e8)
										["setVisible"](!0x1)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])),
									(this["trail"]["follower"] = this),
									this["scene"]["add"]["existing"](this["trail"]),
									(this["_speed"] = 0x0),
									(this["alpha"] = 0.5),
									(this["trueWeapon"] = this["weapon"]),
									(this["duration"] = this["trueWeapon"]["rayDuration"]),
									(this["minAngleRotDeg"] = Phaser["Math"]["DegToRad"](this["minAngleRotDeg"])),
									(this["maxAngleRotDeg"] = Phaser["Math"]["DegToRad"](this["maxAngleRotDeg"]));
							}
							["OnRecycle"]() {
								var _0xa4dfb6 = _0x5d9431,
									_0x514b42,
									_0x393844,
									_0x22cfd1;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x10),
									(this["body"]["enable"] = !0x1),
									(this["totalTime"] = 0x0),
									(this["isCullable"] = !0x1),
									null === (_0x514b42 = this["fadeInTween"]) ||
										void 0x0 === _0x514b42 ||
										_0x514b42["stop"](),
									null === (_0x393844 = this["fadeOutTween"]) ||
										void 0x0 === _0x393844 ||
										_0x393844["stop"](),
									null === (_0x22cfd1 = this["despawnTween"]) ||
										void 0x0 === _0x22cfd1 ||
										_0x22cfd1["stop"](),
									this["setVisible"](!0x1),
									this["trail"]["setVisible"](!0x1),
									this["trail"]["setAlpha"](0x0),
									this["trail"]["clearPositions"](),
									this["trail"]["reset"](),
									this["setScale"](0.5);
								var _0x4a51ec =
									this["trueWeapon"]["targets"][
										this["trueWeapon"]["enemyIndex"] % this["trueWeapon"]["targets"]["length"]
									];
								if (
									(this["trueWeapon"]["enemyIndex"]++,
									this["weapon"]["PArea"] >= 0x2
										? this["trail"]["setTexture"]("vfx", "Gradient3_8px.png")
										: this["weapon"]["PArea"] >= 1.5 &&
										  this["trail"]["setTexture"]("vfx", "Gradient3_6px.png"),
									_0x4a51ec)
								) {
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["MagicMissile"],
										{
											detune: -0x64 * this["indexInWeapon"],
											volume: 0.15,
										},
										0xc8,
										0xc
									),
										(this["isKilled"] = !0x1),
										this["SetTarget"](_0x4a51ec);
									var _0x56cf81 = this["trueWeapon"]["enemyIndex"] % 0x2 == 0x0 ? 0x1 : -0x1;
									(this["x"] = this["trueWeapon"]["sprite"]["x"]),
										(this["y"] = this["trueWeapon"]["sprite"]["y"]);
									var _0x3294b0 = new Phaser["Math"]["Vector2"]();
									(_0x3294b0["x"] = this["x"]),
										(_0x3294b0["y"] = this["y"]),
										(_0x3294b0 = this["rotate_point"](
											this["target"]["x"],
											this["target"]["y"],
											this["minAngleRotDeg"] * _0x56cf81 +
												Math["random"]() * this["maxAngleRotDeg"] * _0x56cf81,
											_0x3294b0
										));
									var _0x3b3a29 = [
										this["x"],
										this["y"],
										_0x3294b0["x"],
										_0x3294b0["y"],
										this["target"]["x"],
										this["target"]["y"],
									];
									this["curve"] = new Phaser["Curves"]["Spline"](_0x3b3a29);
									var _0x2339f4 = new Phaser["Math"]["Vector2"]();
									this["curve"]["getPointAt"](0x0, _0x2339f4),
										this["setPosition"](_0x2339f4["x"], _0x2339f4["y"]),
										this["trail"]["resetPoints"](_0x2339f4["x"], _0x2339f4["y"]),
										this["trail"]["setVisible"](!0x0),
										this["setVisible"](!0x0),
										this["setAlpha"](0x1),
										this["fadeInTween"] &&
											(this["fadeInTween"]["stop"](),
											this["scene"]["tweens"]["remove"](this["fadeInTween"])),
										this["fadeOutTween"] &&
											(this["fadeOutTween"]["stop"](),
											this["scene"]["tweens"]["remove"](this["fadeOutTween"])),
										this["scaleTween"] &&
											(this["scaleTween"]["stop"](),
											this["scene"]["tweens"]["remove"](this["scaleTween"])),
										(this["fadeInTween"] = this["scene"]["tweens"]["add"]({
											targets: this["trail"],
											alpha: this["trailAlpha"],
											duration: 0xc8,
										})),
										(this["explodeTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
											delay: this["duration"],
											callback: () => {
												var _0x4f7ddb = _0xa4dfb6;
												(this["body"]["enable"] = !0x0),
													(this["fadeOutTween"] = this["scene"]["tweens"]["add"]({
														targets: this["trail"],
														alpha: 0x0,
														duration: 0xc8,
														onComplete: () => {
															var _0x5ab0c7 = _0x4f7ddb;
															this["DeSpawn"]();
														},
													})),
													(this["scaleTween"] = this["scene"]["tweens"]["add"]({
														targets: this,
														scale: 0x1 * _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
														alpha: 0x0,
														duration: 0x78,
													})),
													_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] ||
														this["setVisible"](!0x1);
											},
										})),
										(this["explodeTimer"]["name"] = "SILF explode");
								} else this["DeSpawn"]();
							}
							["DeSpawn"]() {
								var _0x4a906e = _0x5d9431;
								(this["isKilled"] = !0x0),
									this["trail"]["setVisible"](!0x1),
									this["trail"]["setAlpha"](0x0),
									(this["body"]["enable"] = !0x1),
									this["setScale"](0x0),
									this["setVisible"](!0x1),
									super["DeSpawn"]();
							}
							["SetTarget"](_0x5b294e) {
								var _0x548a4e = _0x5d9431;
								super["SetTarget"](_0x5b294e);
							}
							["Update"](_0x2924d3) {
								var _0x44b811 = _0x5d9431;
								if (!this["isKilled"]) {
									(this["totalTime"] += _0x2924d3),
										this["totalTime"] > this["duration"] && (this["totalTime"] = this["duration"]);
									var _0x1663a4 = new Phaser["Math"]["Vector2"]();
									this["curve"]["getPointAt"](this["totalTime"] / this["duration"], _0x1663a4),
										this["setPosition"](_0x1663a4["x"], _0x1663a4["y"]),
										this["trail"]["trailUpdate"]();
								}
							}
							["rotate_point"](_0x3b1160, _0x364b2e, _0x2b25d5, _0x1c6127) {
								var _0x5de747 = _0x5d9431,
									_0x86667e = Math["sin"](_0x2b25d5),
									_0x48ad20 = Math["cos"](_0x2b25d5);
								(_0x1c6127["x"] -= _0x3b1160), (_0x1c6127["y"] -= _0x364b2e);
								var _0x3c5b50 = _0x1c6127["x"] * _0x48ad20 - _0x1c6127["y"] * _0x86667e,
									_0x43d3e4 = _0x1c6127["x"] * _0x86667e + _0x1c6127["y"] * _0x48ad20;
								return (
									(_0x1c6127["x"] = _0x3c5b50 + _0x3b1160),
									(_0x1c6127["y"] = _0x43d3e4 + _0x364b2e),
									_0x1c6127
								);
							}
						},
						_0x346888 = class extends _0x4071dc {
							constructor(_0x34939a, _0x2bb70d, _0xca2a80, _0x2fab36, _0xf1308d) {
								var _0x23cd56 = _0x5d9431;
								super(_0x34939a, _0x2bb70d, _0xca2a80, "vfx", "HitBlack1.png", _0x2fab36, _0xf1308d),
									(this["bouncePositions"] = new Array()),
									(this["positions"] = []),
									(this["maxPositions"] = 0x64),
									(this["color"] = 0xff0000),
									(this["isKilled"] = !0x0),
									(this["minAngleRotDeg"] = 0xa),
									(this["maxAngleRotDeg"] = 0x14),
									(this["trailAlpha"] = 0x1),
									(this["trail"] = new _0x34ead4(
										this["scene"],
										0x0,
										0x0,
										"vfx",
										"Gradient4_4px.png",
										0x18,
										!0x0
									)
										["setDepth"](Number["MAX_SAFE_INTEGER"] - 0x3e8)
										["setVisible"](!0x1)),
									(this["trail"]["follower"] = this),
									this["scene"]["add"]["existing"](this["trail"]),
									(this["_speed"] = 0x0),
									(this["alpha"] = 0x1),
									(this["trueWeapon"] = this["weapon"]),
									(this["duration"] = this["trueWeapon"]["rayDuration"]),
									(this["minAngleRotDeg"] = Phaser["Math"]["DegToRad"](this["minAngleRotDeg"])),
									(this["maxAngleRotDeg"] = Phaser["Math"]["DegToRad"](this["maxAngleRotDeg"]));
							}
							["OnRecycle"]() {
								var _0x38c2a3 = _0x5d9431,
									_0x4af0a5,
									_0x196524,
									_0x15c7de;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x10),
									(this["body"]["enable"] = !0x1),
									(this["totalTime"] = 0x0),
									(this["isCullable"] = !0x1),
									null === (_0x4af0a5 = this["fadeInTween"]) ||
										void 0x0 === _0x4af0a5 ||
										_0x4af0a5["stop"](),
									null === (_0x196524 = this["fadeOutTween"]) ||
										void 0x0 === _0x196524 ||
										_0x196524["stop"](),
									null === (_0x15c7de = this["despawnTween"]) ||
										void 0x0 === _0x15c7de ||
										_0x15c7de["stop"](),
									this["setVisible"](!0x1),
									this["trail"]["setVisible"](!0x1),
									this["trail"]["setAlpha"](0x0),
									this["trail"]["clearPositions"](),
									this["trail"]["reset"](),
									this["setScale"](0.5);
								var _0x31bd47 =
									this["trueWeapon"]["targets"][
										this["trueWeapon"]["enemyIndex"] % this["trueWeapon"]["targets"]["length"]
									];
								if (
									(this["trueWeapon"]["enemyIndex"]++,
									this["weapon"]["PArea"] >= 0x2 ||
										(this["weapon"]["PArea"] >= 1.5 &&
											this["trail"]["setTexture"]("vfx", "Gradient4_6px.png")),
									_0x31bd47)
								) {
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["MagicMissile"],
										{
											detune: -0x64 * this["indexInWeapon"],
											volume: 0.15,
										},
										0xc8,
										0xc
									),
										(this["isKilled"] = !0x1),
										this["SetTarget"](_0x31bd47);
									var _0x2e5f39 = this["trueWeapon"]["enemyIndex"] % 0x2 == 0x0 ? 0x1 : -0x1;
									(this["x"] = this["trueWeapon"]["sprite"]["x"]),
										(this["y"] = this["trueWeapon"]["sprite"]["y"]);
									var _0x1b89f8 = new Phaser["Math"]["Vector2"]();
									(_0x1b89f8["x"] = this["x"]),
										(_0x1b89f8["y"] = this["y"]),
										(_0x1b89f8 = this["rotate_point"](
											this["target"]["x"],
											this["target"]["y"],
											this["minAngleRotDeg"] * _0x2e5f39 +
												Math["random"]() * this["maxAngleRotDeg"] * _0x2e5f39,
											_0x1b89f8
										));
									var _0x5b87e7 = [
										this["x"],
										this["y"],
										_0x1b89f8["x"],
										_0x1b89f8["y"],
										this["target"]["x"],
										this["target"]["y"],
									];
									this["curve"] = new Phaser["Curves"]["Spline"](_0x5b87e7);
									var _0x4b113c = new Phaser["Math"]["Vector2"]();
									this["curve"]["getPointAt"](0x0, _0x4b113c),
										this["setPosition"](_0x4b113c["x"], _0x4b113c["y"]),
										this["trail"]["resetPoints"](_0x4b113c["x"], _0x4b113c["y"]),
										this["trail"]["setVisible"](!0x0),
										this["setVisible"](!0x0),
										this["setAlpha"](0x1),
										this["fadeInTween"] &&
											(this["fadeInTween"]["stop"](),
											this["scene"]["tweens"]["remove"](this["fadeInTween"])),
										this["fadeOutTween"] &&
											(this["fadeOutTween"]["stop"](),
											this["scene"]["tweens"]["remove"](this["fadeOutTween"])),
										this["scaleTween"] &&
											(this["scaleTween"]["stop"](),
											this["scene"]["tweens"]["remove"](this["scaleTween"])),
										(this["fadeInTween"] = this["scene"]["tweens"]["add"]({
											targets: this["trail"],
											alpha: this["trailAlpha"],
											duration: 0xc8,
										})),
										(this["explodeTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
											delay: this["duration"],
											callback: () => {
												var _0x24fe73 = _0x38c2a3;
												(this["body"]["enable"] = !0x0),
													(this["fadeOutTween"] = this["scene"]["tweens"]["add"]({
														targets: this["trail"],
														alpha: 0x0,
														duration: 0xc8,
														onComplete: () => {
															var _0x27716b = _0x24fe73;
															this["DeSpawn"]();
														},
													})),
													(this["scaleTween"] = this["scene"]["tweens"]["add"]({
														targets: this,
														scale: 0x1 * _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
														alpha: 0x0,
														duration: 0x78,
													})),
													_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] ||
														this["setVisible"](!0x1);
											},
										})),
										(this["explodeTimer"]["name"] = "SILF explode");
								} else this["DeSpawn"]();
							}
							["DeSpawn"]() {
								var _0x383fe4 = _0x5d9431;
								(this["isKilled"] = !0x0),
									this["trail"]["setVisible"](!0x1),
									this["trail"]["setAlpha"](0x0),
									(this["body"]["enable"] = !0x1),
									this["setScale"](0x0),
									this["setVisible"](!0x1),
									super["DeSpawn"]();
							}
							["SetTarget"](_0xafd85a) {
								var _0xa0e9d7 = _0x5d9431;
								super["SetTarget"](_0xafd85a);
							}
							["Update"](_0x30cf6e) {
								var _0x5292a0 = _0x5d9431;
								if (!this["isKilled"]) {
									(this["totalTime"] += _0x30cf6e),
										this["totalTime"] > this["duration"] && (this["totalTime"] = this["duration"]);
									var _0x4b97f8 = new Phaser["Math"]["Vector2"]();
									this["curve"]["getPointAt"](this["totalTime"] / this["duration"], _0x4b97f8),
										this["setPosition"](_0x4b97f8["x"], _0x4b97f8["y"]),
										this["trail"]["trailUpdate"]();
								}
							}
							["rotate_point"](_0x198f1f, _0x391523, _0x1f71df, _0x5b4024) {
								var _0x3e6275 = _0x5d9431,
									_0x34fbd6 = Math["sin"](_0x1f71df),
									_0x236c4c = Math["cos"](_0x1f71df);
								(_0x5b4024["x"] -= _0x198f1f), (_0x5b4024["y"] -= _0x391523);
								var _0x2e565c = _0x5b4024["x"] * _0x236c4c - _0x5b4024["y"] * _0x34fbd6,
									_0x265a02 = _0x5b4024["x"] * _0x34fbd6 + _0x5b4024["y"] * _0x236c4c;
								return (
									(_0x5b4024["x"] = _0x2e565c + _0x198f1f),
									(_0x5b4024["y"] = _0x265a02 + _0x391523),
									_0x5b4024
								);
							}
						},
						_0x261acf = class extends _0x4071dc {
							constructor(_0x1dd555, _0x539005, _0x250841, _0x51fe87, _0x637dab) {
								var _0x25c652 = _0x5d9431;
								super(_0x1dd555, _0x539005, _0x250841, "vfx", "HitStar2.png", _0x51fe87, _0x637dab),
									(this["radius"] = 0x10),
									(this["hasThorns"] = !0x1),
									this["copyPosition"](_0x2164b8["Core"]["Player"]),
									(this["imageTween2"] = _0x2164b8["Core"]["scene"]["add"]["tween"]({
										targets: this,
										angle: 0x168,
										loop: !0x0,
										duration: 0x320,
										ease: "Linear",
										repeat: -0x1,
									}));
							}
							["OnRecycle"]() {
								var _0x232f3a = _0x5d9431;
								super["OnRecycle"](),
									this["imageTween2"]["restart"](),
									this["body"]["setCircle"](this["radius"]),
									this["setScale"](1.35 * _0x1fa5bb["PixelScale"]),
									this["setVisible"](!0x0),
									this["copyPosition"](_0x2164b8["Core"]["Player"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									(this["ExpireTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["PInterval"] + 0x1f4,
										loop: !0x1,
										callback: () => {
											var _0x183499 = _0x232f3a;
											_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
												this["DeSpawn"]();
										},
									})),
									(this["ExpireTimer"]["name"] = "L Expire");
							}
							["Update"]() {
								var _0x1d28a6 = _0x5d9431;
								this["copyPosition"](_0x2164b8["Core"]["Player"]),
									(this["y"] -= 0x10),
									this["setDepth"](
										0xa +
											_0x2164b8["Core"]["Player"]["depth"] -
											0.5 * _0x2164b8["Core"]["scene"]["renderer"]["height"]
									);
							}
						},
						_0x7026b2 = class extends _0x4071dc {
							constructor(_0x38052a, _0xb4906c, _0x3d1840, _0x46ff35, _0x3e0cf5) {
								var _0x362d04 = _0x5d9431;
								super(_0x38052a, _0xb4906c, _0x3d1840, "vfx", "Rings3.png", _0x46ff35, _0x3e0cf5),
									this["copyPosition"](_0x2164b8["Core"]["Player"]),
									(this["trueWeapon"] = this["weapon"]),
									(this["visible"] = !0x1),
									(this["canvas"] = this["trueWeapon"]["canvas"]),
									(this["rt"] = this["trueWeapon"]["rt"]),
									(this["globalScale"] =
										0.8 *
										Math["min"](
											this["scene"]["renderer"]["width"],
											this["scene"]["renderer"]["height"]
										)),
									this["trueWeapon"]["outline"]["setTintFill"](
										0xffffff,
										0xffff00,
										0xffff00,
										0xffffff
									),
									this["trueWeapon"]["outer"]["setTintFill"](0xffffff, 0xffff00, 0xffff00, 0xffffff),
									this["trueWeapon"]["inner"]["setTintFill"](0xffffff, 0xffff00, 0xffff00, 0xffffff),
									this["trueWeapon"]["center"]["setTintFill"](0xffffff, 0xffff00, 0xffff00, 0xffffff);
							}
							["OnRecycle"]() {
								var _0x22c6d4 = _0x5d9431;
								super["OnRecycle"](),
									(this["body"]["enable"] = !0x1),
									this["trueWeapon"]["rt"]["clear"](),
									this["trueWeapon"]["outline"]["setScale"](this["globalScale"] / 0x80),
									this["trueWeapon"]["inner"]["setScale"](this["globalScale"] / 0x80),
									this["trueWeapon"]["outer"]["setScale"](this["globalScale"] / 0x80),
									this["trueWeapon"]["center"]["setScale"](this["globalScale"] / 0x80),
									this["trueWeapon"]["graphics_Bad"]["setScale"](this["globalScale"] / 0x10),
									this["trueWeapon"]["graphics_Good"]["setScale"](this["globalScale"] / 0x10);
								let _0x10cb5c =
									Math["random"]() * (0x1 / _0x2164b8["Core"]["Player"]["luck"]) >
									this["trueWeapon"]["chance"];
								this["scene"]["time"]["addEvent"]({
									delay: 0x64,
									callback: () => {
										var _0x38e981 = _0x22c6d4;
										this["EraseEnemies"](_0x10cb5c), _0x10cb5c && this["EraseItems"]();
									},
								}),
									_0x10cb5c
										? this["rt"]["draw"](this["trueWeapon"]["graphics_Bad"])
										: this["rt"]["draw"](this["trueWeapon"]["graphics_Good"]),
									this["rt"]["draw"](this["trueWeapon"]["outline"]),
									this["rt"]["draw"](this["trueWeapon"]["outer"]),
									this["rt"]["draw"](this["trueWeapon"]["inner"]),
									this["rt"]["draw"](this["trueWeapon"]["center"]),
									this["canvas"]["copyPosition"](_0x2164b8["Core"]["Player"]),
									this["Shatter"](),
									_0x2164b8["Sound"]["PlaySound"](_0x522ca7["PentagramSFX"], {
										volume: 0.9,
										rate: 0x2,
									});
							}
							["EraseEnemies"](_0x5d7790 = !0x1) {
								var _0x1e650b = _0x5d9431;
								for (
									let _0x30f6b0 = 0x0;
									_0x30f6b0 < _0x2164b8["Core"]["Enemies"]["length"];
									_0x30f6b0++
								) {
									const _0x4f5552 = _0x2164b8["Core"]["Enemies"][_0x30f6b0];
									_0x4f5552["res_Rosary"] ||
										(_0x2164b8["Core"]["containmentRect_Screen"]["Contains"](_0x4f5552) &&
											(_0x5d7790
												? _0x4f5552["Disappear"]()
												: _0x4f5552["GetDamaged"](
														Math["max"](0x42, _0x4f5552["maxHp"]),
														_0xed2036["NONE"]
												  ),
											(this["weapon"]["stats_inflictedDamage"] += _0x4f5552["maxHp"])));
								}
							}
							["EraseItems"]() {
								var _0x216b3a = _0x5d9431;
								for (
									let _0x100bb6 = 0x0;
									_0x100bb6 < _0x2164b8["Core"]["PickupGroup"]["children"]["entries"]["length"];
									_0x100bb6++
								) {
									const _0x270a8e =
										_0x2164b8["Core"]["PickupGroup"]["children"]["entries"][_0x100bb6];
									_0x2164b8["Core"]["containmentRect_Screen"]["Contains"](_0x270a8e) &&
										_0x270a8e["DeSpawn"]();
								}
								for (
									let _0x282f65 = 0x0;
									_0x282f65 < _0x2164b8["Core"]["Destructibles"]["length"];
									_0x282f65++
								) {
									const _0x5b65f0 = _0x2164b8["Core"]["Destructibles"][_0x282f65];
									_0x2164b8["Core"]["containmentRect_Screen"]["Contains"](_0x5b65f0) &&
										_0x5b65f0["DeSpawn"]();
								}
							}
							["Update"]() {
								var _0x61727 = _0x5d9431;
								this["canvas"]["copyPosition"](_0x2164b8["Core"]["Player"]);
							}
							["Shatter"]() {
								var _0x2f05ee = _0x5d9431;
								let _0x8e2af4 = this["canvas"];
								_0x8e2af4["task"] && (_0x8e2af4["task"]["stop"](), (_0x8e2af4["task"] = null)),
									_0x8e2af4["shatter"](),
									this["scene"]["renderer"]["width"],
									(_0x8e2af4["task"] = this["scene"]["tweens"]["add"]({
										targets: _0x8e2af4["faces"],
										alpha: 0x0,
										angle: function () {
											return 0xb4 * Math["random"]() - 0x5a;
										},
										x: function () {
											var _0x588ddd = _0x2f05ee;
											return 1.2 * (Math["random"]() - 0.5);
										},
										y: function () {
											var _0x53fd2 = _0x2f05ee;
											return 1.2 * (Math["random"]() - 0.5);
										},
										ease: "Linear",
										duration: 0x3e8,
										delay: 0x96,
										repeat: 0x0,
										yoyo: !0x1,
										onComplete: () => {
											var _0x1d7cc6 = _0x2f05ee;
											_0x8e2af4["stopUpdate"](), this["DeSpawn"]();
										},
									})),
									_0x8e2af4["startUpdate"]();
							}
							["Init"](_0x23c24c = -0x3e8, _0x317d2b = -0x3e8) {
								var _0x513eb6 = _0x5d9431;
								this["setPosition"](_0x23c24c, _0x317d2b),
									this["scene"]["physics"]["add"]["existing"](this);
							}
						},
						_0x215ddd = class extends _0x4071dc {
							constructor(_0x1b3d4c, _0x5dbd20, _0x377004, _0xa328d1, _0x804ffe) {
								var _0x3ee8da = _0x5d9431;
								super(_0x1b3d4c, _0x5dbd20, _0x377004, "vfx", "Sword.png", _0xa328d1, _0x804ffe),
									(this["posHistory"] = new Array()),
									(this["angleHistory"] = new Array()),
									(this["maxHistory"] = 0x8),
									(this["historyIndex"] = 0x0),
									(this["accel"] = 0x1),
									(this["velocity"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
									(this["AngleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										angle: 0x168,
										duration: 0x1f4,
										ease: "Linear",
										repeat: -0x1,
									})),
									this["AngleTween"]["pause"](),
									(this["AccelTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										accel: 0x0,
										duration: 0x1f4,
										ease: "Linear",
										onComplete: () => {
											this["GoBackwards"]();
										},
									})),
									(this["BackwardTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										accel: -0x2,
										duration: 0x1f4,
										ease: "Linear",
									})),
									(this["ghosts"] = new Array());
								for (let _0x4d9d96 = 0x0; _0x4d9d96 < this["maxHistory"]; _0x4d9d96++) {
									this["posHistory"]["push"](new Phaser["Math"]["Vector2"](_0x5dbd20, _0x377004)),
										this["angleHistory"]["push"](this["angle"]);
									var _0x4b5faf = this["scene"]["add"]
										["image"](0x0, 0x0, this["texture"]["key"], "SwordBW.png")
										["setScale"](_0x1fa5bb["PixelScale"])
										["setVisible"](!0x1)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"]);
									switch (_0x4d9d96) {
										case 0x0:
											_0x4b5faf["setTint"](0x20c0);
											break;
										case 0x1:
											_0x4b5faf["setTint"](0x2020c0);
											break;
										case 0x2:
											_0x4b5faf["setTint"](0x4020c0);
											break;
										case 0x3:
											_0x4b5faf["setTint"](0x6020c0);
											break;
										case 0x4:
											_0x4b5faf["setTint"](0x8020c0);
											break;
										case 0x5:
											_0x4b5faf["setTint"](0xa020c0);
											break;
										case 0x6:
											_0x4b5faf["setTint"](0xc020c0);
											break;
										case 0x7:
											_0x4b5faf["setTint"](0xe020c0);
									}
									this["ghosts"]["push"](_0x4b5faf);
								}
								this["ghosts"]["reverse"]();
							}
							["OnRecycle"]() {
								var _0x4fb2e5 = _0x5d9431;
								super["OnRecycle"](),
									this["body"]["setCircle"](0xc),
									this["AngleTween"]["pause"](),
									(this["isCullable"] = !0x1),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									(this["accel"] = 0x2),
									this["AccelTween"]["restart"]();
								for (let _0x15f72d = 0x0; _0x15f72d < this["posHistory"]["length"]; _0x15f72d++)
									(this["posHistory"][_0x15f72d]["x"] = this["x"]),
										(this["posHistory"][_0x15f72d]["y"] = this["y"]),
										(this["angleHistory"][_0x15f72d] = this["angle"]);
								(this["x"] +=
									(Math["random"]() - 0.5) * this["indexInWeapon"] * 0x14 * this["weapon"]["PArea"]),
									(this["y"] +=
										(Math["random"]() - 0.5) *
										this["indexInWeapon"] *
										0x14 *
										this["weapon"]["PArea"]),
									this["AimForNearestEnemy"](),
									this["velocity"]["copy"](this["body"]["velocity"]),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["Shot"],
										{
											detune: -0x64 * this["indexInWeapon"],
											volume: 0.5,
										},
										0xc8,
										0xa
									),
									this["setDepth"](
										this["y"] -
											_0x2164b8["Core"]["Player"]["y"] +
											0x2 * this["scene"]["renderer"]["height"]
									);
							}
							["GoBackwards"]() {
								var _0xc7e643 = _0x5d9431;
								(this["AngleTween"] = this["scene"]["tweens"]["add"]({
									targets: this,
									angle: this["angle"] + 0x168,
									duration: 0x3e8,
									ease: "Linear",
									repeat: -0x1,
								})),
									(this["BackwardTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										accel: -0x2,
										duration: 0x1f4,
										ease: "Linear",
									})),
									this["scene"]["time"]["addEvent"]({
										delay: 0x2ee,
										callback: () => {
											var _0x3f0fd4 = _0xc7e643;
											this["isCullable"] = !0x0;
										},
									}),
									(this["objectsHit"] = []);
							}
							["DeSpawn"]() {
								var _0x403fd7 = _0x5d9431;
								super["DeSpawn"]();
								for (let _0x57cf35 = 0x0; _0x57cf35 < this["ghosts"]["length"]; _0x57cf35++)
									this["ghosts"][_0x57cf35]["setVisible"](!0x1);
							}
							["getHistoryIndex"](_0x2307f6) {
								var _0x48b893 = _0x5d9431;
								return this["historyIndex"] + _0x2307f6 >= this["maxHistory"]
									? this["historyIndex"] + _0x2307f6 - this["maxHistory"]
									: this["historyIndex"] + _0x2307f6;
							}
							["Update"]() {
								var _0x421523 = _0x5d9431;
								(this["body"]["velocity"]["x"] = this["velocity"]["x"] * this["accel"]),
									(this["body"]["velocity"]["y"] = this["velocity"]["y"] * this["accel"]),
									this["historyIndex"] < this["maxHistory"] - 0x1
										? this["historyIndex"]++
										: (this["historyIndex"] = 0x0);
								for (let _0x4d6cca = 0x0; _0x4d6cca < this["ghosts"]["length"]; _0x4d6cca++) {
									var _0x218c99 = this["posHistory"][this["getHistoryIndex"](_0x4d6cca)],
										_0xaac7fc = this["angleHistory"][this["getHistoryIndex"](_0x4d6cca)],
										_0x1cf3ae = this["ghosts"][_0x4d6cca];
									_0x1cf3ae["setAngle"](_0xaac7fc),
										_0x1cf3ae["setPosition"](_0x218c99["x"], _0x218c99["y"]),
										_0x1cf3ae["setScale"](this["scale"]),
										_0x1cf3ae["setVisible"](!0x0);
								}
								(this["posHistory"][this["historyIndex"]]["x"] = this["x"]),
									(this["posHistory"][this["historyIndex"]]["y"] = this["y"]),
									(this["angleHistory"][this["historyIndex"]] = this["angle"]);
							}
						},
						_0x30d8f1 = class extends _0x4071dc {
							constructor(_0x5369a2, _0x2b2f17, _0x462556, _0x3fe1c4, _0xc3c5a6) {
								var _0x2e495e = _0x5d9431;
								super(_0x5369a2, _0x2b2f17, _0x462556, "vfx", "slash.png", _0x3fe1c4, _0xc3c5a6),
									(this["previousArea"] = 0x0),
									(this["ghost1"] = this["scene"]["add"]
										["sprite"](_0x2b2f17, _0x462556, "vfx", "slash.png")
										["setScale"](0x0)),
									(this["ghost2"] = this["scene"]["add"]
										["sprite"](_0x2b2f17, _0x462556, "vfx", "slash.png")
										["setScale"](0x0)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])),
									this["setTint"](0x110011),
									this["ghost2"]["setTint"](0x660066),
									this["ghost1"]["setTint"](0xff0000);
							}
							["Init"](_0x3bda4b = -0x3e8, _0x55953d = -0x3e8) {
								var _0xaa25d7 = _0x5d9431;
								super["Init"](_0x3bda4b, _0x55953d),
									this["setScale"](0x0),
									(this["previousArea"] = this["weapon"]["PArea"]),
									(this["tween"] = this["scene"]["tweens"]["add"]({
										targets: [this, this["ghost1"], this["ghost2"]],
										scale: _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
										duration: 0x64,
										ease: "Linear",
									}));
							}
							["OnRecycle"]() {
								var _0xaf59df = _0x5d9431,
									_0x46a670;
								super["OnRecycle"](),
									(this["alpha"] = 0x1),
									this["ghost1"]["setAlpha"](0x1),
									this["ghost2"]["setAlpha"](0x1),
									this["tween"] &&
										(this["previousArea"] != this["weapon"]["PArea"] &&
											(this["tween"]["stop"](),
											this["scene"]["tweens"]["remove"](this["tween"]),
											this["setScale"](0x0),
											(this["tween"] = this["scene"]["tweens"]["add"]({
												targets: [this, this["ghost1"], this["ghost2"]],
												scale: _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
												duration: 0x64,
												ease: "Linear",
											}))),
										this["tween"]["restart"]()),
									null === (_0x46a670 = this["tween2"]) ||
										void 0x0 === _0x46a670 ||
										_0x46a670["stop"](),
									(this["tween2"] = this["scene"]["tweens"]["add"]({
										targets: [this, this["ghost1"], this["ghost2"]],
										alpha: 0x0,
										duration: 0xc8,
										ease: "Linear",
										delay: 0x64,
										onComplete: () => {
											var _0x20e8ed = _0xaf59df;
											this["DeSpawn"]();
										},
									}));
								const _0x40aeb6 = _0x2164b8["Core"]["Player"]["flipX"]
									? this["indexInWeapon"] % 0x2 != 0x1
									: this["indexInWeapon"] % 0x2 == 0x1;
								(this["x"] += _0x40aeb6 ? -0x40 : 0x40),
									(this["y"] -= 0x10),
									(this["y"] -= 0x10 * this["indexInWeapon"]);
								let _0xe09e0e = this["indexInWeapon"] % 0x2 == 0x1;
								this["setFlipY"](_0xe09e0e),
									this["ghost1"]["setFlipY"](_0xe09e0e),
									this["ghost2"]["setFlipY"](_0xe09e0e),
									this["setFlipX"](_0x40aeb6),
									this["ghost1"]["setFlipX"](_0x40aeb6),
									this["ghost2"]["setFlipX"](_0x40aeb6),
									this["ghost1"]["setX"](this["x"] + 0x4),
									this["ghost2"]["setX"](this["x"] - 0x4),
									this["ghost1"]["setY"](this["y"] + 0x2),
									this["ghost2"]["setY"](this["y"] - 0x2),
									_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Whip"], {
										detune: -0x64 * this["indexInWeapon"],
										volume: 1.7,
										rate: 0x2,
									});
							}
						},
						_0x421abc = class extends _0x4071dc {
							constructor(_0x52649c, _0x269b00, _0x18a1a8, _0x3f7cc2, _0x581bde) {
								var _0x4f6ee6 = _0x5d9431;
								super(_0x52649c, _0x269b00, _0x18a1a8, "vfx", "HitWhite1.png", _0x3f7cc2, _0x581bde),
									(this["bouncePositions"] = new Array()),
									(this["positions"] = []),
									(this["maxPositions"] = 0x64),
									(this["color"] = 0xff0000),
									(this["isKilled"] = !0x0),
									(this["minAngleRotDeg"] = 0xa),
									(this["maxAngleRotDeg"] = 0x14),
									(this["trailAlpha"] = 0.4);
								let _0x2867cf = "Prism" + Math["floor"](0x1 + (_0x581bde % 0x9)) + "_8px.png";
								(this["trail"] = new _0x34ead4(this["scene"], 0x0, 0x0, "vfx", _0x2867cf, 0x18, !0x0)
									["setDepth"](Number["MAX_SAFE_INTEGER"] - 0x3e8)
									["setVisible"](!0x1)
									["setBlendMode"](_0x1cb257["BlendModes"]["NORMAL"])),
									(this["trail"]["follower"] = this),
									this["scene"]["add"]["existing"](this["trail"]),
									(this["_speed"] = 0x0),
									(this["alpha"] = 0.75),
									(this["trueWeapon"] = this["weapon"]),
									(this["duration"] = this["trueWeapon"]["rayDuration"]),
									(this["minAngleRotDeg"] = Phaser["Math"]["DegToRad"](this["minAngleRotDeg"])),
									(this["maxAngleRotDeg"] = Phaser["Math"]["DegToRad"](this["maxAngleRotDeg"]));
							}
							["OnRecycle"]() {
								var _0x4bddbf = _0x5d9431,
									_0x4f91a7,
									_0x3b10fa,
									_0xc548ca;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x10),
									(this["body"]["enable"] = !0x1),
									(this["totalTime"] = 0x0),
									(this["isCullable"] = !0x1),
									null === (_0x4f91a7 = this["fadeInTween"]) ||
										void 0x0 === _0x4f91a7 ||
										_0x4f91a7["stop"](),
									null === (_0x3b10fa = this["fadeOutTween"]) ||
										void 0x0 === _0x3b10fa ||
										_0x3b10fa["stop"](),
									null === (_0xc548ca = this["despawnTween"]) ||
										void 0x0 === _0xc548ca ||
										_0xc548ca["stop"](),
									this["setVisible"](!0x1),
									this["trail"]["setVisible"](!0x1),
									this["trail"]["setAlpha"](0x0),
									this["trail"]["clearPositions"](),
									this["trail"]["reset"](),
									this["setScale"](0.5);
								var _0x2c4eaa =
									this["trueWeapon"]["targets"][
										this["trueWeapon"]["enemyIndex"] % this["trueWeapon"]["targets"]["length"]
									];
								if ((this["trueWeapon"]["enemyIndex"]++, _0x2c4eaa)) {
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["MagicMissile"],
										{
											detune: -0x64 * this["indexInWeapon"],
											volume: 0.15,
										},
										0xc8,
										0xc
									),
										(this["isKilled"] = !0x1),
										this["SetTarget"](_0x2c4eaa);
									var _0x2e815b = this["trueWeapon"]["enemyIndex"] % 0x2 == 0x0 ? 0x1 : -0x1;
									(this["x"] = this["trueWeapon"]["sprite"]["x"]),
										(this["y"] = this["trueWeapon"]["sprite"]["y"]);
									var _0x153330 = new Phaser["Math"]["Vector2"]();
									(_0x153330["x"] = this["x"]),
										(_0x153330["y"] = this["y"]),
										((_0x153330 = this["rotate_point"](
											this["target"]["x"],
											this["target"]["y"],
											this["minAngleRotDeg"] * _0x2e815b +
												Math["random"]() * this["maxAngleRotDeg"] * _0x2e815b,
											_0x153330
										))["x"] = _0x2164b8["Core"]["Player"]["x"] + 0x32 * (Math["random"]() - 0.5)),
										(_0x153330["y"] = _0x2164b8["Core"]["Player"]["y"] - 0x96);
									var _0x115e99 = [
										this["x"],
										this["y"],
										_0x153330["x"],
										_0x153330["y"],
										this["target"]["x"],
										this["target"]["y"],
									];
									this["curve"] = new Phaser["Curves"]["Spline"](_0x115e99);
									var _0x5248b5 = new Phaser["Math"]["Vector2"]();
									this["curve"]["getPointAt"](0x0, _0x5248b5),
										this["setPosition"](_0x5248b5["x"], _0x5248b5["y"]),
										this["trail"]["resetPoints"](_0x5248b5["x"], _0x5248b5["y"]),
										this["trail"]["setVisible"](!0x0),
										this["setVisible"](!0x0),
										this["setAlpha"](0x1),
										this["fadeInTween"] &&
											(this["fadeInTween"]["stop"](),
											this["scene"]["tweens"]["remove"](this["fadeInTween"])),
										this["fadeOutTween"] &&
											(this["fadeOutTween"]["stop"](),
											this["scene"]["tweens"]["remove"](this["fadeOutTween"])),
										this["scaleTween"] &&
											(this["scaleTween"]["stop"](),
											this["scene"]["tweens"]["remove"](this["scaleTween"])),
										(this["fadeInTween"] = this["scene"]["tweens"]["add"]({
											targets: this["trail"],
											alpha: this["trailAlpha"],
											duration: 0xc8,
										})),
										(this["explodeTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
											delay: this["duration"],
											callback: () => {
												var _0x128a42 = _0x4bddbf;
												(this["body"]["enable"] = !0x0),
													(this["fadeOutTween"] = this["scene"]["tweens"]["add"]({
														targets: this["trail"],
														alpha: 0x0,
														duration: 0xc8,
														onComplete: () => {
															this["DeSpawn"]();
														},
													})),
													(this["scaleTween"] = this["scene"]["tweens"]["add"]({
														targets: this,
														scale: 0x1 * _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
														alpha: 0x0,
														duration: 0x78,
													})),
													_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] ||
														this["setVisible"](!0x1);
											},
										})),
										(this["explodeTimer"]["name"] = "SILF explode");
								} else this["DeSpawn"]();
							}
							["DeSpawn"]() {
								var _0x432f07 = _0x5d9431;
								(this["isKilled"] = !0x0),
									this["trail"]["setVisible"](!0x1),
									this["trail"]["setAlpha"](0x0),
									(this["body"]["enable"] = !0x1),
									this["setScale"](0x0),
									this["setVisible"](!0x1),
									super["DeSpawn"]();
							}
							["SetTarget"](_0x3fb928) {
								var _0x19a3fb = _0x5d9431;
								super["SetTarget"](_0x3fb928);
							}
							["Update"](_0xa9ddc8) {
								var _0x597ad5 = _0x5d9431;
								if (!this["isKilled"]) {
									(this["totalTime"] += _0xa9ddc8),
										this["totalTime"] > this["duration"] && (this["totalTime"] = this["duration"]);
									var _0x5f307a = new Phaser["Math"]["Vector2"]();
									this["curve"]["getPointAt"](this["totalTime"] / this["duration"], _0x5f307a),
										this["setPosition"](_0x5f307a["x"], _0x5f307a["y"]),
										this["trail"]["trailUpdate"]();
								}
							}
							["rotate_point"](_0x319f75, _0x389c5e, _0x1609d9, _0x2ff0b2) {
								var _0x16ed3b = _0x5d9431,
									_0x3ad8d1 = Math["sin"](_0x1609d9),
									_0x9a5f7b = Math["cos"](_0x1609d9);
								(_0x2ff0b2["x"] -= _0x319f75), (_0x2ff0b2["y"] -= _0x389c5e);
								var _0x1aa97c = _0x2ff0b2["x"] * _0x9a5f7b - _0x2ff0b2["y"] * _0x3ad8d1,
									_0x3a1fa9 = _0x2ff0b2["x"] * _0x3ad8d1 + _0x2ff0b2["y"] * _0x9a5f7b;
								return (
									(_0x2ff0b2["x"] = _0x1aa97c + _0x319f75),
									(_0x2ff0b2["y"] = _0x3a1fa9 + _0x389c5e),
									_0x2ff0b2
								);
							}
						},
						_0xdddc7f = class extends _0x4071dc {
							constructor(_0x3fbca5, _0x168f8a, _0xe73187, _0x3d88a4, _0x1a71a2) {
								var _0x25bd15 = _0x5d9431;
								super(_0x3fbca5, _0x168f8a, _0xe73187, "vfx", "WhiteDot.png", _0x3d88a4, _0x1a71a2),
									(this["radius"] = 0x10),
									(this["GroundFx"] = this["scene"]["add"]
										["circle"](
											0x0,
											0x0,
											0x1,
											Phaser["Math"]["RND"]["pick"]([0xff0000, 0xff6600, 0xff4400])
										)
										["setOrigin"](0.5)
										["setAlpha"](0.2)
										["setVisible"](!0x0)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])),
									this["setVisible"](!0x1),
									(this["PfxEmitter"] = this["scene"]["add"]["particles"]("vfx")),
									this["PfxEmitter"]["createEmitter"]({
										frame: ["PfxRed.png", "PfxYellow.png"],
										speed: {
											min: 0xf,
											max: 0x1e,
										},
										quantity: 0x1,
										lifespan: 0x64,
										alpha: {
											start: 0x1,
											end: 0x0,
										},
										scale: {
											start: 0x1,
											end: 0x0,
										},
										on: !0x1,
									}),
									this["PfxEmitter"]["createEmitter"]({
										frame: ["Flame2.png", "PfxYellow.png"],
										speed: {
											min: 0xf,
											max: 0x1e,
										},
										rotate: {
											min: 0x0,
											max: 0x168,
										},
										angle: {
											start: 0x0,
											end: 0xb4,
											steps: 0x10,
										},
										quantity: 0x1,
										lifespan: 0x64,
										alpha: {
											start: 0x1,
											end: 0x0,
										},
										scale: {
											start: 0x0,
											end: 0x2,
										},
										on: !0x1,
									});
							}
							["OnRecycle"]() {
								var _0x31277e = _0x5d9431,
									_0x5d5686;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x1),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									this["setTintFill"](0xff0000),
									(this["y"] -= 0x18),
									this["ApplyPlayerFacingVelocity"](),
									(this["body"]["velocity"]["x"] += 0x64 * Math["sin"](this["indexInWeapon"])),
									(this["body"]["velocity"]["y"] += 0x64 * Math["cos"](this["indexInWeapon"])),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["Fireloop"],
										{
											detune: -0x64 * this["indexInWeapon"],
											volume: 0x1,
											rate: 0x2,
										},
										0xc8,
										0x1
									),
									this["GroundFx"]["setAlpha"](0x1)["setScale"](0x0),
									this["setAlpha"](0x1)["setScale"](0x0),
									null === (_0x5d5686 = this["ScaleTween"]) ||
										void 0x0 === _0x5d5686 ||
										_0x5d5686["stop"](),
									(this["ScaleTween"] = this["scene"]["tweens"]["add"]({
										targets: [this["GroundFx"], this],
										alpha: 0x0,
										scale: this["radius"] * this["weapon"]["PArea"],
										duration: 0x190,
										ease: "Linear",
										onComplete: () => {
											var _0xa835ea = _0x31277e;
											this["DeSpawn"]();
										},
									}));
							}
							["Update"]() {
								var _0x45d8a5 = _0x5d9431;
								this["GroundFx"]["copyPosition"](this),
									this["PfxEmitter"]["emitParticleAt"](this["x"], this["y"]);
							}
						},
						_0x187a31 = class extends _0x4071dc {
							constructor(_0x550ccf, _0x3ddb88, _0x32baa4, _0x319508, _0x4f49c9) {
								var _0x724bee = _0x5d9431;
								super(_0x550ccf, _0x3ddb88, _0x32baa4, "vfx", "Rings3.png", _0x319508, _0x4f49c9),
									(this["radius"] = 0x10),
									this["copyPosition"](_0x2164b8["Core"]["Player"]);
							}
							["OnRecycle"]() {
								var _0x5210ed = _0x5d9431;
								super["OnRecycle"](),
									this["body"]["setCircle"](this["radius"]),
									this["setScale"](0x2 * _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									this["setVisible"](!0x1),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									(this["ExpireTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["PInterval"],
										loop: !0x1,
										callback: () => {
											var _0x36068a = _0x5210ed;
											_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
												this["DeSpawn"]();
										},
									})),
									(this["ExpireTimer"]["name"] = "G Expire");
							}
							["Update"]() {
								var _0x4206ab = _0x5d9431;
								this["copyPosition"](_0x2164b8["Core"]["Player"]);
							}
							["OnHasHitAnObject"](_0x2872b3) {
								var _0x232ae2 = _0x5d9431;
								if (!_0x2872b3["isDead"]) {
									let _0x195c26 = _0x2872b3;
									if (_0x195c26["res_Debuffs"] >= 0x1) return;
									_0x195c26["knockback"] < _0x195c26["maxKnockback"] &&
										(_0x195c26["knockback"] += 0.3),
										_0x195c26["res_Freeze"] > 0x0 && (_0x195c26["res_Freeze"] -= 0.1);
								}
							}
						},
						_0x190bfd = class extends _0x4071dc {
							constructor(_0x1a13d7, _0x30cf4e, _0x38474e, _0x27b857, _0x5e39fe) {
								var _0x3e6980 = _0x5d9431;
								super(_0x1a13d7, _0x30cf4e, _0x38474e, "items", "Water2.png", _0x27b857, _0x5e39fe),
									(this["radius"] = 0x10),
									(this["exploRadius"] = 0x8),
									(this["isBroken"] = !0x1),
									(this["groundFxAlpha"] = 0.2),
									(this["_currentDirection"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
									(this["_speed"] = 0x2),
									(this["explosionCircle"] = new Phaser["Geom"]["Circle"](
										0x0,
										0x0,
										this["exploRadius"]
									)),
									(this["GroundFx"] = this["scene"]["add"]
										["circle"](0x0, 0x0, this["radius"], 0x88ff)
										["setOrigin"](0.5)
										["setAlpha"](this["groundFxAlpha"])
										["setVisible"](!0x1)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])),
									(this["PfxEmitterManager"] = this["scene"]["add"]["particles"]("vfx")),
									(this["PfxEmitter1"] = this["PfxEmitterManager"]["createEmitter"]({
										frame: ["ProjectileFlameHoly2.png", "ProjectileFlameBlue2.png"],
										speed: {
											min: 0x1,
											max: 0x1,
										},
										quantity: 0x1,
										rotate: {
											min: 0x5a,
											max: 0x5a,
										},
										lifespan: 0x258,
										alpha: {
											start: 0x1,
											end: 0x0,
										},
										scale: {
											start: _0x1fa5bb["PixelScale"] / 0x4,
											end: _0x1fa5bb["PixelScale"],
										},
										emitZone: {
											type: "random",
											source: this["explosionCircle"],
										},
										on: !0x1,
									})),
									(this["PfxEmitter2"] = this["PfxEmitterManager"]["createEmitter"]({
										frame: ["ProjectileFlameHoly2.png", "ProjectileFlameBlue2.png"],
										speed: {
											min: 0x1,
											max: 0x1,
										},
										quantity: 0x1,
										rotate: {
											min: 0x5a,
											max: 0x5a,
										},
										lifespan: 0x258,
										alpha: {
											start: 0.2,
											end: 0x0,
										},
										scale: {
											start: _0x1fa5bb["PixelScale"] / 0x4,
											end: _0x1fa5bb["PixelScale"] / 0x2,
										},
										blendMode: _0x1cb257["BlendModes"]["ADD"],
										emitZone: {
											type: "random",
											source: this["explosionCircle"],
										},
										on: !0x1,
									})),
									(this["PfxEmitterExplosionManager"] = this["scene"]["add"]["particles"]("vfx")),
									this["PfxEmitterExplosionManager"]["createEmitter"]({
										frame: ["HitCloud2.png"],
										quantity: 0x1,
										rotate: {
											min: 0x0,
											max: 0x168,
										},
										lifespan: 0x96,
										alpha: {
											start: 0x1,
											end: 0.5,
										},
										scale: {
											start: _0x1fa5bb["PixelScale"] / 0x4,
											end: 0x2 * _0x1fa5bb["PixelScale"],
										},
										on: !0x1,
									}),
									this["PfxEmitterExplosionManager"]["createEmitter"]({
										frame: ["HitCloud1.png"],
										quantity: 0x3,
										rotate: {
											min: 0x0,
											max: 0x168,
										},
										lifespan: 0x96,
										alpha: {
											start: 0x1,
											end: 0.5,
										},
										scale: {
											start: _0x1fa5bb["PixelScale"] / 0x4,
											end: _0x1fa5bb["PixelScale"],
										},
										on: !0x1,
									}),
									(this["AngleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										angle: 0x168,
										duration: 0x258,
										ease: "Linear",
										repeat: -0x1,
									}));
							}
							["OnRecycle"]() {
								var _0x36ae3a = _0x5d9431,
									_0x234f6a;
								this["setVisible"](!0x1),
									super["OnRecycle"](),
									(this["_speed"] = 0x2),
									this["body"]["setCircle"](
										this["radius"],
										-0.5 * this["radius"],
										-0.5 * this["radius"]
									),
									null === (_0x234f6a = this["growTween"]) ||
										void 0x0 === _0x234f6a ||
										_0x234f6a["stop"](),
									this["setScale"](_0x1fa5bb["PixelScale"]),
									this["setVisible"](!0x0),
									(this["isBroken"] = !0x1),
									(this["body"]["enable"] = !0x1),
									(this["isCullable"] = !0x1),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									(this["explosionCircle"] = new Phaser["Geom"]["Circle"](
										0x0,
										0x0,
										this["exploRadius"] * this["weapon"]["PArea"] * 0x3
									)),
									this["PfxEmitter1"]["setEmitZone"]({
										type: "random",
										source: this["explosionCircle"],
									}),
									this["PfxEmitter1"]["setQuantity"](
										0x1 + Math["floor"](this["weapon"]["level"] / 0x3)
									),
									this["PfxEmitter2"]["setEmitZone"]({
										type: "random",
										source: this["explosionCircle"],
									}),
									this["PfxEmitter2"]["setQuantity"](
										0x1 + Math["floor"](this["weapon"]["level"] / 0x3)
									);
								var _0x16007d = new Phaser["Math"]["Vector2"](
									_0x2164b8["Core"]["Player"]["x"],
									_0x2164b8["Core"]["Player"]["y"]
								);
								(this["x"] =
									_0x16007d["x"] +
									(Math["random"]() - 0.5) * this["scene"]["renderer"]["width"] * 0.5),
									(this["y"] = _0x16007d["y"] - 0.6 * this["scene"]["renderer"]["height"]);
								let _0x2cc387 = this["weapon"]["GetTargetPoint"]();
								if (
									((_0x16007d["x"] += _0x2cc387["x"]),
									(_0x16007d["y"] += _0x2cc387["y"]),
									this["weapon"]["PAmount"] < 0x4 && 0x0 == this["indexInWeapon"])
								) {
									var _0x185c24 = this["scene"]["physics"]["closest"](
										_0x2164b8["Core"]["Player"],
										_0x2164b8["Core"]["Enemies"]
									);
									_0x185c24 && ((_0x16007d["x"] = _0x185c24["x"]), (_0x16007d["y"] = _0x185c24["y"]));
								}
								this["setDepth"](
									this["y"] - _0x2164b8["Core"]["Player"]["y"] + this["scene"]["renderer"]["height"]
								),
									this["PositionTween"] && this["scene"]["tweens"]["remove"](this["PositionTween"]),
									(this["PositionTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										x: _0x16007d["x"],
										y: _0x16007d["y"],
										duration: 0x12c,
										ease: "Linear",
										onComplete: () => {
											this["Break"]();
										},
									}));
							}
							["Break"]() {
								var _0x2e7d0f = _0x5d9431,
									_0x362416,
									_0x39c4fe;
								this["isBroken"] ||
									((this["isBroken"] = !0x0),
									this["setVisible"](!0x1),
									this["setVelocity"](0x0, 0x0),
									(this["objectsHit"] = []),
									(this["body"]["enable"] = !0x0),
									this["GroundFx"]
										["setPosition"](this["x"], this["y"])
										["setVisible"](!0x0)
										["setScale"](0x0)
										["setOrigin"](0.5)
										["setAlpha"](this["groundFxAlpha"]),
									null === (_0x362416 = this["scaleGroundTweeen"]) ||
										void 0x0 === _0x362416 ||
										_0x362416["stop"](),
									(this["scaleGroundTweeen"] = _0x2164b8["Core"]["scene"]["tweens"]["add"]({
										targets: this["GroundFx"],
										scale: _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
										duration: 0xc8,
										onComplete: () => {
											var _0x48ce57 = _0x2e7d0f,
												_0x25709d;
											let _0x4c563d =
												_0x2164b8["Core"]["Player"]["moveSpeed"] > 0x1
													? _0x2164b8["Core"]["Player"]["moveSpeed"]
													: 0x1;
											null === (_0x25709d = this["growTween"]) ||
												void 0x0 === _0x25709d ||
												_0x25709d["stop"](),
												(this["growTween"] = this["scene"]["tweens"]["add"]({
													targets: [this, this["GroundFx"]],
													scale:
														_0x4c563d *
														_0x1fa5bb["PixelScale"] *
														this["weapon"]["PArea"] *
														this["weapon"]["PSpeed"],
													duration: this["weapon"]["PDuration"] - 0xc8,
												}));
										},
									})),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									(this["HitboxTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["hitBoxDelay"],
										loop: !0x0,
										callback: () => {
											var _0x4fe7b8 = _0x2e7d0f;
											this["objectsHit"] = [];
										},
									})),
									(this["HitboxTimer"]["name"] = "HW Hitbox"),
									null === (_0x39c4fe = this["fadeOutTweeen"]) ||
										void 0x0 === _0x39c4fe ||
										_0x39c4fe["stop"](),
									(this["fadeOutTweeen"] = _0x2164b8["Core"]["scene"]["tweens"]["add"]({
										targets: this["GroundFx"],
										alpha: 0x0,
										delay: 0.8 * this["weapon"]["PDuration"],
										duration: 0.2 * this["weapon"]["PDuration"],
									})),
									(this["ExpireTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["weapon"]["PDuration"],
										loop: !0x1,
										callback: () => {
											var _0x2fdde1 = _0x2e7d0f;
											this["GroundFx"]["setVisible"](!0x1),
												_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
												_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
												this["DeSpawn"]();
										},
									})),
									(this["ExpireTimer"]["name"] = "HW Expire"),
									this["PfxEmitterExplosionManager"]["emitParticleAt"](this["x"], this["y"]),
									this["PfxEmitterManager"]["setDepth"](
										this["y"] -
											_0x2164b8["Core"]["Player"]["y"] -
											0.5 * this["scene"]["renderer"]["height"]
									),
									this["GroundFx"]["setDepth"](
										this["y"] -
											_0x2164b8["Core"]["Player"]["y"] -
											0.5 * this["scene"]["renderer"]["height"]
									),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["Holywater"],
										{
											detune: -0xc8 - -0x32 * this["indexInWeapon"],
											volume: 0.35,
											rate: 0x2,
										},
										0xc8,
										0xc
									));
							}
							["Update"]() {
								var _0x5028bc = _0x5d9431;
								if (this["isBroken"]) {
									this["PfxEmitterManager"]["emitParticleAt"](this["x"], this["y"]),
										(this["_currentDirection"]["x"] = _0x2164b8["Core"]["Player"]["x"] - this["x"]),
										(this["_currentDirection"]["y"] = _0x2164b8["Core"]["Player"]["y"] - this["y"]),
										this["_currentDirection"]["normalize"]();
									let _0x2b3910 =
										_0x2164b8["Core"]["Player"]["moveSpeed"] > 0x1
											? _0x2164b8["Core"]["Player"]["moveSpeed"]
											: 0x1;
									this["setVelocity"](
										0xf * _0x2b3910 * this["weapon"]["PSpeed"] * this["_currentDirection"]["x"],
										0xf * _0x2b3910 * this["weapon"]["PSpeed"] * this["_currentDirection"]["y"]
									),
										this["GroundFx"]["setPosition"](this["x"], this["y"]);
								}
							}
							["DeSpawn"]() {
								var _0x558ed2 = _0x5d9431;
								(this["isCullable"] = !0x0),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["HitboxTimer"]),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									super["DeSpawn"]();
							}
						},
						_0x3724a3 = class extends _0x4071dc {
							constructor(_0x5248d7, _0x1cd90b, _0x4d04cf, _0x341044, _0x1dee29) {
								var _0x446017 = _0x5d9431;
								super(_0x5248d7, _0x1cd90b, _0x4d04cf, "vfx", "HitRed2.png", _0x341044, _0x1dee29),
									(this["explosionCircle"] = new Phaser["Geom"]["Circle"](0x0, 0x0, 0x10)),
									(this["trail"] = new _0x34ead4(
										this["scene"],
										0x0,
										0x0,
										"vfx",
										"Lightning3.png",
										0x10,
										!0x0
									)),
									(this["trail"]["follower"] = this),
									this["trail"]["setScale"](0x1),
									this["trail"]["setDepth"](Number["MAX_SAFE_INTEGER"] - 0x3e8),
									this["trail"]["setVisible"](!0x1),
									this["scene"]["add"]["existing"](this["trail"]),
									this["setVisible"](!0x1),
									(this["isCullable"] = !0x1),
									(this["_speed"] = 0x0),
									(this["graphics"] = _0x5248d7["scene"]["add"]
										["graphics"]()
										["fillStyle"]([0xffff00, 0xff8800, 0xffff88, 0xff8888][_0x1dee29 % 0x4], 0.075)
										["fillCircle"](0x0, 0x0, 0x8)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
										["setVisible"](!0x1)),
									(this["graphics2"] = _0x5248d7["scene"]["add"]
										["graphics"]()
										["fillStyle"]([0xffffff, 0xffffff, 0xffffff, 0xffffff][_0x1dee29 % 0x4], 0.075)
										["fillCircle"](0x0, 0x0, 0x8)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
										["setVisible"](!0x1)),
									(this["PfxEmitterManager"] = this["scene"]["add"]["particles"]("vfx")),
									(this["PfxEmitter1"] = this["PfxEmitterManager"]["createEmitter"]({
										frame: ["PfxYellow.png", "PfxRed.png", "PfxLine.png"],
										speed: {
											min: 0x1,
											max: 0x1,
										},
										quantity: 0x1,
										rotate: {
											min: 0x5a,
											max: 0x5a,
										},
										lifespan: 0x258,
										alpha: {
											start: 0x1,
											end: 0x0,
										},
										scale: {
											start: _0x1fa5bb["PixelScale"] / 0x2,
											end: _0x1fa5bb["PixelScale"],
										},
										emitZone: {
											type: "random",
											source: this["explosionCircle"],
										},
										on: !0x1,
									}));
							}
							["OnRecycle"]() {
								var _0x114a80 = _0x5d9431,
									_0x16f679,
									_0x325c50;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x10),
									(this["explosionCircle"] = new Phaser["Geom"]["Circle"](
										0x0,
										0x0,
										0x10 * _0x1fa5bb["PixelScale"] * 0.5 * this["weapon"]["PArea"]
									)),
									this["PfxEmitter1"]["setEmitZone"]({
										type: "random",
										source: this["explosionCircle"],
									}),
									null === (_0x16f679 = this["moveTween"]) ||
										void 0x0 === _0x16f679 ||
										_0x16f679["stop"](),
									null === (_0x325c50 = this["despawnTween"]) ||
										void 0x0 === _0x325c50 ||
										_0x325c50["stop"](),
									this["setVisible"](!0x1),
									this["trail"]["setVisible"](!0x1);
								var _0xbff615 = this["weapon"]["ScreenRectangle"],
									_0x4d808b = new Phaser["Math"]["Vector2"](
										_0x2164b8["Core"]["Player"]["x"] - 0.5 * this["scene"]["renderer"]["width"],
										_0x2164b8["Core"]["Player"]["y"] - 0.5 * this["scene"]["renderer"]["height"]
									);
								this["trail"]["clearPositions"](),
									(this["body"]["enable"] = !0x1),
									this["setScale"](0.5 * _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"]),
									(_0xbff615["x"] = _0x4d808b["x"]),
									(_0xbff615["y"] = _0x4d808b["y"]),
									(this["target"] = this["AimForRandomEnemyInScreen"](_0xbff615)),
									this["target"]
										? ((this["x"] =
												_0x2164b8["Core"]["Player"]["x"] +
												0.5 *
													this["scene"]["renderer"]["width"] *
													(Math["random"]() >= 0.5 ? 0x1 : -0x1)),
										  (this["y"] =
												_0x2164b8["Core"]["Player"]["y"] -
												0.6 * this["scene"]["renderer"]["height"]),
										  this["trail"]["resetPoints"](this["x"], this["y"]),
										  this["trail"]["setVisible"](!0x0),
										  (this["moveTween"] = this["scene"]["tweens"]["add"]({
												targets: this,
												x: this["target"]["x"],
												y: this["target"]["y"],
												duration: 0x46,
												onComplete: () => {
													var _0x58c3a2 = _0x114a80;
													(this["objectsHit"] = []),
														(this["body"]["enable"] = !0x0),
														_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] &&
															(this["graphics"]["setPosition"](
																this["target"]["x"],
																this["target"]["y"]
															),
															this["graphics"]["setVisible"](!0x0),
															this["graphics"]["setScale"](0x0),
															this["graphics"]["setDepth"](
																this["y"] -
																	_0x2164b8["Core"]["Player"]["y"] -
																	0.5 * this["scene"]["renderer"]["height"]
															),
															this["graphics2"]["setPosition"](
																this["target"]["x"],
																this["target"]["y"]
															),
															this["graphics2"]["setVisible"](!0x0),
															this["graphics2"]["setScale"](0x0),
															this["graphics2"]["setDepth"](
																this["y"] -
																	_0x2164b8["Core"]["Player"]["y"] -
																	0.5 * this["scene"]["renderer"]["height"]
															)),
														_0x2164b8["Sound"]["PlaySound"](
															_0x522ca7["Lightning"],
															{
																detune: 0xc8 * this["indexInWeapon"],
																volume: 0.5,
																rate: 0x1,
															},
															0xc8,
															0x8
														),
														(this["hitGroundTween"] = this["scene"]["tweens"]["add"]({
															targets: [this["graphics"], this["graphics2"]],
															scale: _0x1fa5bb["PixelScale"] * this["weapon"]["PArea"],
															duration: 0x3c,
															onComplete: () => {
																var _0x144233 = _0x58c3a2;
																(this["body"]["enable"] = !0x1),
																	(this["isGrounded"] = !0x0),
																	(this["chargeTween"] = this["scene"]["tweens"][
																		"add"
																	]({
																		targets: [this["graphics2"]],
																		scale: 0x0,
																		duration: 0x5dc,
																		onComplete: () => {
																			this["isGrounded"] = !0x1;
																		},
																	})),
																	(this["finalScaleGroundTween"] = this["scene"][
																		"tweens"
																	]["add"]({
																		delay: 0x514,
																		duration: 0x3c,
																		targets: this["graphics"],
																		scale: 0x0,
																		onStart: () => {
																			var _0x375564 = _0x144233;
																			(this["objectsHit"] = []),
																				_0x2164b8["Sound"]["PlaySound"](
																					_0x522ca7["Lightning"],
																					{
																						detune:
																							-0x64 *
																							this["indexInWeapon"],
																						volume: 0.5,
																						rate: 0x1,
																					},
																					0xc8,
																					0x8
																				),
																				(this["body"]["enable"] = !0x0);
																		},
																		onComplete: () => {
																			var _0x3bb614 = _0x144233;
																			(this["body"]["enable"] = !0x1),
																				(this["secondMoveTween"] = this[
																					"scene"
																				]["tweens"]["add"]({
																					targets: this,
																					y:
																						this["y"] -
																						1.5 *
																							this["scene"]["renderer"][
																								"height"
																							],
																					duration: 0x5a,
																					onComplete: () => {
																						var _0x3205c9 = _0x3bb614;
																						this["despawnTween"] = this[
																							"scene"
																						]["tweens"]["add"]({
																							targets: [
																								this["graphics"],
																								this["graphics2"],
																							],
																							scale: 0x0,
																							duration: 0x3c,
																							onComplete: () => {
																								var _0x37240b =
																									_0x3205c9;
																								this["trail"][
																									"setVisible"
																								](!0x1),
																									this["graphics"][
																										"setVisible"
																									](!0x1),
																									this["graphics2"][
																										"setVisible"
																									](!0x1),
																									this["DeSpawn"]();
																							},
																						});
																					},
																				}));
																		},
																	}));
															},
														}));
												},
										  })))
										: this["DeSpawn"]();
							}
							["Update"]() {
								var _0x57b970 = _0x5d9431;
								this["trail"]["trailUpdate"](),
									this["isGrounded"] &&
										this["PfxEmitterManager"]["emitParticleAt"](this["x"], this["y"]);
							}
						},
						_0x4dd1be = class extends _0x4071dc {
							constructor(_0x561cc4, _0xfaec68, _0x327468, _0x5e54c9, _0x5bf392) {
								var _0xa8aa8e = _0x5d9431;
								super(_0x561cc4, _0xfaec68, _0x327468, "items", "Cherry.png", _0x5e54c9, _0x5bf392),
									(this["save_vel_x"] = -0x1),
									(this["save_vel_y"] = -0x1),
									(this["bombDeceleration"] = 0x1),
									(this["canBounce"] = !0x0),
									(this["ring"] = this["scene"]["add"]
										["sprite"](0x0, 0x0, "vfx", "sPFX_ring_64.png")
										["setVisible"](!0x1)),
									(this["rainbow"] = this["scene"]["add"]
										["sprite"](0x0, 0x0, "vfx", "s_pfx_rainbow_64.png")
										["setVisible"](!0x1)),
									(this["rays"] = this["scene"]["add"]
										["sprite"](0x0, 0x0, "vfx", "fuzzA.png")
										["setVisible"](!0x1)),
									(this["aimVec"] = new Phaser["Math"]["Vector2"]()),
									(this["AngleTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										angle: 0x167,
										duration: 0x3e8,
										ease: "Linear",
										repeat: -0x1,
									})),
									(this["particles"] = this["scene"]["add"]["particles"]("vfx"));
								var _0x13671d = this["scene"]["add"]["particles"]("cherryBomb0");
								(this["fwEmitter"] = this["particles"]["createEmitter"]({
									frame: ["_blur.png", "_blur2.png", "_blur3.png"][_0x5bf392 % 0x3],
									x: 0x0,
									y: 0x0,
									lifespan: 0x320,
									rotate: {
										min: 0x0,
										max: 0x168,
									},
									angle: {
										start: 0x0,
										end: 0x168,
										steps: 0x15,
									},
									speed: {
										min: 0x32,
										max: 0x64,
									},
									quantity: 0x40,
									scale: {
										start: 0x2,
										end: 0x0,
									},
									frequency: 0x40,
									blendMode: "ADD",
									on: !0x1,
								})),
									(this["fwEmitter2"] = _0x13671d["createEmitter"]({
										x: 0x0,
										y: 0x0,
										lifespan: 0x4b0,
										rotate: {
											min: 0x0,
											max: 0x168,
										},
										alpha: {
											start: 0x0,
											end: 0x1,
											ease: "Expo.easeOut",
										},
										angle: {
											start: 0x0,
											end: 0x168,
											steps: 0x1f,
										},
										speed: {
											min: 0x32,
											max: 0x64,
										},
										quantity: 0x40,
										scale: {
											start: 0x2,
											end: 0.1,
										},
										frequency: 0x40,
										tint: {
											onEmit: (_0x1f67c7, _0x160742, _0x5e1df0) =>
												this["onEmitcustomTint"](_0x1f67c7, _0x160742, _0x5e1df0),
										},
										blendMode: "ADD",
										on: !0x1,
									}));
							}
							["onEmitcustomTint"](_0x250692, _0x2a25b4, _0x2fdfb5) {
								var _0x40e0cf = _0x5d9431;
								return Phaser["Math"]["RND"]["pick"]([0xff8888, 0xff88ff, 0xff88ff, 0xffff88]);
							}
							["OnRecycle"]() {
								var _0x43fb13 = _0x5d9431,
									_0x521010;
								super["OnRecycle"](),
									this["body"]["setCircle"](0x8),
									(this["body"]["enable"] = !0x0),
									(this["canBounce"] = !0x0),
									this["setVisible"](!0x0),
									this["setFrame"]("Cherry.png"),
									this["setAlpha"](0x1),
									this["setScale"](_0x1fa5bb["PixelScale"] * this["weapon"]["PArea"] * 0.5),
									this["setBounce"](0x1, 0x1),
									this["fwEmitter"]["setQuantity"](
										0x8 + 0x8 * Math["floor"](this["weapon"]["level"] / 0x3)
									),
									this["fwEmitter"]["setSpeed"]({
										min: 0x32 * this["weapon"]["PArea"],
										max: 0x64 * this["weapon"]["PArea"],
									}),
									this["fwEmitter2"]["setQuantity"](
										0x8 + 0x8 * Math["floor"](this["weapon"]["level"] / 0x3)
									),
									this["fwEmitter2"]["setSpeed"]({
										min: 0x5 * this["weapon"]["PArea"],
										max: 0xa * this["weapon"]["PArea"],
									});
								var _0x3f6aeb = new Phaser["Geom"]["Circle"](
									0x0,
									0x0,
									0x8 * this["weapon"]["PArea"] * 0x8
								);
								this["fwEmitter2"]["setEmitZone"]({
									type: "random",
									source: _0x3f6aeb,
								}),
									(this["isCullable"] = !0x1),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									(this["save_vel_x"] = 0x1),
									(this["save_vel_y"] = 0x1),
									this["SetForNearestEnemy"](this["aimVec"]),
									this["setVelocity"](this["aimVec"]["x"], this["aimVec"]["y"]),
									null === (_0x521010 = this["SpeedTween"]) ||
										void 0x0 === _0x521010 ||
										_0x521010["stop"](),
									(this["bombDeceleration"] = 0x1),
									(this["SpeedTween"] = this["scene"]["tweens"]["add"]({
										targets: this,
										bombDeceleration: 0x0,
										delay: 0.25 * this["weapon"]["PDuration"],
										duration: 0.75 * this["weapon"]["PDuration"],
										ease: "Linear",
										onComplete: () => {
											this["TryDetonate"]();
										},
									})),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["Shot"],
										{
											detune: -0x64 * this["indexInWeapon"],
											volume: 0.45,
										},
										0xc8,
										0xa
									);
							}
							["TryDetonate"]() {
								var _0x13d865 = _0x5d9431,
									_0x12949a;
								if (Math["random"]() < this["weapon"]["chance"] * _0x2164b8["Core"]["Player"]["luck"]) {
									_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"]
										? (this["setVisible"](!0x0), this["setFrame"]("blurBlack.png"))
										: this["setVisible"](!0x1),
										this["fwEmitter2"]["setPosition"](this["x"], this["y"]),
										this["fwEmitter2"]["start"](),
										this["ring"]
											["setVisible"](!0x0)
											["setScale"](0x0)
											["setAlpha"](0x1)
											["setAngle"](0x0)
											["setPosition"](this["x"], this["y"]),
										_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"]
											? (this["rainbow"]
													["setVisible"](!0x0)
													["setScale"](0x0)
													["setAlpha"](0.75)
													["setAngle"](0x0)
													["setPosition"](this["x"], this["y"])
													["setBlendMode"](_0x1cb257["BlendModes"]["ADD"]),
											  this["rays"]
													["setVisible"](!0x0)
													["setScale"](0x0)
													["setAlpha"](0x1)
													["setAngle"](0x0)
													["setPosition"](this["x"], this["y"]))
											: this["ring"]["setAlpha"](0.5);
									const _0x180273 = Math["max"](0x3, this["weapon"]["level"]) / 0x8;
									this["scene"]["tweens"]["add"]({
										targets: [this["ring"]],
										scale: 0x4 * _0x180273,
										angle: 0x168,
										duration: 0x64,
									}),
										this["scene"]["tweens"]["add"]({
											targets: [this["ring"], this["rays"]],
											delay: 0x64,
											alpha: 0x0,
											duration: 0x64,
										}),
										this["scene"]["tweens"]["add"]({
											targets: [this["rays"]],
											scale: 0x3 * _0x180273,
											duration: 0x64,
										}),
										this["scene"]["tweens"]["add"]({
											targets: [this["rainbow"]],
											scale: 0x5 * _0x180273,
											alpha: 0x0,
											angle: 0x168,
											duration: 0x1f4,
										}),
										_0x2164b8["Sound"]["PlaySound"](
											_0x522ca7["Explosion2"],
											{
												volume: 0.5,
												detune: 0x64 * this["indexInWeapon"] - 0x1f4,
											},
											0x96,
											0x3
										),
										_0x2164b8["Sound"]["PlaySound"](
											_0x522ca7["Whistle"],
											{
												volume: 0.1,
												detune: 0x64 * this["indexInWeapon"],
												rate: 1.5,
											},
											0x96,
											0x3
										),
										_0x2164b8["Core"]["scene"]["tweens"]["add"]({
											targets: this,
											scale: 0x8 * this["weapon"]["PArea"],
											alpha: 0.1,
											duration: 0x78,
											onComplete: () => {
												var _0x38aad6 = _0x13d865;
												this["fwEmitter"]["stop"](),
													this["fwEmitter2"]["stop"](),
													(this["body"]["enable"] = !0x1);
											},
										}),
										_0x2164b8["Core"]["scene"]["tweens"]["add"]({
											targets: this,
											alpha: 0.1,
											duration: 0x64,
											delay: 0xc8,
											onStart: () => {
												var _0x16d7f0 = _0x13d865;
												_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] &&
													(this["fwEmitter"]["setPosition"](this["x"], this["y"]),
													this["fwEmitter"]["start"]());
											},
											onComplete: () => {
												var _0x25878e = _0x13d865;
												this["fwEmitter"]["stop"](),
													this["fwEmitter2"]["stop"](),
													this["DeSpawn"]();
											},
										});
								} else
									null === (_0x12949a = this["ScaleTween"]) ||
										void 0x0 === _0x12949a ||
										_0x12949a["stop"](),
										(this["ScaleTween"] = this["scene"]["tweens"]["add"]({
											targets: this,
											scale: 0x0,
											duration: 0x12c,
											ease: "Linear",
											onComplete: () => {
												var _0x52b633 = _0x13d865;
												this["DeSpawn"]();
											},
										}));
							}
							["Bounce"](_0x2f3263) {
								var _0x308c15 = _0x5d9431;
								this["body"] === _0x2f3263 && (this["objectsHit"] = []);
							}
							["OnHasHitAnObject"](_0x38f137) {
								var _0x52997d = _0x5d9431;
								if (!_0x38f137["isDead"]) {
									if (!this["canBounce"]) return;
									(this["save_vel_x"] *= -0x1),
										(this["save_vel_y"] *= -0x1),
										(this["objectsHit"] = []),
										(this["canBounce"] = !0x1),
										this["scene"]["time"]["removeEvent"](this["BounceTimer"]),
										(this["BounceTimer"] = this["scene"]["time"]["addEvent"]({
											delay: 0x3c,
											callback: () => {
												var _0x5d91dd = _0x52997d;
												this["canBounce"] = !0x0;
											},
										}));
								}
							}
							["OnHasHitWall"](_0x10e4f2) {
								var _0x523da4 = _0x5d9431;
								(this["save_vel_x"] *= _0x10e4f2["faceRight"] || _0x10e4f2["faceLeft"] ? -0x1 : 0x1),
									(this["save_vel_y"] *=
										_0x10e4f2["faceTop"] || _0x10e4f2["faceBottom"] ? -0x1 : 0x1),
									(this["objectsHit"] = []);
							}
							["Update"]() {
								var _0x139bca = _0x5d9431;
								this["setVelocity"](
									this["aimVec"]["x"] * this["save_vel_x"] * this["bombDeceleration"],
									this["aimVec"]["y"] * this["save_vel_y"] * this["bombDeceleration"]
								);
							}
							["DeSpawn"]() {
								var _0x5b931f = _0x5d9431;
								(this["isCullable"] = !0x0),
									_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["ExpireTimer"]),
									this["fwEmitter"]["stop"](),
									this["fwEmitter2"]["stop"](),
									super["DeSpawn"]();
							}
						};
					class _0x4d0f45 extends Phaser["GameObjects"]["Group"] {
						constructor(_0x5222c2, _0x3ecc02) {
							var _0x41e6c9 = _0x5d9431;
							super(_0x5222c2),
								(this["stored"] = new Array()),
								(this["spawned"] = new Array()),
								(this["weaponType"] = 0x0),
								(this["upperLimit"] = 0x32),
								this["Init"](_0x3ecc02);
						}
						["Init"](_0xd4f438) {
							var _0x1e6625 = _0x5d9431;
							(this["weaponType"] = _0xd4f438), this["scene"]["add"]["existing"](this);
						}
						["SpawnAt"](_0x19b56b, _0x175212, _0x4b60a8, _0x179c32 = 0x0) {
							var _0x4e7a74 = _0x5d9431;
							if (this["spawned"]["length"] >= this["upperLimit"]) return;
							const _0x55d798 = this["Spawn"](_0x4b60a8, _0x179c32);
							return (
								_0x55d798["setPosition"](_0x19b56b, _0x175212),
								(_0x55d798["indexInWeapon"] = _0x179c32),
								this["scene"]["children"]["add"](_0x55d798),
								_0x55d798["OnRecycle"](),
								_0x55d798
							);
						}
						["Spawn"](_0x1adc0b, _0x52419b = 0x0) {
							var _0x52b833 = _0x5d9431;
							let _0xc9d37b = this["stored"]["pop"]();
							return (
								_0xc9d37b || ((_0xc9d37b = this["Make"](_0x1adc0b, _0x52419b)), _0xc9d37b["Init"]()),
								this["add"](_0xc9d37b, !0x0),
								this["spawned"]["push"](_0xc9d37b),
								_0x2164b8["Core"]["BulletGroup"]["add"](_0xc9d37b, !0x1),
								_0xc9d37b
							);
						}
						["Return"](_0x163e46) {
							var _0x4cbd85 = _0x5d9431;
							this["scene"]["children"]["remove"](_0x163e46),
								this["remove"](_0x163e46, !0x0, !0x1),
								this["spawned"]["splice"](this["spawned"]["indexOf"](_0x163e46), 0x1),
								_0x2164b8["Core"]["BulletGroup"]["remove"](_0x163e46, !0x1),
								this["stored"]["push"](_0x163e46);
						}
						["Make"](_0x45d781, _0x323a8f = 0x0) {
							var _0x1494d5 = _0x5d9431;
							switch (this["weaponType"]) {
								default:
								case _0x5324b3["VOID"]:
									return new _0x4071dc(this, 0x0, 0x0, "ball", 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["AXE"]:
									return new _0x150981(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["SCYTHE"]:
									return new _0x53d998(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["KNIFE"]:
								case _0x5324b3["THOUSAND"]:
									return new _0x150668(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["FIREBALL"]:
									return new _0x7d84ce(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["MAGIC_MISSILE"]:
									return new _0x3004d6(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["HOLY_MISSILE"]:
									return new _0x4a11ab(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["HOLYWATER"]:
									return new _0x1ac304(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["DIAMOND"]:
									return new _0xf03af6(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["WHIP"]:
									return new _0x2c1385(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["HOLYBOOK"]:
									return new _0x1fff3d(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["VESPERS"]:
									return new _0x4822bb(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["CROSS"]:
									return new _0x3c91f2(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["LIGHTNING"]:
									return new _0x130e1d(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["GARLIC"]:
									return new _0x589c87(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["BONE"]:
									return new _0xd54dd4(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["HELLFIRE"]:
									return new _0x2fa114(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["LANCET"]:
									return new _0x352e3d(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["SILF"]:
									return new _0x380d5d(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["SILF2"]:
									return new _0x346888(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["SILF3"]:
									return new _0x421abc(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["LAUREL"]:
								case _0x5324b3["THORNS"]:
									return new _0x261acf(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["PENTAGRAM"]:
									return new _0x7026b2(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["HEAVENSWORD"]:
									return new _0x215ddd(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["VAMPIRICA"]:
									return new _0x30d8f1(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["NDUJA"]:
									return new _0xdddc7f(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["VORTEX"]:
									return new _0x187a31(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["BORA"]:
									return new _0x190bfd(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["LOOP"]:
									return new _0x3724a3(this, 0x0, 0x0, _0x45d781, _0x323a8f);
								case _0x5324b3["CHERRY"]:
									return new _0x4dd1be(this, 0x0, 0x0, _0x45d781, _0x323a8f);
							}
						}
					}
					const _0x18ca1e = {
						[_0xed2036["NONE"]]: {
							isTintFill: !0x1,
							targetTint: 0xffffff,
							hitFrameName: "",
							impactFrameName: "",
							duration: 0x78,
						},
						[_0xed2036["PUSH"]]: {
							isTintFill: !0x0,
							targetTint: 0xddffdd,
							hitFrameName: "NoDraw.png",
							impactFrameName: "NoDraw.png",
							duration: 0x3c,
						},
						[_0xed2036["DEFAULT"]]: {
							isTintFill: !0x0,
							targetTint: 0xffffff,
							hitFrameName: "HitStar2.png",
							impactFrameName: "Shockwave3.png",
							duration: 0x78,
						},
						[_0xed2036["TIMEFREEZE"]]: {
							isTintFill: !0x0,
							targetTint: 0xff,
							hitFrameName: "feedback-4.png",
							impactFrameName: "Shockwave3.png",
							duration: 0x1e,
						},
						[_0xed2036["FIRE"]]: {
							isTintFill: !0x0,
							targetTint: 0xff0000,
							hitFrameName: "Hit1.png",
							impactFrameName: "HitBoom2.png",
							duration: 0x1e,
						},
						[_0xed2036["DARK"]]: {
							isTintFill: !0x0,
							targetTint: 0x440088,
							hitFrameName: "HitMoon2.png",
							impactFrameName: "HitBlack1.png",
							duration: 0x1e,
						},
						[_0xed2036["LIGHT"]]: {
							isTintFill: !0x0,
							targetTint: 0x44ffff,
							hitFrameName: "HitStar2.png",
							impactFrameName: "HitStarWhite1.png",
							duration: 0x1e,
						},
						[_0xed2036["PRISM"]]: {
							isTintFill: !0x0,
							targetTint: 0xffffff,
							hitFrameName: "s_pfx_rainbow_32.png",
							impactFrameName: "s_pfx_rainbow_64.png",
							duration: 0x3c,
						},
					};
					class _0x22aadd extends Phaser["Physics"]["Arcade"]["Sprite"] {
						constructor(_0x66265b, _0x15ee53, _0x539675, _0x14d290) {
							var _0x1282bc = _0x5d9431;
							if (
								(super(_0x66265b["scene"], _0x15ee53, _0x539675, "monsters"),
								(this["hp"] = 0x3),
								(this["maxHp"] = 0x3),
								(this["dataMaxHp"] = 0x3),
								(this["power"] = 0xa),
								(this["knockback"] = 0x1),
								(this["maxKnockback"] = 0x3),
								(this["deathKB"] = 0xa),
								(this["damageKB"] = 0x1),
								(this["xp"] = 0x1),
								(this["speed"] = 0x64),
								(this["scaleMul"] = 0x1),
								(this["enemyType"] = _0x3b89df["SKELETON"]),
								(this["HPxLevel"] = !0x1),
								(this["FixedDirection"] = !0x1),
								(this["Medusa"] = !0x1),
								(this["medusaElapsed"] = 0x0),
								(this["owner"] = null),
								(this["isDead"] = !0x1),
								(this["receivingDamage"] = !0x1),
								(this["passThroughWalls"] = !0x1),
								(this["_currentDirection"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["defaultName"] = ""),
								(this["isCullable"] = !0x0),
								(this["IsTimeStopped"] = !0x1),
								(this["IsFrozen"] = !0x1),
								(this["defaultSpeed"] = 0x64),
								(this["res_Freeze"] = 0x0),
								(this["res_Rosary"] = 0x0),
								(this["res_Debuffs"] = 0x0),
								(this["moveTweenIndex"] = 0x0),
								(this["isTeleportOnCull"] = !0x1),
								(this["idleFrameCount"] = 0x0),
								(this["SelfDestruct"] = !0x1),
								(this["enemyType"] = _0x14d290),
								(this["pool"] = _0x66265b),
								0x0 === _0x22aadd["MovementTweens"]["length"])
							) {
								for (let _0xa1da88 = 0x0; _0xa1da88 < 0xa; _0xa1da88++)
									_0x22aadd["TweenAngles"]["push"]({
										angle: -0x5,
									}),
										_0x22aadd["MovementTweens"]["push"](
											this["scene"]["tweens"]["add"]({
												targets: _0x22aadd["TweenAngles"][_0xa1da88],
												delay: 0x2d * _0xa1da88,
												angle: 0x5,
												duration: 0x1f4,
												ease: "Linear",
												loop: -0x1,
												yoyo: !0x0,
											})
										);
							}
						}
						["Init"](_0x8cd036 = -0x3e8, _0xde5d58 = -0x3e8) {
							var _0x36da29 = _0x5d9431;
							const _0x2821ad = _0x3317fb[this["enemyType"]][0x0];
							let _0x39e5e8 = _0x2821ad["maxSpeed"]
								? Math["random"]() * (_0x2821ad["maxSpeed"] - _0x2821ad["speed"]) + _0x2821ad["speed"]
								: _0x2821ad["speed"];
							(this["dataMaxHp"] = _0x2821ad["maxHp"]),
								(this["maxHp"] = _0x2821ad["maxHp"]),
								(this["power"] = _0x2821ad["power"]),
								(this["knockback"] = _0x2821ad["knockback"]),
								(this["maxKnockback"] = _0x2821ad["maxKnockback"]),
								(this["deathKB"] = _0x2821ad["deathKB"]),
								(this["xp"] = _0x2821ad["xp"]),
								(this["speed"] = _0x39e5e8),
								(this["defaultSpeed"] = _0x39e5e8),
								(this["moreX"] = _0x2821ad["moreX"]),
								(this["moreY"] = _0x2821ad["moreY"]),
								(this["alpha"] = _0x2821ad["alpha"] ? _0x2821ad["alpha"] : 0x1),
								(this["scaleMul"] = _0x2821ad["scale"] ? _0x2821ad["scale"] : 0x1),
								(this["res_Freeze"] = _0x2821ad["res_Freeze"] ? _0x2821ad["res_Freeze"] : 0x0),
								(this["res_Debuffs"] = _0x2821ad["res_Debuffs"] ? _0x2821ad["res_Debuffs"] : 0x0),
								(this["res_Rosary"] = _0x2821ad["res_Rosary"] ? _0x2821ad["res_Rosary"] : 0x0),
								(this["colliderOverride"] = _0x2821ad["colliderOverride"]),
								(this["idleFrameCount"] = _0x2821ad["idleFrameCount"]),
								(this["passThroughWalls"] = _0x2821ad["passThroughWalls"]);
							var _0x44c4b7 = _0x2821ad["skills"];
							(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["HPxLevel"])) > -0x1 &&
								(this["HPxLevel"] = !0x0),
								(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["FixedDirection"])) >
									-0x1 && (this["FixedDirection"] = !0x0),
								(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["Medusa"])) > -0x1 &&
									((this["Medusa"] = !0x0), (this["medusaElapsed"] = 0x2 * Math["random"]())),
								(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["SelfDestruct"])) >
									-0x1 &&
									((this["SelfDestruct"] = !0x0),
									(this["alertSprite"] = new Phaser["GameObjects"]["Image"](
										this["scene"],
										0x0,
										0x0,
										"vfx",
										"sPFX_ring_64.png"
									)
										["setVisible"](!0x1)
										["setOrigin"](0.5, 0.75)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
										["setTint"](0xff0000))),
								(this["_0x2fe496"] =
									(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["_0x2fe496"])) >
									-0x1),
								(this["_0x2fe497"] =
									(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["_0x2fe497"])) >
									-0x1),
								(this["_0x2fe498"] =
									(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["_0x2fe498"])) >
									-0x1),
								(this["_0x2fe499"] =
									(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["_0x2fe499"])) >
									-0x1),
								(this["_0x2fe49a"] =
									(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["_0x2fe49a"])) >
									-0x1),
								(this["_0x2fe49b"] =
									(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["_0x2fe49b"])) >
									-0x1),
								(this["_0x2fe49c"] =
									(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["_0x2fe49c"])) >
									-0x1),
								(this["_0x2fe49d"] =
									(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["_0x2fe49d"])) >
									-0x1),
								(this["_0x2fe49e"] =
									(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["_0x2fe49e"])) >
									-0x1),
								(this["_0x2fe49f"] =
									(null == _0x44c4b7 ? void 0x0 : _0x44c4b7["indexOf"](_0x44ffbb["_0x2fe49f"])) >
									-0x1);
							const _0x19ace0 = Phaser["Math"]["RND"]["pick"](_0x2821ad["frameNames"]);
							this["setTexture"](_0x2821ad["textureName"], _0x19ace0);
							const _0x327f38 = this["anims"]["generateFrameNames"](_0x2821ad["textureName"], {
								start: 0x0,
								end: _0x2821ad["end"],
								zeroPad: 0x0,
								prefix: _0x19ace0["replace"]("0.png", ""),
								suffix: ".png",
							});
							if (
								(this["anims"]["create"]({
									key: "die",
									frames: _0x327f38,
									frameRate: 0x18,
									repeat: 0x0,
								}),
								this["idleFrameCount"])
							) {
								const _0xcf02ec = this["anims"]["generateFrameNames"](_0x2821ad["textureName"], {
									start: 0x1,
									end: this["idleFrameCount"],
									zeroPad: 0x2,
									prefix: _0x19ace0["replace"]("0.png", "") + "i",
									suffix: ".png",
								});
								this["anims"]["create"]({
									key: "idle",
									frames: _0xcf02ec,
									frameRate: 0x8,
									repeat: -0x1,
								});
							}
							this["on"]("animationcomplete", this["OnDeathAnimationComplete"]["bind"](this)),
								(this["defaultName"] = _0x19ace0),
								this["setPosition"](_0x8cd036, _0xde5d58),
								this["scene"]["physics"]["add"]["existing"](this),
								this["OnRecycle"](),
								(this["moveTweenIndex"] = Math["floor"](
									Math["random"]() * _0x22aadd["TweenAngles"]["length"]
								));
						}
						["Freeze"](_0x3b4820, _0x5b1aa8 = 0x1) {
							var _0x276ac8 = _0x5d9431;
							this["res_Freeze"] > _0x5b1aa8 ||
								this["IsTimeStopped"] ||
								(this["FreezeTimer"] && this["FreezeTimer"]["destroy"](),
								(this["FreezeTimer"] = this["scene"]["time"]["addEvent"]({
									delay: _0x3b4820,
									callback: () => this["ResumeFromFreeze"](),
								})),
								(this["IsTimeStopped"] = !0x0),
								(this["speed"] = 0x0),
								this["setVelocity"](0x0),
								this["setTint"](0xff),
								this["idleFrameCount"] && this["anims"]["pause"]());
						}
						["ResumeFromFreeze"]() {
							var _0x354f0a = _0x5d9431;
							(this["IsTimeStopped"] = !0x1),
								(this["speed"] = this["defaultSpeed"]),
								this["restoreTint"](),
								this["idleFrameCount"] && this["anims"]["resume"]();
						}
						["TimeStop"]() {
							var _0x1e3814 = _0x5d9431;
							this["FreezeTimer"] && this["FreezeTimer"]["destroy"](),
								(this["IsTimeStopped"] = !0x0),
								(this["speed"] = 0x0),
								this["setVelocity"](0x0),
								this["setTint"](0xff),
								this["idleFrameCount"] && this["anims"]["pause"]();
						}
						["ResumeFromTimeStop"]() {
							var _0x59532c = _0x5d9431;
							(this["IsTimeStopped"] = !0x1),
								(this["speed"] = this["defaultSpeed"]),
								this["restoreTint"](),
								this["idleFrameCount"] && this["anims"]["resume"]();
						}
						["setOwner"](_0x286afb) {
							var _0x2d4d9a = _0x5d9431;
							this["owner"] = _0x286afb;
						}
						["OnRecycle"]() {
							var _0x2b08a4 = _0x5d9431;
							this["idleFrameCount"] &&
							!global["anims_disabled"].value ? this["anims"]["play"]({
									key: "idle",
									startFrame: Math["ceil"](Math["random"]() * (0.5 * this["idleFrameCount"])),
								}) : '',
								this["SelfDestructTimer"] &&
									(this["SelfDestructTimer"]["destroy"](),
									this["alertSprite"]["setVisible"](!0x1),
									this["alertSprite"]["setAlpha"](0x1),
									(this["isSelfDestructionTriggered"] = !0x1)),
								(this["damageKB"] = 0x1),
								(this["target"] = _0x2164b8["Core"]["Player"]),
								(this["maxHp"] =
									this["dataMaxHp"] *
									_0x1fa5bb["EnemyHealthMultiplier"] *
									_0x2164b8["Core"]["Player"]["curse"]),
								this["HPxLevel"] &&
									(this["maxHp"] =
										this["dataMaxHp"] *
										_0x2164b8["Core"]["Player"]["level"] *
										_0x1fa5bb["EnemyHealthMultiplier"]),
								(this["FixedDirection"] || this["Medusa"]) &&
									((this["_currentDirection"]["x"] = 0x0), (this["_currentDirection"]["y"] = 0x0)),
								(this["hp"] = this["maxHp"]),
								(this["isDead"] = !0x1),
								(this["visible"] = !0x0),
								(this["body"]["owner"] = this),
								(this["body"]["enable"] = !0x0),
								(this["IsTimeStopped"] = !0x1),
								(this["speed"] = this["defaultSpeed"]),
								this["setFrame"](this["defaultName"]),
								this["restoreTint"](),
								this["setOrigin"](0.5),
								this["setScale"](0x1);
							var _0xadd7b2,
								_0xb333f9 = 0.5 * (_0xadd7b2 = 0.4 * this["width"]);
							(this["body"]["setCircle"](_0xadd7b2, _0xb333f9, _0xb333f9), this["colliderOverride"]) &&
								((_0xb333f9 = 0.5 * (_0xadd7b2 = this["width"] * this["colliderOverride"]["radius"])),
								this["body"]["setCircle"](_0xadd7b2, _0xb333f9, _0xb333f9),
								this["body"]["setOffset"](_0xb333f9, _0xb333f9 + this["colliderOverride"]["offsetY"])),
								(this["setOrigin"](0.5, 0x1),
								this["setScale"](_0x1fa5bb["PixelScale"] * this["scaleMul"]));
						}
						["OnSelfDestruct"]() {
							var _0x3e5b7e = _0x5d9431;
							this["isDead"] ||
								(this["alertSprite"]["setVisible"](!0x1),
								this["alertTween"] && (this["alertTween"]["stop"](), (this["alertTween"] = null)),
								_0x2164b8["Core"]["MakeExplosion"](this["x"], this["y"], this["moreX"], this["moreY"]),
								this["Disappear"]());
						}
						["GetDamaged"](
							_0x543220 = 0x1,
							_0xbb6d7 = _0xed2036["DEFAULT"],
							_0x275f5a = 0x1,
							_0x1cdd1f = ""
						) {
							var _0x3a10d3 = _0x5d9431;
							_0x543220 > 0x0 &&
								_0x2164b8["Core"]["PlayerOptions"]["DamageNumbersEnabled"] &&
								_0x2164b8["Core"]["ShowDamageAt"](this["x"], this["y"], _0x543220),
								(this["hp"] -= _0x543220),
								this["hp"] <= 0x0
									? (this["_0x2fe498"] &&
											(this["IsTimeStopped"] ||
												((this["hp"] = this["maxHp"]), (this["isDead"] = !0x0))),
									  this["Die"]())
									: (this["damageKB"] = _0x275f5a),
								_0x2164b8["Sound"]["PlaySound"](
									_0x522ca7["Hit"],
									{
										volume: 0.5,
										detune: 0x1f4 * (Math["random"]() - 0.5),
									},
									0x96,
									0x3
								),
								_0xbb6d7 != _0xed2036["NONE"] &&
									_0x2164b8["Core"]["ShowHitVFXAt"](this["x"], this["y"], _0xbb6d7),
								this["OnGetDamaged"](_0xbb6d7),
								_0x543220 >= 0x2710 && _0x2164b8["Core"]["Player"]["GetDamaged"](0x9);
						}
						["OnGetDamaged"](_0xb0e226 = _0xed2036["DEFAULT"]) {
							var _0x28b86d = _0x5d9431,
								_0x596f1e;
							_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] &&
								_0xb0e226 != _0xed2036["NONE"] &&
								((_0x596f1e = _0x18ca1e[_0xb0e226])["isTintFill"]
									? this["setTintFill"](_0x596f1e["targetTint"])
									: this["setTint"](_0x596f1e["targetTint"])),
								(this["_blinkTimeout"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
									delay: this["isDead"] ? 0x3c : _0x596f1e ? _0x596f1e["duration"] : 0x78,
									loop: !0x1,
									callback: () => {
										var _0x25fb5e = _0x28b86d;
										this["restoreTint"]();
									},
								})),
								(this["_blinkTimeout"]["name"] = "Blink"),
								(this["receivingDamage"] = !0x0);
						}
						["restoreTint"]() {
							this["IsTimeStopped"] ? this["setTint"](0xff) : this["setTint"](0xffffff),
								(this["receivingDamage"] = !0x1);
						}
						["OnDeathAnimationComplete"]() {
							this["DeSpawn"]();
						}
						["DeSpawn"]() {
							var _0x58febb = _0x5d9431;
							(this["isDead"] = !0x0),
								(this["body"]["enable"] = !0x1),
								(this["visible"] = !0x1),
								this["pool"]["Recycle"](this),
								(this["isCullable"] = !0x0),
								this["SelfDestructTimer"] && this["SelfDestructTimer"]["destroy"](),
								this["SelfDestruct"] &&
									(this["scene"]["children"]["remove"](this["alertSprite"]),
									this["alertSprite"]["setVisible"](!0x1),
									this["alertSprite"]["setAlpha"](0x0),
									this["alertTween"] && (this["alertTween"]["stop"](), (this["alertTween"] = null)));
						}
						["Disappear"]() {
							var _0x5c963c = _0x5d9431;
							(this["isDead"] = !0x0), this["anims"]["play"]("die");
						}
						["Die"]() {
							var _0x301f8c = _0x5d9431;
							if (this["isDead"]) return;
							this["SelfDestruct"] &&
								(this["alertSprite"]["setVisible"](!0x1),
								this["alertTween"] && (this["alertTween"]["stop"](), (this["alertTween"] = null))),
								(this["isDead"] = !0x0);
							const _0x47181e = -this["deathKB"];
							this["setVelocity"](
								_0x1fa5bb["EnemySpeed"] * this["speed"] * this["_currentDirection"]["x"] * _0x47181e,
								_0x1fa5bb["EnemySpeed"] * this["speed"] * this["_currentDirection"]["y"] * _0x47181e
							),
								this["anims"]["play"]("die"),
								_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["_blinkTimeout"]);
							let _0x148b0e = Math["floor"]((Math["random"]() + 0.5) * this["xp"]);
							_0x148b0e > 0x0 && _0x2164b8["Core"]["MakeGem"](this["x"], this["y"], _0x148b0e),
								this["treasure"] &&
									(_0x2164b8["Core"]["MakeTreasure"](this["x"], this["y"], this["treasure"]),
									(this["treasure"] = null)),
								(_0x3317fb[this["enemyType"]][0x0]["killedAmount"] += 0x1),
								(_0x2164b8["Core"]["PlayerOptions"]["RunEnemies"] += 0x1),
								_0x2164b8["Core"]["MainUI"]["UpdateKills"]();
						}
						["OnTeleportOnCull"]() {
							var _0x5797cf = _0x5d9431,
								_0x519dd6 = _0x2164b8["Core"]["GetPositionForEnemyOutOfSight"](0x5, 0x30);
							this["setPosition"](_0x519dd6["x"], _0x519dd6["y"]);
						}
						["AttachTreasure"](_0x4cc871) {
							var _0x59608d = _0x5d9431;
							this["treasure"] = _0x4cc871;
						}
						["Update"](_0x1b014a = 0x0) {
							var _0x1f1821 = _0x5d9431;
							if (this["isDead"]) return;
							if ((this["setDepth"](this["y"] - _0x2164b8["Core"]["Player"]["y"]), this["IsTimeStopped"]))
								return;
							if (
								((!this["FixedDirection"] ||
									(this["FixedDirection"] &&
										0x0 == this["_currentDirection"]["x"] &&
										0x0 == this["_currentDirection"]["y"])) &&
									((this["_currentDirection"]["x"] = this["target"]["x"] - this["x"]),
									(this["_currentDirection"]["y"] = this["target"]["y"] - this["y"]),
									this["_currentDirection"]["normalize"]()),
								this["Medusa"] &&
									((this["medusaElapsed"] += 0.05),
									(this["_currentDirection"]["y"] = Math["cos"](this["medusaElapsed"]))),
								this["SelfDestruct"] &&
									(this["alertSprite"]["copyPosition"](this), !this["isSelfDestructionTriggered"]))
							) {
								let _0x2672a3 = new Phaser["Math"]["Vector2"](this["x"], this["y"]);
								new Phaser["Math"]["Vector2"](
									_0x2164b8["Core"]["Player"]["x"],
									_0x2164b8["Core"]["Player"]["y"]
								)["distanceSq"](_0x2672a3) < 0x9c40 &&
									((this["isSelfDestructionTriggered"] = !0x0),
									this["scene"]["add"]
										["existing"](this["alertSprite"])
										["setVisible"](!0x0)
										["setAlpha"](0x1)
										["setScale"](0x1),
									this["alertTween"] && (this["alertTween"]["stop"](), (this["alertTween"] = null)),
									(this["alertTween"] = this["scene"]["tweens"]["add"]({
										targets: this["alertSprite"],
										alpha: 0x0,
										scale: 0.9,
										yoyo: !0x0,
										duration: 0xc8,
										repeat: -0x1,
										onRepeat: () => {
											var _0x1ab30e = _0x1f1821;
											this["alertTween"]["setTimeScale"](
												1.1 * this["alertTween"]["getTimeScale"]()
											),
												_0x2164b8["Sound"]["PlaySound"](
													_0x522ca7["Alert"],
													{
														volume: 0.2,
													},
													0xfa,
													0x3
												);
										},
									})),
									this["alertTween"]["setTimeScale"](0x1),
									(this["SelfDestructTimer"] = this["scene"]["time"]["addEvent"]({
										delay: 0x7d0,
										callback: () => this["OnSelfDestruct"](),
									})));
							}
							let _0x3ddb81 = this["receivingDamage"] ? -this["knockback"] * this["damageKB"] : 0x1;
							this["setFlipX"](this["_currentDirection"]["x"] > 0x0),
								this["setVelocity"](
									_0x1fa5bb["EnemySpeed"] *
										this["speed"] *
										this["_currentDirection"]["x"] *
										_0x3ddb81,
									_0x1fa5bb["EnemySpeed"] * this["speed"] * this["_currentDirection"]["y"] * _0x3ddb81
								),
								this["setAngle"](_0x22aadd["TweenAngles"][this["moveTweenIndex"]]["angle"]);
						}
					}
					(_0x22aadd["MovementTweens"] = new Array()), (_0x22aadd["TweenAngles"] = new Array());
					class _0x5a2322 extends Phaser["GameObjects"]["Group"] {
						constructor(_0x3bb335, _0x1a1f56) {
							var _0xed399d = _0x5d9431;
							super(_0x3bb335),
								(this["stored"] = new Array()),
								(this["spawned"] = new Array()),
								(this["enemyType"] = _0x3b89df["SKELETON"]),
								(this["enabled"] = !0x0),
								this["Init"](_0x1a1f56);
						}
						["Init"](_0x481604) {
							var _0x377434 = _0x5d9431;
							(this["enemyType"] = _0x481604), this["scene"]["add"]["existing"](this);
						}
						["SpawnAt"](_0x2d820c, _0x4387f8, _0x387f07) {
							var _0x14e9cf = _0x5d9431;
							const _0x3676a9 = this["Spawn"]();
							return (
								_0x3676a9["setPosition"](_0x2d820c, _0x4387f8),
								_0x3676a9["setOwner"](_0x387f07),
								_0x2164b8["Core"]["IsTimeStopped"] && _0x3676a9["TimeStop"](),
								_0x3676a9
							);
						}
						["Spawn"]() {
							var _0x2139b8 = _0x5d9431;
							let _0x18674a = this["stored"]["pop"]();
							return (
								_0x18674a || ((_0x18674a = this["Make"]()), _0x18674a["Init"]()),
								this["scene"]["children"]["add"](_0x18674a),
								_0x18674a["OnRecycle"](),
								this["add"](_0x18674a, !0x0),
								this["spawned"]["push"](_0x18674a),
								_0x2164b8["Core"]["Enemies"]["push"](_0x18674a),
								_0x18674a["passThroughWalls"] ||
									_0x2164b8["Core"]["EnemyGroup"]["add"](_0x18674a, !0x1),
								_0x18674a
							);
						}
						["Recycle"](_0x4e6790) {
							var _0x2d7027 = _0x5d9431;
							this["scene"]["children"]["remove"](_0x4e6790),
								this["remove"](_0x4e6790, !0x0, !0x1),
								this["spawned"]["splice"](this["spawned"]["indexOf"](_0x4e6790), 0x1);
							var _0x19014a = _0x2164b8["Core"]["Enemies"]["indexOf"](_0x4e6790);
							_0x19014a >= 0x0 && _0x2164b8["Core"]["Enemies"]["splice"](_0x19014a, 0x1),
								_0x2164b8["Core"]["EnemyGroup"]["remove"](_0x4e6790, !0x1),
								this["stored"]["push"](_0x4e6790),
								_0x4e6790["owner"] && _0x4e6790["owner"]["OnDespawn"](_0x4e6790);
						}
						["Make"]() {
							return new _0x22aadd(this, 0x0, 0x0, this["enemyType"]);
						}
					}
					class _0x1584a1 extends Phaser["GameObjects"]["Sprite"] {
						constructor(_0x5a3af8) {
							var _0x2ca8ae = _0x5d9431;
							super(
								_0x5a3af8,
								0.5 * _0x5a3af8["renderer"]["width"],
								0.5 * _0x5a3af8["renderer"]["height"],
								"vfx",
								"Burst1.png"
							),
								this["setScrollFactor"](0x0),
								_0x5a3af8["add"]["existing"](this),
								(this["sprite1"] = _0x5a3af8["add"]
									["sprite"](0x0, 0x0, "vfx", "WhiteDot.png")
									["setScrollFactor"](0x0)
									["setScale"](_0x5a3af8["renderer"]["width"], _0x5a3af8["renderer"]["height"])
									["setAlpha"](0x0)
									["setOrigin"](0x0)
									["setDepth"](0x2710)),
								(this["tween1"] = this["scene"]["tweens"]["add"]({
									targets: this["sprite1"],
									alpha: 0x1,
									duration: 0x64,
									yoyo: !0x0,
									ease: "Linear",
								}));
							const _0x1a4d82 = this["anims"]["generateFrameNames"]("vfx", {
								start: 0x1,
								end: 0x6,
								zeroPad: 0x0,
								prefix: "Burst",
								suffix: ".png",
							});
							this["anims"]["create"]({
								key: "enter",
								frames: _0x1a4d82,
								frameRate: 0x1e,
								repeat: 0x0,
							}),
								(this["visible"] = !0x0),
								this["setScale"](0x8),
								this["setDepth"](0x2710),
								(this["blendMode"] = _0x1cb257["BlendModes"]["ADD"]);
						}
						["_dispose"]() {
							var _0x28a3be = _0x5d9431;
							this["scene"]["tweens"]["remove"](this["tween1"]),
								this["destroy"](),
								this["sprite1"]["destroy"]();
						}
						["Play"]() {
							var _0x289a10 = _0x5d9431;
							this["tween1"]["restart"](),
								this["play"]("enter"),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Rosary"], {
									volume: 1.8,
									rate: 0x2,
								});
						}
					}
					const _0x668922 = _0x1584a1;
					class _0x54833c {
						constructor(_0x4365cc, _0x574a52) {
							var _0x4908c8 = _0x5d9431;
							(this["spawned"] = 0x0),
								(this["dontSpawnIfAbove"] = 0x258),
								(this["scene"] = _0x4365cc),
								(this["stage"] = _0x574a52);
						}
						["TriggerEvent"](_0x403ea3) {
							var _0x3ab348 = _0x5d9431;
							let _0x48f29d = _0x403ea3["eventType"],
								_0x1c0a66 = _0x403ea3["delay"],
								_0x2521b8 = _0x403ea3["chance"],
								_0x21318d = _0x403ea3["repeat"],
								_0xc82eae = _0x403ea3["duration"],
								_0x16f8f9 = _0x403ea3["moreX"],
								_0x5022c4 = _0x403ea3["moreY"];
							_0x1c0a66
								? (_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: _0x1c0a66,
										loop: !0x1,
										repeat: _0x21318d,
										callback: () => {
											var _0x3bac9f = _0x3ab348;
											this["TriggerSwitchEvent"](
												_0x48f29d,
												_0x2521b8,
												_0xc82eae,
												_0x16f8f9,
												_0x5022c4
											);
										},
								  })["name"] = "trigger event")
								: this["TriggerSwitchEvent"](_0x48f29d, _0x2521b8, _0xc82eae, _0x16f8f9, _0x5022c4);
						}
						["TriggerSwitchEvent"](_0x19f147, _0x2a8f62, _0x790620 = 0x0, _0x2ba098 = 0x0, _0x2c0423) {
							var _0x23cf4b = _0x5d9431,
								_0x27a7f5;
							if (
								!(
									_0x19f147 != _0x1f7fad["ERASE_ENEMIES"] &&
									_0x2164b8["Core"]["Enemies"]["length"] > this["dontSpawnIfAbove"]
								)
							) {
								var _0x14c18f =
									null === (_0x27a7f5 = _0x2164b8["Core"]["Player"]) || void 0x0 === _0x27a7f5
										? void 0x0
										: _0x27a7f5["luck"];
								if (
									(void 0x0 === _0x14c18f && (_0x14c18f = 0x1),
									!(_0x2a8f62 && 0x64 * Math["random"]() > _0x2a8f62 * (0x1 / _0x14c18f)))
								)
									switch (_0x19f147) {
										case _0x1f7fad["JELLY_WALL"]:
											this["PlayJellyfish"](_0x790620);
											break;
										case _0x1f7fad["FLOWER_WALL"]:
											this["PlayFlower"](_0x790620);
											break;
										case _0x1f7fad["BAT_SWARM"]:
											this["PlayBatSwarm"](_0x790620);
											break;
										case _0x1f7fad["GHOST_SWARM"]:
											this["PlayGhostSwarm"](_0x790620);
											break;
										case _0x1f7fad["ERASE_ENEMIES"]:
											this["PlayEraseEnemies"]();
											break;
										case _0x1f7fad["MEDUSA_SWARM"]:
											this["PlayMedusaSwarm"](_0x790620, _0x2ba098, _0x2c0423);
											break;
										case _0x1f7fad["MEDUSA_WALL"]:
											this["PlayMedusaWall"](_0x790620, _0x2ba098, _0x2c0423);
											break;
										case _0x1f7fad["SHADE_BOMB_RED"]:
											this["PlayShadeBomb"](_0x790620, "red", _0x2ba098);
											break;
										case _0x1f7fad["SKULL_SWARM"]:
											this["PlaySkullSwarm"](_0x790620, _0x2ba098);
									}
							}
						}
						["PlayJellyfish"](_0x71a87b) {
							var _0x287878 = _0x5d9431;
							_0x71a87b = _0x71a87b || 0xea60;
							var _0x3cba9f = this["stage"]["pools"]["find"](
								(_0x2ef706) => _0x2ef706["enemyType"] === _0x3b89df["JELLYFISH"]
							);
							_0x3cba9f ||
								((_0x3cba9f = new _0x5a2322(this["scene"], _0x3b89df["JELLYFISH"])),
								this["stage"]["pools"]["push"](_0x3cba9f)),
								(_0x3cba9f["enabled"] = !0x1);
							let _0x222051 = 0x2 * Math["PI"] * Math["random"](),
								_0x4c9cde = new Array();
							for (let _0x2fec28 = 0x0; _0x2fec28 < 0x64; _0x2fec28++) {
								let _0x190deb =
										_0x2164b8["Core"]["Player"]["x"] +
										0.8 * Math["cos"](_0x222051) * (0.9 * this["scene"]["renderer"]["width"]),
									_0x212814 =
										_0x2164b8["Core"]["Player"]["y"] +
										0.8 * Math["sin"](_0x222051) * (0.9 * this["scene"]["renderer"]["height"]);
								_0x222051 += Math["PI"] / 0x32;
								let _0x2834a3 = _0x3cba9f["SpawnAt"](_0x190deb, _0x212814);
								(_0x2834a3["isCullable"] = !0x1), _0x4c9cde["push"](_0x2834a3), this["spawned"]++;
							}
							_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
								delay: _0x71a87b,
								loop: !0x1,
								callback: () => {
									var _0x228673 = _0x287878;
									_0x4c9cde["forEach"]((_0x576a98) => {
										var _0x4c8278 = _0x228673;
										this["spawned"]--,
											_0x576a98["isDead"] ||
												((_0x576a98["isCullable"] = !0x0), _0x576a98["Disappear"]());
									});
								},
							})["name"] = "Jellyfish disappear";
						}
						["PlayFlower"](_0x44b2ff) {
							var _0x3b6f66 = _0x5d9431;
							_0x44b2ff = _0x44b2ff || 0xea60;
							var _0x580a2c = this["stage"]["pools"]["find"](
								(_0x3cd644) => _0x3cd644["enemyType"] === _0x3b89df["FLOWER"]
							);
							_0x580a2c ||
								((_0x580a2c = new _0x5a2322(this["scene"], _0x3b89df["FLOWER"])),
								this["stage"]["pools"]["push"](_0x580a2c)),
								(_0x580a2c["enabled"] = !0x1);
							let _0x1837dc = 0x2 * Math["PI"] * Math["random"](),
								_0x597891 = new Array();
							for (let _0x48fd37 = 0x0; _0x48fd37 < 0x64; _0x48fd37++) {
								let _0x4d7d9d =
										_0x2164b8["Core"]["Player"]["x"] +
										0.8 * Math["cos"](_0x1837dc) * (0.9 * this["scene"]["renderer"]["width"]),
									_0x2cbe91 =
										_0x2164b8["Core"]["Player"]["y"] +
										0.8 * Math["sin"](_0x1837dc) * (0.9 * this["scene"]["renderer"]["height"]);
								_0x1837dc += Math["PI"] / 0x32;
								let _0x28106a = _0x580a2c["SpawnAt"](_0x4d7d9d, _0x2cbe91);
								(_0x28106a["isCullable"] = !0x1), _0x597891["push"](_0x28106a), this["spawned"]++;
							}
							_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
								delay: _0x44b2ff,
								loop: !0x1,
								callback: () => {
									var _0x1365c7 = _0x3b6f66;
									_0x597891["forEach"]((_0x33b572) => {
										var _0xedfc78 = _0x1365c7;
										this["spawned"]--,
											_0x33b572["isDead"] ||
												((_0x33b572["isCullable"] = !0x0), _0x33b572["Disappear"]());
									});
								},
							})["name"] = "flower disappear";
						}
						["PlayBatSwarm"](_0x5c7ca6) {
							var _0x17a9fc = _0x5d9431;
							_0x5c7ca6 = _0x5c7ca6 || 0x2710;
							var _0x4f3b0a = this["stage"]["pools"]["find"](
								(_0x27a170) => _0x27a170["enemyType"] === _0x3b89df["BATSWARM"]
							);
							_0x4f3b0a ||
								((_0x4f3b0a = new _0x5a2322(this["scene"], _0x3b89df["BATSWARM"])),
								this["stage"]["pools"]["push"](_0x4f3b0a)),
								(_0x4f3b0a["enabled"] = !0x1);
							let _0x1945df = 0x2 * Math["PI"] * Math["random"](),
								_0x40f73a = new Array();
							for (let _0x3f5100 = 0x0; _0x3f5100 < 0x32; _0x3f5100++) {
								let _0x385298 =
										_0x2164b8["Core"]["Player"]["x"] +
										0.8 * Math["cos"](_0x1945df) * (0.9 * this["scene"]["renderer"]["width"]),
									_0x52f350 =
										_0x2164b8["Core"]["Player"]["y"] +
										0.8 * Math["sin"](_0x1945df) * (0.9 * this["scene"]["renderer"]["height"]);
								_0x1945df += Math["PI"] / 0x1f4;
								let _0x3a3a86 = _0x4f3b0a["SpawnAt"](_0x385298, _0x52f350);
								(_0x3a3a86["isCullable"] = !0x1), _0x40f73a["push"](_0x3a3a86), this["spawned"]++;
							}
							_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
								delay: _0x5c7ca6,
								loop: !0x1,
								callback: () => {
									_0x40f73a["forEach"]((_0x13dd66) => {
										var _0x28cf3f = a0_0x1be4;
										this["spawned"]--,
											_0x13dd66["isDead"] ||
												((_0x13dd66["isCullable"] = !0x0), _0x13dd66["Disappear"]());
									});
								},
							})["name"] = "batswarm disappear";
						}
						["PlayMedusaSwarm"](_0x577623, _0x260f84 = 0x1, _0x189f7c = _0x3b89df["MEDUSA1"]) {
							var _0x52fe46 = _0x5d9431;
							_0x577623 = _0x577623 || 0x3a98;
							var _0x295c83 = this["stage"]["pools"]["find"](
								(_0xf0190c) => _0xf0190c["enemyType"] === _0x189f7c
							);
							_0x295c83 ||
								((_0x295c83 = new _0x5a2322(this["scene"], _0x189f7c)),
								this["stage"]["pools"]["push"](_0x295c83)),
								(_0x295c83["enabled"] = !0x1);
							let _0x274ae6 = new Array();
							var _0x12dd93 =
								Math["random"]() < 0.5
									? _0x2164b8["Core"]["Stage"]["rectOuter"]["x"]
									: _0x2164b8["Core"]["Stage"]["rectOuter"]["x"] +
									  _0x2164b8["Core"]["Stage"]["rectOuter"]["width"];
							for (let _0x110d64 = 0x0; _0x110d64 < _0x260f84; _0x110d64++) {
								let _0x1c902d = _0x2164b8["Core"]["Player"]["x"] + _0x12dd93,
									_0x493842 = _0x2164b8["Core"]["Player"]["y"] + 0x8 * (_0x110d64 - 0.5 * _0x260f84),
									_0x1d3894 = _0x295c83["SpawnAt"](_0x1c902d, _0x493842);
								(_0x1d3894["isCullable"] = !0x1), _0x274ae6["push"](_0x1d3894), this["spawned"]++;
							}
							_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
								delay: _0x577623,
								loop: !0x1,
								callback: () => {
									_0x274ae6["forEach"]((_0x44c9a0) => {
										var _0x2f7951 = a0_0x1be4;
										this["spawned"]--,
											_0x44c9a0["isDead"] ||
												((_0x44c9a0["isCullable"] = !0x0), _0x44c9a0["Disappear"]());
									});
								},
							})["name"] = "medusaswarm disappear";
						}
						["PlayMedusaWall"](_0x560195, _0x224eee = 0x1, _0x38daa3 = _0x3b89df["MEDUSA1"]) {
							var _0x1cef9c = _0x5d9431;
							if (!_0x2164b8["Core"]["Stage"]["hasTileset"])
								return void this["PlayMedusaSwarm"](_0x560195, _0x224eee, _0x38daa3);
							_0x560195 = _0x560195 || 0x3a98;
							var _0x300241 = this["stage"]["pools"]["find"](
								(_0x182cc3) => _0x182cc3["enemyType"] === _0x38daa3
							);
							_0x300241 ||
								((_0x300241 = new _0x5a2322(this["scene"], _0x38daa3)),
								this["stage"]["pools"]["push"](_0x300241)),
								(_0x300241["enabled"] = !0x1);
							let _0x24b6cb = new Array();
							var _0x49956e =
									Math["random"]() < 0.5
										? _0x2164b8["Core"]["Stage"]["rectOuter"]["x"]
										: _0x2164b8["Core"]["Stage"]["rectOuter"]["x"] +
										  _0x2164b8["Core"]["Stage"]["rectOuter"]["width"],
								_0x3d77b2 = _0x2164b8["Core"]["Stage"]["EnemySpanwersLocations"]["length"] - 0x1;
							for (let _0x471944 = 0x0; _0x471944 < _0x224eee; _0x471944++) {
								let _0x699582 = _0x2164b8["Core"]["Player"]["x"] + _0x49956e,
									_0xac71f0 =
										_0x2164b8["Core"]["Stage"]["EnemySpanwersLocations"][_0x471944 % _0x3d77b2][
											"y"
										],
									_0x3843c1 = _0x300241["SpawnAt"](_0x699582, _0xac71f0);
								(_0x3843c1["isCullable"] = !0x1), _0x24b6cb["push"](_0x3843c1), this["spawned"]++;
							}
							_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
								delay: _0x560195,
								loop: !0x1,
								callback: () => {
									var _0x131fc3 = _0x1cef9c;
									_0x24b6cb["forEach"]((_0x58f902) => {
										var _0xd0bd50 = _0x131fc3;
										this["spawned"]--,
											_0x58f902["isDead"] ||
												((_0x58f902["isCullable"] = !0x0), _0x58f902["Disappear"]());
									});
								},
							})["name"] = "medusaswarm disappear";
						}
						["PlayGhostSwarm"](_0x35c8ec) {
							var _0x33c46f = _0x5d9431;
							_0x35c8ec = _0x35c8ec || 0x2710;
							var _0x3795f4 = this["stage"]["pools"]["find"](
								(_0x3a8e06) => _0x3a8e06["enemyType"] === _0x3b89df["GHOSTSWARM"]
							);
							_0x3795f4 ||
								((_0x3795f4 = new _0x5a2322(this["scene"], _0x3b89df["GHOSTSWARM"])),
								this["stage"]["pools"]["push"](_0x3795f4)),
								(_0x3795f4["enabled"] = !0x1);
							let _0x2e69d9 = 0x2 * Math["PI"] * Math["random"](),
								_0x3f90d1 = new Array();
							for (let _0x170ac5 = 0x0; _0x170ac5 < 0x14; _0x170ac5++) {
								let _0x329f67 =
										_0x2164b8["Core"]["Player"]["x"] +
										0.8 * Math["cos"](_0x2e69d9) * (0.9 * this["scene"]["renderer"]["width"]),
									_0x5e3fc8 =
										_0x2164b8["Core"]["Player"]["y"] +
										0.8 * Math["sin"](_0x2e69d9) * (0.9 * this["scene"]["renderer"]["height"]);
								_0x2e69d9 += Math["PI"] / 0x1f4;
								let _0x2ba0c3 = _0x3795f4["SpawnAt"](_0x329f67, _0x5e3fc8);
								(_0x2ba0c3["isCullable"] = !0x1), _0x3f90d1["push"](_0x2ba0c3), this["spawned"]++;
							}
							_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
								delay: _0x35c8ec,
								loop: !0x1,
								callback: () => {
									_0x3f90d1["forEach"]((_0x5513b3) => {
										var _0x48b27e = a0_0x1be4;
										this["spawned"]--,
											_0x5513b3["isDead"] ||
												((_0x5513b3["isCullable"] = !0x0), _0x5513b3["Disappear"]());
									});
								},
							})["name"] = "ghostswarm disappear";
						}
						["PlayShadeBomb"](_0x46c4e9, _0x4f8c1d, _0x387083 = 0x1) {
							var _0x323b9e = _0x5d9431;
							_0x46c4e9 = _0x46c4e9 || 0xea60;
							let _0x53ff6e = "red" === _0x4f8c1d ? _0x3b89df["SHADERED"] : _0x3b89df["SHADEBLUE"];
							var _0xa0a763 = this["stage"]["pools"]["find"](
								(_0x112b69) => _0x112b69["enemyType"] === _0x53ff6e
							);
							_0xa0a763 ||
								((_0xa0a763 = new _0x5a2322(this["scene"], _0x53ff6e)),
								this["stage"]["pools"]["push"](_0xa0a763)),
								(_0xa0a763["enabled"] = !0x1);
							let _0x2706a7 = new Array();
							for (let _0x70b2c = 0x0; _0x70b2c < _0x387083; _0x70b2c++) {
								let _0x159fa2 = 0x2 * Math["PI"] * Math["random"](),
									_0x7ea877 =
										_0x2164b8["Core"]["Player"]["x"] +
										0.8 * Math["cos"](_0x159fa2) * (0.9 * this["scene"]["renderer"]["width"]),
									_0x41f7e7 =
										_0x2164b8["Core"]["Player"]["y"] +
										0.8 * Math["sin"](_0x159fa2) * (0.9 * this["scene"]["renderer"]["height"]);
								_0x159fa2 += Math["PI"] / 0x1f4;
								let _0x127fc4 = _0xa0a763["SpawnAt"](_0x7ea877, _0x41f7e7);
								(_0x127fc4["isCullable"] = !0x1), _0x2706a7["push"](_0x127fc4), this["spawned"]++;
							}
							_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
								delay: _0x46c4e9,
								loop: !0x1,
								callback: () => {
									var _0x3b36a4 = _0x323b9e;
									_0x2706a7["forEach"]((_0x5bd266) => {
										var _0x8aeeea = _0x3b36a4;
										this["spawned"]--,
											_0x5bd266["isDead"] ||
												((_0x5bd266["isCullable"] = !0x0), _0x5bd266["Disappear"]());
									});
								},
							})["name"] = "shadebomb disappear";
						}
						["PlaySkullSwarm"](_0x328fb1, _0x426de5 = 0x1) {
							var _0x15856c = _0x5d9431;
							_0x328fb1 = _0x328fb1 || 0x3a98;
							var _0x1bcb2d = this["stage"]["pools"]["find"](
								(_0x350dfe) => _0x350dfe["enemyType"] === _0x3b89df["SKULL2_SWARM"]
							);
							_0x1bcb2d ||
								((_0x1bcb2d = new _0x5a2322(this["scene"], _0x3b89df["SKULL2_SWARM"])),
								this["stage"]["pools"]["push"](_0x1bcb2d)),
								(_0x1bcb2d["enabled"] = !0x1);
							let _0xe33a3d = 0x2 * Math["PI"] * Math["random"](),
								_0xc42fa1 = new Array();
							for (let _0xdfda9e = 0x0; _0xdfda9e < _0x426de5; _0xdfda9e++) {
								let _0x30b3bf =
										_0x2164b8["Core"]["Player"]["x"] +
										0.8 * Math["cos"](_0xe33a3d) * (0.9 * this["scene"]["renderer"]["width"]),
									_0x53f693 =
										_0x2164b8["Core"]["Player"]["y"] +
										0.8 * Math["sin"](_0xe33a3d) * (0.9 * this["scene"]["renderer"]["height"]);
								_0xe33a3d += Math["PI"] / 0x32;
								let _0x37ba4b = _0x1bcb2d["SpawnAt"](_0x30b3bf, _0x53f693);
								(_0x37ba4b["isCullable"] = !0x1), _0xc42fa1["push"](_0x37ba4b), this["spawned"]++;
							}
							_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
								delay: _0x328fb1,
								loop: !0x1,
								callback: () => {
									var _0x279765 = _0x15856c;
									_0xc42fa1["forEach"]((_0x42080f) => {
										var _0x4ae0a6 = _0x279765;
										this["spawned"]--,
											_0x42080f["isDead"] ||
												((_0x42080f["isCullable"] = !0x0), _0x42080f["Disappear"]());
									});
								},
							})["name"] = "skull2 disappear";
						}
						["PlayEraseEnemies"]() {
							var _0x56c40b = _0x5d9431;
							_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] &&
								new _0x668922(this["scene"])["Play"]();
							for (let _0x1b2353 = 0x0; _0x1b2353 < _0x2164b8["Core"]["Enemies"]["length"]; _0x1b2353++) {
								const _0x48d911 = _0x2164b8["Core"]["Enemies"][_0x1b2353];
								_0x48d911["res_Rosary"] || _0x48d911["Disappear"]();
							}
							_0x2164b8["Core"]["BGMan"]["RunTimeHue"] = !0x1;
							let _0x403be8 = 0x0;
							_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
								delay: 0x64,
								repeat: 0x14,
								callback: () => {
									var _0x19d880 = _0x56c40b;
									(_0x403be8 += 0.05),
										(_0x403be8 = Math["min"](_0x403be8, 0x1)),
										_0x2164b8["Core"]["BGMan"]["bgtile"]["setTint"](
											_0x38ad94["LerpColor"](0xffffff, 0x880000, _0x403be8)
										);
								},
							});
						}
					}
					class _0x1a3f57 {
						constructor() {
							var _0x2b9a40 = _0x5d9431;
							this["layers"] = new Array();
						}
						["setPos"](_0x3a5724, _0x29abd8) {
							var _0x5a4b79 = _0x5d9431;
							this["layers"]["forEach"]((_0x996035) => {
								(_0x996035["x"] = _0x3a5724), (_0x996035["y"] = _0x29abd8);
							});
						}
					}
					class _0x198942 {
						constructor(_0x51a236, _0x4673d1) {
							var _0x21f63e = _0x5d9431;
							(this["_SIZE"] = 0x800), (this["layerContainers"] = new Array());
							var _0x4e48fa = _0x117b45[_0x4673d1][0x0];
							(_0x216119["CollisionLayers"] = new Array()), (this["maps"] = new Array(0x4));
							for (let _0x1c6928 = 0x0; _0x1c6928 < 0x4; _0x1c6928++) {
								this["maps"][_0x1c6928] = _0x51a236["make"]["tilemap"]({
									key: _0x4e48fa["tileset"]["mapKey"],
								});
								let _0x1d5f89 = this["maps"][_0x1c6928]["addTilesetImage"](
									_0x4e48fa["tileset"]["setKey"],
									_0x4e48fa["tileset"]["setKey"],
									0x20,
									0x20,
									0x1,
									0x2
								);
								0x0 == _0x1c6928 &&
									((this["MainMap"] = this["maps"][_0x1c6928]),
									this["maps"][_0x1c6928]["getObjectLayer"]("Scripts")["objects"]["forEach"](
										(_0x5dd5b9) => {
											var _0x53b109 = _0x21f63e;
											switch (_0x5dd5b9["name"]) {
												case "PlayerStart":
													this["StartPosition"] = {
														x: _0x5dd5b9["x"],
														y: _0x5dd5b9["y"],
													};
													break;
												case "Weapon":
													this["spawnWeaponAt"](_0x5dd5b9);
													break;
												case "Item":
													this["spawnItemAt"](_0x5dd5b9);
													break;
												case "tilep":
													this["pianificami"](_0x5dd5b9);
											}
										}
									));
								let _0x141aae = new _0x1a3f57();
								_0x141aae["layers"]["push"](
									this["maps"][_0x1c6928]["createLayer"]("Floor", _0x1d5f89)
										["setDepth"](-0x7d0)
										["setPosition"](0x0, 0x0)
								),
									_0x141aae["layers"]["push"](
										this["maps"][_0x1c6928]["createLayer"]("FloorOverlay", _0x1d5f89)
											["setDepth"](-0x7cf)
											["setPosition"](0x0, 0x0)
									),
									_0x141aae["layers"]["push"](
										this["maps"][_0x1c6928]["createLayer"]("FakeWalls", _0x1d5f89)
											["setDepth"](-0x7ce)
											["setPosition"](0x0, 0x0)
									);
								let _0x50e9f1 = this["maps"][_0x1c6928]["createLayer"]("Walls", _0x1d5f89)
										["setDepth"](-0x7cd)
										["setCollisionByProperty"]({
											collides: !0x0,
										})
										["setPosition"](0x0, 0x0),
									_0xf1cd1e = this["maps"][_0x1c6928]["createLayer"]("PlayerWall", _0x1d5f89)
										["setDepth"](-0x7cd)
										["setCollisionByProperty"]({
											collides: !0x0,
										})
										["setPosition"](0x0, 0x0),
									_0x252ec7 = this["maps"][_0x1c6928]["createLayer"]("Obstacle", _0x1d5f89)
										["setDepth"](-0x7cc)
										["setCollisionByProperty"]({
											collides: !0x0,
										})
										["setPosition"](0x0, 0x0);
								_0x141aae["layers"]["push"](
									this["maps"][_0x1c6928]["createLayer"]("Decals", _0x1d5f89)
										["setDepth"](-0x7cb)
										["setPosition"](0x0, 0x0)
								),
									_0x141aae["layers"]["push"](
										this["maps"][_0x1c6928]["createLayer"]("Overlay1", _0x1d5f89)
											["setDepth"](0x1)
											["setPosition"](0x0, 0x0)
									),
									_0x141aae["layers"]["push"](
										this["maps"][_0x1c6928]["createLayer"]("Shadows", _0x1d5f89)
											["setDepth"](0x7d0)
											["setPosition"](0x0, 0x0)
									),
									_0x141aae["layers"]["push"](_0x50e9f1),
									_0x141aae["layers"]["push"](_0x252ec7),
									_0x141aae["layers"]["push"](_0xf1cd1e),
									this["layerContainers"]["push"](_0x141aae),
									_0x2164b8["Core"]["scene"]["physics"]["add"]["collider"](
										_0x2164b8["Core"]["Player"],
										_0x50e9f1
									),
									_0x2164b8["Core"]["scene"]["physics"]["add"]["collider"](
										_0x2164b8["Core"]["Player"],
										_0x252ec7
									),
									_0x2164b8["Core"]["scene"]["physics"]["add"]["collider"](
										_0x2164b8["Core"]["Player"],
										_0xf1cd1e
									),
									_0x2164b8["Core"]["scene"]["physics"]["add"]["collider"](
										_0x2164b8["Core"]["EnemyGroup"],
										_0x50e9f1
									),
									_0x2164b8["Core"]["scene"]["physics"]["add"]["collider"](
										_0x2164b8["Core"]["EnemyGroup"],
										_0x252ec7
									),
									_0x216119["CollisionLayers"]["push"](_0x50e9f1),
									_0x216119["CollisionLayers"]["push"](_0x252ec7),
									_0x216119["CollisionLayers"]["push"](_0xf1cd1e);
							}
							_0x2164b8["Core"]["Player"]["setPosition"](
								this["StartPosition"]["x"],
								this["StartPosition"]["y"]
							),
								(this["bounds"] = new Array()),
								(this["debugSprites"] = new Array());
							for (let _0x5a53dd = 0x0; _0x5a53dd < 0x4; _0x5a53dd++)
								this["bounds"]["push"](
									new Phaser["Geom"]["Rectangle"](
										this["_SIZE"] * _0x5a53dd,
										0x0,
										this["_SIZE"],
										this["_SIZE"]
									)
								);
							(this["pool"] = new Array()), this["update"]();
						}
						["spawnWeaponAt"](_0x18d3f6) {
							var _0x3611a8 = _0x5d9431;
							let _0xafad62 = _0x18d3f6["type"],
								_0x17f287 = _0x18d3f6["properties"]["find"](
									(_0x5a40bc) => "chance" === _0x5a40bc["name"]
								);
							if (
								_0x17f287 &&
								Math["random"]() > _0x17f287["value"] * _0x2164b8["Core"]["Player"]["luck"]
							)
								return;
							let _0x399522 = _0x18d3f6["properties"]["find"](
								(_0x4fd688) => "xMultiplier" === _0x4fd688["name"]
							);
							_0x399522 = _0x399522 ? _0x399522["value"] : 0x0;
							let _0x332fb0 = _0x18d3f6["properties"]["find"](
								(_0x422bf6) => "yMultiplier" === _0x422bf6["name"]
							);
							_0x332fb0 = _0x332fb0 ? _0x332fb0["value"] : 0x0;
							let _0x3df9c4 = _0x18d3f6["x"] + this["_SIZE"] * _0x399522,
								_0x295a53 = _0x18d3f6["y"] + this["_SIZE"] * _0x332fb0;
							_0x2164b8["Core"]["MakePickup"](_0x3df9c4, _0x295a53, _0x3bf2f1["WEAPON"], _0xafad62);
						}
						["pianificami"](_0x2b55c3) {
							var _0x19c6a3 = _0x5d9431;
							spianami = function () {
								var _0x288bc9 = a0_0x1be4;
								for (let _0x27fb90 = 0x0; _0x27fb90 < this["maps"]["length"]; _0x27fb90++) {
									const _0x4a32a0 = this["maps"][_0x27fb90];
									for (let _0x3a3f1a = 0x0; _0x3a3f1a < _0x4a32a0["layers"]["length"]; _0x3a3f1a++) {
										const _0x59fcb6 = _0x4a32a0["layers"][_0x3a3f1a];
										if ("Floor" === _0x59fcb6["name"]) continue;
										let _0x1411ff = _0x4a32a0["getTilesWithin"](
											0x0,
											0x0,
											0x40,
											0x1c,
											{},
											_0x59fcb6["name"]
										);
										_0x1411ff["forEach"]((_0x439a10) => {
											_0x4a32a0["removeTile"](_0x439a10);
										}),
											(_0x1411ff = _0x4a32a0["getTilesWithin"](
												0x0,
												0x22,
												0x40,
												0x40,
												{},
												_0x59fcb6["name"]
											)),
											_0x1411ff["forEach"]((_0x23db2b) => {
												_0x4a32a0["removeTile"](_0x23db2b);
											});
									}
								}
							}["bind"](this);
						}
						["spawnItemAt"](_0x5701b3) {
							var _0x2dc1b9 = _0x5d9431;
							let _0x5c99d8 = _0x5701b3["type"],
								_0x1aee02 = _0x5701b3["properties"]["find"](
									(_0x3ab7c2) => "chance" === _0x3ab7c2["name"]
								);
							if (
								_0x1aee02 &&
								Math["random"]() > _0x1aee02["value"] * _0x2164b8["Core"]["Player"]["luck"]
							)
								return;
							let _0xca337f = _0x5701b3["properties"]["find"](
								(_0x372168) => "xMultiplier" === _0x372168["name"]
							);
							_0xca337f = _0xca337f ? _0xca337f["value"] : 0x0;
							let _0xd2abbf = _0x5701b3["properties"]["find"](
								(_0x215941) => "yMultiplier" === _0x215941["name"]
							);
							_0xd2abbf = _0xd2abbf ? _0xd2abbf["value"] : 0x0;
							let _0x12f557 = _0x5701b3["x"] + this["_SIZE"] * _0xca337f,
								_0x7b4cad = _0x5701b3["y"] + this["_SIZE"] * _0xd2abbf;
							if (_0x5c99d8 === _0x3bf2f1["GEM"]) {
								let _0x441e1a = _0x5701b3["properties"]["find"](
									(_0x3b0660) => "value" === _0x3b0660["name"]
								);
								_0x2164b8["Core"]["MakeGem"](
									_0x12f557,
									_0x7b4cad,
									_0x441e1a ? _0x441e1a["value"] : 0x1
								);
							} else _0x2164b8["Core"]["MakePickup"](_0x12f557, _0x7b4cad, _0x5c99d8);
						}
						["update"]() {
							var _0x521b5a = _0x5d9431;
							for (let _0x93b3e6 = 0x0; _0x93b3e6 < this["bounds"]["length"]; _0x93b3e6++)
								if (
									this["bounds"][_0x93b3e6]["contains"](
										_0x2164b8["Core"]["Player"]["x"],
										_0x2164b8["Core"]["Player"]["y"]
									)
								) {
									(this["current"] = this["bounds"][_0x93b3e6]),
										this["bounds"]["splice"](_0x93b3e6, 0x1);
									break;
								}
							let _0x170296 =
									_0x2164b8["Core"]["Player"]["x"] <
									this["current"]["x"] + 0.5 * this["current"]["width"],
								_0x271742 =
									_0x2164b8["Core"]["Player"]["y"] <
									this["current"]["y"] + 0.5 * this["current"]["height"],
								_0x1967f6 = this["bounds"][0x0];
							(_0x1967f6["y"] = this["current"]["y"]),
								(_0x1967f6["x"] = _0x170296
									? this["current"]["x"] - _0x1967f6["width"]
									: this["current"]["x"] + this["current"]["width"]),
								(_0x1967f6 = this["bounds"][0x1]),
								(_0x1967f6["x"] = this["current"]["x"]),
								(_0x1967f6["y"] = _0x271742
									? this["current"]["y"] - _0x1967f6["height"]
									: this["current"]["y"] + this["current"]["height"]),
								(_0x1967f6 = this["bounds"][0x2]),
								_0x271742 && _0x170296
									? ((_0x1967f6["x"] = this["current"]["x"] - _0x1967f6["width"]),
									  (_0x1967f6["y"] = this["current"]["y"] - _0x1967f6["height"]))
									: _0x271742 && !_0x170296
									? ((_0x1967f6["x"] = this["current"]["x"] + this["current"]["width"]),
									  (_0x1967f6["y"] = this["current"]["y"] - _0x1967f6["height"]))
									: !_0x271742 && _0x170296
									? ((_0x1967f6["x"] = this["current"]["x"] - _0x1967f6["width"]),
									  (_0x1967f6["y"] = this["current"]["y"] + this["current"]["height"]))
									: _0x271742 ||
									  _0x170296 ||
									  ((_0x1967f6["y"] = this["current"]["y"] + this["current"]["height"]),
									  (_0x1967f6["x"] = this["current"]["x"] + this["current"]["width"])),
								this["bounds"]["unshift"](this["current"]);
							for (let _0x497e39 = 0x0; _0x497e39 < this["layerContainers"]["length"]; _0x497e39++)
								this["layerContainers"][_0x497e39]["setPos"](
									this["bounds"][_0x497e39]["x"],
									this["bounds"][_0x497e39]["y"]
								);
						}
						["isPointWithinCollisionLayer"](_0x5289d9, _0x1849e6) {
							var _0x31f751 = _0x5d9431;
							let _0x3d5ee3 = this["layerContainers"][0x0]["layers"][0x2],
								_0x619fec = this["layerContainers"][0x0]["layers"][0x3],
								_0x50f845 = this["layerContainers"][0x0]["layers"][0x5],
								_0x3b9190 = this["layerContainers"][0x0]["layers"][0x6],
								_0x2deb13 = this["layerContainers"][0x0]["layers"][0x7];
							return !!(
								_0x3d5ee3["getTileAtWorldXY"](
									_0x5289d9,
									_0x1849e6,
									!0x1,
									_0x2164b8["Core"]["scene"]["cameras"]["main"]
								) ||
								_0x619fec["getTileAtWorldXY"](
									_0x5289d9,
									_0x1849e6,
									!0x1,
									_0x2164b8["Core"]["scene"]["cameras"]["main"]
								) ||
								_0x50f845["getTileAtWorldXY"](
									_0x5289d9,
									_0x1849e6,
									!0x1,
									_0x2164b8["Core"]["scene"]["cameras"]["main"]
								) ||
								_0x3b9190["getTileAtWorldXY"](
									_0x5289d9,
									_0x1849e6,
									!0x1,
									_0x2164b8["Core"]["scene"]["cameras"]["main"]
								) ||
								_0x2deb13["getTileAtWorldXY"](
									_0x5289d9,
									_0x1849e6,
									!0x1,
									_0x2164b8["Core"]["scene"]["cameras"]["main"]
								)
							);
						}
					}
					class _0x216119 {
						constructor(_0x3684a8, _0x5d9425) {
							var _0x2d0e2e = _0x5d9431;
							(this["levelName"] = ""),
								(this["description"] = ""),
								(this["minute"] = 0x0),
								(this["frequency"] = 0x3e8),
								(this["EffectiveSpawnFrequency"] = 0x3e8),
								(this["pause"] = 0x0),
								(this["startingSpawns"] = 0x0),
								(this["minimum"] = 0x0),
								(this["maximum"] = 0x12c),
								(this["destructibleType"] = _0x15e0c0["BRAZIER"]),
								(this["enemies"] = new Array()),
								(this["bosses"] = new Array()),
								(this["BGTextureName"] = ""),
								(this["minimumMultiplier"] = 0x1),
								(this["maxTreasureLuck"] = 0x14),
								(this["destructibleFreq"] = 0x2710),
								(this["destructibleChance"] = 0x5),
								(this["destructibleChanceMax"] = 0x32),
								(this["maxDestructibles"] = 0xa),
								(this["pools"] = new Array()),
								(this["bossPools"] = new Array()),
								(this["hasAttachedTreasure"] = !0x1),
								(this["minTreasureY"] = null),
								(this["maxTreasureY"] = null),
								(this["compressTime"] = !0x1),
								(this["randomMinutes"] = !0x1),
								(this["hasTileset"] = !0x1),
								(this["_SIZE"] = 0x1),
								(this["scene"] = _0x3684a8),
								(this["stageType"] = _0x5d9425),
								(this["stageEventManager"] = new _0x54833c(this["scene"], this));
						}
						["Init"]() {
							var _0x200a3d = _0x5d9431;
							this["minute"] = 0x0;
							var _0x2b7ec5 = _0x117b45[this["stageType"]][this["minute"]];
							(this["data"] = _0x2b7ec5),
								(_0x2164b8["Core"]["CurrentBGM"] = _0x2164b8["Core"]["PlayerOptions"][
									"StreamSafeEnabled"
								]
									? _0x2b7ec5["BGM"]
									: _0x2b7ec5["legacyBGM"]
									? _0x2b7ec5["legacyBGM"]
									: _0x2b7ec5["BGM"]),
								(this["hasTileset"] = !!_0x2b7ec5["tileset"]),
								(this["spawnType"] = _0x2b7ec5["spawnType"]),
								this["UpdateAllData"](_0x2b7ec5),
								this["randomMinutes"] && this["UpdateMinuteData"](),
								(this["rectOuter"] = new Phaser["Geom"]["Rectangle"](
									-0.5 * this["scene"]["renderer"]["width"] - 0x96,
									-0.5 * this["scene"]["renderer"]["height"] - 0x96,
									this["scene"]["renderer"]["width"] + 0xc8,
									this["scene"]["renderer"]["height"] + 0xc8
								)),
								(this["rectInner"] = new Phaser["Geom"]["Rectangle"](
									-0.5 * this["scene"]["renderer"]["width"] - 0x4b,
									-0.5 * this["scene"]["renderer"]["height"] - 0x4b,
									this["scene"]["renderer"]["width"] + 0x64,
									this["scene"]["renderer"]["height"] + 0x64
								)),
								_0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"]
									? ((_0x1fa5bb["PlayerPxSpeed"] =
											_0x1fa5bb["_basePlayerPxSpeed"] * _0x2b7ec5["hyper"]["PlayerPxSpeed"]),
									  (_0x1fa5bb["EnemySpeed"] =
											_0x1fa5bb["_baseEnemySpeed"] * _0x2b7ec5["hyper"]["EnemySpeed"]),
									  (_0x1fa5bb["ProjectileSpeed"] =
											_0x1fa5bb["_baseProjectileSpeed"] * _0x2b7ec5["hyper"]["ProjectileSpeed"]),
									  (_0x1fa5bb["GoldMultiplier"] =
											_0x1fa5bb["_baseGoldMultiplier"] * _0x2b7ec5["hyper"]["GoldMultiplier"]),
									  (_0x1fa5bb["EnemyHealthMultiplier"] =
											_0x1fa5bb["_baseEnemyHealthMultiplier"] *
											_0x2b7ec5["hyper"]["EnemyHealth"]),
									  _0x2b7ec5["hyper"]["LuckBonus"] &&
											(_0x2164b8["Core"]["Player"]["luck"] += _0x2b7ec5["hyper"]["LuckBonus"]),
									  (this["startingSpawns"] = _0x2b7ec5["hyper"]["StartingSpawns"]))
									: ((_0x1fa5bb["PlayerPxSpeed"] =
											_0x1fa5bb["_basePlayerPxSpeed"] * _0x2b7ec5["mods"]["PlayerPxSpeed"]),
									  (_0x1fa5bb["EnemySpeed"] =
											_0x1fa5bb["_baseEnemySpeed"] * _0x2b7ec5["mods"]["EnemySpeed"]),
									  (_0x1fa5bb["ProjectileSpeed"] =
											_0x1fa5bb["_baseProjectileSpeed"] * _0x2b7ec5["mods"]["ProjectileSpeed"]),
									  (_0x1fa5bb["GoldMultiplier"] =
											_0x1fa5bb["_baseGoldMultiplier"] * _0x2b7ec5["mods"]["GoldMultiplier"]),
									  (_0x1fa5bb["EnemyHealthMultiplier"] =
											_0x1fa5bb["_baseEnemyHealthMultiplier"] *
											_0x2b7ec5["mods"]["EnemyHealth"])),
								this["CalculateEnemySpeed"](),
								_0x2b7ec5["tileset"] &&
									((this["tilingTileset"] = new _0x198942(this["scene"], this["stageType"])),
									(this["EnemySpanwersLocations"] = new Array()),
									(this["DestructibleLocations"] = new Array()),
									this["tilingTileset"]["MainMap"]
										["getObjectLayer"]("Destructibles")
										["objects"]["forEach"]((_0x3aa562) => {
											var _0x21b3f5 = _0x200a3d;
											this["DestructibleLocations"]["push"]({
												x: _0x3aa562["x"],
												y: _0x3aa562["y"],
											});
										}),
									this["tilingTileset"]["MainMap"]
										["getObjectLayer"]("Spawners")
										["objects"]["forEach"]((_0x220560) => {
											var _0x56ff1d = _0x200a3d;
											this["EnemySpanwersLocations"]["push"]({
												x: _0x220560["x"],
												y: _0x220560["y"],
											});
										}),
									this["EnemySpanwersLocations"]["length"] > 0x0 &&
										((this["minTreasureY"] = this["EnemySpanwersLocations"]["reduce"](function (
											_0x362fef,
											_0x1e117
										) {
											return _0x362fef["y"] < _0x1e117["y"] ? _0x362fef : _0x1e117;
										})["y"]),
										(this["maxTreasureY"] = this["EnemySpanwersLocations"]["reduce"](function (
											_0x42852d,
											_0x1d6fc5
										) {
											return _0x42852d["y"] > _0x1d6fc5["y"] ? _0x42852d : _0x1d6fc5;
										})["y"])));
							for (let _0xc8a1e9 = 0x0; _0xc8a1e9 < this["startingSpawns"]; _0xc8a1e9++)
								this["hasTileset"] && this["EnemySpanwersLocations"]["length"] > 0x0
									? this["SpawnInRandomLocation"]()
									: this["spawnType"] === _0x193cca["HORIZONTAL"]
									? this["SpawnEnemiesHorizontal"]()
									: this["SpawnEnemiesInOuterRect"]();
						}
						["CalculateEnemySpeed"]() {
							var _0x30dc96 = _0x5d9431;
							_0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"]
								? (_0x1fa5bb["EnemySpeed"] =
										_0x1fa5bb["_baseEnemySpeed"] *
										this["data"]["hyper"]["EnemySpeed"] *
										_0x2164b8["Core"]["Player"]["curse"])
								: (_0x1fa5bb["EnemySpeed"] =
										_0x1fa5bb["_baseEnemySpeed"] *
										this["data"]["mods"]["EnemySpeed"] *
										_0x2164b8["Core"]["Player"]["curse"]);
						}
						["CheckMinute"]() {
							var _0x288826 = _0x5d9431,
								_0x33ba39,
								_0x52fdd0 = Math["floor"](_0x2164b8["Core"]["SurvivedSeconds"] / 0x3c);
							_0x52fdd0 > this["minute"] &&
								(_0x33ba39 = _0x117b45[this["stageType"]]["find"](
									(_0x377ec2) => _0x377ec2["minute"] === _0x52fdd0
								)) &&
								((this["minute"] = _0x33ba39["minute"]), this["UpdateAllData"](_0x33ba39)),
								(this["hasAttachedTreasure"] = !0x1),
								this["SpawnBoss"]();
						}
						["UpdateAllData"](_0x382736) {
							var _0x328192 = _0x5d9431;
							(this["events"] = []), (this["bosses"] = []), (this["treasure"] = null);
							let _0x4d9733 = this["stageType"];
							if (this["randomMinutes"]) {
								let _0x45b5b9 = _0x2164b8["Core"]["PlayerOptions"]["UnlockedStages"]["filter"](
									(_0x5a5061) => _0x5a5061 != _0x2f4d79["GREENACRES"]
								);
								_0x45b5b9["length"] >= 0x2 && (_0x4d9733 = Phaser["Math"]["RND"]["pick"](_0x45b5b9));
							}
							if (((_0x382736 = _0x117b45[_0x4d9733][this["minute"]]), this["compressTime"])) {
								let _0x52fac4 = 0x2 * this["minute"],
									_0x3d929c = _0x117b45[this["stageType"]][_0x52fac4],
									_0x417df6 = _0x117b45[this["stageType"]][_0x52fac4 + 0x1],
									_0x32d172 = {};
								for (const _0x221c68 in _0x382736) _0x32d172[_0x221c68] = _0x382736[_0x221c68];
								_0x3d929c && _0x417df6
									? (_0x3d929c["minimum"] &&
											_0x417df6["minimum"] &&
											(_0x32d172["minimum"] = Math["max"](
												_0x3d929c["minimum"] + _0x417df6["minimum"]
											)),
									  _0x3d929c["frequency"] &&
											_0x417df6["frequency"] &&
											(_0x32d172["frequency"] = Math["min"](
												_0x3d929c["frequency"] + _0x417df6["frequency"]
											)),
									  (_0x32d172["enemies"] = _0x3d929c["enemies"]["concat"](_0x417df6["enemies"])),
									  _0x3d929c["bosses"] && _0x417df6["bosses"]
											? (_0x32d172["bosses"] = _0x3d929c["bosses"]["concat"](_0x417df6["bosses"]))
											: _0x3d929c["bosses"]
											? (_0x32d172["bosses"] = _0x3d929c["bosses"])
											: _0x417df6["bosses"] && (_0x32d172["bosses"] = _0x417df6["bosses"]),
									  _0x3d929c["events"] && _0x417df6["events"]
											? (_0x32d172["events"] = _0x3d929c["events"]["concat"](_0x417df6["events"]))
											: _0x3d929c["events"]
											? (_0x32d172["events"] = _0x3d929c["events"])
											: _0x417df6["events"] && (_0x32d172["events"] = _0x417df6["events"]),
									  _0x3d929c["treasure"] && _0x417df6["treasure"]
											? ((_0x32d172["treasure"] = {}),
											  (_0x32d172["treasure"]["chances"] = [
													_0x3d929c["treasure"]["chances"][0x0] +
														_0x417df6["treasure"]["chances"][0x0],
													_0x3d929c["treasure"]["chances"][0x1] +
														_0x417df6["treasure"]["chances"][0x1],
													_0x3d929c["treasure"]["chances"][0x2] +
														_0x417df6["treasure"]["chances"][0x2],
											  ]),
											  (_0x32d172["treasure"]["level"] = _0x417df6["treasure"]["level"]),
											  (_0x32d172["treasure"]["prizeTypes"] =
													_0x417df6["treasure"]["prizeTypes"]))
											: _0x3d929c["treasure"]
											? (_0x32d172["treasure"] = _0x3d929c["treasure"])
											: _0x417df6["treasure"] && (_0x32d172["treasure"] = _0x417df6["treasure"]),
									  (_0x382736 = _0x32d172))
									: ((_0x32d172 = _0x3d929c), (_0x382736 = _0x32d172));
							}
							for (const _0x3cc44d in _0x382736)
								this["hasOwnProperty"](_0x3cc44d) && (this[_0x3cc44d] = _0x382736[_0x3cc44d]);
							(this["minimumMultiplier"] = 0x1 * _0x2164b8["Core"]["Player"]["curse"]),
								this["CalculateEnemySpeed"](),
								(this["EffectiveSpawnFrequency"] =
									this["frequency"] / Math["max"](0.1, _0x2164b8["Core"]["Player"]["curse"])),
								this["updateEnemyPools"](),
								this["updateTimers"](),
								this["playEvents"]();
						}
						["UpdateMinuteData"]() {
							var _0x6b4f44 = _0x5d9431;
							(this["events"] = []), (this["bosses"] = []), (this["treasure"] = null);
							let _0xcb6ed0 = this["stageType"];
							if (this["randomMinutes"]) {
								let _0x4036b2 = _0x2164b8["Core"]["PlayerOptions"]["UnlockedStages"]["filter"](
									(_0x4f9d12) => _0x4f9d12 != _0x2f4d79["GREENACRES"]
								);
								_0x4036b2["length"] >= 0x2 && (_0xcb6ed0 = Phaser["Math"]["RND"]["pick"](_0x4036b2));
							}
							var _0x4cbfe6 = _0x117b45[_0xcb6ed0][this["minute"]];
							(this["events"] = _0x4cbfe6["events"] ? _0x4cbfe6["events"] : this["events"]),
								(this["bosses"] = _0x4cbfe6["bosses"] ? _0x4cbfe6["bosses"] : this["bosses"]),
								(this["treasure"] = _0x4cbfe6["treasure"] ? _0x4cbfe6["treasure"] : this["treasure"]),
								(this["enemies"] = _0x4cbfe6["enemies"] ? _0x4cbfe6["enemies"] : this["enemies"]),
								this["updateEnemyPools"](),
								this["updateTimers"](),
								this["playEvents"]();
						}
						["playEvents"]() {
							var _0x648f0f = _0x5d9431;
							this["events"]["forEach"]((_0x3d7a7f) => {
								var _0x2151a9 = _0x648f0f;
								this["stageEventManager"]["TriggerEvent"](_0x3d7a7f);
							});
						}
						["updateEnemyPools"]() {
							var _0x5e60de = _0x5d9431;
							this["pools"]["forEach"]((_0x4e4547) => {
								_0x4e4547["enabled"] = !0x1;
							}),
								this["bossPools"]["forEach"]((_0xb340e0) => {
									var _0x4cd918 = _0x5e60de;
									_0xb340e0["enabled"] = !0x1;
								}),
								this["enemies"]["forEach"]((_0x579574) => {
									var _0x1729cc = _0x5e60de,
										_0x25abff = this["pools"]["find"](
											(_0x33ddf1) => _0x33ddf1["enemyType"] === _0x579574
										);
									_0x25abff
										? (_0x25abff["enabled"] = !0x0)
										: this["pools"]["push"](new _0x5a2322(this["scene"], _0x579574));
								}),
								this["bosses"]["forEach"]((_0x4174ab) => {
									var _0x26c6b2 = _0x5e60de,
										_0x26607b = this["bossPools"]["find"](
											(_0x373138) => _0x373138["enemyType"] === _0x4174ab
										);
									_0x26607b
										? (_0x26607b["enabled"] = !0x0)
										: this["bossPools"]["push"](new _0x5a2322(this["scene"], _0x4174ab));
								});
						}
						["updateTimers"]() {
							var _0x132172 = _0x5d9431;
							this["pause"]
								? (_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: this["pause"],
										loop: !0x1,
										callback: () => {
											this["startTimers"]();
										},
								  })["name"] = "Spawn Pause")
								: this["startTimers"]();
						}
						["startTimers"]() {
							var _0x3dc0e6 = _0x5d9431;
							_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["SpawnTimer"]),
								(this["SpawnTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
									delay: this["EffectiveSpawnFrequency"],
									loop: !0x0,
									callback: () => {
										var _0x1b2c16 = _0x3dc0e6;
										this["hasTileset"] && this["EnemySpanwersLocations"]["length"] > 0x0
											? this["SpawnInRandomLocation"]()
											: this["spawnType"] === _0x193cca["HORIZONTAL"]
											? this["SpawnEnemiesHorizontal"]()
											: this["SpawnEnemiesInOuterRect"]();
									},
								})),
								(this["SpawnTimer"]["name"] = "Spawn Timer"),
								_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["DestructibleTimer"]),
								(this["DestructibleTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
									delay: this["destructibleFreq"],
									loop: !0x0,
									callback: () => {
										var _0x8e2609 = _0x3dc0e6;
										this["hasTileset"] && this["DestructibleLocations"]["length"] > 0x0
											? this["SpawnDestructibleInRandomLocation"]()
											: this["SpawnDestructibleOutOfSight"]();
									},
								})),
								(this["DestructibleTimer"]["name"] = "Desct Timer");
						}
						["SpawnDestructibleOutOfSight"](_0x5ef56f = !0x1) {
							var _0x1f527c = _0x5d9431,
								_0x178d9b = 0x64 * Math["random"]();
							_0x5ef56f && (_0x178d9b = -0x1),
								_0x178d9b <=
									Math["min"](
										this["destructibleChance"] * _0x2164b8["Core"]["Player"]["luck"],
										this["destructibleChanceMax"]
									) && _0x2164b8["Core"]["MakeDestructible"](this["destructibleType"]);
						}
						["SpawnDestructibleInRandomLocation"]() {
							var _0x451254 = _0x5d9431;
							if (
								0x64 * Math["random"]() <=
								Math["min"](
									this["destructibleChance"] * _0x2164b8["Core"]["Player"]["luck"],
									this["destructibleChanceMax"]
								)
							) {
								let _0x1f9506 = this["DestructibleLocations"]["filter"]((_0x422d30) => {
									var _0x48ee95 = _0x451254;
									let _0x58cb42 = this["tilingTileset"]["current"]["x"] + _0x422d30["x"],
										_0xa7627a = this["tilingTileset"]["current"]["y"] + _0x422d30["y"],
										_0x55d7d2 = 0.5 * this["scene"]["renderer"]["width"],
										_0x7741a5 = 0.5 * this["scene"]["renderer"]["height"];
									if (
										_0x58cb42 < _0x2164b8["Core"]["Player"]["x"] - _0x55d7d2 ||
										_0x58cb42 > _0x2164b8["Core"]["Player"]["x"] + _0x55d7d2 ||
										_0xa7627a < _0x2164b8["Core"]["Player"]["y"] - _0x7741a5 ||
										_0xa7627a > _0x2164b8["Core"]["Player"]["y"] + _0x7741a5
									)
										return !0x0;
								});
								if (_0x1f9506["length"] <= 0x0) return;
								let _0x52f4cc = Phaser["Math"]["RND"]["pick"](_0x1f9506);
								_0x2164b8["Core"]["MakeDestructible"](
									this["destructibleType"],
									this["tilingTileset"]["current"]["x"] + _0x52f4cc["x"],
									this["tilingTileset"]["current"]["y"] + _0x52f4cc["y"]
								);
							}
						}
						["SpawnBoss"]() {
							var _0x1f11b3 = _0x5d9431;
							for (let _0x114714 = 0x0; _0x114714 < this["bossPools"]["length"]; _0x114714++) {
								if (!this["bossPools"][_0x114714]["enabled"]) continue;
								let _0x378778 = 0x2 * Math["PI"] * Math["random"](),
									_0xc83d85 = 0x100 * Math["random"](),
									_0x47b0f0 =
										_0x2164b8["Core"]["Player"]["x"] +
										0.9 * Math["cos"](_0x378778) * (this["scene"]["renderer"]["width"] + _0xc83d85),
									_0x46ffd3 =
										_0x2164b8["Core"]["Player"]["y"] +
										0.9 *
											Math["sin"](_0x378778) *
											(this["scene"]["renderer"]["height"] + _0xc83d85);
								var _0x26d20f = this["bossPools"][_0x114714]["SpawnAt"](_0x47b0f0, _0x46ffd3);
								(_0x26d20f["isTeleportOnCull"] = !0x0),
									!this["hasAttachedTreasure"] &&
										this["treasure"] &&
										this["SetTreasureLevelFromChance"](this["treasure"]) > 0x0 &&
										((this["hasAttachedTreasure"] = !0x0),
										_0x26d20f["AttachTreasure"](this["treasure"]));
							}
						}
						["SetTreasureLevelFromChance"](_0x43bd17) {
							var _0x26073c = _0x5d9431,
								_0x15c521,
								_0x3c2b64 =
									null === (_0x15c521 = _0x2164b8["Core"]["Player"]) || void 0x0 === _0x15c521
										? void 0x0
										: _0x15c521["luck"];
							void 0x0 === _0x3c2b64 && (_0x3c2b64 = 0x1);
							let _0x1e86ca = 0x0,
								_0x8ae7ed = _0x2164b8["Core"]["PlayerOptions"]["BeginnersLuck"];
							if (_0x8ae7ed < 0x6) {
								switch (_0x8ae7ed) {
									default:
										_0x1e86ca = 0x0;
										break;
									case 0x0:
									case 0x1:
									case 0x3:
									case 0x4:
										_0x1e86ca = 0x1;
										break;
									case 0x2:
										_0x1e86ca = 0x2;
										break;
									case 0x5:
										_0x1e86ca = 0x3;
								}
								if (
									((_0x2164b8["Core"]["PlayerOptions"]["BeginnersLuck"] += 0x1),
									_0x2164b8["Core"]["PlayerOptions"]["SaveBLuck"](),
									_0x1e86ca > 0x0)
								)
									return (_0x43bd17["level"] = _0x1e86ca), _0x1e86ca;
							}
							let _0x593a6f = 0x64 * Math["random"](),
								_0x407832 = 0x64 * Math["random"](),
								_0x3dde05 = 0x64 * Math["random"]();
							return _0x593a6f <= _0x43bd17["chances"][0x0] * _0x3c2b64
								? ((_0x43bd17["level"] = 0x3), 0x3)
								: _0x407832 <= _0x43bd17["chances"][0x1] * _0x3c2b64
								? ((_0x43bd17["level"] = 0x2), 0x2)
								: _0x3dde05 <= _0x43bd17["chances"][0x2] * _0x3c2b64
								? ((_0x43bd17["level"] = 0x1), 0x1)
								: 0x0;
						}
						["SpawnEnemiesOutOfSight"]() {
							var _0x7d90c9 = _0x5d9431;
							if (!(this["GetPermanentEnemiesNumber"] >= this["maximum"])) {
								for (let _0xf063f3 = 0x0; _0xf063f3 < this["pools"]["length"]; _0xf063f3++) {
									if (!this["pools"][_0xf063f3]["enabled"]) continue;
									let _0x423bd9 = 0x2 * Math["PI"] * Math["random"](),
										_0xbd853f = 0x100 * Math["random"](),
										_0x3d7077 =
											_0x2164b8["Core"]["Player"]["x"] +
											0.9 *
												Math["cos"](_0x423bd9) *
												(this["scene"]["renderer"]["width"] + _0xbd853f),
										_0x3debae =
											_0x2164b8["Core"]["Player"]["y"] +
											0.9 *
												Math["sin"](_0x423bd9) *
												(this["scene"]["renderer"]["height"] + _0xbd853f);
									this["pools"][_0xf063f3]["SpawnAt"](_0x3d7077, _0x3debae);
								}
								this["SwarmCheck"]();
							}
						}
						["SpawnEnemiesInOuterRect"]() {
							var _0x4a7c0f = _0x5d9431;
							if (this["GetPermanentEnemiesNumber"] >= this["maximum"]) return;
							let _0x57660e = !0x1;
							for (let _0x28299d = 0x0; _0x28299d < this["pools"]["length"]; _0x28299d++) {
								if (!this["pools"][_0x28299d]["enabled"]) continue;
								var _0x216d0b = Phaser["Geom"]["Rectangle"]["RandomOutside"](
									this["rectOuter"],
									this["rectInner"]
								);
								let _0x2c71ff = _0x2164b8["Core"]["Player"]["x"] + _0x216d0b["x"],
									_0x45d00d = _0x2164b8["Core"]["Player"]["y"] + _0x216d0b["y"];
								this["pools"][_0x28299d]["SpawnAt"](_0x2c71ff, _0x45d00d), (_0x57660e = !0x0);
							}
							_0x57660e && this["SwarmCheck"]();
						}
						["SpawnInRandomLocation"]() {
							var _0x1b42a3 = _0x5d9431;
							if (!(this["GetPermanentEnemiesNumber"] >= this["maximum"]))
								for (
									var _0x1ae866 = 0x0;
									this["GetPermanentEnemiesNumber"] < this["minimum"] * this["minimumMultiplier"] &&
									_0x1ae866 < this["maximum"];

								) {
									let _0x2f0d21 = !0x1;
									for (let _0x211102 = 0x0; _0x211102 < this["pools"]["length"]; _0x211102++) {
										if (!this["pools"][_0x211102]["enabled"]) continue;
										var _0x164d3a =
											Math["random"]() < 0.5
												? this["rectOuter"]["x"]
												: this["rectOuter"]["x"] + this["rectOuter"]["width"];
										let _0x2f7e50 = _0x2164b8["Core"]["Player"]["x"] + _0x164d3a,
											_0x40d908 = Phaser["Math"]["RND"]["pick"](this["EnemySpanwersLocations"])[
												"y"
											];
										this["pools"][_0x211102]["SpawnAt"](_0x2f7e50, _0x40d908), (_0x2f0d21 = !0x0);
									}
									_0x1ae866++;
								}
						}
						["SpawnEnemiesHorizontal"]() {
							var _0x55b3ea = _0x5d9431;
							if (!(this["GetPermanentEnemiesNumber"] >= this["maximum"]))
								for (
									var _0x1bb233 = 0x0;
									this["GetPermanentEnemiesNumber"] < this["minimum"] * this["minimumMultiplier"] &&
									_0x1bb233 < this["maximum"];

								) {
									let _0x1d794b = !0x1;
									for (let _0x28269f = 0x0; _0x28269f < this["pools"]["length"]; _0x28269f++) {
										if (!this["pools"][_0x28269f]["enabled"]) continue;
										var _0x4b9fd0 =
											Math["random"]() > 0.5
												? this["rectOuter"]["x"]
												: this["rectOuter"]["x"] + this["rectOuter"]["width"];
										let _0x50ac6f = _0x2164b8["Core"]["Player"]["x"] + _0x4b9fd0,
											_0x2d02fc = _0x2164b8["Core"]["Player"]["y"];
										this["pools"][_0x28269f]["SpawnAt"](_0x50ac6f, _0x2d02fc), (_0x1d794b = !0x0);
									}
									_0x1bb233++;
								}
						}
						["SwarmCheck"]() {
							var _0x1d7916 = _0x5d9431;
							for (
								var _0x3acc59 = 0x0;
								this["GetPermanentEnemiesNumber"] < this["minimum"] * this["minimumMultiplier"] &&
								_0x3acc59 < this["maximum"];

							)
								this["SpawnEnemiesInOuterRect"](), _0x3acc59++;
						}
						get ["GetPermanentEnemiesNumber"]() {
							var _0x3276c1 = _0x5d9431;
							return _0x2164b8["Core"]["Enemies"]["length"] - this["stageEventManager"]["spawned"];
						}
						["SpawnAt"](_0x15ddc2, _0x40328c, _0x1a1f84, _0x44b146) {
							var _0x2399c3 = _0x5d9431;
							if (this["GetPermanentEnemiesNumber"] >= this["maximum"]) return null;
							let _0x48d8b7 = this["pools"]["find"]((_0x2e9bd3) => _0x2e9bd3["enemyType"] === _0x1a1f84),
								_0x479ff5 = null;
							return (
								_0x48d8b7 && (_0x479ff5 = _0x48d8b7["SpawnAt"](_0x15ddc2, _0x40328c, _0x44b146)),
								_0x479ff5
							);
						}
						["Update"](_0x170e6b) {
							var _0x5f5c4c = _0x5d9431,
								_0x42937a;
							null === (_0x42937a = this["tilingTileset"]) ||
								void 0x0 === _0x42937a ||
								_0x42937a["update"]();
						}
					}
					const _0x31ad0d = class {
						constructor(_0x4f0fd4, _0x630ff4 = !0x0) {
							var _0x4fea0f = _0x5d9431;
							(this["bulletType"] = 0x0),
								(this["interval"] = 0x3e8),
								(this["repeatInterval"] = 0x64),
								(this["power"] = 0x1),
								(this["area"] = 0x1),
								(this["speed"] = 0x1),
								(this["amount"] = 0x1),
								(this["duration"] = 0x3e8),
								(this["critChance"] = 0x0),
								(this["critMul"] = 0x2),
								(this["intervalDependsOnDuration"] = !0x1),
								(this["charges"] = 0x0),
								(this["seen"] = !0x1),
								(this["addWeapon"] = null),
								(this["volume"] = null),
								(this["isPowerUp"] = !0x1),
								(this["hitBoxDelay"] = 0x3e8),
								(this["level"] = 0x0),
								(this["hitVFX"] = _0xed2036["DEFAULT"]),
								(this["knockback"] = 0x5),
								(this["hitsWalls"] = !0x0),
								(this["chance"] = 0x0),
								(this["stats_inflictedDamage"] = 0x0),
								(this["stats_lifetime"] = 0x0),
								(this["penetrating"] = 0x1),
								(this["bounces"] = 0x0),
								(this["bulletType"] = _0x4f0fd4),
								_0x630ff4 &&
									((this["pool"] = new _0x4d0f45(_0x2164b8["Core"]["scene"], this["bulletType"])),
									(this["stats_lifetime"] = 0x0),
									(this["stats_inflictedDamage"] = 0x0),
									this["MakeLevelOne"](),
									this["OnStart"]());
						}
						["stats_getDPS"]() {
							var _0x174257 = _0x5d9431;
							return this["stats_inflictedDamage"] / (this["stats_lifetime"] / 0x3e8) || 0x0;
						}
						get ["PArea"]() {
							var _0x32fd58 = _0x5d9431;
							return _0x2164b8["Core"]["Player"]["area"] * this["area"];
						}
						get ["PAmount"]() {
							var _0x2705f9 = _0x5d9431;
							return _0x2164b8["Core"]["Player"]["amount"] + this["amount"];
						}
						get ["PPower"]() {
							var _0x5e65a1 = _0x5d9431;
							return _0x2164b8["Core"]["Player"]["power"] * this["power"];
						}
						get ["PSpeed"]() {
							var _0x23d3c2 = _0x5d9431;
							return _0x2164b8["Core"]["Player"]["speed"] * this["speed"];
						}
						get ["PInterval"]() {
							var _0x22b47e = _0x5d9431;
							return Math["max"](0.1, _0x2164b8["Core"]["Player"]["cooldown"]) * this["interval"];
						}
						get ["PDuration"]() {
							var _0x1a677a = _0x5d9431;
							return _0x2164b8["Core"]["Player"]["duration"] * this["duration"];
						}
						["ActiveBulletCount"]() {
							var _0x349413 = _0x5d9431;
							return this["pool"] ? this["pool"]["countActive"](!0x0) : 0x0;
						}
						["OnStart"]() {
							var _0x3b4f09 = _0x5d9431,
								_0x39acc2;
							this["ResetFiringTimer"](),
								_0x2164b8["Core"]["scene"]["physics"]["add"]["overlap"](
									this["pool"],
									_0x2164b8["Core"]["Enemies"],
									this["onBulletOverlapsEnemy"]["bind"](this)
								),
								_0x2164b8["Core"]["scene"]["physics"]["add"]["overlap"](
									this["pool"],
									_0x2164b8["Core"]["Destructibles"],
									this["onBulletOverlapsDestuctible"]["bind"](this)
								),
								this["hitsWalls"] &&
									(null === (_0x39acc2 = _0x2164b8["Core"]["Stage"]) || void 0x0 === _0x39acc2
										? void 0x0
										: _0x39acc2["hasTileset"]) &&
									_0x216119["CollisionLayers"]["forEach"]((_0x402f82) => {
										var _0x115e42 = _0x3b4f09;
										_0x2164b8["Core"]["scene"]["physics"]["add"]["collider"](
											this["pool"],
											_0x402f82,
											this["onBulletOverlapsWall"]["bind"](this)
										);
									});
						}
						["ResetFiringTimer"]() {
							var _0x4ee7ec = _0x5d9431;
							this["firingTimer"] && this["firingTimer"]["destroy"]();
							var _0x1a1f4d = this["intervalDependsOnDuration"]
								? this["duration"] + this["PInterval"]
								: this["PInterval"];
							(this["firingTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
								delay: _0x1a1f4d,
								loop: !0x0,
								callback: this["Fire"]["bind"](this),
							})),
								(this["firingTimer"]["name"] = "Firing: " + this["bulletType"]);
						}
						["onBulletOverlapsEnemy"](_0x45c000, _0x365f55) {
							var _0x3d42d8 = _0x5d9431,
								_0x20cbde = _0x365f55;
							_0x20cbde["isDead"] ||
								_0x45c000["HasAlreadyHitObject"](_0x20cbde) ||
								(_0x20cbde["GetDamaged"](this["PPower"], this["hitVFX"], this["knockback"]),
								(this["stats_inflictedDamage"] += this["PPower"]));
						}
						["onBulletOverlapsWall"](_0x20d9ff, _0x5f2674) {
							var _0xae246b = _0x5d9431;
							return _0x20d9ff["OnHasHitWall"](_0x5f2674), !0x1;
						}
						["onBulletOverlapsDestuctible"](_0x163915, _0x31e12e) {
							var _0x42c344 = _0x5d9431;
							_0x163915["HasAlreadyHitObject"](_0x31e12e) || _0x31e12e["GetDamaged"](this["PPower"]);
						}
						["Update"](_0x37d4ae = 0x0) {
							var _0x355518 = _0x5d9431;
							this["stats_lifetime"] += _0x37d4ae;
						}
						["CleanUp"]() {
							var _0x5a46ea = _0x5d9431,
								_0x5164b5;
							this["firingTimer"] && this["firingTimer"]["destroy"](),
								null === (_0x5164b5 = this["pool"]) ||
									void 0x0 === _0x5164b5 ||
									_0x5164b5["spawned"]["forEach"]((_0x363917) => {
										var _0x208f81 = _0x5a46ea;
										_0x363917["DeSpawn"]();
									});
						}
						["Fire"]() {
							var _0x26b3ee = _0x5d9431;
							if (
								(this["FireOneBullet"](
									_0x2164b8["Core"]["Player"]["x"],
									_0x2164b8["Core"]["Player"]["y"],
									0x0,
									this["target"]
								),
								this["PAmount"] > 0x1)
							) {
								for (let _0x15504d = 0x1; _0x15504d < this["PAmount"]; _0x15504d++)
									this["repeatInterval"] * _0x15504d > 0x0
										? ((this["lastShotTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
												delay: this["repeatInterval"] * _0x15504d,
												loop: !0x1,
												callback: () => {
													var _0xf439fa = _0x26b3ee;
													this["FireOneBullet"](
														_0x2164b8["Core"]["Player"]["x"],
														_0x2164b8["Core"]["Player"]["y"],
														_0x15504d,
														this["target"]
													);
												},
										  })),
										  (this["lastShotTimer"]["name"] = "Firing:\x20" + this["bulletType"] + "\x20"))
										: this["FireOneBullet"](
												_0x2164b8["Core"]["Player"]["x"],
												_0x2164b8["Core"]["Player"]["y"],
												_0x15504d,
												this["target"]
										  );
							}
						}
						["FireOneBullet"](_0x59e9d0, _0x1d56d0, _0x2b5ce0, _0x528903) {
							var _0x394de2 = _0x5d9431,
								_0x4a5ae6 = this["pool"]["SpawnAt"](_0x59e9d0, _0x1d56d0, this, _0x2b5ce0);
							return _0x528903 && _0x4a5ae6 && _0x4a5ae6["SetTarget"](_0x528903), _0x4a5ae6;
						}
						["LevelUp"]() {
							var _0x25723f = _0x5d9431;
							let _0x74b3c7 = _0x41a274[this["bulletType"]][this["level"]];
							if (!_0x74b3c7) return !0x1;
							for (const _0x6fe702 in _0x74b3c7)
								this["hasOwnProperty"](_0x6fe702) && (this[_0x6fe702] += _0x74b3c7[_0x6fe702]);
							return (
								this["ResetFiringTimer"](),
								this["level"]++,
								this["isPowerUp"] || this["Fire"](),
								(null == _0x74b3c7 ? void 0x0 : _0x74b3c7["addEvolvedWeapon"]) &&
									_0x2164b8["Core"]["LevelUpFactory"]["AddLateWeapon"](_0x74b3c7["addEvolvedWeapon"]),
								!(void 0x0 === _0x74b3c7)
							);
						}
						["MakeLevelOne"]() {
							var _0x241067 = _0x5d9431,
								_0x19f322;
							this["level"] = 0x0;
							let _0x164446 = _0x41a274[this["bulletType"]][this["level"]];
							for (const _0x30a0a8 in _0x164446)
								this["hasOwnProperty"](_0x30a0a8) && (this[_0x30a0a8] = _0x164446[_0x30a0a8]);
							if (
								(_0x164446["poolLimit"] && (this["pool"]["upperLimit"] = _0x164446["poolLimit"]),
								_0x164446["evolvesFrom"])
							) {
								if (
									null === (_0x19f322 = _0x164446["evolvesFrom"]) || void 0x0 === _0x19f322
										? void 0x0
										: _0x19f322["length"]
								) {
									for (
										let _0x35516e = 0x0;
										_0x35516e < _0x164446["evolvesFrom"]["length"];
										_0x35516e++
									)
										_0x2164b8["Core"]["RemoveWeapon"](_0x164446["evolvesFrom"][_0x35516e]);
								} else _0x2164b8["Core"]["RemoveWeapon"](_0x164446["evolvesFrom"]);
							}
						}
						["DPS"]() {
							var _0x5c2f55 = _0x5d9431;
							return ((this["PPower"] *
								this["PAmount"] *
								this["penetrating"] *
								(this["duration"] / this["hitBoxDelay"])) /
								(this["PInterval"] / 0x3e8))["toFixed"](0x2);
						}
					};
					class _0x214e6a extends _0x31ad0d {
						constructor(_0x2f8c56) {
							var _0x45b3a5 = _0x5d9431;
							super(_0x2f8c56, !0x1),
								(this["level"] = 0x0),
								(this["power"] = 0x0),
								(this["area"] = 0x0),
								(this["speed"] = 0x0),
								(this["cooldown"] = 0x0),
								(this["amount"] = 0x0),
								(this["maxHp"] = 0x0),
								(this["moveSpeed"] = 0x0),
								(this["growth"] = 0x0),
								(this["magnet"] = 0x0),
								(this["luck"] = 0x0),
								(this["armor"] = 0x0),
								(this["greed"] = 0x0),
								(this["regen"] = 0x0),
								(this["revivals"] = 0x0),
								(this["curse"] = 0x0),
								(this["rerolls"] = 0x0),
								(this["skips"] = 0x0),
								this["MakeLevelOne"]();
						}
						["Apply"]() {
							var _0x55b7d7 = _0x5d9431;
							(_0x2164b8["Core"]["Player"]["power"] += this["power"]),
								(_0x2164b8["Core"]["Player"]["area"] += this["area"]),
								(_0x2164b8["Core"]["Player"]["speed"] += this["speed"]),
								(_0x2164b8["Core"]["Player"]["cooldown"] += this["cooldown"]),
								(_0x2164b8["Core"]["Player"]["amount"] += this["amount"]),
								(_0x2164b8["Core"]["Player"]["moveSpeed"] += this["moveSpeed"]),
								(_0x2164b8["Core"]["Player"]["growth"] += this["growth"]),
								(_0x2164b8["Core"]["Player"]["luck"] += this["luck"]),
								(_0x2164b8["Core"]["Player"]["armor"] += this["armor"]),
								(_0x2164b8["Core"]["Player"]["duration"] += this["duration"]),
								(_0x2164b8["Core"]["Player"]["greed"] += this["greed"]),
								(_0x2164b8["Core"]["Player"]["regen"] += this["regen"]),
								(_0x2164b8["Core"]["Player"]["maxHp"] +=
									_0x2164b8["Core"]["Player"]["maxHp"] * this["maxHp"]),
								(_0x2164b8["Core"]["Player"]["revivals"] += this["revivals"]),
								(_0x2164b8["Core"]["Player"]["curse"] += this["curse"]),
								(_0x2164b8["Core"]["Player"]["rerolls"] += this["rerolls"]),
								(_0x2164b8["Core"]["Player"]["skips"] += this["skips"]),
								this["cooldown"] < 0x0 && _0x2164b8["Core"]["ResetWeaponCooldowns"](),
								this["magnet"] > 0x0 &&
									((_0x2164b8["Core"]["Magnet"]["radius"] +=
										_0x2164b8["Core"]["Magnet"]["radius"] * this["magnet"]),
									_0x2164b8["Core"]["Magnet"]["RefreshSize"](),
									(_0x2164b8["Core"]["Magnet"]["percentage"] += this["magnet"]));
						}
						["LevelUp"]() {
							var _0x5ae0d1 = _0x5d9431;
							return this["resetBonuses"](), !!super["LevelUp"]() && (this["Apply"](), !0x0);
						}
						["MakeLevelOne"]() {
							var _0x5d941d = _0x5d9431;
							this["resetBonuses"](),
								super["MakeLevelOne"](),
								_0x2164b8["Core"]["Player"] && this["Apply"]();
						}
						["resetBonuses"]() {
							var _0x34d40c = _0x5d9431;
							(this["power"] = 0x0),
								(this["area"] = 0x0),
								(this["speed"] = 0x0),
								(this["cooldown"] = 0x0),
								(this["amount"] = 0x0),
								(this["maxHp"] = 0x0),
								(this["moveSpeed"] = 0x0),
								(this["growth"] = 0x0),
								(this["magnet"] = 0x0),
								(this["luck"] = 0x0),
								(this["armor"] = 0x0),
								(this["duration"] = 0x0),
								(this["greed"] = 0x0),
								(this["regen"] = 0x0),
								(this["revivals"] = 0x0),
								(this["curse"] = 0x0),
								(this["rerolls"] = 0x0),
								(this["skips"] = 0x0);
						}
						["ResetFiringTimer"]() {}
					}
					const _0x1a8046 = class extends _0x31ad0d {
							constructor(_0x371977) {
								super(_0x371977);
							}
							get ["PArea"]() {
								var _0x23179f = _0x5d9431;
								return 1.3 * _0x2164b8["Core"]["Player"]["area"] * this["area"];
							}
						},
						_0x33a90b = class extends _0x31ad0d {
							constructor(_0x5ee3e8) {
								super(_0x5ee3e8);
							}
							["Fire"]() {
								var _0x33bd84 = _0x5d9431;
								(this["target"] = Phaser["Math"]["RND"]["pick"](
									_0x2164b8["Core"]["EnemyGroup"]["children"]["entries"]
								)),
									super["Fire"]();
							}
						},
						_0x10a1c8 = class extends _0x31ad0d {
							constructor(_0x306f57) {
								super(_0x306f57);
							}
							["Fire"]() {
								var _0x555fc2 = _0x5d9431;
								(this["target"] = Phaser["Math"]["RND"]["pick"](
									_0x2164b8["Core"]["EnemyGroup"]["children"]["entries"]
								)),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["MagicMissile"],
										{
											detune: 0x0,
											volume: 0.2,
										},
										0xc8,
										0xa
									),
									super["Fire"]();
							}
						},
						_0x19a344 = class extends _0x31ad0d {
							constructor(_0x45ab5c) {
								var _0x1cdcba = _0x5d9431;
								super(_0x45ab5c),
									(this["targetAngles"] = []),
									(this["targetRadii"] = []),
									(this["lastAngleIndex"] = 0x0),
									(this["maxAngles"] = 0xc),
									(this["lasRadiusIndex"] = 0x0);
								var _0x10cc8f = Math["min"](
									_0x2164b8["Core"]["scene"]["renderer"]["width"],
									_0x2164b8["Core"]["scene"]["renderer"]["height"]
								);
								for (let _0x47c113 = 0x0; _0x47c113 < this["maxAngles"]; _0x47c113++)
									this["targetAngles"]["push"]((0x2 * Math["PI"] * _0x47c113) / this["maxAngles"]),
										this["targetRadii"]["push"](
											0.25 * _0x10cc8f + 0.1 * _0x10cc8f * (_0x47c113 / this["maxAngles"])
										);
								Phaser["Utils"]["Array"]["Shuffle"](this["targetRadii"]);
							}
							["GetAngle"]() {
								var _0x2a04b2 = _0x5d9431,
									_0x4ad338 = (this["lastAngleIndex"] + 0x1) % this["maxAngles"];
								return (this["lastAngleIndex"] = _0x4ad338), this["targetAngles"][_0x4ad338];
							}
							["GetRadius"]() {
								var _0x230b83 = _0x5d9431,
									_0xd2bda7 = (this["lasRadiusIndex"] + 0x1) % this["maxAngles"];
								return (this["lasRadiusIndex"] = _0xd2bda7), this["targetRadii"][_0xd2bda7];
							}
							["LevelUp"]() {
								var _0x4229c7 = _0x5d9431;
								return Phaser["Utils"]["Array"]["Shuffle"](this["targetRadii"]), super["LevelUp"]();
							}
						},
						_0x563c54 = class extends _0x31ad0d {
							constructor(_0x3c7136) {
								super(_0x3c7136);
							}
						},
						_0x3e9e05 = class extends _0x31ad0d {
							constructor(_0x49c98f) {
								super(_0x49c98f);
							}
						},
						_0x38e3bb = class extends _0x31ad0d {
							constructor(_0x129a3b) {
								super(_0x129a3b);
							}
						},
						_0x18fbe1 = class extends _0x31ad0d {
							constructor(_0x2f01a5) {
								super(_0x2f01a5);
							}
						},
						_0x4c4fa5 = class extends _0x31ad0d {
							constructor(_0x2e09af) {
								super(_0x2e09af);
							}
						},
						_0xc538fd = class extends _0x31ad0d {
							constructor(_0x522b09) {
								super(_0x522b09);
							}
						},
						_0x1c7881 = class extends _0x31ad0d {
							constructor(_0x41b515) {
								var _0x66175 = _0x5d9431;
								super(_0x41b515),
									(this["image"] = _0x2164b8["Core"]["scene"]["add"]["image"](
										0x0,
										0x0,
										"vfx",
										"Rings3.png"
									)),
									this["image"]["setBlendMode"](_0x1cb257["BlendModes"]["ADD"]),
									this["image"]["setAlpha"](0.1),
									this["image"]
										["copyPosition"](_0x2164b8["Core"]["Player"])
										["setScale"](0x2 * _0x1fa5bb["PixelScale"] * this["PArea"]),
									(this["imageTween"] = _0x2164b8["Core"]["scene"]["add"]["tween"]({
										targets: this["image"],
										alpha: 0.3,
										loop: !0x0,
										yoyo: !0x0,
										loopDelay: 0x64,
										duration: 0x3e8,
										ease: "Linear",
										repeat: -0x1,
									})),
									(this["imageTween2"] = _0x2164b8["Core"]["scene"]["add"]["tween"]({
										targets: this["image"],
										angle: 0x168,
										loop: !0x0,
										duration: 0x1770,
										ease: "Linear",
										repeat: -0x1,
									}));
							}
							get ["PAmount"]() {
								return 0x1;
							}
							["Fire"]() {
								var _0x31db67 = _0x5d9431;
								return (
									this["image"]["setScale"](0x2 * _0x1fa5bb["PixelScale"] * this["PArea"]),
									super["Fire"]()
								);
							}
							["Update"](_0x57a280) {
								var _0x253f60 = _0x5d9431;
								super["Update"](_0x57a280),
									this["image"]["copyPosition"](_0x2164b8["Core"]["Player"]),
									this["image"]["setDepth"](
										_0x2164b8["Core"]["Player"]["depth"] -
											0.5 * _0x2164b8["Core"]["scene"]["renderer"]["height"]
									);
							}
							["CleanUp"]() {
								var _0x5abf9d = _0x5d9431;
								super["CleanUp"](),
									this["image"]["setVisible"](!0x1),
									this["image"]["setActive"](!0x1),
									this["image"]["destroy"](),
									this["imageTween"]["stop"](),
									this["imageTween2"]["stop"]();
							}
						},
						_0x5af7f2 = class extends _0x31ad0d {
							constructor(_0x3e3374) {
								super(_0x3e3374);
							}
						},
						_0x4bd5ce = class extends _0x31ad0d {
							constructor(_0x215bd5) {
								super(_0x215bd5);
							}
							["Fire"]() {
								var _0x2c2e19 = _0x5d9431;
								(this["target"] = Phaser["Math"]["RND"]["pick"](
									_0x2164b8["Core"]["EnemyGroup"]["children"]["entries"]
								)),
									_0x2164b8["Sound"]["PlaySound"](
										_0x522ca7["MagicMissile"],
										{
											detune: 0x0,
											volume: 0.2,
										},
										0xc8,
										0xa
									),
									super["Fire"]();
							}
						},
						_0x248ca2 = class extends _0x31ad0d {
							constructor(_0x4a074c) {
								super(_0x4a074c);
							}
						},
						_0x45c93b = class extends _0x31ad0d {
							constructor(_0x555469, _0x4c03ea = !0x1) {
								var _0x55b82b = _0x5d9431;
								super(_0x555469),
									(this["maxCharges"] = 0x3),
									(this["hasThorns"] = !0x1),
									(this["hasThorns"] = _0x4c03ea),
									(this["image"] = _0x2164b8["Core"]["scene"]["add"]
										["image"](0x0, 0x0, "vfx", "Shockwave2.png")
										["setAlpha"](0.3)
										["setScale"](1.25 * _0x1fa5bb["PixelScale"])
										["copyPosition"](_0x2164b8["Core"]["Player"])
										["setVisible"](!0x1)),
									(this["imageTween"] = _0x2164b8["Core"]["scene"]["add"]["tween"]({
										targets: this["image"],
										alpha: 0.6,
										loop: !0x0,
										yoyo: !0x0,
										loopDelay: 0x64,
										duration: 0x7d0,
										ease: "Linear",
										repeat: -0x1,
									})),
									(this["imageTween2"] = _0x2164b8["Core"]["scene"]["add"]["tween"]({
										targets: this["image"],
										angle: 0x168,
										loop: !0x0,
										duration: 0x2ee0,
										ease: "Linear",
										repeat: -0x1,
									})),
									_0x2164b8["Core"]["scene"]["events"]["addListener"](
										"Player_LostShield",
										this["CheckColor"]["bind"](this)
									);
							}
							get ["PAmount"]() {
								return 0x1;
							}
							["OnStart"]() {
								var _0x4f8bc0 = _0x5d9431;
								super["OnStart"](),
									_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										delay: 0x1,
										loop: !0x1,
										callback: this["Fire"]["bind"](this),
									});
							}
							["Fire"]() {
								var _0x4c1784 = _0x5d9431;
								if (
									(_0x2164b8["Core"]["Player"]["shields"] < this["charges"] &&
										_0x2164b8["Core"]["Player"]["shields"] < this["maxCharges"] &&
										(_0x2164b8["Core"]["Player"]["shields"] += 0x1),
									this["CheckColor"](),
									this["hasThorns"])
								)
									return super["Fire"]();
							}
							["CheckColor"]() {
								var _0x578ad4 = _0x5d9431;
								switch ((this["image"]["setVisible"](!0x0), _0x2164b8["Core"]["Player"]["shields"])) {
									default:
									case 0x0:
										this["image"]["setVisible"](!0x1);
										break;
									case 0x1:
										this["image"]["setTint"](0x8888ff);
										break;
									case 0x2:
										this["image"]["setTint"](0x88ff88);
										break;
									case 0x3:
										this["image"]["setTint"](0xffff00);
								}
							}
							["Update"]() {
								var _0x12e384 = _0x5d9431;
								this["image"]["copyPosition"](_0x2164b8["Core"]["Player"]),
									(this["image"]["y"] -= 0x10),
									this["image"]["setDepth"](
										_0x2164b8["Core"]["Player"]["depth"] -
											0.5 * _0x2164b8["Core"]["scene"]["renderer"]["height"]
									);
							}
							["CleanUp"]() {
								var _0x1ce886 = _0x5d9431;
								super["CleanUp"](),
									this["image"]["setVisible"](!0x1),
									this["image"]["setActive"](!0x1),
									this["image"]["destroy"](),
									this["imageTween"]["stop"](),
									this["imageTween2"]["stop"]();
							}
							["LevelUp"]() {
								var _0x59c787 = _0x5d9431;
								super["LevelUp"]();
								let _0x3e9788 = _0x41a274[this["bulletType"]][this["level"] - 0x1];
								return !(
									!_0x3e9788 ||
									(_0x3e9788["shieldInvulTime"] &&
										(_0x2164b8["Core"]["Player"]["shieldInvulTime"] +=
											_0x3e9788["shieldInvulTime"]),
									void 0x0 === _0x3e9788)
								);
							}
						},
						_0x12acf3 = class extends _0x45c93b {
							get ["PArea"]() {
								return 1.1;
							}
							constructor(_0x100e98) {
								super(_0x100e98, !0x0);
							}
						},
						_0x27f277 = class extends _0x31ad0d {
							constructor(_0x4080a5) {
								var _0xfb1c13 = _0x5d9431;
								super(_0x4080a5),
									(this["ticks"] = 0x8),
									(this["targets"] = new Array()),
									(this["angles"] = new Array());
								for (let _0x856b5d = 0x0; _0x856b5d < 0xc; _0x856b5d++) {
									var _0x2c05d3 = (_0x856b5d / 0xc) * (0x2 * Math["PI"]);
									this["targets"]["push"]({
										x: Math["cos"](_0x2c05d3),
										y: Math["sin"](_0x2c05d3),
									}),
										this["angles"]["push"](_0x2c05d3);
								}
								(this["image"] = _0x2164b8["Core"]["scene"]["add"]["sprite"](
									0x0,
									0x0,
									"vfx",
									"Pierce1.png"
								)),
									this["image"]
										["copyPosition"](_0x2164b8["Core"]["Player"])
										["setOrigin"](0x0, 0.5)
										["setVisible"](!0x1)
										["setTint"](0xcceeff)
										["setScale"](0x2, 0x1),
									(this["imageTween"] = _0x2164b8["Core"]["scene"]["add"]["tween"]({
										targets: this["image"],
										alpha: 0x0,
										delay: 0xc8,
										duration: 0x1f4,
										ease: "Linear",
									}));
								const _0x2b31a8 = this["image"]["anims"]["generateFrameNames"]("vfx", {
									start: 0x1,
									end: 0x5,
									zeroPad: 0x0,
									prefix: "Pierce",
									suffix: ".png",
								});
								this["image"]["anims"]["create"]({
									key: "pierce",
									frames: _0x2b31a8,
									frameRate: 0x1e,
								});
							}
							get ["PAmount"]() {
								return 0x6;
							}
							["Fire"]() {
								var _0xd790ea = _0x5d9431;
								this["ticks"]++,
									this["ticks"] >= 0xc && (this["ticks"] = 0x0),
									(this["target"] = this["targets"][this["ticks"]]),
									this["imageTween"]["restart"](),
									this["image"]
										["copyPosition"](_0x2164b8["Core"]["Player"])
										["setAngle"](Phaser["Math"]["RadToDeg"](this["angles"][this["ticks"]]))
										["setVisible"](!0x0)
										["setDepth"](this["image"]["scene"]["renderer"]["height"]),
										!global["anims_disabled"].value ?
									this["image"]["anims"]["play"]("pierce") : '';
								for (let _0x5b92e2 = 0x0; _0x5b92e2 < this["PAmount"]; _0x5b92e2++)
									this["FireOneLancet"](
										_0x2164b8["Core"]["Player"]["x"],
										_0x2164b8["Core"]["Player"]["y"],
										_0x5b92e2,
										this["target"],
										this["angles"][this["ticks"]]
									);
							}
							["FireOneLancet"](_0x53d02f, _0x2e1659, _0x5e1c38, _0x3625b4, _0x468aac) {
								var _0x2d7a10 = _0x5d9431,
									_0x5e9f4a = super["FireOneBullet"](_0x53d02f, _0x2e1659, _0x5e1c38, _0x3625b4);
								null == _0x5e9f4a || _0x5e9f4a["setAngle"](Phaser["Math"]["RadToDeg"](_0x468aac));
							}
						},
						_0x4843c5 = class extends _0x31ad0d {
							constructor(_0x3ffcd8) {
								super(_0x3ffcd8);
							}
							get ["PArea"]() {
								var _0x54922b = _0x5d9431;
								return 1.2 * _0x2164b8["Core"]["Player"]["area"] * this["area"];
							}
						},
						_0x3a4214 = class extends _0x31ad0d {
							constructor(_0x3813fb) {
								var _0x56b904 = _0x5d9431;
								super(_0x3813fb),
									(this["AreaRectangles"] = [
										new Phaser["Geom"]["Rectangle"](
											0x0,
											0x0,
											_0x2164b8["Core"]["scene"]["renderer"]["width"],
											0.45 * _0x2164b8["Core"]["scene"]["renderer"]["height"]
										),
										new Phaser["Geom"]["Rectangle"](
											0x0,
											0x0,
											0.45 * _0x2164b8["Core"]["scene"]["renderer"]["width"],
											0.7 * _0x2164b8["Core"]["scene"]["renderer"]["height"]
										),
										new Phaser["Geom"]["Rectangle"](
											0x0,
											0x0,
											0.45 * _0x2164b8["Core"]["scene"]["renderer"]["width"],
											0.7 * _0x2164b8["Core"]["scene"]["renderer"]["height"]
										),
									]),
									(this["ScreenRectangle"] = new Phaser["Geom"]["Rectangle"](
										0x0,
										0x0,
										_0x2164b8["Core"]["scene"]["renderer"]["width"],
										_0x2164b8["Core"]["scene"]["renderer"]["height"]
									));
							}
						},
						_0x29c5b0 = class extends _0x31ad0d {
							constructor(_0x3fdd17) {
								var _0x254557 = _0x5d9431;
								super(_0x3fdd17),
									(this["targets"] = new Array()),
									(this["damageZoneDistance"] = 0x96),
									(this["totalTime"] = 0x0),
									(this["enemyIndex"] = 0x0),
									(this["damageZoneDefaultRadius"] = 0x32),
									(this["blockFire"] = !0x1),
									(this["angleTime"] = 0x0),
									(this["delayBasedOnDuration"] = 0x1),
									(this["rayDuration"] = 0x1f4),
									(this["_currentDirection"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
									(this["runSpeed"] = _0x1fa5bb["PlayerPxSpeed"] / 1.178571428571429),
									(this["damageZoneDistance"] = _0xe0047c ? _0x490bcb : _0x170004),
									(this["damageZoneDistance"] *= 0.5),
									(this["damageZoneDefaultRadius"] = 0.25 * this["damageZoneDistance"]),
									(this["damageZoneDistance"] -= this["damageZoneDefaultRadius"]),
									(this["damageZone"] = _0x2164b8["Core"]["scene"]["add"]
										["circle"](0x0, 0x0, this["damageZoneDefaultRadius"])
										["setStrokeStyle"](0x2, 0xffff00)
										["setVisible"](!0x1)),
									(this["targetZone"] = _0x2164b8["Core"]["scene"]["add"]
										["circle"](0x0, 0x0, this["damageZoneDefaultRadius"])
										["setStrokeStyle"](0x1, 0x8888ff)
										["setAlpha"](0.5)),
									(this["circle"] = new Phaser["Geom"]["Circle"](
										0x0,
										0x0,
										this["damageZoneDefaultRadius"]
									)),
									(this["sprite"] = new Phaser["Physics"]["Arcade"]["Sprite"](
										_0x2164b8["Core"]["scene"],
										_0x2164b8["Core"]["Player"]["x"],
										_0x2164b8["Core"]["Player"]["y"],
										"vfx",
										"ProjectileBird2.png"
									)),
									_0x2164b8["Core"]["scene"]["add"]["existing"](this["sprite"]),
									_0x2164b8["Core"]["scene"]["physics"]["add"]["existing"](this["sprite"]);
								const _0x43c194 = this["sprite"]["anims"]["generateFrameNames"]("vfx", {
									start: 0x1,
									end: 0x2,
									zeroPad: 0x0,
									prefix: "ProjectileBird",
									suffix: ".png",
								});
								this["sprite"]["anims"]["create"]({
									key: "idle",
									frames: _0x43c194,
									frameRate: 0x6,
									repeat: -0x1,
								}),
								!global["anims_disabled"].value ? this["sprite"]["anims"]["play"]("idle") : '',
									this["sprite"]["setDepth"](Number["MAX_SAFE_INTEGER"] - 0x3e7);
							}
							["Fire"]() {
								var _0x59b7ab = _0x5d9431;
								if (!this["blockFire"]) {
									(this["repeatInterval"] = this["interval"] / this["PAmount"]),
										(this["damageZone"]["radius"] = this["damageZoneDefaultRadius"]),
										(this["targets"] = []),
										(this["circle"]["x"] = this["damageZone"]["x"]),
										(this["circle"]["y"] = this["damageZone"]["y"]),
										(this["circle"]["radius"] = this["damageZone"]["radius"]);
									for (let _0xfa1573 = 0x0; _0xfa1573 < 0xc; _0xfa1573++)
										this["targets"]["push"](Phaser["Geom"]["Circle"]["Random"](this["circle"]));
									super["Fire"]();
								}
							}
							["Update"](_0x34920a) {
								var _0x564642 = _0x5d9431;
								super["Update"](_0x34920a),
									(this["totalTime"] += _0x34920a),
									(this["angleTime"] += _0x34920a);
								var _0x32a3bf = _0x2164b8["Core"]["Player"]["flipX"] ? 0x18 : -0x18;
								Phaser["Math"]["Distance"]["Squared"](
									this["sprite"]["x"],
									this["sprite"]["y"],
									_0x2164b8["Core"]["Player"]["x"] + _0x32a3bf,
									_0x2164b8["Core"]["Player"]["y"]
								) > 0x1388
									? ((this["_currentDirection"]["x"] =
											_0x2164b8["Core"]["Player"]["x"] + _0x32a3bf - this["sprite"]["x"]),
									  (this["_currentDirection"]["y"] =
											_0x2164b8["Core"]["Player"]["y"] - 0x18 - this["sprite"]["y"]),
									  this["_currentDirection"]["normalize"](),
									  this["sprite"]["setFlipX"](this["_currentDirection"]["x"] < 0x0),
									  this["sprite"]["setVelocity"](
											this["runSpeed"] *
												this["_currentDirection"]["x"] *
												_0x2164b8["Core"]["Player"]["moveSpeed"],
											this["runSpeed"] *
												this["_currentDirection"]["y"] *
												_0x2164b8["Core"]["Player"]["moveSpeed"]
									  ))
									: this["sprite"]["setVelocity"](
											0x23 * this["_currentDirection"]["x"],
											0x23 * this["_currentDirection"]["y"]
									  );
								var _0xeba8ac = 0.001 * (this["angleTime"] - this["rayDuration"]) * this["PSpeed"];
								(this["targetZone"]["x"] =
									_0x2164b8["Core"]["Player"]["x"] +
									Math["cos"](_0xeba8ac) * this["damageZoneDistance"]),
									(this["targetZone"]["y"] =
										_0x2164b8["Core"]["Player"]["y"] +
										Math["sin"](_0xeba8ac) * this["damageZoneDistance"]),
									(_0xeba8ac = 0.001 * this["angleTime"] * this["PSpeed"]),
									(this["damageZone"]["x"] =
										_0x2164b8["Core"]["Player"]["x"] +
										Math["cos"](_0xeba8ac) * this["damageZoneDistance"]),
									(this["damageZone"]["y"] =
										_0x2164b8["Core"]["Player"]["y"] +
										Math["sin"](_0xeba8ac) * this["damageZoneDistance"]),
									this["totalTime"] >= this["PDuration"]
										? ((this["totalTime"] =
												-this["PDuration"] *
												this["delayBasedOnDuration"] *
												_0x2164b8["Core"]["Player"]["cooldown"]),
										  (this["blockFire"] = !0x0),
										  (this["targetZone"]["alpha"] = 0.1))
										: this["totalTime"] > 0x0 &&
										  ((this["blockFire"] = !0x1), (this["targetZone"]["alpha"] = 0.5));
							}
							["CleanUp"]() {
								var _0x340b51 = _0x5d9431;
								super["CleanUp"](),
									this["sprite"]["setVisible"](!0x1),
									this["damageZone"]["setVisible"](!0x1),
									this["targetZone"]["setVisible"](!0x1);
							}
						},
						_0x9ac4b0 = class extends _0x31ad0d {
							constructor(_0x2e4e10) {
								var _0x3d420c = _0x5d9431;
								super(_0x2e4e10),
									(this["targets"] = new Array()),
									(this["damageZoneDistance"] = 0x96),
									(this["totalTime"] = 0x0),
									(this["enemyIndex"] = 0x0),
									(this["damageZoneDefaultRadius"] = 0x32),
									(this["blockFire"] = !0x1),
									(this["angleTime"] = 0x0),
									(this["delayBasedOnDuration"] = 0x1),
									(this["rayDuration"] = 0x1f4),
									(this["_currentDirection"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
									(this["runSpeed"] = _0x1fa5bb["PlayerPxSpeed"] / 1.178571428571429),
									(this["damageZoneDistance"] = _0xe0047c ? _0x490bcb : _0x170004),
									(this["damageZoneDistance"] *= 0.5),
									(this["damageZoneDefaultRadius"] = 0.25 * this["damageZoneDistance"]),
									(this["damageZoneDistance"] -= this["damageZoneDefaultRadius"]),
									(this["damageZone"] = _0x2164b8["Core"]["scene"]["add"]
										["circle"](0x0, 0x0, this["damageZoneDefaultRadius"])
										["setStrokeStyle"](0x2, 0xffff00)
										["setVisible"](!0x1)),
									(this["targetZone"] = _0x2164b8["Core"]["scene"]["add"]
										["circle"](0x0, 0x0, this["damageZoneDefaultRadius"])
										["setStrokeStyle"](0x1, 0xff88ff)
										["setAlpha"](0.5)),
									(this["circle"] = new Phaser["Geom"]["Circle"](
										0x0,
										0x0,
										this["damageZoneDefaultRadius"]
									)),
									(this["sprite"] = new Phaser["Physics"]["Arcade"]["Sprite"](
										_0x2164b8["Core"]["scene"],
										_0x2164b8["Core"]["Player"]["x"],
										_0x2164b8["Core"]["Player"]["y"],
										"vfx",
										"ProjectileBird4.png"
									)),
									_0x2164b8["Core"]["scene"]["add"]["existing"](this["sprite"]),
									_0x2164b8["Core"]["scene"]["physics"]["add"]["existing"](this["sprite"]);
								const _0x2a775b = this["sprite"]["anims"]["generateFrameNames"]("vfx", {
									start: 0x4,
									end: 0x5,
									zeroPad: 0x0,
									prefix: "ProjectileBird",
									suffix: ".png",
								});
								this["sprite"]["anims"]["create"]({
									key: "idle",
									frames: _0x2a775b,
									frameRate: 0x6,
									repeat: -0x1,
								}),
								!global["anims_disabled"].value ? this["sprite"]["anims"]["play"]("idle") : '',
									this["sprite"]["setDepth"](Number["MAX_SAFE_INTEGER"] - 0x3e7);
							}
							["Fire"]() {
								var _0xd2c7aa = _0x5d9431;
								if (!this["blockFire"]) {
									(this["repeatInterval"] = this["interval"] / this["PAmount"]),
										(this["damageZone"]["radius"] = this["damageZoneDefaultRadius"]),
										(this["targets"] = []),
										(this["circle"]["x"] = this["damageZone"]["x"]),
										(this["circle"]["y"] = this["damageZone"]["y"]),
										(this["circle"]["radius"] = this["damageZone"]["radius"]);
									for (let _0x353a12 = 0x0; _0x353a12 < 0xc; _0x353a12++)
										this["targets"]["push"](Phaser["Geom"]["Circle"]["Random"](this["circle"]));
									super["Fire"]();
								}
							}
							["Update"](_0x50c0c7) {
								var _0x16bcad = _0x5d9431;
								super["Update"](_0x50c0c7),
									(this["totalTime"] += _0x50c0c7),
									(this["angleTime"] += _0x50c0c7);
								var _0x4b573a = _0x2164b8["Core"]["Player"]["flipX"] ? -0x18 : 0x18;
								Phaser["Math"]["Distance"]["Squared"](
									this["sprite"]["x"],
									this["sprite"]["y"],
									_0x2164b8["Core"]["Player"]["x"] + _0x4b573a,
									_0x2164b8["Core"]["Player"]["y"]
								) > 0x1388
									? ((this["_currentDirection"]["x"] =
											_0x2164b8["Core"]["Player"]["x"] + _0x4b573a - this["sprite"]["x"]),
									  (this["_currentDirection"]["y"] =
											_0x2164b8["Core"]["Player"]["y"] - 0x18 - this["sprite"]["y"]),
									  this["_currentDirection"]["normalize"](),
									  this["sprite"]["setFlipX"](this["_currentDirection"]["x"] < 0x0),
									  this["sprite"]["setVelocity"](
											this["runSpeed"] *
												this["_currentDirection"]["x"] *
												_0x2164b8["Core"]["Player"]["moveSpeed"],
											this["runSpeed"] *
												this["_currentDirection"]["y"] *
												_0x2164b8["Core"]["Player"]["moveSpeed"]
									  ))
									: this["sprite"]["setVelocity"](
											0x23 * this["_currentDirection"]["x"],
											0x23 * this["_currentDirection"]["y"]
									  );
								var _0xdce3d0 = 0.001 * (this["angleTime"] - this["rayDuration"]) * this["PSpeed"];
								(this["targetZone"]["x"] =
									_0x2164b8["Core"]["Player"]["x"] +
									Math["cos"](-_0xdce3d0) * this["damageZoneDistance"]),
									(this["targetZone"]["y"] =
										_0x2164b8["Core"]["Player"]["y"] +
										Math["sin"](-_0xdce3d0) * this["damageZoneDistance"]),
									(_0xdce3d0 = 0.001 * this["angleTime"] * this["PSpeed"]),
									(this["damageZone"]["x"] =
										_0x2164b8["Core"]["Player"]["x"] +
										Math["cos"](-_0xdce3d0) * this["damageZoneDistance"]),
									(this["damageZone"]["y"] =
										_0x2164b8["Core"]["Player"]["y"] +
										Math["sin"](-_0xdce3d0) * this["damageZoneDistance"]),
									this["totalTime"] >= this["PDuration"]
										? ((this["totalTime"] =
												-this["PDuration"] *
												this["delayBasedOnDuration"] *
												_0x2164b8["Core"]["Player"]["cooldown"]),
										  (this["blockFire"] = !0x0),
										  (this["targetZone"]["alpha"] = 0.1))
										: this["totalTime"] > 0x0 &&
										  ((this["blockFire"] = !0x1), (this["targetZone"]["alpha"] = 0.5));
							}
							["CleanUp"]() {
								var _0x33404c = _0x5d9431;
								super["CleanUp"](),
									this["sprite"]["setVisible"](!0x1),
									this["damageZone"]["setVisible"](!0x1),
									this["targetZone"]["setVisible"](!0x1);
							}
						},
						_0x56de09 = class extends _0x31ad0d {
							constructor(_0x2c9a59) {
								var _0x1a5231 = _0x5d9431;
								super(_0x2c9a59),
									(this["chance"] = 0.1),
									(this["scene"] = _0x2164b8["Core"]["scene"]),
									(this["graphics_Bad"] = _0x2164b8["Core"]["scene"]["add"]
										["graphics"]()
										["fillStyle"](0x550044, 0.5)
										["fillCircle"](0x0, 0x0, 0x7)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
										["setVisible"](!0x1)
										["setPosition"](
											0.5 * this["scene"]["renderer"]["width"],
											0.5 * this["scene"]["renderer"]["height"]
										)
										["setDepth"](_0x1fa5bb["ZDamageNumber"] + 0x1)),
									(this["graphics_Good"] = _0x2164b8["Core"]["scene"]["add"]
										["graphics"]()
										["fillStyle"](0xee, 0.35)
										["fillCircle"](0x0, 0x0, 0x7)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
										["setVisible"](!0x1)
										["setPosition"](
											0.5 * this["scene"]["renderer"]["width"],
											0.5 * this["scene"]["renderer"]["height"]
										)
										["setDepth"](_0x1fa5bb["ZDamageNumber"] + 0x1)),
									(this["rt"] = _0x2164b8["Core"]["scene"]["make"]["renderTexture"]({
										x: -0x2710,
										y: -0x2710,
										width: this["scene"]["renderer"]["width"],
										height: this["scene"]["renderer"]["height"],
									})),
									this["rt"]["setOrigin"](0.5),
									this["rt"]["saveTexture"]("rt_pentagram"),
									(this["canvas"] = this["scene"]["add"]["rexShatterImage"](
										0x0,
										0x0,
										"rt_pentagram"
									)),
									this["canvas"]["setDepth"](_0x1fa5bb["ZDamageNumber"] + 0x6),
									(this["outline"] = new Phaser["GameObjects"]["Image"](
										this["scene"],
										0x0,
										0x0,
										"vfx",
										"outer0.png"
									)
										["setOrigin"](0.5)
										["setPosition"](
											0.5 * this["scene"]["renderer"]["width"],
											0.5 * this["scene"]["renderer"]["height"]
										)
										["setDepth"](_0x1fa5bb["ZDamageNumber"] + 0x2)),
									(this["center"] = new Phaser["GameObjects"]["Image"](
										this["scene"],
										0x0,
										0x0,
										"vfx",
										"center.png"
									)
										["setOrigin"](0.5)
										["setPosition"](
											0.5 * this["scene"]["renderer"]["width"],
											0.5 * this["scene"]["renderer"]["height"]
										)
										["setDepth"](_0x1fa5bb["ZDamageNumber"] + 0x3)),
									(this["inner"] = new Phaser["GameObjects"]["Image"](
										this["scene"],
										0x0,
										0x0,
										"vfx",
										"inner1.png"
									)
										["setOrigin"](0.5)
										["setPosition"](
											0.5 * this["scene"]["renderer"]["width"],
											0.5 * this["scene"]["renderer"]["height"]
										)
										["setDepth"](_0x1fa5bb["ZDamageNumber"] + 0x4)),
									(this["outer"] = new Phaser["GameObjects"]["Image"](
										this["scene"],
										0x0,
										0x0,
										"vfx",
										"outer1.png"
									)
										["setOrigin"](0.5)
										["setPosition"](
											0.5 * this["scene"]["renderer"]["width"],
											0.5 * this["scene"]["renderer"]["height"]
										)
										["setDepth"](_0x1fa5bb["ZDamageNumber"] + 0x5)),
									(this["whiteDot"] = this["scene"]["add"]
										["sprite"](0x0, 0x0, "vfx", "WhiteDot.png")
										["setScrollFactor"](0x0)
										["setScale"](
											this["scene"]["renderer"]["width"],
											this["scene"]["renderer"]["height"]
										)
										["setAlpha"](0x0)
										["setOrigin"](0x0)
										["setDepth"](0x1388));
							}
							["Fire"]() {
								var _0x38f669 = _0x5d9431;
								this["FireOneBullet"](
									_0x2164b8["Core"]["Player"]["x"],
									_0x2164b8["Core"]["Player"]["y"],
									0x0,
									this["target"]
								),
									this["whiteDot"]["setAlpha"](0x0)["setTint"](0xffffff),
									this["whiteTween"] && (this["whiteTween"]["stop"](), (this["whiteTween"] = null)),
									this["blackTween"] && (this["blackTween"]["stop"](), (this["blackTween"] = null)),
									_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] &&
										((this["whiteTween"] = this["scene"]["tweens"]["add"]({
											targets: this["whiteDot"],
											alpha: 0.5,
											duration: 0x64,
											yoyo: !0x0,
											ease: "Linear",
										})),
										(this["blackTween"] = this["scene"]["tweens"]["add"]({
											targets: this["whiteDot"],
											tint: 0x0,
											duration: 0x32,
											yoyo: !0x0,
											ease: "Linear",
										})));
							}
							["LevelUp"]() {
								var _0x724d51 = _0x5d9431;
								let _0x2f6a35 = super["LevelUp"]();
								if ((this["whiteDot"]["setAlpha"](0x0)["setTint"](0xffffff), _0x2f6a35))
									switch (this["level"]) {
										case 0x3:
											this["outer"]["setTexture"]("vfx", "outer2.png");
											break;
										case 0x4:
											this["inner"]["setTexture"]("vfx", "inner2.png");
											break;
										case 0x6:
											this["outer"]["setTexture"]("vfx", "outer3.png");
											break;
										case 0x7:
											this["inner"]["setTexture"]("vfx", "inner3.png");
									}
								return _0x2f6a35;
							}
							["MakeLevelOne"]() {
								var _0xe8a207 = _0x5d9431;
								super["MakeLevelOne"](),
									_0x2164b8["Core"]["scene"]["time"]["addEvent"]({
										callback: () => {
											this["Fire"]();
										},
										delay: 0x64,
									});
							}
						},
						_0x4e144 = class extends _0x31ad0d {
							constructor(_0x41f00d) {
								super(_0x41f00d);
							}
							["onBulletOverlapsEnemy"](_0x48368b, _0x42bf66) {
								var _0x35a495 = _0x5d9431,
									_0x23ca2a = _0x42bf66;
								if (_0x23ca2a["isDead"]) return;
								let _0x6b9bc1 =
									Math["random"]() < this["critChance"] * _0x2164b8["Core"]["Player"]["luck"]
										? this["critMul"]
										: 0x1;
								if (!_0x48368b["HasAlreadyHitObject"](_0x23ca2a)) {
									let _0x3108b3 = this["PPower"] * _0x6b9bc1;
									_0x23ca2a["GetDamaged"](_0x3108b3, this["hitVFX"], this["knockback"]),
										(this["stats_inflictedDamage"] += _0x3108b3);
								}
							}
						},
						_0x17d6f4 = class extends _0x31ad0d {
							constructor(_0x4fffc0) {
								var _0x14e34f = _0x5d9431;
								super(_0x4fffc0), (this["canHeal"] = !0x0), (this["healDelay"] = 0x3e8);
							}
							["onBulletOverlapsEnemy"](_0x5aac20, _0x508c3f) {
								var _0x5bedeb = _0x5d9431,
									_0x2b5b9 = _0x508c3f;
								if (_0x2b5b9["isDead"]) return;
								let _0x47870c =
									Math["random"]() < this["critChance"] * _0x2164b8["Core"]["Player"]["luck"]
										? this["critMul"]
										: 0x1;
								if (
									(_0x47870c > 0x1 &&
										this["canHeal"] &&
										((this["canHeal"] = !0x1),
										_0x2164b8["Core"]["Player"]["RecoverHp"](0x8),
										_0x2164b8["Core"]["ShowRecoveryAt"](
											_0x2164b8["Core"]["Player"]["x"],
											_0x2164b8["Core"]["Player"]["y"],
											0x8
										),
										(this["healTimer"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
											delay: this["healDelay"],
											loop: !0x1,
											callback: () => {
												this["canHeal"] = !0x0;
											},
										}))),
									!_0x5aac20["HasAlreadyHitObject"](_0x2b5b9))
								) {
									let _0x594502 = this["PPower"] * _0x47870c;
									_0x2b5b9["GetDamaged"](_0x594502, this["hitVFX"], this["knockback"]),
										(this["stats_inflictedDamage"] += _0x594502);
								}
							}
						},
						_0x2fb327 = class extends _0x31ad0d {
							constructor(_0x5d0078) {
								var _0xa876ab = _0x5d9431;
								super(_0x5d0078),
									(this["targets"] = new Array()),
									(this["damageZoneDistance"] = 0x96),
									(this["totalTime"] = 0x0),
									(this["enemyIndex"] = 0x0),
									(this["damageZoneDefaultRadius"] = 0x4b),
									(this["blockFire"] = !0x1),
									(this["angleTime"] = 0x0),
									(this["delayBasedOnDuration"] = 0x1),
									(this["rayDuration"] = 0x190),
									(this["_currentDirection"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
									(this["runSpeed"] = _0x1fa5bb["PlayerPxSpeed"]),
									(this["damageZoneDistance"] = _0xe0047c ? _0x490bcb : _0x170004),
									(this["damageZoneDistance"] *= 0.5),
									(this["damageZoneDefaultRadius"] = 0.25 * this["damageZoneDistance"]),
									(this["damageZoneDistance"] -= this["damageZoneDefaultRadius"]),
									(this["damageZone"] = _0x2164b8["Core"]["scene"]["add"]
										["circle"](0x0, 0x0, this["damageZoneDefaultRadius"])
										["setStrokeStyle"](0x2, 0xffff00)
										["setVisible"](!0x1)),
									(this["targetZone"] = _0x2164b8["Core"]["scene"]["add"]
										["circle"](0x0, 0x0, this["damageZoneDefaultRadius"])
										["setStrokeStyle"](0x1, 0xffffff)
										["setAlpha"](0.5)),
									(this["damageZone2"] = _0x2164b8["Core"]["scene"]["add"]
										["circle"](0x0, 0x0, this["damageZoneDefaultRadius"])
										["setStrokeStyle"](0x2, 0xffff00)
										["setVisible"](!0x1)),
									(this["targetZone2"] = _0x2164b8["Core"]["scene"]["add"]
										["circle"](0x0, 0x0, this["damageZoneDefaultRadius"])
										["setStrokeStyle"](0x1, 0xffffff)
										["setAlpha"](0.5)),
									(this["circle"] = new Phaser["Geom"]["Circle"](
										0x0,
										0x0,
										this["damageZoneDefaultRadius"]
									)),
									(this["sprite"] = new Phaser["Physics"]["Arcade"]["Sprite"](
										_0x2164b8["Core"]["scene"],
										_0x2164b8["Core"]["Player"]["x"],
										_0x2164b8["Core"]["Player"]["y"],
										"vfx",
										"ProjectileBird2.png"
									)),
									_0x2164b8["Core"]["scene"]["add"]["existing"](this["sprite"]),
									_0x2164b8["Core"]["scene"]["physics"]["add"]["existing"](this["sprite"]);
								const _0x5fa6d5 = this["sprite"]["anims"]["generateFrameNames"]("vfx", {
									start: 0x7,
									end: 0x8,
									zeroPad: 0x0,
									prefix: "ProjectileBird",
									suffix: ".png",
								});
								this["sprite"]["anims"]["create"]({
									key: "idle",
									frames: _0x5fa6d5,
									frameRate: 0x6,
									repeat: -0x1,
								}),
								!global["anims_disabled"].value ? this["sprite"]["anims"]["play"]("idle") : '',
									this["sprite"]["setDepth"](Number["MAX_SAFE_INTEGER"] - 0x3e7);
							}
							["Fire"]() {
								var _0x4b772d = _0x5d9431;
								if (!this["blockFire"]) {
									(this["repeatInterval"] = this["interval"] / this["PAmount"]),
										(this["damageZone"]["radius"] = this["damageZoneDefaultRadius"]),
										(this["damageZone2"]["radius"] = this["damageZoneDefaultRadius"]),
										(this["targets"] = []),
										(this["circle"]["x"] = this["damageZone"]["x"]),
										(this["circle"]["y"] = this["damageZone"]["y"]),
										(this["circle"]["radius"] = this["damageZone"]["radius"]);
									for (let _0x4341ed = 0x0; _0x4341ed < 0xc; _0x4341ed++)
										this["targets"]["push"](Phaser["Geom"]["Circle"]["Random"](this["circle"]));
									(this["circle"]["x"] = this["damageZone2"]["x"]),
										(this["circle"]["y"] = this["damageZone2"]["y"]),
										(this["circle"]["radius"] = this["damageZone2"]["radius"]);
									for (let _0x482248 = 0x0; _0x482248 < 0xc; _0x482248++)
										this["targets"]["push"](Phaser["Geom"]["Circle"]["Random"](this["circle"]));
									super["Fire"]();
								}
							}
							["Update"](_0x1874c6) {
								var _0x538ae1 = _0x5d9431;
								super["Update"](_0x1874c6),
									(this["totalTime"] += _0x1874c6),
									(this["angleTime"] += _0x1874c6);
								var _0x9369e2 = _0x2164b8["Core"]["Player"]["flipX"] ? 0x18 : -0x18;
								Phaser["Math"]["Distance"]["Squared"](
									this["sprite"]["x"],
									this["sprite"]["y"],
									_0x2164b8["Core"]["Player"]["x"] + _0x9369e2,
									_0x2164b8["Core"]["Player"]["y"]
								) > 0x1388
									? ((this["_currentDirection"]["x"] =
											_0x2164b8["Core"]["Player"]["x"] + _0x9369e2 - this["sprite"]["x"]),
									  (this["_currentDirection"]["y"] =
											_0x2164b8["Core"]["Player"]["y"] - 0x18 - this["sprite"]["y"]),
									  this["_currentDirection"]["normalize"](),
									  this["sprite"]["setFlipX"](this["_currentDirection"]["x"] < 0x0),
									  this["sprite"]["setVelocity"](
											this["runSpeed"] *
												this["_currentDirection"]["x"] *
												_0x2164b8["Core"]["Player"]["moveSpeed"],
											this["runSpeed"] *
												this["_currentDirection"]["y"] *
												_0x2164b8["Core"]["Player"]["moveSpeed"]
									  ))
									: this["sprite"]["setVelocity"](
											0x23 * this["_currentDirection"]["x"],
											0x23 * this["_currentDirection"]["y"]
									  );
								var _0x3d959b = 0.001 * (this["angleTime"] - this["rayDuration"]) * this["PSpeed"];
								(this["targetZone"]["x"] =
									_0x2164b8["Core"]["Player"]["x"] +
									Math["cos"](_0x3d959b) * this["damageZoneDistance"]),
									(this["targetZone"]["y"] =
										_0x2164b8["Core"]["Player"]["y"] +
										Math["sin"](_0x3d959b) * this["damageZoneDistance"]),
									(this["targetZone2"]["x"] =
										_0x2164b8["Core"]["Player"]["x"] +
										Math["cos"](-_0x3d959b) * this["damageZoneDistance"]),
									(this["targetZone2"]["y"] =
										_0x2164b8["Core"]["Player"]["y"] +
										Math["sin"](-_0x3d959b) * this["damageZoneDistance"]),
									(_0x3d959b = 0.001 * this["angleTime"] * this["PSpeed"]),
									(this["damageZone"]["x"] =
										_0x2164b8["Core"]["Player"]["x"] +
										Math["cos"](_0x3d959b) * this["damageZoneDistance"]),
									(this["damageZone"]["y"] =
										_0x2164b8["Core"]["Player"]["y"] +
										Math["sin"](_0x3d959b) * this["damageZoneDistance"]),
									(this["damageZone2"]["x"] =
										_0x2164b8["Core"]["Player"]["x"] +
										Math["cos"](-_0x3d959b) * this["damageZoneDistance"]),
									(this["damageZone2"]["y"] =
										_0x2164b8["Core"]["Player"]["y"] +
										Math["sin"](-_0x3d959b) * this["damageZoneDistance"]),
									this["totalTime"] >= this["PDuration"]
										? ((this["totalTime"] =
												-this["PDuration"] *
												(this["interval"] / 0x3e8) *
												_0x2164b8["Core"]["Player"]["cooldown"]),
										  (this["blockFire"] = !0x0),
										  (this["targetZone"]["alpha"] = 0.1),
										  (this["targetZone2"]["alpha"] = 0.1))
										: this["totalTime"] > 0x0 &&
										  ((this["blockFire"] = !0x1),
										  (this["targetZone"]["alpha"] = 0.5),
										  (this["targetZone2"]["alpha"] = 0.5));
							}
						},
						_0x2639cb = class extends _0x31ad0d {
							constructor(_0x20f402) {
								super(_0x20f402);
							}
						},
						_0x7c57d4 = class extends _0x31ad0d {
							constructor(_0x263fcf) {
								var _0x50e701 = _0x5d9431;
								super(_0x263fcf),
									(this["recoveredHP"] = 0x0),
									(this["recoveredCalculated"] = 0x0),
									(this["lastArea"] = 0x0),
									(this["imageScale"] = 0x24 / 0x100),
									(this["imageBG"] = _0x2164b8["Core"]["scene"]["add"]["image"](
										0x0,
										0x0,
										"vfx",
										"circle.png"
									)),
									this["imageBG"]["setBlendMode"](_0x1cb257["BlendModes"]["NORMAL"]),
									this["imageBG"]["setAlpha"](0.6),
									this["imageBG"]["setTint"](0x0),
									this["imageBG"]
										["copyPosition"](_0x2164b8["Core"]["Player"])
										["setScale"](
											0x2 * _0x1fa5bb["PixelScale"] * this["PArea"] * this["imageScale"]
										),
									(this["image"] = _0x2164b8["Core"]["scene"]["add"]["image"](
										0x0,
										0x0,
										"vfx",
										"circle.png"
									)),
									this["image"]["setBlendMode"](_0x1cb257["BlendModes"]["NORMAL"]),
									this["image"]["setAlpha"](0.1),
									this["image"]["setTint"](0x0),
									this["image"]
										["copyPosition"](_0x2164b8["Core"]["Player"])
										["setScale"](
											0x2 * _0x1fa5bb["PixelScale"] * this["PArea"] * this["imageScale"]
										),
									(this["imageTween"] = _0x2164b8["Core"]["scene"]["add"]["tween"]({
										targets: this["image"],
										alpha: 0.6,
										loop: !0x0,
										yoyo: !0x0,
										loopDelay: 0x64,
										duration: 0x3e8,
										ease: "Linear",
										repeat: -0x1,
									})),
									(this["imageTween2"] = _0x2164b8["Core"]["scene"]["add"]["tween"]({
										targets: this["image"],
										scale: 0x0,
										loop: !0x0,
										duration: 0x1770,
										ease: "Linear",
										repeat: -0x1,
									})),
									(this["recoveredCalculated"] = 0x0),
									(this["recoveredHP"] = 0x0),
									(_0x2164b8["Core"]["Player"]["onHPRecoveryCallback"] = (_0x570bbe) => {
										var _0x3d9b77 = _0x50e701;
										this["recoveredHP"] += _0x570bbe;
									}),
									(this["lastArea"] = this["PArea"]),
									(this["particlesManager"] = _0x2164b8["Core"]["scene"]["add"]["particles"]("vfx")),
									(this["shape1"] = new Phaser["Geom"]["Circle"](0x0, 0x0, 0x3c)),
									(this["pfxEmitter"] = this["particlesManager"]["createEmitter"]({
										frame: {
											frames: ["PfxColor2.png"],
											cycle: !0x0,
										},
										x: 0x0,
										y: 0x0,
										lifespan: 0x1f4,
										speed: 0x0,
										scale: {
											start: 0x1,
											end: 0x0,
										},
										on: !0x1,
										quantity: 0x1,
										alpha: 0.2,
										blendMode: "ADD",
										rotate: {
											start: 0x0,
											end: 0x168,
											ease: "Bounce.easeOut",
										},
										emitZone: {
											type: "random",
											source: this["shape1"],
										},
									})),
									(this["well"] = this["particlesManager"]["createGravityWell"]({
										x: 0x0,
										y: 0x0,
										power: 0.51,
										epsilon: 0x14,
										gravity: 0x32,
									}));
							}
							get ["PAmount"]() {
								return 0x1;
							}
							get ["PPower"]() {
								var _0x5a1b49 = _0x5d9431;
								return (
									_0x2164b8["Core"]["Player"]["power"] * this["power"] + this["recoveredCalculated"]
								);
							}
							["Fire"]() {
								var _0xf9bc45 = _0x5d9431;
								return (
									(this["recoveredCalculated"] = Math["min"](0x6, this["recoveredHP"] / 0x258)),
									this["PArea"] != this["lastArea"] &&
										((this["lastArea"] = this["PArea"]),
										this["imageTween2"]["stop"](),
										(this["imageTween2"] = null),
										this["image"]["setScale"](
											0x2 * _0x1fa5bb["PixelScale"] * this["PArea"] * this["imageScale"]
										),
										this["imageBG"]["setScale"](
											0x2 * _0x1fa5bb["PixelScale"] * this["PArea"] * this["imageScale"]
										),
										(this["imageTween2"] = _0x2164b8["Core"]["scene"]["add"]["tween"]({
											targets: this["image"],
											scale: 0x0,
											loop: !0x0,
											duration: 0x1770,
											ease: "Linear",
											repeat: -0x1,
										})),
										(this["shape1"]["radius"] = 0x10 * this["PArea"] * 0x2)),
									super["Fire"]()
								);
							}
							["Update"](_0x486826) {
								var _0x20949a = _0x5d9431;
								super["Update"](_0x486826),
									this["image"]["copyPosition"](_0x2164b8["Core"]["Player"]),
									this["imageBG"]["copyPosition"](_0x2164b8["Core"]["Player"]),
									this["image"]["setDepth"](
										_0x2164b8["Core"]["Player"]["depth"] -
											0.5 * _0x2164b8["Core"]["scene"]["renderer"]["height"]
									),
									this["imageBG"]["setDepth"](
										_0x2164b8["Core"]["Player"]["depth"] -
											0.5 * _0x2164b8["Core"]["scene"]["renderer"]["height"]
									),
									this["pfxEmitter"]["emitParticleAt"](this["image"]["x"], this["image"]["y"]),
									(this["well"]["x"] = this["image"]["x"]),
									(this["well"]["y"] = this["image"]["y"]);
							}
							["CleanUp"]() {
								var _0x532192 = _0x5d9431;
								super["CleanUp"](),
									this["image"]["setVisible"](!0x1),
									this["image"]["setActive"](!0x1),
									this["image"]["destroy"](),
									this["imageTween"]["stop"](),
									this["imageTween2"]["stop"]();
							}
							["onBulletOverlapsEnemy"](_0x4e4693, _0x2b60bf) {
								var _0x284e62 = _0x5d9431,
									_0x90e0f7 = _0x2b60bf;
								if (
									!_0x90e0f7["isDead"] &&
									!_0x4e4693["HasAlreadyHitObject"](_0x90e0f7) &&
									(_0x90e0f7["GetDamaged"](this["PPower"], this["hitVFX"], this["knockback"]),
									(this["stats_inflictedDamage"] += this["PPower"]),
									_0x90e0f7["isDead"])
								) {
									let _0x1b1c64 = Math["random"]();
									if ((this["PPower"] / 0x7) * 0.15 > _0x1b1c64) {
										let _0x4d75e0 = 0xa * (_0x1b1c64 - 0.5),
											_0x7d3c1e = _0x2164b8["Core"]["MakePickup"](
												_0x90e0f7["x"] + _0x4d75e0,
												_0x90e0f7["y"] - _0x4d75e0,
												_0x3bf2f1["LITTLEHEART"]
											);
										(_0x7d3c1e["goToPlayer"] = !0x0), (_0x7d3c1e["time"] = 0x1);
									}
								}
							}
						},
						_0x2b31f5 = class extends _0x31ad0d {
							constructor(_0x2c98b7) {
								var _0x3af643 = _0x5d9431;
								super(_0x2c98b7),
									(this["targetAngles"] = []),
									(this["targetRadii"] = []),
									(this["lastAngleIndex"] = 0x0),
									(this["maxAngles"] = 0xc),
									(this["lasRadiusIndex"] = 0x0),
									(this["BlitterOneBusy"] = !0x1),
									(this["timesFired"] = 0x0),
									(this["damageDelay"] = 0x12c),
									(this["fadeOutDelay"] = 0x2ee);
								var _0x2c6c8b = 0.5 * _0x170004;
								this["scene"] = _0x2164b8["Core"]["scene"];
								var _0x4564bb = new Phaser["Geom"]["Ellipse"](0x0, 0x0, _0x170004, _0x490bcb);
								this["targetPoints"] = _0x4564bb["getPoints"](0xc);
								for (let _0x458193 = 0x0; _0x458193 < this["maxAngles"]; _0x458193++)
									this["targetAngles"]["push"]((0x2 * Math["PI"] * _0x458193) / this["maxAngles"]),
										this["targetRadii"]["push"](_0x2c6c8b);
								Phaser["Utils"]["Array"]["Shuffle"](this["targetRadii"]);
							}
							["GetTargetPoint"]() {
								var _0xee7bf3 = _0x5d9431,
									_0x3e53c3 = (this["lasRadiusIndex"] + 0x1) % this["maxAngles"];
								return (this["lasRadiusIndex"] = _0x3e53c3), this["targetPoints"][_0x3e53c3];
							}
							["LevelUp"]() {
								var _0x37fa74 = _0x5d9431;
								return Phaser["Utils"]["Array"]["Shuffle"](this["targetRadii"]), super["LevelUp"]();
							}
							["Fire"]() {
								super["Fire"]();
							}
						},
						_0x880ec = class extends _0x31ad0d {
							constructor(_0x29f885) {
								var _0x37a420 = _0x5d9431;
								super(_0x29f885),
									(this["ScreenRectangle"] = new Phaser["Geom"]["Rectangle"](
										0x0,
										0x0,
										_0x2164b8["Core"]["scene"]["renderer"]["width"],
										_0x2164b8["Core"]["scene"]["renderer"]["height"]
									));
							}
						},
						_0x3d186e = class extends _0x31ad0d {
							constructor(_0xc6db4b) {
								var _0x2c13c3 = _0x5d9431;
								super(_0xc6db4b), (this["_coinRT"] = new Array()), (this["_coinSprites"] = new Array());
								const _0x326cf1 = [0x1e, 0x14, 0x18, 0xe];
								for (let _0x5b7d96 = 0x0; _0x5b7d96 < 0x1; _0x5b7d96++) {
									var _0x433882 = _0x2164b8["Core"]["scene"]["make"]["renderTexture"]({
										x: -Number["MAX_SAFE_INTEGER"],
										y: -Number["MAX_SAFE_INTEGER"],
										width: 0x10,
										height: 0x10,
									});
									_0x433882["saveTexture"]("cherryBomb" + _0x5b7d96),
										this["_coinRT"]["push"](_0x433882);
								}
								var _0x344598 = new Array();
								for (let _0x3f873b = 0x0; _0x3f873b < 0x14; _0x3f873b++) {
									var _0x4c44ff = "leaf" + String(_0x3f873b)["padStart"](0x4, "0") + ".png";
									_0x344598["push"]({
										key: "vfx",
										frame: _0x4c44ff,
									});
								}
								for (let _0x3d6e95 = 0x0; _0x3d6e95 < 0x1; _0x3d6e95++) {
									var _0x4442f0 = _0x2164b8["Core"]["scene"]["add"]
										["sprite"](-Number["MAX_SAFE_INTEGER"], -Number["MAX_SAFE_INTEGER"], "vfx", "")
										["setOrigin"](0x0);
									_0x4442f0["anims"]["create"]({
										key: "spin",
										frames: _0x344598,
										frameRate: _0x326cf1[_0x3d6e95 % 0x4],
										repeat: -0x1,
									}),
									!global["anims_disabled"].value ? _0x4442f0["anims"]["play"]("spin") : '',
										this["_coinSprites"]["push"](_0x4442f0);
								}
							}
							["Update"](_0x80db83) {
								var _0x234925 = _0x5d9431;
								super["Update"](_0x80db83);
								for (let _0x3f600f = 0x0; _0x3f600f < this["_coinRT"]["length"]; _0x3f600f++) {
									const _0x39f17f = this["_coinRT"][_0x3f600f];
									_0x39f17f["clear"](), _0x39f17f["draw"](this["_coinSprites"][_0x3f600f], 0x0, 0x0);
								}
							}
						};
					class _0x262b32 {
						["GetWeapon"](_0x1ce8e9) {
							var _0x2c0890 = _0x5d9431;
							let _0x1cf15b;
							if (
								(void 0x0 === _0x41a274[_0x1ce8e9] && (_0x1ce8e9 = _0x5324b3["WHIP"]),
								_0x41a274[_0x1ce8e9][0x0]["isPowerUp"])
							)
								_0x1cf15b = new _0x214e6a(_0x1ce8e9);
							else
								switch (_0x1ce8e9) {
									default:
									case _0x5324b3["AXE"]:
										_0x1cf15b = new _0x1a8046(_0x1ce8e9);
										break;
									case _0x5324b3["SCYTHE"]:
										_0x1cf15b = new _0x4843c5(_0x1ce8e9);
										break;
									case _0x5324b3["MAGIC_MISSILE"]:
										_0x1cf15b = new _0x3e9e05(_0x1ce8e9);
										break;
									case _0x5324b3["HOLY_MISSILE"]:
										_0x1cf15b = new _0x248ca2(_0x1ce8e9);
										break;
									case _0x5324b3["WHIP"]:
										_0x1cf15b = new _0x38e3bb(_0x1ce8e9);
										break;
									case _0x5324b3["DIAMOND"]:
										_0x1cf15b = new _0x33a90b(_0x1ce8e9);
										break;
									case _0x5324b3["HOLYWATER"]:
										_0x1cf15b = new _0x19a344(_0x1ce8e9);
										break;
									case _0x5324b3["FIREBALL"]:
										_0x1cf15b = new _0x10a1c8(_0x1ce8e9);
										break;
									case _0x5324b3["KNIFE"]:
									case _0x5324b3["THOUSAND"]:
										_0x1cf15b = new _0x563c54(_0x1ce8e9);
										break;
									case _0x5324b3["HOLYBOOK"]:
										_0x1cf15b = new _0x18fbe1(_0x1ce8e9);
										break;
									case _0x5324b3["VESPERS"]:
										_0x1cf15b = new _0x4c4fa5(_0x1ce8e9);
										break;
									case _0x5324b3["CROSS"]:
										_0x1cf15b = new _0xc538fd(_0x1ce8e9);
										break;
									case _0x5324b3["LIGHTNING"]:
										_0x1cf15b = new _0x3a4214(_0x1ce8e9);
										break;
									case _0x5324b3["GARLIC"]:
										_0x1cf15b = new _0x1c7881(_0x1ce8e9);
										break;
									case _0x5324b3["LANCET"]:
										_0x1cf15b = new _0x27f277(_0x1ce8e9);
										break;
									case _0x5324b3["LAUREL"]:
										_0x1cf15b = new _0x45c93b(_0x1ce8e9);
										break;
									case _0x5324b3["THORNS"]:
										_0x1cf15b = new _0x12acf3(_0x1ce8e9);
										break;
									case _0x5324b3["BONE"]:
										_0x1cf15b = new _0x5af7f2(_0x1ce8e9);
										break;
									case _0x5324b3["HELLFIRE"]:
										_0x1cf15b = new _0x4bd5ce(_0x1ce8e9);
										break;
									case _0x5324b3["SILF"]:
										_0x1cf15b = new _0x29c5b0(_0x1ce8e9);
										break;
									case _0x5324b3["SILF2"]:
										_0x1cf15b = new _0x9ac4b0(_0x1ce8e9);
										break;
									case _0x5324b3["SILF3"]:
										_0x1cf15b = new _0x2fb327(_0x1ce8e9);
										break;
									case _0x5324b3["PENTAGRAM"]:
										_0x1cf15b = new _0x56de09(_0x1ce8e9);
										break;
									case _0x5324b3["HEAVENSWORD"]:
										_0x1cf15b = new _0x4e144(_0x1ce8e9);
										break;
									case _0x5324b3["VAMPIRICA"]:
										_0x1cf15b = new _0x17d6f4(_0x1ce8e9);
										break;
									case _0x5324b3["NDUJA"]:
										_0x1cf15b = new _0x2639cb(_0x1ce8e9);
										break;
									case _0x5324b3["VORTEX"]:
										_0x1cf15b = new _0x7c57d4(_0x1ce8e9);
										break;
									case _0x5324b3["BORA"]:
										_0x1cf15b = new _0x2b31f5(_0x1ce8e9);
										break;
									case _0x5324b3["LOOP"]:
										_0x1cf15b = new _0x880ec(_0x1ce8e9);
										break;
									case _0x5324b3["CHERRY"]:
										_0x1cf15b = new _0x3d186e(_0x1ce8e9);
								}
							return _0x1cf15b;
						}
					}
					class _0x582e28 extends Phaser["Physics"]["Arcade"]["Sprite"] {
						constructor(_0x20f90a, _0x23ce46, _0x2ca3e, _0x19c949) {
							var _0x1f0f51 = _0x5d9431;
							super(_0x20f90a["scene"], _0x23ce46, _0x2ca3e, "items", "Brazier1.png"),
								(this["hp"] = 0x1),
								(this["maxHp"] = 0x1),
								(this["isDead"] = !0x1),
								(this["receivingDamage"] = !0x1),
								(this["isTeleportOnCull"] = !0x1),
								(this["owner"] = null),
								(this["scene"] = _0x20f90a["scene"]),
								(this["pool"] = _0x20f90a),
								(this["destructibleType"] = _0x19c949);
							var _0x7d12b7 = _0x2abb02[this["destructibleType"]];
							this["maxHp"] = _0x7d12b7["maxHp"];
							const _0x113a1d = this["anims"]["generateFrameNames"](_0x7d12b7["textureName"], {
								start: 0x1,
								end: 0x3,
								zeroPad: 0x0,
								prefix: _0x7d12b7["frameName"],
								suffix: ".png",
							});
							this["anims"]["create"]({
								key: "idle",
								frames: _0x113a1d,
								frameRate: 0xa,
								repeat: -0x1,
							}),
								this["scene"]["add"]["existing"](this),
								this["scene"]["physics"]["add"]["existing"](this),
								(this["body"]["immovable"] = !0x0),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								this["setOrigin"](0.5, 0x1),
								this["setDepth"](this["y"]),
								this["body"]["setSize"](
									0x2 * this["frame"]["width"],
									0x2 * this["frame"]["height"],
									!0x1
								);
						}
						["OnTeleportOnCull"]() {}
						["Init"]() {
							!global["anims_disabled"].value ? this["anims"]["play"]("idle") : '';
						}
						["OnRecycle"]() {
							var _0x90b1cd = _0x5d9431;
							(this["hp"] = this["maxHp"]),
								(this["isDead"] = !0x1),
								(this["visible"] = !0x0),
								(this["body"]["enable"] = !0x0),
								this["body"]["setCircle"](0x10),
								this["restoreTint"](),
								this["setDepth"](this["y"]);
						}
						["DeSpawn"]() {
							var _0x39f418 = _0x5d9431;
							(this["isDead"] = !0x0),
								this["pool"]["Return"](this),
								(this["body"]["enable"] = !0x1),
								(this["visible"] = !0x1);
						}
						["GetTaken"]() {
							var _0x251a59 = _0x5d9431;
							this["DeSpawn"]();
						}
						["GetDamaged"](_0x49d65e = 0x1) {
							var _0x3dc4f = _0x5d9431;
							this["isDead"] ||
								((this["hp"] -= _0x49d65e),
								this["hp"] <= 0x0 && ((this["isDead"] = !0x0), this["OnDestroyed"]()),
								this["OnGetDamaged"]());
						}
						["OnGetDamaged"]() {
							var _0x614420 = _0x5d9431;
							_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] && this["setTintFill"](0xffffff),
								(this["receivingDamage"] = !0x0),
								(this["_blinkTimeout"] = _0x2164b8["Core"]["scene"]["time"]["addEvent"]({
									delay: 0x78,
									loop: !0x1,
									callback: () => {
										var _0x3a02c7 = _0x614420;
										this["restoreTint"]();
									},
								})),
								(this["_blinkTimeout"]["name"] = "Blink");
						}
						["restoreTint"]() {
							var _0x469bd5 = _0x5d9431;
							this["setTint"](0xffffff),
								(this["receivingDamage"] = !0x1),
								this["hp"] <= 0x0 &&
									(_0x2164b8["Core"]["scene"]["time"]["removeEvent"](this["_blinkTimeout"]),
									this["DeSpawn"]());
						}
						["OnDestroyed"]() {
							var _0x52e710 = _0x5d9431;
							_0x2164b8["Core"]["MakePickup"](
								this["x"],
								this["y"],
								_0x2164b8["Core"]["LootManager"]["GetRandomWeightedItem"]()
							),
								(_0x2abb02[this["destructibleType"]]["destroyedAmount"] += 0x1);
						}
					}
					const _0x5325ee = _0x582e28;
					class _0x346b58 extends Phaser["GameObjects"]["Group"] {
						constructor(_0x6463bc) {
							var _0x4315bb = _0x5d9431;
							super(_0x6463bc),
								(this["stored"] = new Array()),
								(this["spawned"] = new Array()),
								this["Init"]();
						}
						["Init"]() {
							var _0x275834 = _0x5d9431;
							this["scene"]["add"]["existing"](this);
						}
						["SpawnAt"](_0x2341ae, _0x4f6605, _0x543904) {
							var _0xaaffc8 = _0x5d9431;
							const _0x533567 = this["Spawn"](_0x543904);
							return _0x533567["setPosition"](_0x2341ae, _0x4f6605), _0x533567["OnRecycle"](), _0x533567;
						}
						["Spawn"](_0x2bda19) {
							var _0x4e0aa9 = _0x5d9431;
							let _0x16abfb = this["stored"]["pop"]();
							return (
								_0x16abfb || ((_0x16abfb = this["Make"](_0x2bda19)), _0x16abfb["Init"]()),
								this["add"](_0x16abfb, !0x0),
								this["spawned"]["push"](_0x16abfb),
								_0x2164b8["Core"]["Destructibles"]["push"](_0x16abfb),
								_0x16abfb
							);
						}
						["Return"](_0x207348) {
							var _0x5c5cca = _0x5d9431;
							this["remove"](_0x207348, !0x0, !0x1),
								this["spawned"]["splice"](this["spawned"]["indexOf"](_0x207348), 0x1),
								_0x2164b8["Core"]["Destructibles"]["splice"](
									_0x2164b8["Core"]["Destructibles"]["indexOf"](_0x207348),
									0x1
								),
								this["stored"]["push"](_0x207348);
						}
						["Make"](_0x5033f6) {
							return new _0x5325ee(this, 0x0, 0x0, _0x5033f6);
						}
					}
					const _0x155e84 = class {
						constructor() {
							var _0xfee734 = _0x5d9431;
							(this["ExcludedItems"] = new Array()),
								(this["accumulatedWeight"] = 0x0),
								(this["WeightedStore"] = new Array());
						}
						["Init"]() {
							var _0x1f4598 = _0x5d9431;
							this["calculateWeights"]();
						}
						["calculateWeights"]() {
							var _0x452ac1 = _0x5d9431;
							(this["accumulatedWeight"] = 0x0), (this["WeightedStore"] = new Array());
							for (const _0x5c3f77 in _0x171870)
								_0x2164b8["Core"]["Player"]["level"] >= _0x171870[_0x5c3f77]["unlocksAt"] &&
									(_0x171870[_0x5c3f77]["isRare"]
										? (this["accumulatedWeight"] +=
												_0x171870[_0x5c3f77]["rarity"] * _0x2164b8["Core"]["Player"]["luck"])
										: (this["accumulatedWeight"] += _0x171870[_0x5c3f77]["rarity"]),
									_0x171870[_0x5c3f77]["rarity"] > 0x0 &&
										this["WeightedStore"]["push"](
											new _0x493d34(_0x5c3f77, this["accumulatedWeight"])
										));
						}
						["RecalculateLoot"]() {
							this["calculateWeights"]();
						}
						["GetRandomWeightedItem"]() {
							var _0x254b73 = _0x5d9431,
								_0x416aed = Math["random"]() * this["accumulatedWeight"];
							for (let _0x10868a = 0x0; _0x10868a < this["WeightedStore"]["length"]; _0x10868a++) {
								const _0x473dc1 = this["WeightedStore"][_0x10868a];
								if (_0x473dc1["weight"] >= _0x416aed) return _0x473dc1["itemType"];
							}
						}
					};
					class _0x36884f extends Phaser["GameObjects"]["Sprite"] {
						constructor(_0x2b26ca) {
							var _0x466892 = _0x5d9431;
							super(
								_0x2b26ca,
								0.5 * _0x2b26ca["renderer"]["width"],
								0.5 * _0x2b26ca["renderer"]["height"],
								"vfx",
								"Shockwave3.png"
							),
								this["setScrollFactor"](0x0),
								_0x2b26ca["add"]["existing"](this),
								(this["sprite1"] = _0x2b26ca["add"]
									["sprite"](0x0, 0x0, "vfx", "WhiteDot.png")
									["setScrollFactor"](0x0)
									["setScale"](_0x2b26ca["renderer"]["width"], _0x2b26ca["renderer"]["height"])
									["setAlpha"](0x0)
									["setOrigin"](0x0)
									["setTint"](0xff)
									["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])),
								(this["tween1"] = this["scene"]["tweens"]["add"]({
									targets: this["sprite1"],
									alpha: 0.2,
									duration: 0x1f4,
									ease: "Linear",
								})),
								this["scene"]["tweens"]["add"]({
									targets: this["sprite1"],
									alpha: 0x0,
									duration: 0x1f4,
									delay: 0x251c,
									ease: "Linear",
								}),
								this["scene"]["tweens"]["add"]({
									targets: this,
									angle: 0x167,
									duration: 0x3e8,
									yoyo: !0x1,
									repeat: -0x1,
									ease: "Linear",
								}),
								this["scene"]["tweens"]["add"]({
									targets: this,
									alpha: 0x0,
									duration: 0x3e8,
									delay: 0x2328,
									ease: "Linear",
								}),
								this["scene"]["tweens"]["add"]({
									targets: this,
									scale: (1.2 * this["scene"]["renderer"]["height"]) / this["displayHeight"],
									duration: 0xc8,
									ease: "Linear",
								}),
								(this["visible"] = !0x0),
								this["setDepth"](0x3e8)
									["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
									["setTint"](0xff);
						}
						["_dispose"]() {
							var _0xfe7c0a = _0x5d9431;
							this["scene"]["tweens"]["remove"](this["tween1"]),
								this["destroy"](),
								this["sprite1"]["destroy"]();
						}
						["Play"]() {
							var _0x329437 = _0x5d9431;
							this["tween1"]["restart"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Orologion"], {
									volume: 1.8,
									rate: 0x2,
								});
						}
					}
					const _0x5152f9 = _0x36884f;
					class _0x52ef63 {
						constructor(_0x2b7026) {
							var _0x4cb177 = _0x5d9431;
							(this["stored"] = new Array()),
								(this["spawned"] = new Array()),
								(this["scene"] = _0x2b7026);
						}
						["SpawnAt"](_0x454d2d, _0x5940aa, _0x493265) {
							const _0x3464fe = this["Spawn"]();
							return (
								_0x3464fe["setPosition"](_0x454d2d, _0x5940aa),
								_0x3464fe["OnRecycle"](_0x493265),
								_0x3464fe
							);
						}
						["Spawn"]() {
							var _0x2f3206 = _0x5d9431;
							let _0x40117f = this["stored"]["pop"]();
							return (
								_0x40117f || ((_0x40117f = this["Make"]()), _0x40117f["Init"]()),
								this["spawned"]["push"](_0x40117f),
								_0x40117f
							);
						}
						["Return"](_0x20054c) {
							var _0x37b7c2 = _0x5d9431,
								_0x192333 = this["spawned"]["indexOf"](_0x20054c);
							_0x192333 >= 0x0
								? this["spawned"]["splice"](_0x192333, 0x1)
								: console["log"]("HitVFX pool error"),
								this["stored"]["push"](_0x20054c);
						}
						["Make"]() {
							var _0x7cddec = _0x5d9431;
							return new (class {
								constructor(_0x141121, _0x1bac83, _0x20ad3c = 0x0, _0x4167e8 = 0x0) {
									var _0x3ca9ac = a0_0x1be4;
									(this["frameName"] = "item_236.png"),
										(this["isCullable"] = !0x0),
										(this["isTeleportOnCull"] = !0x1),
										(this["owner"] = null),
										(this["scene"] = _0x141121),
										(this["pool"] = _0x1bac83),
										(this["hitSprite"] = this["scene"]["add"]["sprite"](
											_0x20ad3c + 0x8,
											_0x4167e8 - 0x40,
											"vfx",
											"HitStar2.png"
										)),
										(this["impactSprite"] = this["scene"]["add"]["sprite"](
											_0x20ad3c,
											_0x4167e8 - 0x20,
											"vfx",
											"Shockwave3.png"
										)),
										this["hitSprite"]["setScale"](0.25 * _0x1fa5bb["PixelScale"]),
										this["impactSprite"]["setScale"](0.25 * _0x1fa5bb["PixelScale"]),
										(this["tween1"] = this["scene"]["tweens"]["add"]({
											targets: this["hitSprite"],
											scaleX: 0.75 * _0x1fa5bb["PixelScale"],
											scaleY: 1.5 * _0x1fa5bb["PixelScale"],
											angle: 0xb4,
											duration: 0x5a,
											ease: "Linear",
										})),
										(this["tween2"] = this["scene"]["tweens"]["add"]({
											targets: this["impactSprite"],
											scaleX: _0x1fa5bb["PixelScale"],
											scaleY: _0x1fa5bb["PixelScale"],
											duration: 0x5a,
											delay: 0x1e,
											ease: "Linear",
										})),
										this["hitSprite"]["setVisible"](!0x1),
										this["impactSprite"]["setVisible"](!0x1);
								}
								["OnTeleportOnCull"]() {}
								["setPosition"](_0x1abe04, _0x1d8663) {
									var _0x26adb5 = _0x7cddec;
									this["hitSprite"]["setPosition"](_0x1abe04 + 0x2, _0x1d8663 - 0x10),
										this["impactSprite"]["setPosition"](_0x1abe04, _0x1d8663 - 0x8);
								}
								["Init"]() {
									var _0x18850e = _0x7cddec;
									this["hitSprite"]["setVisible"](!0x1), this["impactSprite"]["setVisible"](!0x1);
								}
								["OnRecycle"](_0x17191c = _0xed2036["DEFAULT"]) {
									var _0x2436c1 = _0x7cddec;
									if (
										(this["hitSprite"]
											["setScale"](0.25 * _0x1fa5bb["PixelScale"])
											["setAngle"](0x0)
											["setVisible"](!0x0),
										this["impactSprite"]
											["setScale"](0.25 * _0x1fa5bb["PixelScale"])
											["setAngle"](0x0)
											["setVisible"](!0x0),
										_0x17191c != _0xed2036["NONE"])
									) {
										var _0x20c31e = _0x18ca1e[_0x17191c];
										this["hitSprite"]["setFrame"](_0x20c31e["hitFrameName"]),
											this["impactSprite"]["setFrame"](_0x20c31e["impactFrameName"]);
									}
									this["Play"]();
								}
								["DeSpawn"]() {
									var _0x126c62 = _0x7cddec;
									this["hitSprite"]["setVisible"](!0x1),
										this["impactSprite"]["setVisible"](!0x1),
										this["pool"]["Return"](this);
								}
								["Play"]() {
									var _0x7b8139 = _0x7cddec;
									this["tween1"]["restart"](),
										this["tween2"]["restart"](),
										this["scene"]["time"]["addEvent"]({
											delay: 0x78,
											callback: this["DeSpawn"],
											callbackScope: this,
										});
								}
							})(this["scene"], this);
						}
					}
					class _0x4b0b99 extends Phaser["GameObjects"]["BitmapText"] {
						constructor(_0x20c5db, _0x32e4e1, _0x119568) {
							var _0x4d007a = _0x5d9431;
							super(_0x20c5db["scene"], _0x32e4e1, _0x119568, "damage", ""),
								(this["isCullable"] = !0x0),
								(this["isTeleportOnCull"] = !0x1),
								(this["owner"] = null),
								(this["pool"] = _0x20c5db),
								(this["tween2"] = this["scene"]["tweens"]["add"]({
									targets: this,
									alpha: 0x0,
									scale: _0x1fa5bb["PixelScale"],
									duration: 0x258,
									paused: !0x0,
									onComplete: () => {
										this["DeSpawn"]();
									},
								})),
								this["scene"]["add"]["existing"](this);
						}
						["OnTeleportOnCull"]() {}
						["Init"]() {
							var _0x3aa1da = _0x5d9431;
							this["setDepth"](_0x1fa5bb["ZDamageNumber"]), this["setOrigin"](0.5, 0x1);
						}
						["OnRecycle"](_0x315057 = 0x0, _0xa61850 = 0x0, _0x392f3d = 0x0, _0x41d619 = 0x12c) {
							var _0x1b53d2 = _0x5d9431,
								_0x522ae8,
								_0x69c51e = 0x1 * (Math["random"]() - 0.5);
							let _0x1a1380 = 0xa * (_0x392f3d + _0x69c51e);
							this["setVisible"](!0x0),
								this["setAlpha"](0x1),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								this["setPosition"](_0x315057 + 0x20 * _0x69c51e, _0xa61850 - 0x10),
								this["setText"](_0x1a1380["toFixed"]()),
								this["setTint"](0xffffff),
								_0x392f3d >= 0xa
									? this["setTint"](0xffff00)
									: _0x392f3d >= 0x6
									? this["setTint"](
											Phaser["Display"]["Color"]["GetColor"](0xff, (_0x392f3d / 0xa) * 0xff, 0x80)
									  )
									: _0x392f3d >= 0x3
									? this["setTint"](
											Phaser["Display"]["Color"]["GetColor"](
												0xff,
												(_0x392f3d / 0xa) * 0xff,
												(_0x392f3d / 0x6) * 0x80
											)
									  )
									: _0x392f3d < 0x0 &&
									  (this["setTint"](Phaser["Display"]["Color"]["GetColor"](0x0, 0xff, 0x0)),
									  (_0x392f3d *= -0x1),
									  this["setText"](_0x392f3d["toFixed"]())),
								null === (_0x522ae8 = this["tween1"]) || void 0x0 === _0x522ae8 || _0x522ae8["stop"](),
								(this["tween1"] = this["scene"]["tweens"]["add"]({
									targets: this,
									y: this["y"] - 0xc * Math["random"](),
									scale: 0x2 * _0x1fa5bb["PixelScale"],
									duration: _0x41d619,
									onComplete: () => {
										var _0x4f722c = _0x1b53d2;
										0x12c === _0x41d619
											? (this["tween2"]["resume"](), this["tween2"]["restart"]())
											: (this["setVisible"](!0x1), this["DeSpawn"]());
									},
								}));
						}
						["DeSpawn"]() {
							var _0x1d143b = _0x5d9431;
							this["pool"]["Return"](this);
						}
					}
					const _0x3d5386 = _0x4b0b99;
					class _0x1b47c5 {
						constructor(_0x11e591) {
							var _0x3c7c3c = _0x5d9431;
							(this["stored"] = new Array()),
								(this["spawned"] = new Array()),
								(this["scene"] = _0x11e591);
						}
						["SpawnAt"](_0x24166e, _0x2384c7, _0xcebc17) {
							var _0x1f553e = _0x5d9431;
							let _0x849e3a = 0x12c;
							if (_0xcebc17 > 0x0 && this["spawned"]["length"] > 0x1f4) _0x849e3a = 0x96;
							else {
								if (_0xcebc17 > 0x0 && this["spawned"]["length"] > 0x3e8) return;
							}
							const _0x2a0cde = this["Spawn"]();
							return _0x2a0cde["OnRecycle"](_0x24166e, _0x2384c7, _0xcebc17, _0x849e3a), _0x2a0cde;
						}
						["Spawn"]() {
							var _0x3064f5 = _0x5d9431;
							let _0x5bd233 = this["stored"]["pop"]();
							return (
								_0x5bd233 || ((_0x5bd233 = this["Make"]()), _0x5bd233["Init"]()),
								this["spawned"]["push"](_0x5bd233),
								_0x5bd233
							);
						}
						["Return"](_0x11a4da) {
							var _0x1e9a95 = _0x5d9431,
								_0x3021d5 = this["spawned"]["indexOf"](_0x11a4da);
							_0x3021d5 >= 0x0
								? this["spawned"]["splice"](_0x3021d5, 0x1)
								: console["log"]("DamageNumber pool error"),
								this["stored"]["push"](_0x11a4da);
						}
						["Make"]() {
							return new _0x3d5386(this, 0x0, 0x0);
						}
					}
					class _0x1c5515 {
						constructor(_0x532160) {
							var _0x152bac = _0x5d9431;
							(this["timeOffset"] = 0x0),
								(this["dayCycleDuration"] = 0x384),
								(this["DayColor"] = 0xffffff),
								(this["NightColor"] = 0x444ee),
								(this["RunTimeHue"] = !0x0),
								(this["canScroll"] = !0x0),
								(this["scene"] = _0x532160);
						}
						["MakeBackground"](_0xab658b) {
							var _0x248dcd = _0x5d9431;
							(this["bgtile"] = this["scene"]["add"]["tileSprite"](
								0.5 * this["scene"]["renderer"]["width"],
								0.5 * this["scene"]["renderer"]["height"],
								this["scene"]["renderer"]["width"],
								this["scene"]["renderer"]["height"],
								_0xab658b
							)),
								this["bgtile"]
									["setScale"](_0x1fa5bb["PixelScale"])
									["setScrollFactor"](0x0)
									["setDepth"](Number["NEGATIVE_INFINITY"]);
						}
						["Update"](_0x27f990) {
							var _0x16433f = _0x5d9431;
							this["canScroll"] &&
								((this["bgtile"]["tilePositionX"] =
									_0x1fa5bb["RPixelScale"] * _0x2164b8["Core"]["Player"]["x"]),
								(this["bgtile"]["tilePositionY"] =
									_0x1fa5bb["RPixelScale"] * _0x2164b8["Core"]["Player"]["y"]));
						}
						["DayNightHue"]() {
							var _0x3a5eac = _0x5d9431;
							if (!this["RunTimeHue"]) return;
							let _0x9619dc,
								_0x2df075 =
									Math["floor"](
										(_0x2164b8["Core"]["SurvivedSeconds"] + this["timeOffset"]) /
											this["dayCycleDuration"]
									) %
										0x2 ==
									0x0,
								_0x551187 =
									(_0x2164b8["Core"]["SurvivedSeconds"] + this["timeOffset"]) %
									this["dayCycleDuration"];
							(_0x9619dc = _0x2df075
								? _0x551187 / this["dayCycleDuration"]
								: (this["dayCycleDuration"] - _0x551187) / this["dayCycleDuration"]),
								this["bgtile"]["setTint"](
									_0x38ad94["LerpColor"](this["DayColor"], this["NightColor"], _0x9619dc)
								);
						}
						["ToggleScrolling"](_0x247f94) {
							var _0x16543d = _0x5d9431;
							this["canScroll"] = _0x247f94;
						}
					}
					class _0x856ae4 extends Phaser["Physics"]["Arcade"]["Sprite"] {
						constructor(_0x174227, _0x1208d0, _0x219da9) {
							var _0x4a6f97 = _0x5d9431;
							super(_0x174227["scene"], _0x1208d0, _0x219da9, "vfx", "WhiteDot.png"),
								(this["isCullable"] = !0x1),
								(this["isTeleportOnCull"] = !0x1),
								(this["radius"] = 0x1),
								(this["damage"] = 0x1),
								(this["circleArea"] = new Phaser["Geom"]["Circle"]()),
								(this["pool"] = _0x174227),
								(this["circleArea"] = new Phaser["Geom"]["Circle"]()),
								this["setVisible"](!0x1),
								(this["particlesManager"] = this["scene"]["add"]["particles"]("vfx")),
								(this["pfxEmitter2"] = this["particlesManager"]["createEmitter"]({
									frame: ["Smoke1.png", "Smoke2.png"],
									x: this["x"],
									y: this["y"],
									lifespan: 0x3e8,
									rotate: {
										min: 0x0,
										max: 0x168,
									},
									angle: {
										start: 0x0,
										end: 0xb4,
										steps: 0x10,
									},
									speed: {
										min: 0x64,
										max: 0xc8,
									},
									quantity: 0x4,
									scale: {
										start: 0x1,
										end: 0x0,
									},
									frequency: 0x4,
									alpha: {
										start: 0.5,
										end: 0x0,
									},
									on: !0x1,
								})),
								(this["pfxEmitter"] = this["particlesManager"]["createEmitter"]({
									frame: ["HitSmoke1.png", "HitSmoke2.png"],
									x: this["x"],
									y: this["y"],
									lifespan: 0x3e8,
									rotate: {
										min: 0x0,
										max: 0x168,
									},
									angle: {
										start: 0x0,
										end: 0x168,
										steps: 0x10,
									},
									speed: {
										min: 0x32,
										max: 0x50,
									},
									quantity: 0x4,
									scale: {
										start: 0x1,
										end: 0x0,
									},
									frequency: 0x2,
									blendMode: "ADD",
									on: !0x1,
								})),
								(this["well"] = this["particlesManager"]["createGravityWell"]({
									x: this["x"],
									y: this["y"] - 0x14,
									power: 0x1,
									epsilon: 0x32,
									gravity: 0x14,
								})),
								(this["GroundFx"] = this["scene"]["add"]
									["circle"](0x0, 0x0, 0x1, 0xff0000)
									["setOrigin"](0.5)
									["setAlpha"](0.4)
									["setVisible"](!0x1)
									["setBlendMode"](_0x1cb257["BlendModes"]["ADD"]));
						}
						["OnTeleportOnCull"]() {}
						["setDepthPlease"](_0x5793bb) {
							var _0x2510e1 = _0x5d9431;
							this["setDepth"](_0x5793bb),
								this["GroundFx"]["setDepth"](_0x5793bb),
								this["particlesManager"]["setDepth"](_0x5793bb);
						}
						["OnRecycle"]() {
							var _0x1b4ccf = _0x5d9431;
							this["setActive"](!0x0),
								this["setScale"](this["radius"]),
								(this["circleArea"]["x"] = this["x"]),
								(this["circleArea"]["y"] = this["y"]),
								(this["circleArea"]["radius"] = this["radius"]),
								(this["hasHit"] = !0x1),
								(this["well"]["x"] = this["x"]),
								(this["well"]["y"] = this["y"] - 0x14),
								this["pfxEmitter"]["setPosition"](this["x"], this["y"]),
								this["pfxEmitter"]["start"](),
								this["pfxEmitter2"]["setPosition"](this["x"], this["y"]),
								this["pfxEmitter2"]["start"](),
								_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] &&
									(this["GroundFx"]["setPosition"](this["x"], this["y"])["setVisible"](!0x0)[
										"radius"
									] = 0x1),
								this["despawnTimer"] && (this["despawnTimer"]["stop"](), (this["despawnTimer"] = null)),
								(this["despawnTimer"] = this["scene"]["tweens"]["add"]({
									targets: this["GroundFx"],
									radius: this["radius"],
									duration: 0x78,
									onComplete: () => {
										var _0x214816 = _0x1b4ccf;
										this["DeSpawn"]();
									},
								})),
								_0x2164b8["Sound"]["PlaySound"](
									_0x522ca7["Explosion"],
									{
										volume: 0.5,
										detune: 0x1f4 * (Math["random"]() - 0.5),
									},
									0x96,
									0x3
								);
						}
						["DeSpawn"]() {
							var _0xd5b211 = _0x5d9431;
							this["setActive"](!0x1),
								this["pfxEmitter"]["stop"](),
								this["pfxEmitter2"]["stop"](),
								this["pool"]["Return"](this),
								this["despawnTimer"] && (this["despawnTimer"]["stop"](), (this["despawnTimer"] = null)),
								this["GroundFx"]["setVisible"](!0x1);
						}
						["Init"](_0x3f3fa7 = -0x3e8, _0x174038 = -0x3e8) {
							var _0x54f185 = _0x5d9431;
							this["setPosition"](_0x3f3fa7, _0x174038), this["OnRecycle"]();
						}
						["die"]() {
							var _0x356041 = _0x5d9431;
							this["visible"] = !0x1;
						}
						["Update"](_0x48d6ee = 0x0) {
							var _0x482062 = _0x5d9431;
							this["hasHit"] ||
								(this["circleArea"]["contains"](
									_0x2164b8["Core"]["Player"]["x"],
									_0x2164b8["Core"]["Player"]["y"]
								) &&
									((this["hasHit"] = !0x0),
									_0x2164b8["Core"]["Player"]["GetDamaged"](this["damage"])));
						}
					}
					class _0x1aca76 extends Phaser["GameObjects"]["Group"] {
						constructor(_0x2a2896) {
							var _0x27a0f5 = _0x5d9431;
							super(_0x2a2896),
								(this["stored"] = new Array()),
								(this["spawned"] = new Array()),
								this["Init"]();
						}
						["Init"]() {
							var _0x82b29d = _0x5d9431;
							this["scene"]["add"]["existing"](this);
						}
						["SpawnAt"](_0x334920, _0x23eef4, _0x4324ea = 0x1, _0x576b4d = 0x1) {
							var _0x4a6ad = _0x5d9431;
							const _0x206cb7 = this["Spawn"]();
							return (
								_0x206cb7["setPosition"](_0x334920, _0x23eef4),
								(_0x206cb7["damage"] = _0x4324ea),
								(_0x206cb7["radius"] = _0x576b4d),
								_0x206cb7["setDepthPlease"](_0x23eef4 + 0x1),
								this["scene"]["children"]["add"](_0x206cb7),
								_0x206cb7["OnRecycle"](),
								_0x206cb7
							);
						}
						["Spawn"]() {
							var _0x192c79 = _0x5d9431;
							let _0x4debcf = this["stored"]["pop"]();
							return (
								_0x4debcf || ((_0x4debcf = this["Make"]()), _0x4debcf["Init"]()),
								this["add"](_0x4debcf, !0x0),
								this["spawned"]["push"](_0x4debcf),
								_0x4debcf
							);
						}
						["Return"](_0x33821d) {
							var _0x2ed7ee = _0x5d9431;
							this["scene"]["children"]["remove"](_0x33821d),
								this["remove"](_0x33821d, !0x0, !0x1),
								this["spawned"]["splice"](this["spawned"]["indexOf"](_0x33821d), 0x1),
								_0x2164b8["Core"]["BulletGroup"]["remove"](_0x33821d, !0x1),
								this["stored"]["push"](_0x33821d);
						}
						["Make"]() {
							return new _0x856ae4(this, 0x0, 0x0);
						}
					}
					class _0x3b10bb {
						constructor(_0x1f1b92, _0x48e346) {
							var _0xfd0a03 = _0x5d9431;
							(this["MaxGems"] = 0x190),
								(this["CurrentBGM"] = _0x1e47fc["BGM_Forest"]),
								(this["CurrentFoundItem"] = _0x5324b3["KNIFE"]),
								(this["CurrentTreasureLevel"] = 0x1),
								(this["CurrentTreasureTypes"] = [
									_0x49ae78["EVOLUTION"],
									_0x49ae78["POWERUP"],
									_0x49ae78["POWERUP"],
									_0x49ae78["POWERUP"],
									_0x49ae78["POWERUP"],
								]),
								(this["CurrentFixedTreasures"] = [
									_0x5324b3["HELLFIRE"],
									_0x5324b3["SCYTHE"],
									_0x5324b3["BONE"],
									_0x5324b3["AMOUNT"],
									_0x5324b3["AMOUNT"],
								]),
								(this["PlayerOptions"] = new _0x27669b()),
								(this["WeaponFactory"] = new _0x262b32()),
								(this["LevelUpFactory"] = new _0x13f358()),
								(this["LootManager"] = new _0x155e84()),
								(this["Enemies"] = new Array()),
								(this["Weapons"] = new Array()),
								(this["HiddenWeapons"] = new Array()),
								(this["RemovedWeapons"] = new Array()),
								(this["Destructibles"] = new Array()),
								(this["SurvivedSeconds"] = 0x0),
								(this["MaxDestructibles"] = 0xa),
								(this["baseMarkup"] = 0.1),
								(this["IsTimeStopped"] = !0x1),
								(this["TreasureQueue"] = new Array()),
								(this["isTakingSnapshot"] = !0x1),
								(this["TimeStopConfig"] = {
									delay: 0x2710,
									loop: !0x1,
									callback: () => {
										var _0x20dbdd = _0xfd0a03;
										_0x2164b8["Core"]["ClearTimeStop"]();
									},
								}),
								(this["updateTick"] = 0x0),
								(this["updateFreq"] = 0x4),
								(this["Game"] = _0x1f1b92),
								(this["scene"] = _0x48e346);
						}
						["TakeSnapshot"](_0x58b441) {
							var _0xcc5371 = _0x5d9431;
							if (
								((_0x2164b8["Core"]["SceneManager"]["UI_overlayScene"]["blockInput"] = !0x0),
								(_0x2164b8["Core"]["SceneManager"]["MainScene"]["blockInput"] = !0x0),
								this["isTakingSnapshot"])
							)
								_0x58b441 && _0x58b441();
							else {
								this["isTakingSnapshot"] = !0x0;
								var _0x37ae32 = this["scene"]["textures"];
								try {
									this["scene"]["game"]["renderer"]["snapshotArea"](
										0x0,
										0x0,
										this["scene"]["renderer"]["width"],
										this["scene"]["renderer"]["height"],
										(_0x471fae) => {
											var _0x3848c5 = _0xcc5371;
											_0x37ae32["exists"]("snapshot") && _0x37ae32["remove"]("snapshot"),
												_0x37ae32["addImage"]("snapshot", _0x471fae),
												_0x58b441 && _0x58b441(),
												(this["isTakingSnapshot"] = !0x1);
										}
									);
								} catch (_0x3744b2) {
									window["alert"]("snapshotFrame: " + _0x3744b2),
										_0x58b441 && _0x58b441(),
										(this["isTakingSnapshot"] = !0x1);
								}
							}
						}
						["CleanUp"]() {
							var _0x36f8a8 = _0x5d9431;
							(this["WeaponFactory"] = new _0x262b32()),
								(this["LevelUpFactory"] = new _0x13f358()),
								(this["LootManager"] = new _0x155e84()),
								(this["Enemies"] = new Array()),
								(this["Weapons"] = new Array()),
								(this["HiddenWeapons"] = new Array()),
								(this["RemovedWeapons"] = new Array()),
								(this["Destructibles"] = new Array()),
								(this["TreasureQueue"] = new Array()),
								(this["SurvivedSeconds"] = 0x0),
								(this["IsTimeStopped"] = !0x1),
								(this["PlayerOptions"]["RunCoins"] = 0x0),
								(this["PlayerOptions"]["RunEnemies"] = 0x0),
								(this["PlayerOptions"]["RunPickups"] = new Array()),
								this["EnemyGroup"]["clear"](),
								this["PickupGroup"]["clear"](),
								this["BulletGroup"]["clear"]();
						}
						["InitGame"](_0x11e753, _0xc5a3ff) {
							var _0x4e6e22 = _0x5d9431;
							(this["scene"] = _0x11e753),
								(this["EnemyGroup"] = this["scene"]["add"]["group"]()),
								(this["PickupGroup"] = this["scene"]["add"]["group"]()),
								(this["BulletGroup"] = this["scene"]["add"]["group"]());
							var _0x4131ed = this["scene"]["add"]["group"]();
							(this["EnemyGroup"]["physicsType"] = Phaser["Physics"]["Arcade"]["DYNAMIC_BODY"]),
								(this["PickupGroup"]["physicsType"] = Phaser["Physics"]["Arcade"]["DYNAMIC_BODY"]),
								(this["BulletGroup"]["physicsType"] = Phaser["Physics"]["Arcade"]["DYNAMIC_BODY"]),
								this["CleanUp"](),
								this["MakePlayer"](_0xc5a3ff),
								_0x4131ed["add"](this["Player"]),
								this["scene"]["physics"]["add"]["collider"](
									_0x4131ed,
									this["Enemies"],
									this["onPlayerOverlapsEnemy"]["bind"](this)
								),
								this["scene"]["physics"]["add"]["collider"](this["EnemyGroup"], this["EnemyGroup"]),
								this["scene"]["physics"]["add"]["overlap"](
									_0x4131ed,
									this["PickupGroup"],
									this["onPlayerOverlapsPickup"]["bind"](this)
								),
								this["scene"]["physics"]["add"]["overlap"](
									this["Magnet"],
									this["PickupGroup"],
									this["onMagnetOverlapsPickup"]["bind"](this)
								),
								(this["pickupPool"] = new _0x1237a1(_0x11e753)),
								(this["gemsPool"] = new _0x1237a1(_0x11e753)),
								(this["hitVFXPool"] = new _0x52ef63(_0x11e753)),
								(this["damageNumberPool"] = new _0x1b47c5(_0x11e753)),
								(this["destructiblesPool"] = new _0x346b58(_0x11e753)),
								(this["explosionPool"] = new _0x1aca76(_0x11e753)),
								(this["tickerEvent"] = this["scene"]["time"]["addEvent"]({
									delay: 0x3e8,
									callback: this["OnTickerEvent"],
									callbackScope: this,
									loop: !0x0,
								})),
								(this["tickerEvent"]["name"] = "Clock Ticker"),
								(this["MainUI"] = new _0x5a261c(this["scene"])),
								this["MainUI"]["UpdateCoins"](),
								this["MainUI"]["UpdateKills"](),
								this["MainUI"]["UpdatePlayerLevel"](),
								this["Player"]["MakeLevelOne"](),
								this["LevelUpFactory"]["Init"](),
								(this["PfxEmitter_Pickups"] = this["scene"]["add"]["particles"]("vfx")),
								this["PfxEmitter_Pickups"]["createEmitter"]({
									frame: ["PfxColor1.png", "PfxColor2.png"],
									angle: {
										min: 0x0,
										max: 0xb4,
									},
									speed: {
										min: 0x19,
										max: 0x32,
									},
									quantity: 0xa,
									lifespan: {
										min: 0x64,
										max: 0x190,
									},
									alpha: {
										start: 0x1,
										end: 0x0,
									},
									scale: {
										start: 0x2 * _0x3b10bb["PixelScale"],
										end: _0x3b10bb["PixelScale"],
									},
									gravityY: -0x3e8,
									on: !0x1,
								});
							for (const _0x3ef221 in _0x4a95c8) {
								var _0x4d5c63 = _0x4a95c8[_0x3ef221][0x0];
								for (let _0x22f16c = 0x0; _0x22f16c < _0x4d5c63["level"]; _0x22f16c++)
									this["ApplyBoughtPowerup"](_0x4a95c8[_0x3ef221][_0x22f16c]);
							}
							(this["Stage"] = new _0x216119(this["scene"], this["PlayerOptions"]["SelectedStage"])),
								this["Stage"]["Init"](),
								(this["LevelUpScene"] = this["scene"]["scene"]["get"](_0x53d8cd["UI_levelUpScene"])),
								this["AddWeapon"](this["Player"]["startingWeapon"]),
								this["LootManager"]["Init"](),
								(this["BGMan"] = new _0x1c5515(this["scene"])),
								this["BGMan"]["MakeBackground"](this["Stage"]["BGTextureName"]),
								(this["containmentRect_Exact"] = new _0x29631d(0x1)),
								(this["containmentRect_Screen"] = new _0x29631d(1.2, 1.3)),
								this["MainUI"]["UpdatePlayerLevel"](),
								this["PlayerUI"]["Update"](),
								_0x447595 &&
									(this["debug_CharShowcase"](!0x1),
									_0x11010a[_0x2164b8["Core"]["PlayerOptions"]["SelectedCharacter"]][0x0][
										"debugTime"
									] - 0x1 &&
										(this["SurvivedSeconds"] =
											_0x11010a[_0x2164b8["Core"]["PlayerOptions"]["SelectedCharacter"]][0x0][
												"debugTime"
											] - 0x1),
									_0x11010a[_0x2164b8["Core"]["PlayerOptions"]["SelectedCharacter"]][0x0][
										"debugEnemies"
									] &&
										this["scene"]["time"]["addEvent"]({
											delay: 0x44c,
											callback: () => {
												var _0x12b467 = _0x4e6e22;
												(this["Stage"]["minimum"] = this["Stage"]["maximum"] =
													_0x11010a[
														_0x2164b8["Core"]["PlayerOptions"]["SelectedCharacter"]
													][0x0]["debugEnemies"]),
													this["Stage"]["SwarmCheck"]();
											},
										}));
						}
						["debug_CharShowcase"](_0x25857b = !0x0) {
							var _0x1fda95 = _0x5d9431,
								_0x3edfed = _0x11010a[_0x2164b8["Core"]["PlayerOptions"]["SelectedCharacter"]][0x0];
							if (_0x3edfed["showcase"]) {
								for (let _0x3f663f = 0x0; _0x3f663f < _0x3edfed["showcase"]["length"]; _0x3f663f++) {
									const _0x2ec32c = _0x3edfed["showcase"][_0x3f663f];
									_0x2164b8["Core"]["LevelWeaponUp"](_0x2ec32c),
										_0x2164b8["Core"]["Player"]["LevelUp"]();
								}
								(_0x2164b8["Core"]["Player"]["xp"] =
									_0x2164b8["Core"]["LevelUpFactory"]["PreviousXpRequiredToLevelUp"]),
									_0x25857b &&
										((_0x2164b8["Core"]["LevelUpFactory"]["WeaponStore"] = new Array()),
										(_0x2164b8["Core"]["LevelUpFactory"]["WeightedStore"] = new Array()));
							}
						}
						["debug_AddAllWeapons"]() {
							for (const _0xe48c78 in _0x41a274) this["AddWeapon"](_0xe48c78);
						}
						["debug_SpawnEnemies"]() {
							var _0x711785 = _0x5d9431;
							(this["Stage"]["minimum"] = this["Stage"]["maximum"] = 0x1f4),
								this["Stage"]["SwarmCheck"]();
						}
						["debug_Treasure"](_0x53b98e = 0x3) {
							var _0x1978ef = _0x5d9431;
							(_0x2164b8["Core"]["CurrentTreasureLevel"] = _0x53b98e),
								(_0x2164b8["Core"]["CurrentTreasureTypes"] = [
									_0x49ae78["EVOLUTION"],
									_0x49ae78["EXISTING_WEAPON"],
									_0x49ae78["EXISTING_ANY"],
									_0x49ae78["POWERUP"],
									_0x49ae78["POWERUP"],
								]),
								_0x2164b8["Core"]["SceneManager"]["StartTreasureScene"]();
						}
						["FreezeSnapshot"](_0x371307) {
							var _0x233d0e = _0x5d9431;
							_0x2164b8["Core"]["TakeSnapshot"](() => {
								var _0x412a0 = _0x233d0e,
									_0x1bb133,
									_0x18a4ab,
									_0x12c11d,
									_0x454746 = _0xe0047c ? _0x2f912e / _0x490bcb : _0x4a3b1d / _0x170004;
								const _0x132ce5 = this["scene"]["textures"]["get"]("snapshot");
								if (_0x132ce5) {
									const _0x54027d = _0x132ce5["get"]();
									(null == _0x54027d ? void 0x0 : _0x54027d["glTexture"]) &&
									(null == _0x54027d ? void 0x0 : _0x54027d["source"]) &&
									(null == _0x132ce5 ? void 0x0 : _0x132ce5["source"]) &&
									(null == _0x132ce5 ? void 0x0 : _0x132ce5["source"][0x0])
										? (null === (_0x1bb133 = this["snapshot"]) ||
												void 0x0 === _0x1bb133 ||
												_0x1bb133["destroy"](),
										  (this["snapshot"] = this["scene"]["add"]
												["sprite"](0x0, 0x0, "snapshot")
												["setOrigin"](0x0)
												["setScale"](_0x454746)
												["setDepth"](Number["MAX_SAFE_INTEGER"])
												["setScrollFactor"](0x0)))
										: (window["alert"](
												"snapshotFrame: " +
													_0x54027d +
													" - glTexture: " +
													(null == _0x54027d ? void 0x0 : _0x54027d["glTexture"]) +
													" - source: " +
													(null == _0x54027d ? void 0x0 : _0x54027d["source"]) +
													" - isGLTexture: " +
													(null ===
														(_0x18a4ab =
															null == _0x54027d ? void 0x0 : _0x54027d["source"]) ||
													void 0x0 === _0x18a4ab
														? void 0x0
														: _0x18a4ab["isGLTexture"])
										  ),
										  null === (_0x12c11d = this["snapshot"]) ||
												void 0x0 === _0x12c11d ||
												_0x12c11d["destroy"](),
										  (this["snapshot"] = this["scene"]["add"]
												["sprite"](0x0, 0x0, "UI", "blackDot.png")
												["setOrigin"](0x0)
												["setAlpha"](0.75)
												["setScale"](
													this["scene"]["renderer"]["width"],
													this["scene"]["renderer"]["height"]
												)
												["setDepth"](Number["MAX_SAFE_INTEGER"])
												["setScrollFactor"](0x0)));
								}
								_0x371307 &&
									(_0x371307(),
									(_0x2164b8["Core"]["SceneManager"]["UI_overlayScene"]["blockInput"] = !0x1),
									(_0x2164b8["Core"]["SceneManager"]["MainScene"]["blockInput"] = !0x1));
							});
						}
						["RemoveSnapshot"]() {
							var _0x108895 = _0x5d9431,
								_0x32b48a;
							null === (_0x32b48a = this["snapshot"]) ||
								void 0x0 === _0x32b48a ||
								_0x32b48a["setVisible"](!0x1);
						}
						["debug_NextMinute"]() {
							var _0x44fcde = _0x5d9431,
								_0x565817 = 0x3b - (this["SurvivedSeconds"] % 0x3c);
							_0x565817 <= 0x1 || (this["SurvivedSeconds"] += _0x565817);
						}
						["debug_FireAll"]() {
							var _0xb348f9 = _0x5d9431;
							for (let _0xd49fcf = 0x0; _0xd49fcf < this["Weapons"]["length"]; _0xd49fcf++) {
								const _0x48e3e8 = this["Weapons"][_0xd49fcf];
								_0x48e3e8["isPowerUp"] || _0x48e3e8["Fire"]();
							}
						}
						["OnPlayerQuit"]() {
							var _0x35453 = _0x5d9431;
							this["Weapons"]["forEach"]((_0x55446e) => {
								var _0x364abf = _0x35453;
								_0x55446e["CleanUp"]();
							}),
								this["HiddenWeapons"]["forEach"]((_0x5cdc23) => {
									_0x5cdc23["CleanUp"]();
								});
						}
						["ResetWeaponCooldowns"]() {
							var _0xa01893 = _0x5d9431;
							for (let _0x37293d = 0x0; _0x37293d < this["Weapons"]["length"]; _0x37293d++)
								this["Weapons"][_0x37293d]["ResetFiringTimer"]();
						}
						["SwapToLevelUpScene"]() {
							var _0x35bdaf = _0x5d9431;
							(_0x2164b8["Core"]["SceneManager"]["MainScene"]["blockInput"] = !0x0),
								_0x2164b8["Core"]["SceneManager"]["EnterLevelUp"](),
								_0x2164b8["Sound"]["FadeMusic"](_0x2164b8["Core"]["CurrentBGM"], 0.2, 0x1f4);
						}
						["SwapToItemFoundScene"]() {
							var _0x44ef87 = _0x5d9431;
							_0x2164b8["Core"]["SceneManager"]["EnterItemFound"](),
								_0x2164b8["Sound"]["FadeMusic"](_0x2164b8["Core"]["CurrentBGM"], 0.2, 0x1f4);
						}
						["ExitLevelUpScene"]() {
							var _0x41ada1 = _0x5d9431;
							_0x2164b8["Sound"]["FadeMusic"](_0x2164b8["Core"]["CurrentBGM"], 0.3, 0x1f4),
								(_0x2164b8["Core"]["SceneManager"]["MainScene"]["blockInput"] = !0x1);
						}
						["OnLevelUpSkipped"]() {
							var _0x91232e = _0x5d9431;
							if ((console["log"]("level up skipped"), this["Player"]["skips"] > 0x0)) {
								this["Player"]["skips"]--;
								let _0x41f51c =
									0.2 * (this["LevelUpFactory"]["XpRequiredToLevelUp"] - this["Player"]["xp"]);
								_0x2164b8["Core"]["Player"]["xp"] += _0x41f51c;
							}
						}
						["OnRerollLevelUp"]() {
							var _0x3d0f96 = _0x5d9431;
							this["Player"]["rerolls"] > 0x0 && this["Player"]["rerolls"]--;
						}
						["OnTickerEvent"]() {
							var _0x184ec4 = _0x5d9431;
							this["SurvivedSeconds"]++,
								this["MainUI"]["SetSurvivedSeconds"](this["SurvivedSeconds"]),
								this["SurvivedSeconds"] % 0x3c == 0x0 && this["Stage"]["CheckMinute"]();
						}
						["ShowHitVFXAt"](_0x4aa489, _0x384a23, _0x2488a4) {
							var _0x4d0c7b = _0x5d9431;
							this["hitVFXPool"]["SpawnAt"](_0x4aa489, _0x384a23, _0x2488a4);
						}
						["ShowDamageAt"](_0x485663, _0x5b37ad, _0xdd2bb0) {
							this["damageNumberPool"]["SpawnAt"](_0x485663, _0x5b37ad, _0xdd2bb0);
						}
						["ShowRecoveryAt"](_0xb3c9ce, _0x1258e3, _0x42af09) {
							var _0x5e78b2 = _0x5d9431;
							this["damageNumberPool"]["SpawnAt"](_0xb3c9ce, _0x1258e3, -_0x42af09);
						}
						["onPlayerOverlapsEnemy"](_0x75ceea, _0x3e7796) {
							var _0x99db7b = _0x5d9431,
								_0x5a4867 = _0x3e7796;
							_0x5a4867["isDead"] ||
								_0x5a4867["IsTimeStopped"] ||
								_0x75ceea["GetDamaged"](_0x5a4867["power"]);
						}
						["onPlayerOverlapsPickup"](_0x135114, _0x23ea68) {
							this["GetPickup"](_0x23ea68), _0x23ea68["GetTaken"]();
						}
						["onMagnetOverlapsPickup"](_0x202982, _0x3de07f) {
							var _0x4de41c = _0x5d9431;
							_0x3de07f["Vacuum"]() &&
								this["PfxEmitter_Pickups"]["emitParticleAt"](_0x3de07f["x"], _0x3de07f["y"]);
						}
						["SpawnPickupParticlesAt"](_0x27e25d, _0xf52045) {
							var _0x5aac6b = _0x5d9431;
							this["PfxEmitter_Pickups"]["emitParticleAt"](_0x27e25d, _0xf52045);
						}
						["GetPickup"](_0x2a520b) {}
						["TurnOnVacuum"]() {
							var _0x24986e = _0x5d9431,
								_0x9131a1;
							null === (_0x9131a1 = this["gemsPool"]["spawned"][_0x3bf2f1["GEM"]]) ||
								void 0x0 === _0x9131a1 ||
								_0x9131a1["forEach"]((_0x2908eb) => {
									var _0x5e1cdf = _0x24986e;
									_0x2908eb["goToPlayer"] = !0x0;
								});
						}
						["RosaryDamage"]() {
							var _0x3e64be = _0x5d9431;
							this["PlayerOptions"]["FlashingVFXEnabled"] && new _0x668922(this["scene"])["Play"]();
							for (let _0x5ece28 = 0x0; _0x5ece28 < this["Enemies"]["length"]; _0x5ece28++) {
								const _0x1b7a2f = this["Enemies"][_0x5ece28];
								_0x1b7a2f["res_Rosary"] ||
									(this["containmentRect_Screen"]["Contains"](_0x1b7a2f) &&
										_0x1b7a2f["GetDamaged"](
											Math["max"](0x42, _0x1b7a2f["maxHp"]),
											_0xed2036["NONE"]
										));
							}
						}
						["TimeStop"]() {
							var _0x12795c = _0x5d9431;
							this["PlayerOptions"]["FlashingVFXEnabled"] && new _0x5152f9(this["scene"])["Play"](),
								(this["IsTimeStopped"] = !0x0);
							for (let _0x3e9864 = 0x0; _0x3e9864 < this["Enemies"]["length"]; _0x3e9864++)
								this["Enemies"][_0x3e9864]["TimeStop"]();
							this["TimeStopTimer"] && this["TimeStopTimer"]["destroy"](),
								(this["TimeStopTimer"] = this["scene"]["time"]["addEvent"](this["TimeStopConfig"]));
						}
						["ClearTimeStop"]() {
							var _0x29e7a3 = _0x5d9431;
							for (let _0x4a5088 = 0x0; _0x4a5088 < this["Enemies"]["length"]; _0x4a5088++)
								this["Enemies"][_0x4a5088]["ResumeFromTimeStop"]();
							this["IsTimeStopped"] = !0x1;
						}
						["CheckForLevelUp"]() {
							var _0x17427f = _0x5d9431;
							this["PlayerUI"]["Update"](), this["MainUI"]["UpdatePlayerLevel"]();
						}
						["GetWeaponLevel"](_0x3090b0) {
							var _0x5492db = _0x5d9431;
							let _0x6dc7eb = this["Weapons"]["find"](
								(_0x38dd3a) => _0x38dd3a["bulletType"] === _0x3090b0
							);
							return _0x6dc7eb ? _0x6dc7eb["level"] : 0x0;
						}
						["LevelWeaponUp"](_0x1ec411, _0x5dbca0 = !0x0) {
							var _0x1a85bf = _0x5d9431;
							if (void 0x0 === _0x41a274[_0x1ec411]) return;
							let _0x33defd = this["Weapons"]["find"](
								(_0x134fb6) => _0x134fb6["bulletType"] === _0x1ec411
							);
							_0x33defd
								? (_0x33defd["LevelUp"]() ||
										(_0x2164b8["Core"]["PlayerOptions"]["AddCoins"](0xa),
										_0x2164b8["Core"]["MainUI"]["UpdateCoins"]()),
								  _0x5dbca0 && this["LevelUpFactory"]["RemoveFromStore"](_0x33defd["bulletType"]))
								: this["AddWeapon"](_0x1ec411, _0x5dbca0),
								this["SetSeenWeapon"](_0x1ec411);
						}
						["SetSeenWeapon"](_0xa9c7e9) {
							var _0x336f99 = _0x5d9431;
							void 0x0 ===
								this["PlayerOptions"]["CollectedWeapons"]["find"](
									(_0x2c98b0) => _0x2c98b0 === _0xa9c7e9
								) &&
								((_0x41a274[_0xa9c7e9][0x0]["seen"] = !0x0),
								this["PlayerOptions"]["CollectedWeapons"]["push"](_0xa9c7e9),
								this["PlayerOptions"]["SaveCollection"]());
						}
						["OnPowerUpBought"](_0x20bbfa) {
							var _0x8f691b = _0x5d9431;
							this["PlayerOptions"]["BoughtPowerups"]["push"](_0x20bbfa), this["PlayerOptions"]["Save"]();
						}
						["OnCharacterBought"](_0x4f6724) {
							var _0x56300f = _0x5d9431;
							this["PlayerOptions"]["BoughtCharacters"]["push"](_0x4f6724),
								this["PlayerOptions"]["Save"]();
						}
						["MakePlayer"](_0x33d543) {
							var _0x13b581 = _0x5d9431;
							return (
								(this["Player"] = new _0x3e4f64(this["scene"], 0x0, 0x0, _0x33d543)),
								(this["PlayerUI"] = new _0x57a4c7(this["scene"])),
								(this["Magnet"] = new _0x5e96c6(this["scene"], 0x0, 0x0)),
								this["Player"]
							);
						}
						["MakeGem"](_0x4b1929 = null, _0x2095d3 = null, _0x5b2c30) {
							var _0x45d3fc = _0x5d9431,
								_0x1be5f2 = this["MakePickup"](
									_0x4b1929,
									_0x2095d3,
									_0x3bf2f1["GEM"],
									_0x5324b3["VOID"],
									_0x5b2c30
								);
							return _0x1be5f2 && _0x1be5f2["SetValue"](_0x5b2c30), _0x1be5f2;
						}
						["MakeTreasure"](_0x514a23 = null, _0x31b53b = null, _0x13b7e3) {
							var _0x2c8666 = _0x5d9431,
								_0x13413d = this["MakePickup"](_0x514a23, _0x31b53b, _0x3bf2f1["TREASURE"]);
							(_0x13413d["CurrentTreasureLevel"] = _0x13b7e3["level"]),
								(_0x13413d["CurrentTreasureTypes"] = _0x13b7e3["prizeTypes"]),
								(_0x13413d["CurrentFixedTreasures"] = [null, null, null, null, null]),
								_0x13b7e3["fixedPrizes"] &&
									_0x13b7e3["fixedPrizes"]["length"] > 0x0 &&
									(_0x13413d["CurrentFixedTreasures"] = _0x13b7e3["fixedPrizes"]);
						}
						["MakeAndActivatePickup"](_0x5f4195) {
							this["MakePickup"](this["Player"]["x"], this["Player"]["y"], _0x5f4195)["GetTaken"]();
						}
						["MakePickup"](
							_0x2ba792 = null,
							_0x488c32 = null,
							_0x3a276a = _0x3bf2f1["COIN"],
							_0x47ca44 = _0x5324b3["VOID"],
							_0x3ecd6f = 0x0
						) {
							var _0x4057d7 = _0x5d9431,
								_0x201485,
								_0x492847;
							let _0x149ef3,
								_0x1eec58 =
									null === _0x2ba792 && null === _0x488c32
										? this["GetPositionOutOfSight"](0x5a)
										: new Phaser["Math"]["Vector2"](_0x2ba792, _0x488c32);
							if (_0x3a276a === _0x3bf2f1["GEM"]) {
								var _0x52425a = 0x0,
									_0x506f30 = !0x1,
									_0x16291a = this["MaxGems"],
									_0x3b7c9a = 0x0;
								if (
									(null === (_0x201485 = this["gemsPool"]["spawned"][_0x3bf2f1["GEM"]]) ||
									void 0x0 === _0x201485
										? void 0x0
										: _0x201485["length"]) > this["MaxGems"]
								) {
									for (
										;
										(null === (_0x492847 = this["gemsPool"]["spawned"][_0x3bf2f1["GEM"]]) ||
										void 0x0 === _0x492847
											? void 0x0
											: _0x492847["length"]) > this["MaxGems"];

									) {
										if (
											(_0x29f937 = this["furthest"](
												this["Player"],
												this["gemsPool"]["spawned"][_0x3bf2f1["GEM"]]
											))
										) {
											if (this["containmentRect_Screen"]["Contains"](_0x29f937)) {
												_0x506f30 = !0x0;
												break;
											}
											(_0x52425a += _0x29f937["value"]), _0x29f937["DeSpawn"]();
										}
										if (++_0x3b7c9a > _0x16291a) break;
									}
									var _0x29f937;
									if (
										((_0x29f937 = this["furthest"](
											this["Player"],
											this["gemsPool"]["spawned"][_0x3bf2f1["GEM"]]
										)) && _0x29f937["SetValue"](_0x52425a + _0x29f937["value"]),
										_0x506f30)
									)
										return (_0x29f937["value"] += _0x3ecd6f), null;
									_0x149ef3 = this["gemsPool"]["SpawnAt"](
										_0x1eec58["x"],
										_0x1eec58["y"],
										_0x3bf2f1["GEM"]
									);
								} else
									_0x149ef3 = this["gemsPool"]["SpawnAt"](
										_0x1eec58["x"],
										_0x1eec58["y"],
										_0x3bf2f1["GEM"]
									);
							} else _0x149ef3 = this["pickupPool"]["SpawnAt"](_0x1eec58["x"], _0x1eec58["y"], _0x3a276a);
							return (
								_0x149ef3["itemType"] == _0x3bf2f1["WEAPON"] &&
									_0x47ca44 != _0x5324b3["VOID"] &&
									_0x149ef3["SetWeaponType"](_0x47ca44),
								_0x149ef3
							);
						}
						["furthest"](_0x3253e6, _0x4b1995) {
							var _0x47de00 = _0x5d9431;
							for (
								var _0x55c478 = -0x1,
									_0x4d0bc7 = null,
									_0x10acfd = _0x3253e6["x"],
									_0x1ce8a6 = _0x3253e6["y"],
									_0x325b70 = _0x4b1995["length"],
									_0x312b65 = 0x0;
								_0x312b65 < _0x325b70;
								_0x312b65++
							) {
								var _0x1d4ae3 = _0x4b1995[_0x312b65],
									_0x242e5f = Phaser["Math"]["Distance"]["Squared"](
										_0x10acfd,
										_0x1ce8a6,
										_0x1d4ae3["x"],
										_0x1d4ae3["y"]
									);
								_0x242e5f > _0x55c478 && ((_0x4d0bc7 = _0x1d4ae3), (_0x55c478 = _0x242e5f));
							}
							return _0x4d0bc7;
						}
						["MakeDestructible"](_0xfe2eca, _0x33c1f5 = null, _0x8b5e84 = null) {
							var _0x568747 = _0x5d9431,
								_0x30d116 = 0x0;
							let _0x12ffeb;
							for (
								(0x0 == this["Player"]["body"]["velocity"]["x"] &&
									0x0 == this["Player"]["body"]["velocity"]["y"]) ||
									(_0x30d116 = 0x2d),
									_0x12ffeb =
										null != _0x33c1f5 && null != _0x8b5e84
											? new Phaser["Math"]["Vector2"](_0x33c1f5, _0x8b5e84)
											: this["GetPositionOutOfSight"](_0x30d116),
									this["destructiblesPool"]["SpawnAt"](_0x12ffeb["x"], _0x12ffeb["y"], _0xfe2eca);
								this["destructiblesPool"]["spawned"]["length"] > this["MaxDestructibles"];

							) {
								var _0x4f3c6d = this["furthest"](this["Player"], this["destructiblesPool"]["spawned"]);
								_0x4f3c6d && _0x4f3c6d["DeSpawn"]();
							}
						}
						["MakeExplosion"](_0x4460d3, _0x57e1fb, _0x5644c7, _0x20e7ea) {
							var _0x353934 = _0x5d9431;
							this["explosionPool"]["SpawnAt"](_0x4460d3, _0x57e1fb, _0x5644c7, _0x20e7ea);
						}
						["AddWeapon"](_0x215013, _0x31c933 = !0x0) {
							var _0x2414c5 = _0x5d9431;
							const _0x2ab2c6 = this["GetWeapon"](_0x215013);
							(_0x2ab2c6["level"] = 0x1),
								this["Weapons"]["push"](_0x2ab2c6),
								_0x31c933
									? this["LevelUpFactory"]["RemoveFromStore"](_0x215013)
									: this["LevelUpFactory"]["calculateWeights"](),
								this["MainUI"] && this["MainUI"]["AddWeaponIcon"](_0x215013);
						}
						["AddHiddenWeapon"](_0x2d55c1) {
							var _0x2a550f = _0x5d9431;
							const _0xa05ad7 = this["WeaponFactory"]["GetWeapon"](_0x2d55c1);
							(_0xa05ad7["level"] = 0x1), this["HiddenWeapons"]["push"](_0xa05ad7);
						}
						["RemoveWeapon"](_0x219a5c) {
							var _0x13008f = _0x5d9431,
								_0x4d991f,
								_0x24cb70 = this["Weapons"]["find"](
									(_0x411c4e) => _0x411c4e["bulletType"] === _0x219a5c
								);
							_0x24cb70 &&
								(_0x24cb70["CleanUp"](),
								this["Weapons"]["indexOf"](_0x24cb70) > -0x1 &&
									(_0x4d991f = this["Weapons"]["splice"](this["Weapons"]["indexOf"](_0x24cb70), 0x1)),
								_0x4d991f && this["RemovedWeapons"]["push"](_0x4d991f[0x0])),
								this["MainUI"] && this["MainUI"]["Remove"](_0x219a5c);
						}
						["RemoveHiddenWeapon"](_0x2e0b6d) {
							var _0x2f44b7 = _0x5d9431,
								_0x453fcb = this["HiddenWeapons"]["find"](
									(_0x22bed0) => _0x22bed0["bulletType"] === _0x2e0b6d
								);
							_0x453fcb &&
								(_0x453fcb["CleanUp"](),
								this["HiddenWeapons"]["indexOf"](_0x453fcb) > -0x1 &&
									this["HiddenWeapons"]["splice"](this["Weapons"]["indexOf"](_0x453fcb), 0x1));
						}
						["GetWeapon"](_0x228e79) {
							var _0x22a28b = _0x5d9431;
							return this["WeaponFactory"]["GetWeapon"](_0x228e79);
						}
						["Update"](_0x29917a = 0x0) {
							var _0x547caf = _0x5d9431,
								_0x44c69a = !0x1;
							if (
								(this["updateTick"]++,
								this["updateTick"] % this["updateFreq"] == 0x0 &&
									((this["updateTick"] = 0x0), (_0x44c69a = !0x0)),
								_0x44c69a)
							) {
								var _0x4fe21e = this["LevelUpFactory"]["XpRequiredToLevelUp"];
								if (this["Player"]["xp"] >= _0x4fe21e)
									this["Player"]["LevelUp"](),
										this["SwapToLevelUpScene"](),
										this["LootManager"]["RecalculateLoot"](),
										this["LevelUpFactory"]["CalculateXPfactor"](),
										this["PlayerUI"]["Update"](),
										this["MainUI"]["UpdatePlayerLevel"]();
								else {
									if (this["TreasureQueue"]["length"] > 0x0) {
										let _0x1fbe5e = this["TreasureQueue"]["pop"]();
										(this["CurrentTreasureLevel"] = _0x1fbe5e["level"]),
											(this["CurrentTreasureTypes"] = _0x1fbe5e["prizeTypes"]),
											(this["CurrentFixedTreasures"] = _0x1fbe5e["fixedPrizes"]),
											_0x2164b8["Core"]["SceneManager"]["StartTreasureScene"]();
									}
								}
								this["BGMan"]["DayNightHue"]();
								for (
									let _0x310b9b = 0x0;
									_0x310b9b < this["PickupGroup"]["children"]["entries"]["length"];
									_0x310b9b++
								)
									this["PickupGroup"]["children"]["entries"][_0x310b9b]["Update"](_0x29917a);
								for (
									let _0x1f2dbb = 0x0;
									_0x1f2dbb < this["explosionPool"]["spawned"]["length"];
									_0x1f2dbb++
								)
									this["explosionPool"]["spawned"][_0x1f2dbb]["Update"](_0x29917a);
							}
							for (
								let _0x107f9a = 0x0;
								_0x107f9a < this["BulletGroup"]["children"]["entries"]["length"];
								_0x107f9a++
							)
								this["BulletGroup"]["children"]["entries"][_0x107f9a]["Update"](_0x29917a);
							for (let _0x9f576b = 0x0; _0x9f576b < this["Weapons"]["length"]; _0x9f576b++)
								this["Weapons"][_0x9f576b]["Update"](_0x29917a);
							for (let _0x33ba0e = 0x0; _0x33ba0e < this["HiddenWeapons"]["length"]; _0x33ba0e++)
								this["HiddenWeapons"][_0x33ba0e]["Update"](_0x29917a);
							this["Player"]["Update"](_0x29917a),
								this["Magnet"]["Update"](),
								this["BGMan"]["Update"](_0x29917a);
							for (let _0x3e56cf = 0x0; _0x3e56cf < this["Enemies"]["length"]; _0x3e56cf++)
								this["Enemies"][_0x3e56cf]["Update"](_0x29917a);
						}
						["GetPositionForEnemyOutOfSight"](_0x52bd71 = -0x1, _0x5db902 = 0x0) {
							var _0x4328d7 = _0x5d9431;
							if (
								this["Stage"]["hasTileset"] &&
								this["Stage"]["EnemySpanwersLocations"]["length"] > 0x0
							) {
								var _0x285e68 =
									Math["random"]() < 0.5
										? this["Stage"]["rectOuter"]["x"]
										: this["Stage"]["rectOuter"]["x"] + this["Stage"]["rectOuter"]["width"];
								let _0xa92396 = this["Player"]["body"]["velocity"]["x"] > 0x0 ? 0x1 : -0x1,
									_0x4beb9a = _0x2164b8["Core"]["Player"]["x"] + _0x285e68 * _0xa92396,
									_0x2e6c09 = _0x2164b8["Core"]["Player"]["y"];
								return new Phaser["Math"]["Vector2"](_0x4beb9a, _0x2e6c09);
							}
							return this["GetPositionOutOfSight"](_0x52bd71, _0x5db902);
						}
						["GetPositionOutOfSight"](_0x103581 = -0x1, _0x4eeadb = 0x0) {
							var _0x430da8 = _0x5d9431;
							let _0x38db3a, _0x29ccc6, _0x22cce5;
							if (
								(_0x103581 <= 0x0
									? (_0x38db3a = 0x2 * Math["PI"] * Math["random"]())
									: ((_0x38db3a = Math["atan2"](
											this["Player"]["body"]["velocity"]["y"],
											this["Player"]["body"]["velocity"]["x"]
									  )),
									  (_0x38db3a += (Math["random"]() - 0.5) * Phaser["Math"]["DegToRad"](_0x103581))),
								_0x4eeadb > 0x0)
							) {
								var _0x2555fb = Math["cos"](_0x38db3a);
								(_0x29ccc6 =
									this["Player"]["x"] +
									0.5 * _0x2555fb * this["scene"]["renderer"]["width"] +
									Math["sign"](_0x2555fb) * _0x4eeadb),
									(_0x2555fb = Math["sin"](_0x38db3a)),
									(_0x22cce5 =
										this["Player"]["y"] +
										0.5 * _0x2555fb * this["scene"]["renderer"]["height"] +
										Math["sign"](_0x2555fb) * _0x4eeadb);
							} else
								(_0x29ccc6 =
									this["Player"]["x"] +
									0.9 * Math["cos"](_0x38db3a) * this["scene"]["renderer"]["width"]),
									(_0x22cce5 =
										this["Player"]["y"] +
										0.9 * Math["sin"](_0x38db3a) * this["scene"]["renderer"]["height"]);
							return new Phaser["Math"]["Vector2"](_0x29ccc6, _0x22cce5);
						}
						get ["PowerUpMarkup"]() {
							var _0x19dd5d = _0x5d9431,
								_0x154955 = 0x0;
							for (const _0x64768e in _0x4a95c8) _0x154955 += _0x4a95c8[_0x64768e][0x0]["level"];
							return 0x1 + this["baseMarkup"] * _0x154955;
						}
						get ["CharMarkup"]() {
							var _0x17b633 = _0x5d9431,
								_0x5c2aba = 0x0;
							for (const _0x4de3ea in _0x11010a)
								_0x5c2aba += _0x11010a[_0x4de3ea][0x0]["isBought"] ? 0x1 : 0x0;
							return _0x5c2aba--, 0x1 + this["baseMarkup"] * _0x5c2aba;
						}
						["ApplyBoughtPowerup"](_0x4033e8) {
							var _0x29b169 = _0x5d9431;
							(this["Player"]["power"] += _0x4033e8["power"] || 0x0),
								(this["Player"]["area"] += _0x4033e8["area"] || 0x0),
								(this["Player"]["speed"] += _0x4033e8["speed"] || 0x0),
								(this["Player"]["cooldown"] += _0x4033e8["cooldown"] || 0x0),
								(this["Player"]["duration"] += _0x4033e8["duration"] || 0x0),
								(this["Player"]["amount"] += _0x4033e8["amount"] || 0x0),
								(this["Player"]["moveSpeed"] += _0x4033e8["moveSpeed"] || 0x0),
								(this["Player"]["growth"] += _0x4033e8["growth"] || 0x0),
								(this["Player"]["luck"] += _0x4033e8["luck"] || 0x0),
								(this["Player"]["armor"] += _0x4033e8["armor"] || 0x0),
								(this["Player"]["maxHp"] += this["Player"]["maxHp"] * (_0x4033e8["maxHp"] || 0x0)),
								(this["Player"]["regen"] += _0x4033e8["regen"] || 0x0),
								(this["Player"]["greed"] += _0x4033e8["greed"] || 0x0),
								(this["Player"]["revivals"] += _0x4033e8["revivals"] || 0x0),
								(this["Player"]["rerolls"] += _0x4033e8["rerolls"] || 0x0),
								(this["Player"]["skips"] += _0x4033e8["skips"] || 0x0),
								(this["Player"]["curse"] += _0x4033e8["curse"] || 0x0),
								(this["Player"]["hp"] = this["Player"]["maxHp"]),
								(this["Magnet"]["radius"] += this["Magnet"]["radius"] * (_0x4033e8["magnet"] || 0x0)),
								this["Magnet"]["RefreshSize"](),
								(this["Magnet"]["percentage"] += _0x4033e8["magnet"] || 0x0);
						}
						["GameOver"]() {}
						["StopCamera"]() {
							var _0x1fa98c = _0x5d9431;
							this["scene"]["cameras"]["main"]["stopFollow"](),
								_0x2164b8["Core"]["BGMan"]["ToggleScrolling"](!0x1),
								_0x2164b8["Core"]["Player"]["SetCollideWithWorld"](!0x0);
							var _0x4a136d = _0x2164b8["Core"]["Player"]["x"],
								_0x557a32 = _0x2164b8["Core"]["Player"]["y"],
								_0x34e5a0 = this["scene"]["renderer"]["width"],
								_0x51cfc3 = this["scene"]["renderer"]["height"],
								_0x98d30 = _0x4a136d - 0.5 * _0x34e5a0,
								_0x18ab0d = _0x557a32 - 0.5 * _0x51cfc3;
							this["scene"]["physics"]["world"]["setBounds"](_0x98d30, _0x18ab0d, _0x34e5a0, _0x51cfc3);
						}
						["ResumeCamera"]() {
							var _0x565fa4 = _0x5d9431;
							this["scene"]["cameras"]["main"]["startFollow"](_0x2164b8["Core"]["Player"]),
								_0x2164b8["Core"]["BGMan"]["ToggleScrolling"](!0x0),
								_0x2164b8["Core"]["Player"]["SetCollideWithWorld"](!0x1);
						}
					}
					(_0x3b10bb["_basePlayerPxSpeed"] = 82.5),
						(_0x3b10bb["_baseEnemySpeed"] = 0.77 * 0.3),
						(_0x3b10bb["_baseProjectileSpeed"] = 0xa5),
						(_0x3b10bb["_baseGoldMultiplier"] = 0x1),
						(_0x3b10bb["_baseEnemyHealthMultiplier"] = 0x1),
						(_0x3b10bb["PlayerPxSpeed"] = _0x3b10bb["_basePlayerPxSpeed"]),
						(_0x3b10bb["EnemySpeed"] = _0x3b10bb["_baseEnemySpeed"]),
						(_0x3b10bb["ProjectileSpeed"] = _0x3b10bb["_baseProjectileSpeed"]),
						(_0x3b10bb["GoldMultiplier"] = _0x3b10bb["_baseGoldMultiplier"]),
						(_0x3b10bb["EnemyHealthMultiplier"] = _0x3b10bb["_baseEnemyHealthMultiplier"]),
						(_0x3b10bb["PixelScale"] = 0x1),
						(_0x3b10bb["RPixelScale"] = 0x1),
						(_0x3b10bb["ZDamageNumber"] = Number["MAX_SAFE_INTEGER"] - 0x2710),
						(_0x3b10bb["ZInGameUI"] = Number["MAX_SAFE_INTEGER"] - 0x3e8);
					const _0x1fa5bb = _0x3b10bb;
					class _0x31ddf3 extends Phaser["Scene"] {
						constructor() {
							var _0x5c972c = _0x5d9431;
							super({
								key: _0x53d8cd["MainScene"],
							}),
								(this["blockInput"] = !0x1),
								(this["enterPause"] = !0x1),
								(this["_lastVelocity"] = new Phaser["Math"]["Vector2"](0x1, 0x0)),
								(this["cIndex"] = 0x0),
								(this["cursorsVector"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["wasDown"] = !0x1);
						}
						["preload"]() {
							var _0x30d2ab = _0x5d9431;
							_0x2164b8["ApplyGameResolution"](),
								_0x179e04 &&
									(window["TIMERS"] = () => {
										var _0x5be2bd = _0x30d2ab;
										console["log"](_0x2164b8["Core"]["scene"]["time"]);
									});
							let _0x5664ae = _0x117b45[_0x2164b8["Core"]["PlayerOptions"]["SelectedStage"]][0x0];
							_0x5664ae["tileset"] &&
								(this["load"]["image"](_0x5664ae["tileset"]["setKey"], _0x5664ae["tileset"]["setPath"]),
								this["load"]["tilemapTiledJSON"](
									_0x5664ae["tileset"]["mapKey"],
									_0x5664ae["tileset"]["mapPath"]
								)),
								_0x5664ae["BGTextureName"] &&
									this["load"]["image"](
										_0x5664ae["BGTextureName"],
										"assets/img/" + _0x5664ae["BGTextureName"] + ".png"
									),
								_0x5664ae["BGMPatch"] &&
									this["load"]["image"](
										_0x5664ae["BGTextureName"],
										"assets/img/" + _0x5664ae["BGTextureName"] + ".png"
									);
						}
						["create"]() {
							var _0x2a1a1a = _0x5d9431,
								_0x18e694,
								_0x3fa126,
								_0x24a442;
							if (
								((this["joyStick"] = new _0x448651["Z"](this, {
									x: 0x190,
									y: 0x12c,
									radius: 0x4b * _0x1aaca4,
									base: this["add"]
										["circle"](0x0, 0x0, 0x4b * _0x1aaca4, 0xcccccc, 0.5)
										["setDepth"](0x2711),
									thumb: this["add"]
										["circle"](0x0, 0x0, 0x23 * _0x1aaca4, 0x888888, 0.5)
										["setDepth"](0x2710),
									forceMin: 0x10 * _0x1aaca4,
								})),
								(this["cursors"] = this["input"]["keyboard"]["createCursorKeys"]()),
								(this["wKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["W"]
								)),
								(this["aKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["A"]
								)),
								(this["sKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["S"]
								)),
								(this["dKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["D"]
								)),
								(this["spaceKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["SPACE"]
								)),
								(this["escKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["ESC"]
								)),
								this["escKey"]["on"]("down", () => {
									var _0x4e463c = _0x2a1a1a;
									this["blockInput"] ||
										_0x2164b8["Core"]["TreasureQueue"]["length"] > 0x0 ||
										_0x2164b8["Core"]["Player"]["xp"] >=
											_0x2164b8["Core"]["LevelUpFactory"]["XpRequiredToLevelUp"] ||
										(this["enterPause"] = !0x0);
								}),
								(this["pointer"] = this["input"]["activePointer"]),
								_0x2164b8["Core"]["InitGame"](
									this,
									_0x2164b8["Core"]["PlayerOptions"]["SelectedCharacter"]
								),
								(this["containmentRect_Enemies"] = new _0x29631d(1.4, 1.6)),
								(this["containmentRect_Bullets"] = new _0x29631d(1.2, 1.3)),
								this["cameras"]["main"]["startFollow"](_0x2164b8["Core"]["Player"]),
								_0x2bc3e5 &&
									((window["stopp"] = () => {
										var _0x1a848f = _0x2a1a1a;
										this["cameras"]["main"]["stopFollow"](),
											_0x2164b8["Core"]["BGMan"]["ToggleScrolling"](!0x1),
											_0x2164b8["Core"]["Player"]["SetCollideWithWorld"](!0x0);
										var _0x3f0547 = _0x2164b8["Core"]["Player"]["x"],
											_0x5333a5 = _0x2164b8["Core"]["Player"]["y"],
											_0x547e69 = this["renderer"]["width"],
											_0x5a9345 = this["renderer"]["height"];
										console["log"](
											"x:" +
												_0x3f0547 +
												"\x20y:" +
												_0x5333a5 +
												"\x20w:" +
												_0x547e69 +
												"\x20h:" +
												_0x5a9345
										);
										var _0x92325e = _0x3f0547 - 0.5 * _0x547e69,
											_0x13a5d0 = _0x5333a5 - 0.5 * _0x5a9345;
										console["log"]("xx:" + _0x92325e + "\x20yy:" + _0x13a5d0),
											this["physics"]["world"]["setBounds"](
												_0x92325e,
												_0x13a5d0,
												_0x547e69,
												_0x5a9345
											);
									}),
									(window["resumme"] = () => {
										var _0x5eaf91 = _0x2a1a1a;
										this["cameras"]["main"]["startFollow"](_0x2164b8["Core"]["Player"]),
											_0x2164b8["Core"]["BGMan"]["ToggleScrolling"](!0x0),
											_0x2164b8["Core"]["Player"]["SetCollideWithWorld"](!0x1);
									})),
								(null === (_0x18e694 = this["input"]["gamepad"]["pad1"]) || void 0x0 === _0x18e694
									? void 0x0
									: _0x18e694["connected"]) &&
									((this["gamepad"] = this["input"]["gamepad"]["pad1"]),
									(null ===
										(_0x24a442 =
											null === (_0x3fa126 = this["gamepad"]) || void 0x0 === _0x3fa126
												? void 0x0
												: _0x3fa126["buttons"]) || void 0x0 === _0x24a442
										? void 0x0
										: _0x24a442["length"]) < 0xa && (this["gamepad"] = null)),
								this["input"]["gamepad"]["once"]("down", (_0x16bc8c, _0x41d807, _0x606f4d) => {
									var _0x17a0b3 = _0x2a1a1a,
										_0x175bf1,
										_0x5dc9d2;
									(this["gamepad"] = _0x16bc8c),
										(null ===
											(_0x5dc9d2 =
												null === (_0x175bf1 = this["gamepad"]) || void 0x0 === _0x175bf1
													? void 0x0
													: _0x175bf1["buttons"]) || void 0x0 === _0x5dc9d2
											? void 0x0
											: _0x5dc9d2["length"]) < 0xa && (this["gamepad"] = null);
								}),
								this["input"]["gamepad"]["on"]("connected", (_0x1962a0, _0x4c9adf, _0x244740) => {
									var _0x62c8ab = _0x2a1a1a,
										_0x33fa59,
										_0x35208f;
									(this["gamepad"] = _0x1962a0),
										(null ===
											(_0x35208f =
												null === (_0x33fa59 = this["gamepad"]) || void 0x0 === _0x33fa59
													? void 0x0
													: _0x33fa59["buttons"]) || void 0x0 === _0x35208f
											? void 0x0
											: _0x35208f["length"]) < 0xa && (this["gamepad"] = null);
								}),
								_0x2bc3e5 &&
									(this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["B"])
										["on"]("down", () => {
											var _0x1b1720 = _0x2a1a1a;
											_0x2164b8["Core"]["Stage"]["SpawnDestructibleOutOfSight"](!0x0);
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["X"])
										["on"]("down", () => {
											var _0x13461e = _0x2a1a1a;
											(_0x2164b8["Core"]["Player"]["xp"] +=
												_0x2164b8["Core"]["LevelUpFactory"]["XpRequiredToLevelUp"] -
												_0x2164b8["Core"]["LevelUpFactory"]["PreviousXpRequiredToLevelUp"]),
												_0x2164b8["Core"]["CheckForLevelUp"]();
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["SPACE"])
										["on"]("down", () => {
											var _0x2f1378 = _0x2a1a1a;
											_0x2164b8["Core"]["SceneManager"]["EnterDebug"]();
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["Z"])
										["on"]("down", () => {
											var _0x26f41f = _0x2a1a1a;
											for (
												let _0x2cd1ac =
													_0x2164b8["Core"]["LevelUpFactory"]["WeaponStore"]["length"] - 0x1;
												_0x2cd1ac >= 0x0;
												_0x2cd1ac--
											) {
												const _0x3aa745 =
													_0x2164b8["Core"]["LevelUpFactory"]["WeaponStore"][_0x2cd1ac];
												_0x2164b8["Core"]["LevelWeaponUp"](_0x3aa745),
													_0x2164b8["Core"]["Player"]["LevelUp"]();
											}
											_0x2164b8["Core"]["Player"]["xp"] =
												_0x2164b8["Core"]["LevelUpFactory"]["PreviousXpRequiredToLevelUp"];
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["P"])
										["on"]("down", () => {
											_0x2164b8["Core"]["TimeStop"]();
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["L"])
										["on"]("down", () => {
											var _0xd56d70 = _0x2a1a1a;
											_0x2164b8["Core"]["MakePickup"](
												_0x2164b8["Core"]["Player"]["x"],
												_0x2164b8["Core"]["Player"]["y"],
												_0x3bf2f1["NFT"]
											);
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["G"])
										["on"]("down", () => {
											var _0x486936 = _0x2a1a1a;
											_0x2164b8["Core"]["debug_Treasure"]();
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["I"])
										["on"]("down", () => {
											var _0x5ddd46 = _0x2a1a1a;
											_0x2164b8["Core"]["Player"]["SetInvulForMilliSeconds"](
												Number["MAX_SAFE_INTEGER"]
											);
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["H"])
										["on"]("down", () => {
											var _0x21d826 = _0x2a1a1a;
											_0x2164b8["Core"]["Player"]["RecoverHp"](0x270f);
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["K"])
										["on"]("down", () => {
											var _0x224e94 = _0x2a1a1a;
											_0x2164b8["Core"]["RosaryDamage"]();
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["V"])
										["on"]("down", () => {
											_0x2164b8["Core"]["TurnOnVacuum"]();
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["O"])
										["on"]("down", () => {
											var _0x459399 = _0x2a1a1a;
											_0x2164b8["Core"]["Player"]["OnDeath"]();
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["E"])
										["on"]("down", () => {
											var _0x1107f7 = _0x2a1a1a;
											_0x2164b8["Core"]["debug_SpawnEnemies"]();
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["Q"])
										["on"]("down", () => {
											var _0x82fa2 = _0x2a1a1a;
											_0x2164b8["Core"]["debug_CharShowcase"](!0x1);
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["T"])
										["on"]("down", () => {
											var _0x18f0dd = _0x2a1a1a;
											_0x2164b8["Core"]["debug_NextMinute"]();
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["F"])
										["on"]("down", () => {
											var _0x424256 = _0x2a1a1a;
											(_0x171870[_0x3bf2f1["STATS_TREASURE_3"]]["pickedupAmount"] += 0x1),
												_0x2164b8["Core"]["debug_FireAll"]();
										}),
									this["input"]["on"](
										"wheel",
										function (_0x4456a8, _0x1df05d, _0x181456, _0x58d4b8, _0x35ce1f) {
											var _0x3d226d = _0x2a1a1a;
											(this["cameras"]["main"]["zoom"] -= 0.001 * _0x58d4b8),
												(this["cameras"]["main"]["zoom"] = Math["min"](
													Math["max"](this["cameras"]["main"]["zoom"], 0.05),
													0x4
												));
										}["bind"](this)
									),
									_0x2bc3e5))
							) {
								var _0x59dc91 = this["add"]
									["image"](0x0, 0x60 * _0x1aaca4, "UI", "pause.png")
									["setScrollFactor"](0x0)
									["setScale"](0x3 * _0x1aaca4)
									["setInteractive"]()
									["setAlpha"](0.3)
									["setOrigin"](0x0, 0x0);
								_0x179e04 || _0x59dc91["setAlpha"](0.001),
									_0x59dc91["on"]("pointerdown", () => {
										_0x2164b8["Core"]["SceneManager"]["EnterDebug"]();
									});
							}
							if (
								((this["pauseButton"] = this["add"]
									["image"](this["renderer"]["width"], 0x60 * _0x1aaca4, "UI", "pause.png")
									["setScrollFactor"](0x0)
									["setScale"](0x3 * _0x1aaca4)
									["setInteractive"]()
									["setAlpha"](0.3)
									["setOrigin"](0x1, 0x0)),
								this["pauseButton"]["on"]("pointerdown", () => {
									var _0x266006 = _0x2a1a1a;
									_0x2164b8["Core"]["SceneManager"]["EnterPause"]();
								}),
								_0x179e04 &&
									((this["fpsText"] = new _0x3c38cc(this)),
									this["fpsText"]["setScrollFactor"](0x0),
									(this["debugText"] = this["add"]
										["text"](0x0, 0xc8, "", {
											color: "white",
											fontSize: "14px",
										})
										["setScrollFactor"](0x0)
										["setDepth"](Number["MAX_SAFE_INTEGER"]))),
								_0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"])
							) {
								var _0x44a2f8 =
									_0x117b45[_0x2164b8["Core"]["PlayerOptions"]["SelectedStage"]][0x0]["hyper"];
								_0x44a2f8["BGM_ignoreModsForNewSoundtrack"] &&
								_0x2164b8["Core"]["PlayerOptions"]["StreamSafeEnabled"]
									? _0x2164b8["Sound"]["PlayMusic"](_0x2164b8["Core"]["CurrentBGM"], {
											volume: 0.3,
											loop: !0x0,
											rate: 0x1,
											detune: 0x0,
									  })
									: _0x2164b8["Core"]["PlayerOptions"]["StreamSafeEnabled"]
									? _0x2164b8["Sound"]["PlayMusic"](_0x2164b8["Core"]["CurrentBGM"], {
											volume: 0.3,
											loop: !0x0,
											rate: _0x44a2f8["BGM_new_rate"],
											detune: _0x44a2f8["BGM_new_detune"],
									  })
									: _0x2164b8["Sound"]["PlayMusic"](_0x2164b8["Core"]["CurrentBGM"], {
											volume: 0.3,
											loop: !0x0,
											rate: _0x44a2f8["BGM_rate"],
											detune: _0x44a2f8["BGM_detune"],
									  });
							} else
								_0x2164b8["Sound"]["PlayMusic"](_0x2164b8["Core"]["CurrentBGM"], {
									volume: 0.3,
									loop: !0x0,
									rate: 0x1,
									detune: 0x0,
								});
						}
						["dumpJoyStickState"]() {}
						["update"](_0x5e02c, _0x2ddfc7 = 0x0) {
							var _0x2b1176 = _0x5d9431;
							if (
								(_0x179e04 && this["fpsText"]["update"](),
								(this["maxSpeed"] =
									_0x1fa5bb["PlayerPxSpeed"] * _0x2164b8["Core"]["Player"]["moveSpeed"]),
								this["pointer"]["isDown"] || this["input"]["pointer1"]["isDown"])
							)
								this["joyStick"]["visible"] ||
									((this["joyStick"]["visible"] = !0x0),
									(this["joyStick"]["enable"] = !0x0),
									this["joyStick"]["setPosition"](
										this["pointer"]["x"] | this["input"]["pointer1"]["x"],
										this["pointer"]["y"] | this["input"]["pointer1"]["y"]
									),
									_0x2164b8["Core"]["PlayerOptions"]["JoystickVisible"]
										? ((this["joyStick"]["thumb"]["alpha"] = 0x1),
										  (this["joyStick"]["base"]["alpha"] = 0x1))
										: ((this["joyStick"]["thumb"]["alpha"] = 0.001),
										  (this["joyStick"]["base"]["alpha"] = 0.001))),
									this["physics"]["velocityFromRotation"](
										this["joyStick"]["rotation"],
										this["joyStick"]["force"] > 0x10 * _0x1aaca4 ? this["maxSpeed"] : 0x0,
										_0x2164b8["Core"]["Player"]["body"]["velocity"]
									),
									this["_lastVelocity"]["copy"](_0x2164b8["Core"]["Player"]["body"]["velocity"]);
							else {
								(this["joyStick"]["enable"] = !0x1),
									(this["joyStick"]["visible"] = !0x1),
									(_0x2164b8["Core"]["Player"]["lastFacedDirection"] = this["_lastVelocity"]),
									_0x2164b8["Core"]["Player"]["body"]["velocity"]["set"](0x0);
								let _0x579017 = !0x1;
								(this["cursorsVector"]["x"] = 0x0),
									(this["cursorsVector"]["y"] = 0x0),
									(_0x579017 = this["updateCursors"](_0x2ddfc7)),
									(_0x579017 = _0x579017 || this["updateController"](_0x2ddfc7)),
									_0x579017
										? (_0x2164b8["Core"]["Player"]["setVelocity"](
												this["cursorsVector"]["x"],
												this["cursorsVector"]["y"]
										  ),
										  this["_lastVelocity"]["copy"](
												_0x2164b8["Core"]["Player"]["body"]["velocity"]
										  ))
										: ((_0x2164b8["Core"]["Player"]["lastFacedDirection"] = this["_lastVelocity"]),
										  _0x2164b8["Core"]["Player"]["body"]["velocity"]["set"](0x0));
							}
							for (let _0x424629 = 0x0; _0x424629 < 0x14; _0x424629++)
								this["containmentRect_Enemies"]["DespawnIfOutside"](
									_0x2164b8["Core"]["EnemyGroup"]["children"]["entries"]
								);
							if (
								((this["containmentRect_Bullets"]["x"] =
									_0x2164b8["Core"]["Player"]["x"] - this["containmentRect_Bullets"]["halfWidth"]),
								(this["containmentRect_Bullets"]["y"] =
									_0x2164b8["Core"]["Player"]["y"] - this["containmentRect_Bullets"]["halfHeight"]),
								this["containmentRect_Bullets"]["CheckAllAndDespawnIfOutside"](
									_0x2164b8["Core"]["BulletGroup"]["children"]["entries"]
								),
								_0x2164b8["Core"]["Update"](_0x2ddfc7),
								_0x2164b8["Core"]["Stage"]["Update"](_0x2ddfc7),
								_0x179e04)
							) {
								_0x2164b8["Core"]["Weapons"]["reduce"](function (_0x13c8bd, _0x1e8af3) {
									return _0x13c8bd + _0x1e8af3["ActiveBulletCount"]();
								}, 0x0);
								const _0xa25700 = _0x2164b8["Core"]["gemsPool"]["spawned"][_0x3bf2f1["GEM"]]["reduce"](
									function (_0x1d8ac9, _0x2f9313) {
										return _0x1d8ac9 + _0x2f9313["value"];
									},
									0x0
								);
								this["debugText"]["text"] =
									"\x0a\x09\x09\x09\x09Enemies:\x20" +
									_0x2164b8["Core"]["EnemyGroup"]["children"]["entries"]["length"] +
									"\x20\x0a\x0a\x09\x09\x09\x09EventEn:\x20" +
									_0x2164b8["Core"]["Stage"]["stageEventManager"]["spawned"] +
									"\x20\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09Bullets:\x20" +
									_0x2164b8["Core"]["BulletGroup"]["children"]["entries"]["length"] +
									"\x20\x0a\x0a\x09\x09\x09\x09Pickups:\x20" +
									_0x2164b8["Core"]["PickupGroup"]["children"]["entries"]["length"] +
									"\x20\x0a\x0a\x09\x09\x09\x09XP:\x20" +
									_0xa25700 +
									"\x20\x0a\x0a\x09\x09\x09\x09";
							}
							this["enterPause"] &&
								((this["enterPause"] = !0x1), _0x2164b8["Core"]["SceneManager"]["EnterPause"]());
						}
						["updateCursors"](_0x54bb40) {
							var _0x542a9f = _0x5d9431;
							let _0x3a8bd4 = !0x1;
							return (
								this["cursors"]["left"]["isDown"] || this["aKey"]["isDown"]
									? ((this["cursorsVector"]["x"] = -0x1), (_0x3a8bd4 = !0x0))
									: (this["cursors"]["right"]["isDown"] || this["dKey"]["isDown"]) &&
									  ((this["cursorsVector"]["x"] = 0x1), (_0x3a8bd4 = !0x0)),
								this["cursors"]["up"]["isDown"] || this["wKey"]["isDown"]
									? ((this["cursorsVector"]["y"] = -0x1), (_0x3a8bd4 = !0x0))
									: (this["cursors"]["down"]["isDown"] || this["sKey"]["isDown"]) &&
									  ((this["cursorsVector"]["y"] = 0x1), (_0x3a8bd4 = !0x0)),
								(0x0 == this["cursorsVector"]["x"] && 0x0 == this["cursorsVector"]["y"]) ||
									((this["cursorsVector"] = this["cursorsVector"]["normalize"]()),
									(this["cursorsVector"]["x"] *= this["maxSpeed"]),
									(this["cursorsVector"]["y"] *= this["maxSpeed"]),
									(_0x3a8bd4 = !0x0)),
								_0x3a8bd4
							);
						}
						["updateController"](_0x298427) {
							var _0x5ad898 = _0x5d9431;
							if (this["blockInput"]) return;
							let _0x57ad87 = !0x1;
							return this["gamepad"]
								? this["gamepad"]["isButtonDown"](0x9) && !this["wasDown"]
									? (_0x2164b8["Core"]["SceneManager"]["EnterPause"](),
									  (this["wasDown"] = !0x0),
									  _0x57ad87)
									: this["gamepad"]["isButtonDown"](0x8) && _0x2bc3e5 && !this["wasDown"]
									? (_0x2164b8["Core"]["SceneManager"]["EnterDebug"](),
									  (this["wasDown"] = !0x0),
									  _0x57ad87)
									: ((this["wasDown"] = !0x1),
									  this["gamepad"]["left"]
											? ((this["cursorsVector"]["x"] = -0x1), (_0x57ad87 = !0x0))
											: this["gamepad"]["right"] &&
											  ((this["cursorsVector"]["x"] = 0x1), (_0x57ad87 = !0x0)),
									  this["gamepad"]["up"]
											? ((this["cursorsVector"]["y"] = -0x1), (_0x57ad87 = !0x0))
											: this["gamepad"]["down"] &&
											  ((this["cursorsVector"]["y"] = 0x1), (_0x57ad87 = !0x0)),
									  0x0 != this["cursorsVector"]["x"] || 0x0 != this["cursorsVector"]["y"]
											? ((this["cursorsVector"] = this["cursorsVector"]["normalize"]()),
											  (this["cursorsVector"]["x"] *= this["maxSpeed"]),
											  (this["cursorsVector"]["y"] *= this["maxSpeed"]),
											  (_0x57ad87 = !0x0))
											: (Math["abs"](this["gamepad"]["leftStick"]["x"]) > 0.3 &&
													((this["cursorsVector"]["x"] =
														this["gamepad"]["leftStick"]["x"] * this["maxSpeed"]),
													(_0x57ad87 = !0x0)),
											  Math["abs"](this["gamepad"]["leftStick"]["y"]) > 0.3 &&
													((this["cursorsVector"]["y"] =
														this["gamepad"]["leftStick"]["y"] * this["maxSpeed"]),
													(_0x57ad87 = !0x0))),
									  _0x57ad87)
								: _0x57ad87;
						}
					}
					var _0x536315 = function (_0x213472, _0x494384, _0x39ec5b, _0x34e013) {
						return new (_0x39ec5b || (_0x39ec5b = Promise))(function (_0x2457b8, _0x431b3a) {
							function _0x71d8e8(_0x2d8344) {
								var _0x329945 = a0_0x1be4;
								try {
									_0x41cff4(_0x34e013["next"](_0x2d8344));
								} catch (_0xf0094f) {
									_0x431b3a(_0xf0094f);
								}
							}

							function _0x4301f9(_0x194c84) {
								var _0x1482e1 = a0_0x1be4;
								try {
									_0x41cff4(_0x34e013["throw"](_0x194c84));
								} catch (_0x4b9a99) {
									_0x431b3a(_0x4b9a99);
								}
							}

							function _0x41cff4(_0xc0bba3) {
								var _0x43fe0d = a0_0x1be4,
									_0x6afcd6;
								_0xc0bba3["done"]
									? _0x2457b8(_0xc0bba3["value"])
									: ((_0x6afcd6 = _0xc0bba3["value"]),
									  _0x6afcd6 instanceof _0x39ec5b
											? _0x6afcd6
											: new _0x39ec5b(function (_0x22a55f) {
													_0x22a55f(_0x6afcd6);
											  }))["then"](_0x71d8e8, _0x4301f9);
							}
							_0x41cff4((_0x34e013 = _0x34e013["apply"](_0x213472, _0x494384 || []))["next"]());
						});
					};
					class _0x1222e0 extends Phaser["Scene"] {
						constructor() {
							var _0x4bca8a = _0x5d9431;
							super({
								key: _0x53d8cd["PreloadScene"],
							});
						}
						["preload"]() {
							var _0xb057d4 = _0x5d9431;
							this["load"]["image"]("introBG", "assets/img/introBG.png"),
								this["load"]["image"]("title", "assets/img/title.png"),
								this["load"]["image"]("gameOver", "assets/img/gameOver.png"),
								this["load"]["image"]("stageComplete", "assets/img/stageComplete.png"),
								this["load"]["atlas"]("UI", "assets/img/UI.png", "assets/img/UI.json"),
								this["load"]["atlas"]("enemies", "assets/img/enemies.png", "assets/img/enemies.json"),
								this["load"]["atlas"]("vfx", "assets/img/vfx.png", "assets/img/vfx.json"),
								this["load"]["atlas"](
									"illustrations",
									"assets/img/illustrations.png",
									"assets/img/illustrations.json"
								),
								this["load"]["multiatlas"]("items", "assets/img/items.json", "assets/img"),
								this["load"]["multiatlas"]("characters", "assets/img/characters.json", "assets/img"),
								this["load"]["multiatlas"]("angel", "assets/img/angel.json", "assets/img"),
								this["load"]["json"]("langKeys", "assets/lang/langKeys.json"),
								this["load"]["json"]("lang", "assets/lang/lang.json"),
								this["load"]["json"]("achievementLang", "assets/lang/achievementLang.json"),
								this["load"]["json"]("itemLang", "assets/lang/itemLang.json"),
								this["load"]["json"]("powerUpLang", "assets/lang/powerUpLang.json"),
								this["load"]["json"]("stageLang", "assets/lang/stageLang.json"),
								this["load"]["json"]("weaponLang", "assets/lang/weaponLang.json"),
								this["load"]["json"]("charLang", "assets/lang/characterLang.json"),
								this["load"]["bitmapFont"](
									"damage",
									"assets/fonts/damNum-export.png",
									"assets/fonts/damNum-export.xml"
								),
								this["load"]["audio"](_0x522ca7["Treasure1"], [
									"assets/sfx/VS_Treasure1Small_v04-03.ogg",
								]),
								this["load"]["audio"](_0x522ca7["Treasure2"], [
									"assets/sfx/VS_Treasure2Medium_v02-03.ogg",
								]),
								this["load"]["audio"](_0x522ca7["Treasure3"], [
									"assets/sfx/VS_Treasure3Large_v01-03.ogg",
								]),
								this["load"]["audio"](_0x522ca7["ThingFound"], [
									"assets/sfx/VS_TreasureFound_v04-01.ogg",
								]),
								this["load"]["audio"](_0x522ca7["BGM_GameOver"], ["assets/sfx/VS_GameOver_v02-01.ogg"]),
								this["load"]["audio"](_0x522ca7["BGM_Intro"], ["assets/sfx/VS_TitleIntro_v01-03.ogg"]),
								this["load"]["audio"](_0x1e47fc["BGM_Forest"], ["assets/sfx/VS_Music_v04-01.ogg"]),
								this["load"]["audio"](_0x1e47fc["BGM_Library"], ["assets/sfx/bgm_elrond_library.ogg"]),
								this["load"]["audio"](_0x1e47fc["BGM_Library_Legacy"], ["assets/sfx/bgm_library.ogg"]),
								this["load"]["audio"](_0x1e47fc["BGM_GreenAcres"], [
									"assets/sfx/bgm_elrond_forest.ogg",
								]),
								this["load"]["audio"](_0x522ca7["ClickIn"], ["assets/sfx/sfx_sounds_pause7_in.ogg"]),
								this["load"]["audio"](_0x522ca7["ClickOut"], ["assets/sfx/sfx_sounds_pause7_out.ogg"]),
								this["load"]["audio"](_0x522ca7["MagicMissile"], [
									"assets/sfx/VS_ProjectileMagic_v04-03.ogg",
								]),
								this["load"]["audio"](_0x522ca7["Whip"], ["assets/sfx/sfx_sounds_impact15_2.ogg"]),
								this["load"]["audio"](_0x522ca7["Shot"], ["assets/sfx/VS_Projectile_v06-02.ogg"]),
								this["load"]["audio"](_0x522ca7["Lightning"], ["assets/sfx/sfx_lightningimpact.ogg"]),
								this["load"]["audio"](_0x522ca7["Holywater"], ["assets/sfx/sfx_frostimpact.ogg"]),
								this["load"]["audio"](_0x522ca7["LevelUp"], ["assets/sfx/VS_LevelUp_v02-02.ogg"]),
								this["load"]["audio"](_0x522ca7["Hit"], ["assets/sfx/VS_EnemyHit_v06-02.ogg"]),
								this["load"]["audio"](_0x522ca7["Coin"], ["assets/sfx/sfx_coin_double4.ogg"]),
								this["load"]["audio"](_0x522ca7["Gem"], ["assets/sfx/VS_Gem_v04-01-B.ogg"]),
								this["load"]["audio"](_0x522ca7["Roast"], ["assets/sfx/sfx_sounds_powerup2.ogg"]),
								this["load"]["audio"](_0x522ca7["Rosary"], ["assets/sfx/sfx_exp_double1.ogg"]),
								this["load"]["audio"](_0x522ca7["Orologion"], ["assets/sfx/sfx_sounds_impact9.ogg"]),
								this["load"]["audio"](_0x522ca7["Vacuum"], ["assets/sfx/sfx_sounds_powerup18.ogg"]),
								this["load"]["audio"](_0x522ca7["PentagramSFX"], ["assets/sfx/sfx_wpn_cannon3.ogg"]),
								this["load"]["audio"](_0x522ca7["LossSFX"], ["assets/sfx/sxf_loss.ogg"]),
								this["load"]["audio"](_0x522ca7["Explosion"], ["assets/sfx/sfx_exp_odd1.ogg"]),
								this["load"]["audio"](_0x522ca7["Explosion2"], ["assets/sfx/sfx_exp_odd1.ogg"]),
								this["load"]["audio"](_0x522ca7["Alert"], ["assets/sfx/sfx_alarm_loop6.ogg"]),
								this["load"]["audio"](_0x522ca7["LittleHeart"], ["assets/sfx/sfx_littlepickup.ogg"]),
								this["load"]["audio"](_0x522ca7["Fireloop"], ["assets/sfx/sfx_fireloop.ogg"]),
								this["load"]["audio"](_0x522ca7["Whistle"], ["assets/sfx/sfx_whistle.ogg"]),
								(this["sound"]["pauseOnBlur"] = !0x1);
						}
						["create"]() {
							var _0x3d92be = _0x5d9431;
							this["cameras"]["main"]["setBackgroundColor"]("#C80000"),
								this["cameras"]["main"]["backgroundColor"]["setTo"](0xc8, 0x0, 0x0),
								(this["cameras"]["main"]["zoom"] = 1.1),
								this["scene"]["launch"](_0x53d8cd["OmniScene"]),
								(_0x2164b8["Core"] = new _0x1fa5bb(this["game"], this)),
								(_0x2164b8["Core"]["SceneManager"] = new (class {
									constructor(_0x5ac7bd, _0x25ade6) {
										var _0x2c2730 = _0x3d92be;
										(this["Game"] = _0x5ac7bd), (this["scene"] = _0x25ade6);
									}
									["Init"]() {
										var _0x287338 = _0x3d92be;
										(this["UI_topBar"] = this["scene"]["get"](_0x53d8cd["UI_topBar"])),
											(this["UI_mainMenu"] = this["scene"]["get"](_0x53d8cd["UI_mainMenu"])),
											(this["MainScene"] = this["scene"]["get"](_0x53d8cd["MainScene"])),
											(this["IntroScene"] = this["scene"]["get"](_0x53d8cd["IntroScene"])),
											(this["CharSelectionScene"] = this["scene"]["get"](
												_0x53d8cd["CharSelectionScene"]
											)),
											(this["StageSelectionScene"] = this["scene"]["get"](
												_0x53d8cd["StageSelectionScene"]
											)),
											(this["PowerUpScene"] = this["scene"]["get"](_0x53d8cd["PowerUpScene"])),
											(this["OmniScene"] = this["scene"]["get"](_0x53d8cd["OmniScene"])),
											(this["OptionsScene"] = this["scene"]["get"](_0x53d8cd["OptionsScene"])),
											(this["GameOverScene"] = this["scene"]["get"](_0x53d8cd["GameOverScene"])),
											(this["PauseScene"] = this["scene"]["get"](_0x53d8cd["PauseScene"])),
											(this["UI_levelUpScene"] = this["scene"]["get"](
												_0x53d8cd["UI_levelUpScene"]
											)),
											(this["CollectionWeaponScene"] = this["scene"]["get"](
												_0x53d8cd["CollectionWeaponScene"]
											)),
											(this["UI_treasureScene"] = this["scene"]["get"](
												_0x53d8cd["UI_treasureScene"]
											)),
											(this["PostGameScene"] = this["scene"]["get"](_0x53d8cd["PostGameScene"])),
											(this["CollectionAchievementsScene"] = this["scene"]["get"](
												_0x53d8cd["CollectionAchievementsScene"]
											)),
											(this["DebugScene"] = this["scene"]["get"](_0x53d8cd["DebugScene"])),
											(this["UI_overlayScene"] = this["scene"]["get"](
												_0x53d8cd["UI_overlayScene"]
											)),
											(this["UI_creditsScene"] = this["scene"]["get"](
												_0x53d8cd["UI_creditsScene"]
											)),
											(this["UI_resolutionScene"] = this["scene"]["get"](
												_0x53d8cd["UI_resolutionScene"]
											)),
											(this["UI_newItemFoundScene"] = this["scene"]["get"](
												_0x53d8cd["UI_newItemFoundScene"]
											));
									}
									["LaunchUIOverlay"]() {
										var _0x3a1c6a = _0x3d92be;
										this["scene"]["launch"](this["UI_overlayScene"]),
											this["scene"]["bringToTop"](this["UI_overlayScene"]);
									}
									["OptionsFromMainMenu"]() {
										var _0x2460e1 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["launch"](this["OptionsScene"]),
											this["scene"]["bringToTop"](this["OptionsScene"]),
											this["scene"]["pause"](this["IntroScene"]),
											this["UI_topBar"]["EnableBack"](this["ExitOptions"]["bind"](this)),
											this["UI_topBar"]["DisableOptions"](),
											this["scene"]["bringToTop"](this["UI_overlayScene"]);
									}
									["ExitOptions"]() {
										var _0x5118b0 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["setVisible"](!0x1, this["OptionsScene"]),
											this["scene"]["stop"](this["OptionsScene"]),
											this["scene"]["resume"](this["IntroScene"]),
											this["IntroScene"]["MakeUIGrid"](
												this["IntroScene"]["UI_topBar"]["OptionsButton"]
											),
											this["UI_topBar"]["EnableOptions"](
												this["OptionsFromMainMenu"]["bind"](this)
											),
											this["UI_topBar"]["DisableBack"]();
									}
									["StartFromMainMenu"]() {
										var _0x1eb1a2 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["setVisible"](!0x1, this["UI_mainMenu"]),
											this["scene"]["sleep"](this["UI_mainMenu"]),
											this["scene"]["launch"](this["CharSelectionScene"]),
											this["scene"]["bringToTop"](this["CharSelectionScene"]),
											this["UI_topBar"]["EnableBack"](
												this["BackFromCharSelectionScene"]["bind"](this)
											);
									}
									["PowerUpFromMainMenu"]() {
										var _0x5248e1 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["setVisible"](!0x1, this["UI_mainMenu"]),
											this["scene"]["sleep"](this["UI_mainMenu"]),
											this["scene"]["launch"](this["PowerUpScene"]),
											this["scene"]["bringToTop"](this["PowerUpScene"]),
											this["UI_topBar"]["EnableBack"](
												this["BackFromPowerUpSelectionScene"]["bind"](this)
											);
									}
									["BackFromCharSelectionScene"]() {
										var _0x13a87e = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["setVisible"](!0x1, this["CharSelectionScene"]),
											this["scene"]["stop"](this["CharSelectionScene"]),
											this["scene"]["setVisible"](!0x0, this["UI_mainMenu"]),
											this["scene"]["wake"](this["UI_mainMenu"]),
											this["scene"]["bringToTop"](this["UI_mainMenu"]),
											this["UI_topBar"]["EnableOptions"](
												this["OptionsFromMainMenu"]["bind"](this)
											),
											this["UI_topBar"]["DisableBack"](),
											this["IntroScene"]["MakeUIGrid"](
												this["IntroScene"]["UI_mainMenu"]["StartButton"]
											);
									}
									["BackFromStageSelectionScene"]() {
										var _0x50d58d = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["setVisible"](!0x1, this["StageSelectionScene"]),
											this["scene"]["stop"](this["StageSelectionScene"]),
											this["scene"]["setVisible"](!0x0, this["UI_mainMenu"]),
											this["scene"]["wake"](this["UI_mainMenu"]),
											this["scene"]["bringToTop"](this["UI_mainMenu"]),
											this["UI_topBar"]["EnableOptions"](
												this["OptionsFromMainMenu"]["bind"](this)
											),
											this["UI_topBar"]["DisableBack"](),
											this["IntroScene"]["MakeUIGrid"](
												this["IntroScene"]["UI_mainMenu"]["StartButton"]
											);
									}
									["BackFromPowerUpSelectionScene"]() {
										var _0xa71b4f = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["setVisible"](!0x1, this["PowerUpScene"]),
											this["scene"]["stop"](this["PowerUpScene"]),
											this["scene"]["setVisible"](!0x0, this["UI_mainMenu"]),
											this["scene"]["wake"](this["UI_mainMenu"]),
											this["scene"]["bringToTop"](this["UI_mainMenu"]),
											this["UI_topBar"]["EnableOptions"](
												this["OptionsFromMainMenu"]["bind"](this)
											),
											this["UI_topBar"]["DisableBack"](),
											this["IntroScene"]["MakeUIGrid"](
												this["IntroScene"]["UI_mainMenu"]["PowerupButton"]
											);
									}
									["StartFromCharSelection"]() {
										var _0x1d70bc = _0x3d92be;
										if (
											(this["UI_overlayScene"]["DestroyGrid"](),
											_0x2164b8["Core"]["PlayerOptions"]["UnlockedStages"]["length"] <= 0x1 &&
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedHypers"]["length"] <= 0x0)
										)
											return (
												this["scene"]["stop"](this["CharSelectionScene"]),
												void this["LaunchMainScene"]()
											);
										this["scene"]["setVisible"](!0x1, this["CharSelectionScene"]),
											this["scene"]["stop"](this["CharSelectionScene"]),
											this["scene"]["launch"](this["StageSelectionScene"]),
											this["scene"]["bringToTop"](this["StageSelectionScene"]),
											this["UI_topBar"]["EnableBack"](
												this["BackFromStageSelectionScene"]["bind"](this)
											);
									}
									["StartFromStageSelection"]() {
										var _0x4ca994 = _0x3d92be;
										this["scene"]["stop"](this["StageSelectionScene"]), this["LaunchMainScene"]();
									}
									["LaunchMainScene"]() {
										var _0x207aa9 = _0x3d92be;
										this["scene"]["stop"](this["UI_topBar"]),
											this["scene"]["stop"](this["IntroScene"]),
											this["scene"]["stop"](this["UI_mainMenu"]),
											this["scene"]["launch"](this["MainScene"]);
									}
									["QuitFromPauseMenu"]() {
										var _0x2a87c9 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["stop"](this["PauseScene"]),
											this["scene"]["stop"](this["GameOverScene"]),
											this["scene"]["stop"](this["MainScene"]),
											this["scene"]["launch"](this["PostGameScene"]),
											_0x2164b8["Sound"]["StopMusic"](_0x2164b8["Core"]["CurrentBGM"]);
									}
									["PostGameFromGameOver"]() {
										var _0x212708 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["pause"](this["MainScene"]),
											this["scene"]["stop"](this["GameOverScene"]),
											this["scene"]["launch"](this["PostGameScene"]),
											_0x2164b8["Sound"]["StopMusic"](_0x2164b8["Core"]["CurrentBGM"]);
									}
									["StartFromPostGame"]() {
										var _0x4e255a = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["stop"](this["PauseScene"]),
											this["scene"]["stop"](this["PostGameScene"]),
											this["scene"]["stop"](this["MainScene"]),
											this["scene"]["start"](this["IntroScene"]);
									}
									["CollectionFromMainMenu"]() {
										var _0x5a0d58 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["setVisible"](!0x1, this["UI_mainMenu"]),
											this["scene"]["sleep"](this["UI_mainMenu"]),
											this["scene"]["launch"](this["CollectionWeaponScene"]),
											this["scene"]["bringToTop"](this["CollectionWeaponScene"]),
											this["UI_topBar"]["EnableBack"](this["BackFromCollection"]["bind"](this));
									}
									["AchievementsFromMainMenu"]() {
										var _0xf10dff = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["setVisible"](!0x1, this["UI_mainMenu"]),
											this["scene"]["sleep"](this["UI_mainMenu"]),
											this["scene"]["launch"](this["CollectionAchievementsScene"]),
											this["scene"]["bringToTop"](this["CollectionAchievementsScene"]),
											this["UI_topBar"]["EnableBack"](this["BackFromAchievements"]["bind"](this));
									}
									["Credits_FromMainMenu"]() {
										var _0x2d4630 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["setVisible"](!0x1, this["UI_mainMenu"]),
											this["scene"]["sleep"](this["UI_mainMenu"]),
											this["scene"]["launch"](this["UI_creditsScene"]),
											this["scene"]["bringToTop"](this["UI_creditsScene"]),
											this["UI_topBar"]["EnableBack"](this["BackFrom_Credits"]["bind"](this));
									}
									["Resolution_FromMainMenu"]() {
										var _0x3fc4f9 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["setVisible"](!0x1, this["UI_mainMenu"]),
											this["scene"]["sleep"](this["UI_mainMenu"]),
											this["scene"]["launch"](this["UI_resolutionScene"]),
											this["scene"]["bringToTop"](this["UI_resolutionScene"]),
											this["UI_topBar"]["EnableBack"](this["BackFrom_Resolution"]["bind"](this));
									}
									["BackFromCollection"]() {
										var _0x14ea62 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["stop"](this["CollectionWeaponScene"]),
											this["scene"]["setVisible"](!0x0, this["UI_mainMenu"]),
											this["scene"]["wake"](this["UI_mainMenu"]),
											this["scene"]["bringToTop"](this["UI_mainMenu"]),
											this["UI_topBar"]["EnableOptions"](
												this["OptionsFromMainMenu"]["bind"](this)
											),
											this["UI_topBar"]["DisableBack"](),
											this["IntroScene"]["MakeUIGrid"](
												this["IntroScene"]["UI_mainMenu"]["CollectionButton"]
											);
									}
									["BackFromAchievements"]() {
										var _0x1b2693 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["stop"](this["CollectionAchievementsScene"]),
											this["scene"]["setVisible"](!0x0, this["UI_mainMenu"]),
											this["scene"]["wake"](this["UI_mainMenu"]),
											this["scene"]["bringToTop"](this["UI_mainMenu"]),
											this["UI_topBar"]["EnableOptions"](
												this["OptionsFromMainMenu"]["bind"](this)
											),
											this["UI_topBar"]["DisableBack"](),
											this["IntroScene"]["MakeUIGrid"](
												this["IntroScene"]["UI_mainMenu"]["AchievementButton"]
											);
									}
									["BackFrom_Credits"]() {
										var _0x58e489 = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["stop"](this["UI_creditsScene"]),
											this["scene"]["setVisible"](!0x0, this["UI_mainMenu"]),
											this["scene"]["wake"](this["UI_mainMenu"]),
											this["scene"]["bringToTop"](this["UI_mainMenu"]),
											this["UI_topBar"]["EnableOptions"](
												this["OptionsFromMainMenu"]["bind"](this)
											),
											this["UI_topBar"]["DisableBack"](),
											this["IntroScene"]["MakeUIGrid"](
												this["IntroScene"]["UI_mainMenu"]["CreditsButton"]
											);
									}
									["BackFrom_Resolution"]() {
										var _0x3d6b3f = _0x3d92be;
										this["UI_overlayScene"]["DestroyGrid"](),
											this["scene"]["stop"](this["UI_resolutionScene"]),
											this["scene"]["setVisible"](!0x0, this["UI_mainMenu"]),
											this["scene"]["wake"](this["UI_mainMenu"]),
											this["scene"]["bringToTop"](this["UI_mainMenu"]),
											this["UI_topBar"]["EnableOptions"](
												this["OptionsFromMainMenu"]["bind"](this)
											),
											this["UI_topBar"]["DisableBack"](),
											this["IntroScene"]["MakeUIGrid"](
												this["IntroScene"]["UI_mainMenu"]["ResolutionButton"]
											);
									}
									["StartTreasureScene"]() {
										var _0x208299 = _0x3d92be;
										this["scene"]["pause"](this["MainScene"]),
											_0x2164b8["Sound"]["FadeMusic"](
												_0x2164b8["Core"]["CurrentBGM"],
												0x0,
												0x1f4
											),
											_0x2164b8["Core"]["FreezeSnapshot"](() => {
												var _0x4b3317 = _0x208299;
												this["scene"]["isActive"](this["UI_treasureScene"])
													? (this["scene"]["stop"](this["UI_treasureScene"]),
													  this["scene"]["restart"](this["UI_treasureScene"]))
													: this["scene"]["start"](this["UI_treasureScene"]);
											});
									}
									["ResumeFromTreasureScene"]() {
										var _0x4ed8e8 = _0x3d92be;
										_0x2164b8["ApplyGameResolution"](),
											this["scene"]["resume"](this["MainScene"]),
											this["scene"]["stop"](this["UI_treasureScene"]),
											this["UI_overlayScene"]["DestroyGrid"](),
											_0x2164b8["Core"]["RemoveSnapshot"](),
											_0x2164b8["Sound"]["FadeMusic"](
												_0x2164b8["Core"]["CurrentBGM"],
												0.3,
												0x1f4
											);
									}
									["EnterPause"]() {
										var _0x59f705 = _0x3d92be;
										this["scene"]["pause"](this["MainScene"]),
											_0x2164b8["Core"]["FreezeSnapshot"](() => {
												this["scene"]["launch"](this["PauseScene"]);
											});
									}
									["ResumeFromPause"]() {
										var _0x416b7d = _0x3d92be;
										_0x2164b8["ApplyGameResolution"](),
											this["scene"]["resume"](this["MainScene"]),
											this["scene"]["stop"](this["PauseScene"]),
											this["UI_overlayScene"]["DestroyGrid"](),
											_0x2164b8["Core"]["RemoveSnapshot"]();
									}
									["EnterLevelUp"]() {
										var _0x368d53 = _0x3d92be;
										this["scene"]["pause"](this["MainScene"]),
											_0x2164b8["Core"]["FreezeSnapshot"](() => {
												var _0x3246fa = _0x368d53;
												this["scene"]["launch"](this["UI_levelUpScene"]);
											});
									}
									["EnterItemFound"]() {
										var _0x231a50 = _0x3d92be;
										this["scene"]["pause"](this["MainScene"]),
											_0x2164b8["Core"]["FreezeSnapshot"](() => {
												this["scene"]["launch"](this["UI_newItemFoundScene"]);
											});
									}
									["ResumeFromLevelUp"]() {
										var _0x30effb = _0x3d92be;
										_0x2164b8["ApplyGameResolution"](),
											this["scene"]["resume"](this["MainScene"]),
											this["scene"]["stop"](this["UI_levelUpScene"]),
											this["UI_overlayScene"]["DestroyGrid"](),
											_0x2164b8["Core"]["RemoveSnapshot"](),
											_0x2164b8["Core"]["ExitLevelUpScene"]();
									}
									["ResumeFromItemFound"]() {
										var _0x1e80fa = _0x3d92be;
										_0x2164b8["ApplyGameResolution"](),
											this["scene"]["resume"](this["MainScene"]),
											this["scene"]["stop"](this["UI_newItemFoundScene"]),
											this["UI_overlayScene"]["DestroyGrid"](),
											_0x2164b8["Core"]["RemoveSnapshot"](),
											_0x2164b8["Core"]["ExitLevelUpScene"]();
									}
									["GameOver"]() {
										var _0x52a4ea = _0x3d92be;
										this["scene"]["pause"](this["MainScene"]),
											_0x2164b8["Sound"]["FadeMusic"](
												_0x2164b8["Core"]["CurrentBGM"],
												0x0,
												0x1f4
											),
											_0x2164b8["Core"]["FreezeSnapshot"](() => {
												var _0x48e738 = _0x52a4ea;
												this["scene"]["launch"](this["GameOverScene"]);
											});
									}
									["BackFromGameOver"]() {
										var _0x3e3d67 = _0x3d92be;
										_0x2164b8["ApplyGameResolution"](),
											this["scene"]["resume"](this["MainScene"]),
											this["scene"]["stop"](this["GameOverScene"]),
											this["UI_overlayScene"]["DestroyGrid"](),
											_0x2164b8["Core"]["RemoveSnapshot"](),
											_0x2164b8["Sound"]["FadeMusic"](
												_0x2164b8["Core"]["CurrentBGM"],
												0.3,
												0x1f4
											);
									}
									["EnterDebug"]() {
										var _0x512939 = _0x3d92be;
										this["scene"]["pause"](this["MainScene"]),
											_0x2164b8["Core"]["FreezeSnapshot"](() => {
												var _0x49b8ca = _0x512939;
												this["scene"]["launch"](this["DebugScene"]);
											});
									}
									["ResumeFromDebug"]() {
										var _0x4d5c2c = _0x3d92be;
										_0x2164b8["ApplyGameResolution"](),
											this["scene"]["resume"](this["MainScene"]),
											this["scene"]["stop"](this["DebugScene"]),
											this["UI_overlayScene"]["DestroyGrid"](),
											_0x2164b8["Core"]["RemoveSnapshot"]();
									}
								})(this["game"], this["scene"])),
								_0x2164b8["Core"]["SceneManager"]["Init"](),
								this["LoadOptionsAndLocalisation"]();
						}
						["FadeOut"](_0xebe38b, _0x3895c2, _0x59b887) {
							var _0x6a5a96 = _0x5d9431;
							this["tweens"]["add"]({
								targets: [_0xebe38b, _0x3895c2, _0x59b887],
								alpha: 0x0,
								duration: 0xc8,
								onComplete: () => this["MoveToNextScene"](),
							});
						}
						["LoadOptionsAndLocalisation"]() {
							return _0x536315(this, void 0x0, void 0x0, function* () {
								var _0x1a8297 = a0_0x1be4;
								console["log"]("Loading save data"),
									yield _0x2164b8["Core"]["PlayerOptions"]["Load"](),
									console["log"]("Save data loaded"),
									(_0x2164b8["Lang"] = new (class {
										constructor(_0x53af31) {
											var _0x5b378d = _0x1a8297;
											(this["langNameList"] = []),
												(this["langCodeList"] = ["en", "de", "fr", "ko", "es", "ja", "zh-CN"]),
												(this["langCode"] = "en"),
												(this["langCodeList"] = _0x53af31["cache"]["json"]["get"]("langKeys")),
												(this["langData"] = _0x53af31["cache"]["json"]["get"]("lang")),
												(this["langWeaponData"] =
													_0x53af31["cache"]["json"]["get"]("weaponLang")),
												(this["langAchievementData"] =
													_0x53af31["cache"]["json"]["get"]("achievementLang")),
												(this["langItemData"] = _0x53af31["cache"]["json"]["get"]("itemLang")),
												(this["langPowerupData"] =
													_0x53af31["cache"]["json"]["get"]("powerUpLang")),
												(this["langStageData"] =
													_0x53af31["cache"]["json"]["get"]("stageLang")),
												(this["langCharacterData"] =
													_0x53af31["cache"]["json"]["get"]("charLang"));
											try {
												this["setLangCode"](_0x2164b8["Core"]["PlayerOptions"]["Language"]);
											} catch (_0x220313) {
												console["log"](_0x220313);
											}
										}
										["setLangCode"](_0x4df6cb) {
											var _0x59a62e = _0x1a8297;
											if (
												((this["langCode"] = _0x4df6cb),
												this["langWeaponData"][this["langCode"]] || (this["langCode"] = "en"),
												this["langWeaponData"][this["langCode"]] &&
													this["langWeaponData"][this["langCode"]]["translations"])
											) {
												this["langNameList"] = [];
												for (
													let _0x3af953 = 0x0;
													_0x3af953 < this["langCodeList"]["length"];
													_0x3af953++
												)
													this["langNameList"]["push"](
														this["langData"][this["langCodeList"][_0x3af953]]["native"]
													);
												this["localiseObject"](_0x41a274, this["langWeaponData"]),
													this["localiseObject"](_0x4a95c8, this["langPowerupData"]),
													this["localiseObject"](_0x117b45, this["langStageData"]),
													this["localiseObject"](_0x5b281e, this["langAchievementData"]),
													this["localiseObject"](_0x171870, this["langItemData"]),
													this["localiseObject"](_0x11010a, this["langCharacterData"]);
											}
										}
										["localiseObject"](_0x3fe080, _0x1a6c44) {
											var _0x3206b9 = _0x1a8297;
											for (const _0x3db7ef in _0x3fe080)
												if (
													_0x1a6c44 &&
													_0x1a6c44[this["langCode"]] &&
													_0x1a6c44[this["langCode"]]["translations"] &&
													_0x1a6c44[this["langCode"]]["translations"][_0x3db7ef]
												) {
													if (_0x3fe080[_0x3db7ef]["length"]) {
														for (const _0x3fe78b in _0x3fe080[_0x3db7ef][0x0])
															_0x1a6c44[this["langCode"]]["translations"][_0x3db7ef][
																_0x3fe78b
															] &&
																(_0x3fe080[_0x3db7ef][0x0][_0x3fe78b] =
																	_0x1a6c44[this["langCode"]]["translations"][
																		_0x3db7ef
																	][_0x3fe78b]);
													} else {
														for (const _0x351c47 in _0x3fe080[_0x3db7ef])
															_0x1a6c44[this["langCode"]]["translations"][_0x3db7ef][
																_0x351c47
															] &&
																(_0x3fe080[_0x3db7ef][_0x351c47] =
																	_0x1a6c44[this["langCode"]]["translations"][
																		_0x3db7ef
																	][_0x351c47]);
													}
												}
										}
										["getLang"](_0x59e109, _0x18e53b = []) {
											var _0x580caf = _0x1a8297;
											if (
												(this["langData"][this["langCode"]] || (this["langCode"] = "en"),
												!this["langData"][this["langCode"]]["translations"])
											) {
												if (!this["langData"]["en"]["translations"]) return "";
												this["langCode"] = "en";
											}
											if (!this["langData"][this["langCode"]]["translations"][_0x59e109]) {
												if (!this["langData"]["en"]["translations"][_0x59e109]) return "";
												this["langCode"] = "en";
											}
											let _0x2575d6 =
												this["langData"][this["langCode"]]["translations"][_0x59e109];
											for (let _0x297ae3 = 0x0; _0x297ae3 < _0x18e53b["length"]; _0x297ae3++)
												_0x2575d6 = _0x2575d6["replace"]("%" + _0x297ae3, _0x18e53b[_0x297ae3]);
											return _0x2575d6;
										}
									})(this["game"])),
									console["log"]("Loc manager created"),
									(_0x2164b8["Sound"] = new (class {
										constructor(_0xc24158, _0x378b7e) {
											var _0x51cf17 = _0x1a8297;
											(this["isFocused"] = !0x0),
												(this["soundLibrary"] = {}),
												(this["musicLibrary"] = {}),
												(this["Game"] = _0xc24158),
												(this["scene"] = _0x378b7e),
												this["Game"]["events"]["addListener"](
													Phaser["Core"]["Events"]["FOCUS"],
													this["onFocus"],
													this
												),
												this["Game"]["events"]["addListener"](
													Phaser["Core"]["Events"]["BLUR"],
													this["onBlur"],
													this
												);
											for (let _0x6da90a in _0x522ca7)
												this["soundLibrary"][_0x6da90a] = {
													instances: 0x0,
												};
											for (let _0x49fefb in _0x1e47fc)
												this["musicLibrary"][_0x49fefb] = {
													instance: null,
												};
										}
										["onFocus"]() {
											var _0x56ad08 = _0x1a8297;
											this["isFocused"] = !0x0;
										}
										["onBlur"]() {
											var _0x16dcaf = _0x1a8297;
											this["isFocused"] = !0x1;
										}
										["PlayMusic"](_0x456e23, _0x1ee2e4 = null) {
											var _0x37a4d1 = _0x1a8297,
												_0x3ff285 = this["musicLibrary"][_0x456e23]["instance"];
											_0x3ff285 ||
												(_0x3ff285 = this["musicLibrary"][_0x456e23]["instance"] =
													this["scene"]["sound"]["add"](_0x456e23["toString"]())),
												(_0x3ff285["currentVolume"] = _0x1ee2e4["volume"]),
												_0x1ee2e4["volume"] &&
													(_0x1ee2e4["volume"] *=
														_0x2164b8["Core"]["PlayerOptions"]["MusicVolume"]),
												_0x3ff285["play"](_0x1ee2e4);
										}
										["StopMusic"](_0x3d2c34) {
											var _0x28b14c = _0x1a8297,
												_0x1ea9d7 = this["musicLibrary"][_0x3d2c34]["instance"];
											_0x1ea9d7 && _0x1ea9d7["stop"]();
										}
										["FadeMusic"](_0x32b02d, _0x238954, _0x417904) {
											var _0x4a0467 = _0x1a8297,
												_0x222373 = this["musicLibrary"][_0x32b02d]["instance"];
											_0x222373 &&
												(0x0 == _0x2164b8["Core"]["PlayerOptions"]["MusicVolume"]
													? (_0x222373["volume"] = 0x0)
													: _0x417904 > 0x0
													? this["scene"]["tweens"]["add"]({
															targets: _0x222373,
															volume:
																_0x238954 *
																_0x2164b8["Core"]["PlayerOptions"]["MusicVolume"],
															duration: _0x417904,
													  })
													: (_0x222373["volume"] =
															_0x238954 *
															_0x2164b8["Core"]["PlayerOptions"]["MusicVolume"]),
												(_0x222373["currentVolume"] = _0x238954));
										}
										["PlaySound"](_0x22f4b5, _0xeb4e46 = null, _0x102642 = 0x0, _0x16bedc = 0x0) {
											var _0x3ec755 = _0x1a8297;
											if (0x0 != _0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"]) {
												if (_0x102642 > 0x0 && _0x16bedc > 0x0) {
													if (this["soundLibrary"][_0x22f4b5]["instances"] >= _0x16bedc)
														return;
													this["scene"]["time"]["addEvent"]({
														delay: _0x102642,
														callback: () => this["soundLibrary"][_0x22f4b5]["instances"]--,
														callbackScope: this,
													}),
														this["soundLibrary"][_0x22f4b5]["instances"]++;
												}
												_0xeb4e46 || (_0xeb4e46 = {}),
													_0xeb4e46
														? _0xeb4e46["volume"]
															? (_0xeb4e46["volume"] *= 0.5)
															: (_0xeb4e46["volume"] = 0.1)
														: (_0xeb4e46 = {
																volume: 0.1,
														  }),
													(_0xeb4e46["volume"] *=
														_0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"]),
													this["scene"]["sound"]["play"](_0x22f4b5, _0xeb4e46);
											}
										}
										["UpdateMusicVolume"](_0x5a1c82, _0x370277 = 0x0) {
											var _0x4103a6 = _0x1a8297,
												_0x5e2b4c = this["musicLibrary"][_0x5a1c82]["instance"];
											_0x5e2b4c && (_0x5e2b4c["volume"] = _0x5e2b4c["currentVolume"] * _0x370277);
										}
										["StopSound"](_0x2d0c3a) {
											var _0x15cda6 = _0x1a8297;
											this["scene"]["sound"]["stopByKey"](_0x2d0c3a);
										}
									})(this["game"], this["scene"]["get"](_0x53d8cd["OmniScene"]))),
									this["cameras"]["main"]["setBackgroundColor"]("#000000"),
									this["cameras"]["main"]["backgroundColor"]["setTo"](0x0, 0x0, 0x0);
								let _0x19ec09 = this["add"]
										["text"](
											0.5 * this["renderer"]["width"],
											0.25 * this["renderer"]["height"],
											_0x2164b8["Lang"]["getLang"]("preload_warning_title"),
											{
												color: "white",
												fontSize: "30px",
												fontFamily: "Arial, Helvetica, sans-serif",
											}
										)
										["setTint"](0xff4444)
										["setOrigin"](0.5)
										["setAlpha"](0x0),
									_0x56be19 = this["add"]
										["text"](
											0.5 * this["renderer"]["width"],
											0.5 * this["renderer"]["height"],
											_0x2164b8["Lang"]["getLang"]("preload_warning_text"),
											{
												color: "white",
												fontSize: "20px",
												fontFamily: "Arial, Helvetica, sans-serif",
											}
										)
										["setOrigin"](0.5)
										["setAlpha"](0x0)
										["setWordWrapWidth"](0x320),
									_0x793a1 = this["add"]
										["text"](
											0.5 * this["renderer"]["width"],
											0.75 * this["renderer"]["height"],
											_0x2164b8["Lang"]["getLang"]("intro_start"),
											{
												color: "white",
												fontSize: "20px",
												fontFamily: "Arial, Helvetica, sans-serif",
											}
										)
										["setOrigin"](0.5)
										["setAlpha"](0x0);
								this["tweens"]["add"]({
									targets: [_0x19ec09, _0x56be19, _0x793a1],
									alpha: 0x1,
									duration: 0xc8,
								}),
									this["input"]["once"]("pointerdown", () =>
										this["FadeOut"](_0x19ec09, _0x56be19, _0x793a1)
									),
									this["input"]["keyboard"]["once"]("keyup", () =>
										this["FadeOut"](_0x19ec09, _0x56be19, _0x793a1)
									),
									this["input"]["gamepad"]["once"]("up", () =>
										this["FadeOut"](_0x19ec09, _0x56be19, _0x793a1)
									);
							});
						}
						["MoveToNextScene"]() {
							return _0x536315(this, void 0x0, void 0x0, function* () {
								var _0x53eb1c = a0_0x1be4;
								if ((this["input"]["removeAllListeners"](), _0x447595)) {
									for (const _0x359ee6 in _0x41a274) _0x41a274[_0x359ee6][0x0]["isUnlocked"] = !0x0;
								}
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["BGM_Intro"], {
									volume: 0.7,
								}),
									this["scene"]["start"](_0x53d8cd["IntroScene"]),
									setTimeout(() => {
										var _0x39be27 = _0x53eb1c;
										_0x42c3a["SyncSteamAchievements"]();
									}, 0x3e8);
							});
						}
					}
					class _0x17a5db extends Phaser["GameObjects"]["Container"] {
						constructor(_0x3deeff, _0x4706ef, _0x64bc4e, _0x4af909, _0x4e3d93) {
							var _0x32c7bc = _0x5d9431;
							super(_0x3deeff, _0x4706ef, _0x64bc4e), this["setScale"](_0x1fa5bb["PixelScale"]);
							var _0x4cc2e7 = {
								x: 0x0,
								y: 0x0,
								width: _0x4af909,
								height: _0x4e3d93,
							};
							(this["Background"] = new _0x5b4abe["NineSlice"](
								this["scene"],
								{
									sourceKey: "UI",
									sourceFrame: "frame1_c2.png",
									sourceLayout: {
										width: 0xc,
										height: 0xc,
									},
								},
								_0x4cc2e7
							)),
								(this["myIconBG"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x4,
									0x4,
									"UI",
									"frameB.png"
								)
									["setOrigin"](0x0, 0x0)
									["setScale"](0x2)),
								(this["myIcon"] = new Phaser["GameObjects"]["Image"](this["scene"], 0x1c, 0x1c, "", "")
									["setOrigin"](0.5)
									["setScale"](0x2)),
								(this["myName"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x50,
									0x6,
									_0x2164b8["Lang"]["getLang"]("weapon_name"),
									{}
								)["setScale"](0x1)),
								(this["myNextLevel"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0.7 * _0x4af909,
									0x6,
									_0x2164b8["Lang"]["getLang"]("weapon_level"),
									{}
								)["setScale"](0x1)),
								(this["myDescription"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0xa,
									0x3c,
									_0x2164b8["Lang"]["getLang"]("weapon_description"),
									{}
								)),
								this["myDescription"]["setWordWrapWidth"](0.9 * _0x4af909)["setScale"](0x1),
								this["add"]([
									this["Background"],
									this["myIconBG"],
									this["myIcon"],
									this["myName"],
									this["myNextLevel"],
									this["myDescription"],
								]);
						}
						["AssignData"](_0x21e9f5, _0x1519d7) {
							var _0x25084a = _0x5d9431;
							this["weaponType"] = _0x21e9f5;
							var _0x57547d = _0x41a274[_0x21e9f5][0x0];
							if (
								((this["myName"]["text"] = _0x57547d["name"]),
								(this["myNextLevel"]["text"] = _0x2164b8["Lang"]["getLang"]("weapon_new")),
								this["myNextLevel"]["setTint"](0xffff00),
								(this["myDescription"]["text"] = _0x57547d["description"]),
								this["myIcon"]["setTexture"](_0x57547d["texture"], _0x57547d["frameName"]),
								this["Background"]["setTint"](_0x57547d["isEvolution"] ? 0xffff00 : 0xffffff),
								_0x1519d7 > 0x0)
							) {
								(_0x57547d = _0x41a274[_0x21e9f5][_0x1519d7]),
									(this["myNextLevel"]["text"] =
										_0x2164b8["Lang"]["getLang"]("weapon_level_") +
										(_0x1519d7 + 0x1)["toString"]()),
									this["myNextLevel"]["clearTint"]();
								var _0x1f7946 = _0x2164b8["Lang"]["getLang"]("weapon_bonus_");
								for (const _0x2d4ca8 in _0x57547d) _0x1f7946 += _0x2d4ca8 + " ";
								(this["myDescription"]["text"] = _0x1f7946),
									(this["myDescription"]["text"] = _0x17a5db["ParseLevelUpInfo"](
										_0x57547d,
										_0x41a274[_0x21e9f5][0x0]["isPowerUp"]
									));
							}
						}
						["AssignItemData"](_0x3ecbc1) {
							var _0x5d3f77 = _0x5d9431;
							this["weaponType"] = _0x3ecbc1;
							var _0x1ed306 = _0x171870[_0x3ecbc1];
							(this["myName"]["text"] = _0x1ed306["name"]),
								(this["myNextLevel"]["text"] = ""),
								(this["myDescription"]["text"] = _0x1ed306["description"]),
								this["myIcon"]["setTexture"](_0x1ed306["texture"], _0x1ed306["frameName"]);
						}
						static ["ParseLevelUpInfo"](_0x76a2ec, _0x1d380e) {
							var _0x898adb = _0x5d9431,
								_0x426728 = "";
							for (const _0x33a3c6 in _0x76a2ec)
								switch (_0x33a3c6) {
									default:
									case "repeatInterval":
										break;
									case "power":
										_0x426728 += _0x1d380e
											? _0x2164b8["Lang"]["getLang"]("weaponLevelUp_damageAll", [
													(0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
											  ])
											: _0x2164b8["Lang"]["getLang"]("weaponLevelUp_damage", [
													(0xa * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
											  ]);
										break;
									case "area":
										_0x426728 +=
											(_0x1d380e ? _0x2164b8["Lang"]["getLang"]("weaponLevelUp_all") : "") +
											_0x2164b8["Lang"]["getLang"]("weaponLevelUp_area", [
												(0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
											]);
										break;
									case "speed":
										_0x426728 +=
											(_0x1d380e ? _0x2164b8["Lang"]["getLang"]("weaponLevelUp_all") : "") +
											_0x2164b8["Lang"]["getLang"]("weaponLevelUp_speed", [
												(0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
											]);
										break;
									case "amount":
										_0x426728 +=
											(_0x1d380e ? _0x2164b8["Lang"]["getLang"]("weaponLevelUp_all") : "") +
											(Number["parseInt"](_0x76a2ec[_0x33a3c6]) > 0x1
												? _0x2164b8["Lang"]["getLang"]("weaponLevelUp_projectiles", [
														_0x76a2ec[_0x33a3c6]["toFixed"](0x0),
												  ])
												: _0x2164b8["Lang"]["getLang"]("weaponLevelUp_projectile", [
														_0x76a2ec[_0x33a3c6]["toFixed"](0x0),
												  ]));
										break;
									case "penetrating":
										_0x426728 +=
											(_0x1d380e ? _0x2164b8["Lang"]["getLang"]("weaponLevelUp_all") : "") +
											(Number["parseInt"](_0x76a2ec[_0x33a3c6]) > 0x1
												? _0x2164b8["Lang"]["getLang"]("weaponLevelUp_enemies", [
														_0x76a2ec[_0x33a3c6]["toFixed"](0x0),
												  ])
												: _0x2164b8["Lang"]["getLang"]("weaponLevelUp_enemy", [
														_0x76a2ec[_0x33a3c6]["toFixed"](0x0),
												  ]));
										break;
									case "charges":
										_0x426728 +=
											Number["parseInt"](_0x76a2ec[_0x33a3c6]) > 0x1
												? _0x2164b8["Lang"]["getLang"]("weaponLevelUp_charges", [
														_0x76a2ec[_0x33a3c6],
												  ])
												: _0x2164b8["Lang"]["getLang"]("weaponLevelUp_charge", [
														_0x76a2ec[_0x33a3c6],
												  ]);
										break;
									case "duration":
										_0x426728 += _0x1d380e
											? _0x2164b8["Lang"]["getLang"]("weaponLevelUp_effect%", [
													(0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
											  ])
											: _0x2164b8["Lang"]["getLang"]("weaponLevelUp_effect", [
													(0.001 * _0x76a2ec[_0x33a3c6])["toFixed"](0x1),
											  ]);
										break;
									case "cooldown":
										_0x426728 +=
											(_0x1d380e ? _0x2164b8["Lang"]["getLang"]("weaponLevelUp_all") : "") +
											_0x2164b8["Lang"]["getLang"]("weaponLevelUp_cooldown%", [
												(-0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x1),
											]);
										break;
									case "interval":
										_0x426728 +=
											(_0x1d380e ? _0x2164b8["Lang"]["getLang"]("weaponLevelUp_all") : "") +
											_0x2164b8["Lang"]["getLang"]("weaponLevelUp_cooldown", [
												(-0.001 * _0x76a2ec[_0x33a3c6])["toFixed"](0x1),
											]);
										break;
									case "maxHp":
										_0x426728 += _0x2164b8["Lang"]["getLang"]("weaponLevelUp_health", [
											(0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
										]);
										break;
									case "growth":
										_0x426728 += _0x2164b8["Lang"]["getLang"]("weaponLevelUp_xp", [
											(0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
										]);
										break;
									case "moveSpeed":
										_0x426728 += _0x2164b8["Lang"]["getLang"]("weaponLevelUp_movement", [
											(0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
										]);
										break;
									case "magnet":
										_0x426728 += _0x2164b8["Lang"]["getLang"]("weaponLevelUp_range", [
											(0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
										]);
										break;
									case "luck":
										_0x426728 += _0x2164b8["Lang"]["getLang"]("weaponLevelUp_luck", [
											(0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
										]);
										break;
									case "regen":
										_0x426728 += _0x2164b8["Lang"]["getLang"]("weaponLevelUp_recovery", [
											_0x76a2ec[_0x33a3c6]["toFixed"](0x1),
										]);
										break;
									case "greed":
										_0x426728 += _0x2164b8["Lang"]["getLang"]("weaponLevelUp_value", [
											(0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
										]);
										break;
									case "armor":
										_0x426728 += _0x2164b8["Lang"]["getLang"]("weaponLevelUp_reduceDamage", [
											_0x76a2ec[_0x33a3c6],
										]);
										break;
									case "shieldInvulTime":
										_0x426728 += _0x2164b8["Lang"]["getLang"]("weaponLevelUp_shield", [
											(0.001 * _0x76a2ec[_0x33a3c6])["toFixed"](0x1),
										]);
										break;
									case "revivals":
										_0x426728 += _0x2164b8["Lang"]["getLang"]("weaponLevelUp_revivals", [
											_0x76a2ec[_0x33a3c6],
										]);
										break;
									case "curse":
										_0x426728 += _0x2164b8["Lang"]["getLang"]("weaponLevelUp_curse", [
											(0x64 * _0x76a2ec[_0x33a3c6])["toFixed"](0x0),
										]);
										break;
									case "desc":
										_0x426728 += _0x76a2ec[_0x33a3c6] + "\n";
								}
							return _0x426728;
						}
					}
					const _0x3dbd7f = _0x17a5db;
					class _0x26dfc3 {
						constructor(_0x2e287f) {
							var _0x5959ca = _0x5d9431;
							(this["scaleFactorY"] = 0x1),
								(this["value"] = 0x0),
								(this["progressHeight"] = 0xa),
								(this["scene"] = _0x2e287f),
								(this["progressBox"] = new _0x5b4abe["NineSlice"](
									this["scene"],
									_0x395ea9["ProgressBox"],
									{
										x: 0x0,
										y: 0x0,
										width: this["scene"]["renderer"]["width"],
										height: 0x12,
									}
								)),
								this["progressBox"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["progressBox"]["setScrollFactor"](0x0),
								this["scene"]["add"]["existing"](this["progressBox"]),
								(this["progressBar"] = this["scene"]["add"]["image"](0x4, 0x4, "vfx", "PfxDot.png")),
								this["progressBar"]["setOrigin"](0x0, 0x0),
								this["progressBar"]["setScrollFactor"](0x0),
								this["progressBar"]["setScale"](this["scene"]["renderer"]["width"] - 0x8, 0x8);
						}
						["setScaleY"](_0x4f5a7b) {
							var _0x5a1f37 = _0x5d9431;
							(this["scaleFactorY"] = _0x4f5a7b),
								this["progressBox"]["setScale"](
									_0x1fa5bb["PixelScale"],
									_0x1fa5bb["PixelScale"] * this["scaleFactorY"]
								),
								this["progressBar"]["setScale"](
									this["scene"]["renderer"]["width"] - 0x8,
									this["progressHeight"] * this["scaleFactorY"]
								),
								(this["progressBar"]["y"] = 0x4 * this["scaleFactorY"]);
						}
						["Update"]() {
							var _0x2abfa6 = _0x5d9431;
							(this["value"] += 0.1),
								_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"]
									? this["progressBar"]["setTintFill"](
											Phaser["Display"]["Color"]["GetColor"](
												0xff * Math["abs"](Math["sin"](this["value"])),
												0xff * Math["abs"](Math["cos"](0.5 * this["value"])),
												0xc8 + 0x37 * Math["abs"](Math["cos"](this["value"]))
											)
									  )
									: this["progressBar"]["setTintFill"](0x2266dd);
						}
					}
					class _0x4dfa39 extends Phaser["GameObjects"]["Container"] {
						constructor(_0xa7975e, _0x1219d6, _0x3d1411, _0x2180ec, _0x75ee65) {
							var _0x7605fa = _0x5d9431;
							super(_0xa7975e, _0x1219d6, _0x3d1411), this["setScale"](_0x1fa5bb["PixelScale"]);
							let _0x282a57 = _0x2164b8["Core"]["Weapons"]["filter"](
									(_0x56f642) => !_0x56f642["isPowerUp"]
								),
								_0xb1b760 = _0x2164b8["Core"]["Weapons"]["filter"](
									(_0x24de98) => _0x24de98["isPowerUp"]
								);
							for (let _0xa740de = 0x0; _0xa740de < _0x282a57["length"]; _0xa740de++) {
								const _0x2a6a42 = _0x282a57[_0xa740de];
								let _0x22349c = _0x41a274[_0x2a6a42["bulletType"]][0x0],
									_0x55544e = new Phaser["GameObjects"]["Image"](
										this["scene"],
										0x14 + (_0xa740de % 0x6) * 0x20,
										0x14 + 0x40 * Math["floor"](_0xa740de / 0x6),
										"UI",
										"weaponBG.png"
									)
										["setScale"](0x2)
										["setTint"](_0x2a6a42["level"] >= _0x22349c["length"] ? 0xffff00 : 0xffffff),
									_0x385d30 = new Phaser["GameObjects"]["Image"](
										this["scene"],
										_0x55544e["x"],
										_0x55544e["y"],
										_0x22349c["texture"],
										_0x22349c["frameName"]
									)["setScale"](0x2);
								this["add"](_0x55544e), this["add"](_0x385d30);
								for (
									let _0x56f45f = 0x0;
									_0x56f45f < _0x41a274[_0x2a6a42["bulletType"]]["length"];
									_0x56f45f++
								) {
									let _0x3f7242 =
											_0x2a6a42["level"] <= _0x56f45f
												? "weaponLevelEmpty.png"
												: "weaponLevelFull.png",
										_0x218a9d = new Phaser["GameObjects"]["Image"](
											this["scene"],
											_0x55544e["x"] - 0x8 + (_0x56f45f % 0x3) * 0x8,
											_0x55544e["y"] + 0x14 + 0x8 * Math["floor"](_0x56f45f / 0x3),
											"UI",
											_0x3f7242
										)["setScale"](0x1);
									this["add"](_0x218a9d);
								}
							}
							let _0x2cae97 = 0x14 + 0x40 * Math["ceil"](_0x282a57["length"] / 0x6);
							for (let _0x1c5512 = 0x0; _0x1c5512 < _0xb1b760["length"]; _0x1c5512++) {
								const _0x71d223 = _0xb1b760[_0x1c5512];
								let _0x322ff2 = _0x41a274[_0x71d223["bulletType"]][0x0],
									_0x157cf4 = new Phaser["GameObjects"]["Image"](
										this["scene"],
										0x14 + (_0x1c5512 % 0x6) * 0x20,
										_0x2cae97 + 0x40 * Math["floor"](_0x1c5512 / 0x6),
										"UI",
										"passiveBG.png"
									)
										["setScale"](0x2)
										["setTint"](_0x71d223["level"] >= _0x322ff2["length"] ? 0xffff00 : 0xffffff),
									_0x4033a5 = new Phaser["GameObjects"]["Image"](
										this["scene"],
										_0x157cf4["x"],
										_0x157cf4["y"],
										_0x322ff2["texture"],
										_0x322ff2["frameName"]
									)["setScale"](0x2);
								this["add"](_0x157cf4), this["add"](_0x4033a5);
								for (
									let _0x3f2ae7 = 0x0;
									_0x3f2ae7 < _0x41a274[_0x71d223["bulletType"]]["length"];
									_0x3f2ae7++
								) {
									let _0x102662 =
											_0x71d223["level"] <= _0x3f2ae7
												? "weaponLevelEmpty.png"
												: "weaponLevelFull.png",
										_0x34cc7b = new Phaser["GameObjects"]["Image"](
											this["scene"],
											_0x157cf4["x"] - 0x8 + (_0x3f2ae7 % 0x3) * 0x8,
											_0x157cf4["y"] + 0x14 + 0x8 * Math["floor"](_0x3f2ae7 / 0x3),
											"UI",
											_0x102662
										)["setScale"](0x1);
									this["add"](_0x34cc7b);
								}
							}
							var _0x3644b8 = {
								x: 0x0,
								y: 0x0,
								width: _0x2180ec,
								height:
									0x40 * Math["ceil"](_0x282a57["length"] / 0x6) +
									0x40 * Math["ceil"](_0xb1b760["length"] / 0x6),
							};
							(this["Background"] = new _0x5b4abe["NineSlice"](
								this["scene"],
								{
									sourceKey: "UI",
									sourceFrame: "frame1_c2.png",
									sourceLayout: {
										width: 0xc,
										height: 0xc,
									},
								},
								_0x3644b8
							)),
								this["addAt"](this["Background"], 0x0);
						}
						["Open"]() {
							var _0x3925a3 = _0x5d9431;
							this["setScale"](0x0),
								(this["OnEnterTween"] = this["scene"]["tweens"]["add"]({
									targets: this,
									scale: 0x1,
									duration: 0xc8,
								}));
						}
						["OnClick"]() {}
					}
					const _0x183119 = _0x4dfa39;
					class _0x50c7d5 extends Phaser["Scene"] {
						constructor() {
							var _0x18ae72 = _0x5d9431;
							super({
								key: _0x53d8cd["UI_levelUpScene"],
							}),
								(this["panels"] = new Array()),
								(this["TopLeft"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["IsInitialised"] = !0x1),
								(this["CurrentAmountOfPanels"] = 0x3),
								(this["HasRerolls"] = !0x1),
								(this["HasSkips"] = !0x1);
						}
						["ValidateSkipsAndRerolls"]() {
							var _0x442049 = _0x5d9431;
							let _0x27b544 = _0x2164b8["Core"]["LevelUpFactory"]["HasPowerupsInStore"](),
								_0x1b725f = _0x2164b8["Core"]["LevelUpFactory"]["WeightedStore"]["length"] > 0x4,
								_0x29f656 = _0x2164b8["Core"]["Player"]["rerolls"] > 0x0,
								_0x35ab4a = _0x2164b8["Core"]["Player"]["skips"] > 0x0;
							(this["HasRerolls"] = _0x27b544 && _0x1b725f && _0x29f656),
								(this["HasSkips"] = _0x27b544 && _0x35ab4a);
						}
						["preload"]() {
							_0x2164b8["ApplyMenuResolution"]();
						}
						["create"]() {
							var _0x507a9a = _0x5d9431;
							const _0x33c255 = this["anims"]["generateFrameNames"]("vfx", {
								start: 0x1,
								end: 0x6,
								zeroPad: 0x0,
								prefix: "Burst",
								suffix: ".png",
							});
							(this["pickedWeapons"] = new Array()),
								(this["OnEnterAnimation"] = this["add"]["sprite"](
									0.5 * this["renderer"]["width"],
									0.5 * this["renderer"]["width"],
									"vfx",
									"Burst1.png"
								)),
								this["OnEnterAnimation"]["anims"]["create"]({
									key: "enter",
									frames: _0x33c255,
									frameRate: 0x1e,
									repeat: 0x0,
								}),
								(this["OnEnterAnimation"]["visible"] = !0x0),
								this["OnEnterAnimation"]["setScale"](0x8),
								this["OnEnterAnimation"]["setDepth"](0x3e8),
								(this["OnEnterAnimation"]["blendMode"] = _0x1cb257["BlendModes"]["ADD"]),
								(this["PfxEmitter"] = this["add"]["particles"]("items")),
								this["PfxEmitter"]["createEmitter"]({
									frame: {
										frames: ["GemRed.png", "GemBlue.png", "GemGreen.png"],
									},
									y: 0x0,
									x: {
										min: 0x0,
										max: this["renderer"]["width"],
									},
									rotate: {
										min: 0x0,
										max: 0x168,
									},
									lifespan: 0xfa0,
									speedY: {
										min: 0x64,
										max: 0xc8,
									},
									scale: {
										min: 0x1,
										max: 0x2,
										start: 0x2,
										end: 0x0,
									},
									quantity: 0x4,
								});
							var _0x3a6a54 = 0.8 * _0x2bef3a["width"],
								_0xdf1dff = 0.8 * _0x22d9a5;
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x3a6a54,
								height: _0xdf1dff,
							})),
								this["background"]["setPosition"](
									0.5 * this["renderer"]["width"],
									0.5 * this["renderer"]["height"]
								),
								this["background"]["setOrigin"](0.5),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								(this["TopLeft"]["x"] =
									this["background"]["x"] -
									0.5 * this["background"]["width"] * _0x1fa5bb["PixelScale"]),
								(this["TopLeft"]["y"] =
									this["background"]["y"] -
									0.5 * this["background"]["height"] * _0x1fa5bb["PixelScale"]);
							var _0xb5470d = 0.95 * _0x3a6a54,
								_0x43427f = 0.2 * _0xdf1dff;
							(this["header"] = new Phaser["GameObjects"]["Text"](
								this,
								0.5 * this["renderer"]["width"],
								this["TopLeft"]["y"] + 0x2d,
								_0x2164b8["Lang"]["getLang"]("levelup_header"),
								{}
							)
								["setScale"](0x2 * _0x1fa5bb["PixelScale"])
								["setOrigin"](0.5)),
								(this["footer"] = new Phaser["GameObjects"]["Text"](
									this,
									0.5 * this["renderer"]["width"],
									this["TopLeft"]["y"] + 4.25 * _0x43427f,
									_0x2164b8["Lang"]["getLang"]("levelup_footer"),
									{
										align: "center",
									}
								)
									["setScale"](0x1)
									["setOrigin"](0.5)),
								this["add"]["existing"](this["header"]),
								this["add"]["existing"](this["footer"]);
							for (let _0x111256 = 0x0; _0x111256 < 0x4; _0x111256++)
								(this["panels"][_0x111256] = new _0x3dbd7f(
									this,
									this["renderer"]["width"],
									this["TopLeft"]["y"] + _0x43427f * _0x111256 + _0x43427f - 0.025 * _0x3a6a54,
									_0xb5470d,
									_0x43427f
								)),
									(this["panels"][_0x111256]["OnEnterTween"] = this["tweens"]["add"]({
										targets: this["panels"][_0x111256],
										x: this["TopLeft"]["x"] + 0.025 * _0x3a6a54,
										duration: 0x96 + 0x1e * _0x111256,
										ease: "Linear",
										yoyo: !0x1,
									})),
									this["add"]["existing"](this["panels"][_0x111256]);
							this["background"]["setScale"](-0.2, -0.1),
								this["background"]["setAngle"](0xb4),
								(this["OnEnterTween"] = this["tweens"]["add"]({
									targets: this["background"],
									scale: _0x1fa5bb["PixelScale"],
									angle: 0x0,
									duration: 0x96,
									ease: "Linear",
									yoyo: !0x1,
								})),
								(this["IsInitialised"] = !0x0),
								_0x2164b8["Core"]["LevelUpFactory"]["HasPowerupsInStore"]()
									? this["PickRandomLevelUps"]()
									: this["PickItemLevelUps"](),
								(this["playerUI_levelUp"] = new _0x26dfc3(this)),
								this["playerUI_levelUp"]["setScaleY"](_0x16385e() * (_0x22d9a5 / _0x170004));
							const _0x343e17 =
								this["background"]["x"] +
								0.5 * _0x3a6a54 +
								0.25 * (this["renderer"]["width"] - _0x3a6a54);
							(this["RerollButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
								x: _0x343e17,
								y: this["TopLeft"]["y"] + 1.5 * _0x43427f - 0.025 * _0x3a6a54,
								width: 0x60,
								height: 0x20,
							})
								["setScale"](-0.2)
								["setOrigin"](0.5)
								["setVisible"](!0x1)
								["setAngle"](0xb4)),
								this["add"]["existing"](this["RerollButton"]),
								(this["RerollText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["RerollButton"]["x"],
									this["RerollButton"]["y"] - 0xa,
									_0x2164b8["Lang"]["getLang"]("levelup_reroll"),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](-0.2)
									["setVisible"](!0x1)
									["setAngle"](0xb4)),
								this["add"]["existing"](this["RerollText"]),
								(this["RerollRemaining"] = new Phaser["GameObjects"]["Text"](
									this,
									this["RerollText"]["x"],
									this["RerollText"]["y"] + 0x14,
									_0x2164b8["Lang"]["getLang"]("levelup_Xleft", ["0"]),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x0)
									["setVisible"](!0x1)),
								this["add"]["existing"](this["RerollRemaining"]),
								(this["SkipButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["BackButton"], {
									x: _0x343e17,
									y: this["TopLeft"]["y"] + 2.5 * _0x43427f - 0.025 * _0x3a6a54,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](-0.2)
									["setOrigin"](0.5)
									["setVisible"](!0x1)
									["setAngle"](0xb4)),
								this["add"]["existing"](this["SkipButton"]),
								(this["SkipText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["SkipButton"]["x"],
									this["SkipButton"]["y"] - 0xa,
									_0x2164b8["Lang"]["getLang"]("levelup_skip"),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](-0.2)
									["setVisible"](!0x1)
									["setAngle"](0xb4)),
								this["add"]["existing"](this["SkipText"]),
								(this["SkipRemaining"] = new Phaser["GameObjects"]["Text"](
									this,
									this["SkipText"]["x"],
									this["SkipText"]["y"] + 0x14,
									_0x2164b8["Lang"]["getLang"]("levelup_Xleft", ["0"]),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x0)
									["setVisible"](!0x1)),
								this["add"]["existing"](this["SkipRemaining"]),
								(this["OnEnterTween2"] = this["tweens"]["add"]({
									targets: [
										this["SkipButton"],
										this["SkipText"],
										this["RerollButton"],
										this["RerollText"],
										this["RerollRemaining"],
									],
									scale: 0x2 * _0x1fa5bb["PixelScale"],
									angle: 0x0,
									duration: 0x96,
									ease: "Linear",
									yoyo: !0x1,
								})),
								(this["OnEnterTween3"] = this["tweens"]["add"]({
									targets: [this["RerollRemaining"], this["SkipRemaining"]],
									scale: _0x1fa5bb["PixelScale"],
									angle: 0x0,
									duration: 0x96,
									ease: "Linear",
									yoyo: !0x1,
								})),
								this["ValidateSkipsAndRerolls"](),
								(this["HasRerolls"] || this["HasSkips"]) &&
									(this["HasRerolls"] &&
										(this["RerollButton"]["setVisible"](!0x0),
										this["RerollText"]["setVisible"](!0x0),
										this["RerollRemaining"]["setVisible"](!0x0),
										this["RerollRemaining"]["setText"](
											_0x2164b8["Lang"]["getLang"]("levelup_Xleft", [
												_0x2164b8["Core"]["Player"]["rerolls"]["toString"](),
											])
										)),
									this["HasSkips"] &&
										(this["SkipButton"]["setVisible"](!0x0),
										this["SkipText"]["setVisible"](!0x0),
										this["SkipRemaining"]["setVisible"](!0x0),
										this["SkipRemaining"]["setText"](
											_0x2164b8["Lang"]["getLang"]("levelup_Xleft", [
												_0x2164b8["Core"]["Player"]["skips"]["toString"](),
											])
										)),
									this["time"]["addEvent"]({
										delay: 0x1f4,
										callback: this["EnableButtonsInput"],
										callbackScope: this,
										loop: !0x1,
									}));
						}
						["MakeUIGrid"]() {
							var _0x56817b = _0x5d9431;
							let _0x2a93dd = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"],
								_0x1761d1 = this["panels"]["length"],
								_0x185485 =
									_0x2164b8["Core"]["Player"]["rerolls"] || _0x2164b8["Core"]["Player"]["skips"]
										? 0x2
										: 0x1;
							_0x2a93dd["MakeUIGrid"](_0x185485, _0x1761d1, !0x1);
							for (let _0x3186ea = 0x0; _0x3186ea < _0x1761d1; _0x3186ea++)
								this["panels"][_0x3186ea]["visible"] &&
									_0x2a93dd["UI_grid"]["SetContents"](
										0x0,
										_0x3186ea,
										this["panels"][_0x3186ea]["Background"]
									);
							this["ValidateSkipsAndRerolls"](),
								this["HasRerolls"] &&
									_0x2a93dd["UI_grid"]["SetContents"](0x1, 0x0, this["RerollButton"]),
								this["HasSkips"] && _0x2a93dd["UI_grid"]["SetContents"](0x1, 0x1, this["SkipButton"]),
								_0x2a93dd["ToggleCursorsVisibility"](!0x0),
								_0x2a93dd["UI_grid"]["SelectGameObject"](this["panels"][0x0]["Background"]),
								(_0x2a93dd["UI_selected"] = this["panels"][0x0]["Background"]),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x2a93dd),
								(_0x2a93dd["OnCancelCallback"] = () => {});
						}
						["OnButtonClicked"](_0x44e808) {
							var _0x14d947 = _0x5d9431;
							this["DisablePanelsInput"](),
								_0x2164b8["Core"]["LevelWeaponUp"](_0x44e808),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
								_0x2164b8["Core"]["Player"]["SetInvulForMilliSecondsNonCumulative"](0x1f4),
								_0x2164b8["Core"]["SceneManager"]["ResumeFromLevelUp"]();
						}
						["OnItemButtonClicked"](_0x3c732b) {
							var _0x2722a4 = _0x5d9431;
							this["DisablePanelsInput"](),
								_0x2164b8["Core"]["MakeAndActivatePickup"](_0x3c732b),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
								_0x2164b8["Core"]["Player"]["SetInvulForMilliSecondsNonCumulative"](0x1f4),
								_0x2164b8["Core"]["SceneManager"]["ResumeFromLevelUp"]();
						}
						["PickRandomLevelUps"](_0x4c0749 = !0x1) {
							var _0x357ba7 = _0x5d9431;
							let _0x199092 = new Array();
							_0x4c0749
								? ((_0x199092 = _0x2164b8["Core"]["LevelUpFactory"]["RerollLevelUpPowerups"](
										this["pickedWeapons"]
								  )),
								  (this["pickedWeapons"] = new Array()))
								: (_0x199092 = _0x2164b8["Core"]["LevelUpFactory"]["GetLevelUpPowerups"]());
							for (let _0x1f6b67 = 0x0; _0x1f6b67 < _0x199092["length"]; _0x1f6b67++)
								this["pickedWeapons"]["push"](_0x199092[_0x1f6b67]);
							(this["CurrentAmountOfPanels"] = _0x199092["length"]), this["footer"]["setVisible"](!0x1);
							for (let _0x5735d5 = 0x0; _0x5735d5 < this["panels"]["length"]; _0x5735d5++) {
								var _0x35b48b = _0x199092["pop"]();
								this["panels"][_0x5735d5]["Background"]["removeAllListeners"](),
									_0x35b48b
										? ((this["panels"][_0x5735d5]["visible"] = !0x0),
										  this["panels"][_0x5735d5]["AssignData"](
												_0x35b48b,
												_0x2164b8["Core"]["GetWeaponLevel"](_0x35b48b)
										  ),
										  this["panels"][_0x5735d5]["OnEnterTween"]["restart"]())
										: (this["panels"][_0x5735d5]["visible"] = !0x1);
							}
							_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"]
								? this["OnEnterAnimation"]["play"]("enter")
								: this["OnEnterAnimation"]["setVisible"](!0x1),
								this["OnEnterTween"]["restart"](),
								this["time"]["addEvent"]({
									delay: 0x190,
									callback: this["EnablePanelsInput"],
									callbackScope: this,
									loop: !0x1,
								}),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["LevelUp"], {
									volume: 1.25,
								}),
								_0x4c0749 ||
									(_0x2164b8["Core"]["PlayerOptions"]["UnlockedWeapons"]["length"] > 0x5 &&
										((this["WeaponsPanel"] = new _0x183119(
											this,
											_0x2bef3a["left"],
											0x80,
											0xc8,
											0x122
										)),
										this["WeaponsPanel"]["Background"]["setAlpha"](0.75),
										this["add"]["existing"](this["WeaponsPanel"]),
										_0x38ad94["CalculateAndSetContainerSize"](this["WeaponsPanel"]),
										(this["WeaponsPanel"]["x"] = 0x8),
										(this["WeaponsPanel"]["y"] = 0x20),
										(this["StatsPanel"] = new _0x1ef4d8(
											this,
											_0x2bef3a["left"],
											0x80,
											0xc8,
											0x122,
											_0x2164b8["Core"]["Player"]["characterType"]
										)),
										this["StatsPanel"]["Background"]["setAlpha"](0.75),
										this["add"]["existing"](this["StatsPanel"]),
										_0x38ad94["CalculateAndSetContainerSize"](this["StatsPanel"]),
										(this["StatsPanel"]["x"] = 0x8),
										(this["StatsPanel"]["y"] =
											this["WeaponsPanel"]["y"] + this["WeaponsPanel"]["displayHeight"]),
										this["StatsPanel"]["AssignPlayer"](_0x2164b8["Core"]["Player"]),
										this["WeaponsPanel"]["Open"](),
										this["WeaponsPanel"]["setVisible"](!_0xe0047c),
										this["StatsPanel"]["Open"](),
										this["StatsPanel"]["setVisible"](!_0xe0047c)));
						}
						["PickItemLevelUps"]() {
							var _0x25e9a3 = _0x5d9431,
								_0x20cae4 = new Array();
							(_0x20cae4 = _0x2164b8["Core"]["LevelUpFactory"]["GetLevelUpItems"]()),
								(this["CurrentAmountOfPanels"] = _0x20cae4["length"]),
								this["footer"]["setVisible"](!0x1);
							for (let _0x514802 = 0x0; _0x514802 < this["panels"]["length"]; _0x514802++) {
								var _0x82115d = _0x20cae4["pop"]();
								this["panels"][_0x514802]["Background"]["removeAllListeners"](),
									_0x82115d
										? ((this["panels"][_0x514802]["visible"] = !0x0),
										  this["panels"][_0x514802]["AssignItemData"](_0x82115d),
										  this["panels"][_0x514802]["OnEnterTween"]["restart"]())
										: (this["panels"][_0x514802]["visible"] = !0x1);
							}
							_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"]
								? this["OnEnterAnimation"]["play"]("enter")
								: this["OnEnterAnimation"]["setVisible"](!0x1),
								this["OnEnterTween"]["restart"](),
								this["time"]["addEvent"]({
									delay: 0x12c,
									callback: this["EnableItemPanelsInput"],
									callbackScope: this,
									loop: !0x1,
								}),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["LevelUp"], {
									volume: 1.25,
								});
						}
						["EnablePanelsInput"]() {
							var _0x4e5696 = _0x5d9431;
							this["MakeUIGrid"]();
							for (let _0x47752f = 0x0; _0x47752f < this["panels"]["length"]; _0x47752f++)
								this["panels"][_0x47752f]["Background"]["setInteractive"](),
									this["panels"][_0x47752f]["Background"]["once"](
										"pointerdown",
										() => {
											var _0x87097 = _0x4e5696;
											this["OnButtonClicked"](this["panels"][_0x47752f]["weaponType"]);
										},
										this
									);
							this["footer"]["setVisible"](this["CurrentAmountOfPanels"] < 0x4);
						}
						["EnableButtonsInput"]() {
							var _0x31161d = _0x5d9431;
							this["ValidateSkipsAndRerolls"](),
								this["HasRerolls"]
									? (this["RerollButton"]["setInteractive"](),
									  this["RerollButton"]["once"]("pointerdown", () => this["OnReroll"]()))
									: (this["RerollButton"]["setVisible"](!0x1),
									  this["RerollText"]["setVisible"](!0x1)),
								this["HasSkips"]
									? (this["SkipButton"]["setInteractive"](),
									  this["SkipButton"]["once"]("pointerdown", () => this["OnSkip"]()))
									: (this["SkipButton"]["setVisible"](!0x1), this["SkipText"]["setVisible"](!0x1));
						}
						["OnSkip"]() {
							var _0x4906d2 = _0x5d9431;
							this["DisablePanelsInput"](),
								_0x2164b8["Core"]["OnLevelUpSkipped"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]),
								_0x2164b8["Core"]["Player"]["SetInvulForMilliSecondsNonCumulative"](0x1f4),
								_0x2164b8["Core"]["SceneManager"]["ResumeFromLevelUp"]();
						}
						["OnReroll"]() {
							var _0xd18c49 = _0x5d9431;
							this["SkipButton"]["removeInteractive"](),
								this["RerollButton"]["removeInteractive"](),
								this["SkipButton"]["removeAllListeners"](),
								this["RerollButton"]["removeAllListeners"](),
								this["RerollButton"]["setScale"](0x0),
								this["RerollText"]["setScale"](0x0),
								this["SkipButton"]["setScale"](0x0),
								this["SkipText"]["setScale"](0x0),
								this["DisablePanelsInput"](),
								this["PickRandomLevelUps"](!0x0),
								_0x2164b8["Core"]["OnRerollLevelUp"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
								this["time"]["addEvent"]({
									delay: 0x190,
									callback: () => {
										this["EnableButtonsInput"]();
									},
									callbackScope: this,
									loop: !0x1,
								}),
								this["OnEnterTween2"]["restart"](),
								this["OnEnterTween3"]["restart"](),
								this["ValidateSkipsAndRerolls"](),
								this["RerollButton"]["setVisible"](this["HasRerolls"]),
								this["RerollText"]["setVisible"](this["HasRerolls"]),
								this["RerollRemaining"]["setVisible"](this["HasRerolls"]),
								this["RerollRemaining"]["setText"](
									_0x2164b8["Lang"]["getLang"]("levelup_Xleft", [
										_0x2164b8["Core"]["Player"]["rerolls"]["toString"](),
									])
								),
								this["SkipButton"]["setVisible"](this["HasSkips"]),
								this["SkipText"]["setVisible"](this["HasSkips"]),
								this["SkipRemaining"]["setVisible"](this["HasSkips"]),
								this["SkipRemaining"]["setText"](
									_0x2164b8["Lang"]["getLang"]("levelup_Xleft", [
										_0x2164b8["Core"]["Player"]["skips"]["toString"](),
									])
								);
						}
						["EnableItemPanelsInput"]() {
							var _0x4db959 = _0x5d9431;
							this["MakeUIGrid"]();
							for (let _0x1bf212 = 0x0; _0x1bf212 < this["panels"]["length"]; _0x1bf212++)
								this["panels"][_0x1bf212]["Background"]["setInteractive"](),
									this["panels"][_0x1bf212]["Background"]["once"](
										"pointerdown",
										() => {
											var _0x2f8ad1 = _0x4db959;
											this["OnItemButtonClicked"](this["panels"][_0x1bf212]["weaponType"]);
										},
										this
									);
							this["footer"]["setVisible"](!0x1);
						}
						["DisablePanelsInput"]() {
							var _0x3661b0 = _0x5d9431;
							for (let _0x193f10 = 0x0; _0x193f10 < this["panels"]["length"]; _0x193f10++)
								this["panels"][_0x193f10]["Background"]["disableInteractive"]();
						}
						["update"]() {
							var _0xc5125 = _0x5d9431;
							this["playerUI_levelUp"]["Update"]();
						}
					}
					class _0x4d89f4 extends Phaser["GameObjects"]["Container"] {
						constructor(_0x4be193, _0x1d0e5d, _0x447a5e) {
							var _0x466f67 = _0x5d9431;
							super(_0x4be193, _0x1d0e5d, _0x447a5e),
								(this["char"] = _0x2485a8["ANTONIO"]),
								this["setScale"](0x4 * _0x1aaca4);
							var _0x5f3dcf = {
								x: 0x0,
								y: 0x0,
								width: 0.24 * _0x1499e1 * 0x2,
								height: 0x34,
							};
							(this["Background"] = new _0x5b4abe["NineSlice"](
								this["scene"],
								_0x395ea9["PanelBackground"],
								_0x5f3dcf
							)),
								(this["myIconBG"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x30,
									0x18,
									"UI",
									"frameB.png"
								)["setOrigin"](0x0, 0x0)),
								(this["myWeaponIcon"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x3c,
									0x24,
									"items",
									""
								)["setOrigin"](0.5)),
								(this["myIcon"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x16,
									0x20,
									"characters",
									""
								)["setOrigin"](0.5)),
								(this["myName"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x6,
									0x6,
									_0x2164b8["Lang"]["getLang"]("charConfirm_name"),
									{}
								)["setScale"](0.5)),
								(this["myDesc"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x50,
									0x10,
									_0x2164b8["Lang"]["getLang"]("charConfirm_description"),
									{}
								)
									["setScale"](0.5)
									["setWordWrapWidth"](0xd2)),
								(this["myBuy"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0xd7,
									0x22,
									_0x2164b8["Lang"]["getLang"]("charConfirm_confirm"),
									{}
								)
									["setScale"](0.5)
									["setOrigin"](0.5)),
								(this["Button"] = new _0x5b4abe["NineSlice"](this["scene"], _0x395ea9["GreenButton"], {
									x: 0xd7,
									y: 0x22,
									width: 0x30,
									height: 0x1e,
								})
									["setScale"](0x1)
									["setOrigin"](0.5)),
								(this["myPrice"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0xe1,
									0xc,
									_0x2164b8["Lang"]["getLang"]("charConfirm_price"),
									{}
								)
									["setScale"](0.5)
									["setOrigin"](0.5)),
								(this["myCoins"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x0,
									0x0,
									"UI",
									"CoinGold.png"
								)
									["setScale"](0x1)
									["setOrigin"](0x1, 0.5)),
								this["AssignData"](this["char"]),
								this["add"]([
									this["Background"],
									this["myIconBG"],
									this["myWeaponIcon"],
									this["myIcon"],
									this["myName"],
									this["myDesc"],
									this["Button"],
									this["myBuy"],
									this["myCoins"],
									this["myPrice"],
								]);
						}
						["AssignData"](_0x19235f) {
							var _0x1ba8b6 = _0x5d9431,
								_0x2225f1,
								_0x1d2b55;
							(this["char"] = _0x19235f),
								(_0x2225f1 = _0x11010a[this["char"]]
									? _0x11010a[this["char"]][0x0]
									: _0x11010a[_0x2485a8["ANTONIO"]][0x0]),
								(_0x1d2b55 = _0x41a274[_0x2225f1["startingWeapon"]]
									? _0x41a274[_0x2225f1["startingWeapon"]][0x0]
									: _0x41a274[_0x5324b3["WHIP"]][0x0]),
								this["Background"]["setTint"](0xffffff),
								(this["myName"]["text"] =
									(_0x2225f1["prefix"] ? _0x2225f1["prefix"] + " " : "") +
									_0x2225f1["charName"] +
									" " +
									_0x2225f1["surname"]),
								this["myIcon"]["setFrame"](_0x2225f1["spriteName"]),
								this["myIcon"]["setTint"](_0x2225f1["isBought"] ? 0xffffff : 0x0),
								this["myWeaponIcon"]["setTexture"](_0x1d2b55["texture"], _0x1d2b55["frameName"]),
								this["myDesc"]["setText"](_0x2225f1["description"]),
								this["myWeaponIcon"]["setVisible"](_0x2225f1["isBought"]),
								this["myIconBG"]["setVisible"](_0x2225f1["isBought"]),
								this["myBuy"]["setText"](
									_0x2225f1["isBought"]
										? _0x2164b8["Lang"]["getLang"]("charConfirm_confirm")
										: _0x2164b8["Lang"]["getLang"]("charConfirm_unlock")
								),
								this["myPrice"]["setText"](
									(_0x2225f1["price"] * _0x2164b8["Core"]["CharMarkup"])["toFixed"](0x0)
								),
								this["myPrice"]["setVisible"](!_0x2225f1["isBought"]),
								this["myCoins"]["setPosition"](
									this["myPrice"]["x"] - 0.25 * this["myPrice"]["width"],
									this["myPrice"]["y"]
								),
								this["myCoins"]["setVisible"](!_0x2225f1["isBought"]);
						}
						["TurnToStart"]() {
							var _0x166979 = _0x5d9431;
							this["Background"]["setTint"](0xffff00),
								this["myBuy"]["setText"](_0x2164b8["Lang"]["getLang"]("charConfirm_start"));
						}
						["TurnToSelection"]() {
							var _0x88ff57 = _0x5d9431;
							this["AssignData"](this["char"]);
						}
					}
					const _0x1c7409 = _0x4d89f4;
					class _0x14f392 extends Phaser["GameObjects"]["Container"] {
						constructor(_0x341d70, _0x41c2c5, _0x12bd0e, _0x1c2230, _0x18672b, _0x15df20) {
							var _0x1740b5 = _0x5d9431;
							super(_0x341d70, _0x41c2c5, _0x12bd0e),
								(this["char"] = _0x15df20),
								this["setScale"](_0x1fa5bb["PixelScale"]);
							var _0x37b36e = {
								x: 0x0,
								y: 0x0,
								width: _0x1c2230,
								height: _0x18672b,
							};
							(this["Background"] = new _0x5b4abe["NineSlice"](
								this["scene"],
								{
									sourceKey: "UI",
									sourceFrame: "frame1_c2.png",
									sourceLayout: {
										width: 0xc,
										height: 0xc,
									},
								},
								_0x37b36e
							)),
								(this["myIconBG"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									_0x1c2230 - 0x9,
									_0x18672b - 0x9,
									"items",
									""
								)
									["setOrigin"](0x1)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setTintFill"](0x111111)),
								(this["myWeaponIcon"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									_0x1c2230 - 0xc,
									_0x18672b - 0xc,
									"items",
									""
								)
									["setOrigin"](0x1)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myIcon"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x6,
									_0x18672b - 0x5,
									"characters",
									""
								)
									["setOrigin"](0x0, 0x1)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myName"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x6,
									0x6,
									_0x2164b8["Lang"]["getLang"]("charSelection_name"),
									{}
								)["setScale"](_0x1fa5bb["PixelScale"])),
								this["AssignData"](this["char"]),
								this["add"]([
									this["Background"],
									this["myIconBG"],
									this["myWeaponIcon"],
									this["myIcon"],
									this["myName"],
								]),
								(this["_events"] = {}),
								(this["_events"]["pointerdown"] = {}),
								(this["_events"]["pointerdown"]["fn"] = () => {
									var _0x5a829e = _0x1740b5;
									this["OnClick"]();
								});
						}
						["OnClick"]() {}
						["AssignData"](_0x2b9225) {
							var _0x38f0b7 = _0x5d9431;
							this["char"] = _0x2b9225;
							var _0x3c2591,
								_0x3508e1 = _0x11010a[this["char"]][0x0];
							(_0x3c2591 = _0x41a274[_0x3508e1["startingWeapon"]]
								? _0x41a274[_0x3508e1["startingWeapon"]][0x0]
								: _0x41a274[_0x5324b3["WHIP"]][0x0]),
								(this["myName"]["text"] = _0x3508e1["charName"]),
								this["myName"]["setTint"](_0x3508e1["isBought"] ? 0xffffff : 0x444444),
								this["myIcon"]["setFrame"](_0x3508e1["spriteName"]),
								this["myIcon"]["setTint"](_0x3508e1["isBought"] ? 0xffffff : 0x0),
								this["myWeaponIcon"]["setTexture"](_0x3c2591["texture"], _0x3c2591["frameName"]),
								this["myIconBG"]["setTexture"](_0x3c2591["texture"], _0x3c2591["frameName"]),
								this["myWeaponIcon"]["setVisible"](_0x3508e1["isBought"]);
						}
					}
					const _0x392326 = _0x14f392;
					class _0x58ce12 extends Phaser["GameObjects"]["Container"] {
						constructor(_0x330081, _0x1755f3, _0x314e51) {
							var _0x556816 = _0x5d9431;
							super(_0x330081, _0x1755f3, _0x314e51),
								(this["MaxY"] = 0x0),
								(this["MinY"] = 0x0),
								_0x330081["add"]["existing"](this);
						}
						get ["ReverseValue"]() {
							return this["y"] / this["MaxY"];
						}
						get ["Value"]() {
							return 0x1 - this["ReverseValue"];
						}
						["SetSize"](_0x1173b2, _0x10bbe6, _0xe2461e = !0x0) {
							var _0x3a2c1f = _0x5d9431;
							(this["trueWidth"] = _0x1173b2),
								(this["trueHeight"] = _0x10bbe6),
								this["setSize"](_0x1173b2, _0x10bbe6),
								this["setInteractive"](),
								(this["MaxY"] = this["y"]),
								(this["MinY"] = this["y"] - 0.5 * _0x10bbe6),
								_0xe2461e &&
									(this["scene"]["input"]["setDraggable"](this),
									this["scene"]["input"]["on"](
										"drag",
										(_0x53467c, _0x140c48, _0x99872c, _0x5d9471) => {
											var _0x41bbb0 = _0x3a2c1f;
											(this["y"] = _0x5d9471),
												this["y"] > this["MaxY"] && (this["y"] = this["MaxY"]),
												this["y"] < this["MinY"] && (this["y"] = this["MinY"]);
										}
									));
						}
						["EnableDragging"]() {
							var _0x1a32e5 = _0x5d9431;
							this["scene"]["input"]["setDraggable"](this),
								this["scene"]["input"]["on"]("drag", (_0x390333, _0x5e0899, _0x59e92d, _0x1fa479) => {
									var _0x442c8b = _0x1a32e5;
									(this["y"] = _0x1fa479),
										this["y"] > this["MaxY"] && (this["y"] = this["MaxY"]),
										this["y"] < this["MinY"] && (this["y"] = this["MinY"]);
								});
						}
						["ScrollBy"](_0xe44783) {
							var _0x34588e = _0x5d9431;
							(this["y"] += _0xe44783),
								this["y"] > this["MaxY"] && (this["y"] = this["MaxY"]),
								this["y"] < this["MinY"] && (this["y"] = this["MinY"]);
						}
						["AddChildren"](_0x3189a4) {
							var _0x8b8dd7 = _0x5d9431;
							if (Array["isArray"](_0x3189a4))
								for (let _0xb92f79 = 0x0; _0xb92f79 < _0x3189a4["length"]; _0xb92f79++) {
									const _0x38d0c2 = _0x3189a4[_0xb92f79];
									(_0x38d0c2["x"] -= 0.5 * this["trueWidth"]),
										(_0x38d0c2["y"] -= 0.5 * this["trueHeight"]);
								}
							else
								(_0x3189a4["x"] -= 0.5 * this["trueWidth"]),
									(_0x3189a4["y"] -= 0.5 * this["trueHeight"]);
							this["add"](_0x3189a4);
						}
					}
					const _0x3729c3 = _0x58ce12;
					class _0x4f6e29 extends Phaser["Scene"] {
						constructor() {
							var _0x1c105a = _0x5d9431;
							super({
								key: _0x53d8cd["CharSelectionScene"],
							}),
								(this["TopLeft"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["IsInitialised"] = !0x1),
								(this["HighlightedPanel"] = null),
								(this["isReadyToStart"] = !0x1),
								(this["Columns"] = 0x4),
								(this["Rows"] = 0x0),
								(this["isStartingGameMode"] = !0x1),
								(this["scrollTopY"] = 0x40),
								(this["scrollHeight"] = 0x0),
								(this["ShowScrollbar"] = !0x1);
						}
						["OnPanelClicked"](_0x6b41c0) {
							var _0x41331a = _0x5d9431;
							this["isStartingGameMode"] ||
								((this["Highlighted"] = _0x6b41c0),
								this["confirmationPanel"]["AssignData"](this["Highlighted"]),
								this["StatsPanel"]["AssignData"](this["Highlighted"]),
								(this["isReadyToStart"] = !0x1),
								this["OnSelectionChange"](!0x0, !0x1, this["Highlighted"]));
						}
						["OnConfirmClicked"]() {
							var _0x39be5c = _0x5d9431,
								_0x5e66e8 = _0x11010a[this["Highlighted"]][0x0],
								_0x446675 = _0x5e66e8["price"] * _0x2164b8["Core"]["CharMarkup"];
							_0x5e66e8["isBought"] && !this["isReadyToStart"]
								? ((_0x2164b8["Core"]["PlayerOptions"]["SelectedCharacter"] = this["Highlighted"]),
								  this["OnSelectionChange"](),
								  this["confirmationPanel"]["TurnToStart"](),
								  (this["isReadyToStart"] = !0x0),
								  _0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"], {
										detune: 0x64,
								  }),
								  _0x2164b8["Core"]["SetSeenWeapon"](_0x5e66e8["startingWeapon"]))
								: _0x5e66e8["isBought"] && this["isReadyToStart"]
								? (_0x2164b8["Core"]["SceneManager"]["UI_overlayScene"]["DestroyGrid"](),
								  _0x2164b8["Core"]["SceneManager"]["StartFromCharSelection"](),
								  _0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"], {
										detune: 0xc8,
								  }),
								  (this["isStartingGameMode"] = !0x0))
								: !_0x5e66e8["isBought"] &&
								  _0x2164b8["Core"]["PlayerOptions"]["Coins"] >= _0x446675 &&
								  ((_0x2164b8["Core"]["PlayerOptions"]["Coins"] -= _0x446675),
								  (_0x2164b8["Core"]["PlayerOptions"]["LifetimeCoins"] -= _0x446675),
								  this["UI_topBar"]["UpdateCoins"](),
								  (_0x5e66e8["isBought"] = !0x0),
								  this["confirmationPanel"]["AssignData"](this["Highlighted"]),
								  this["RefreshPanels"](),
								  _0x2164b8["Core"]["OnCharacterBought"](this["Highlighted"]),
								  (_0x2164b8["Core"]["PlayerOptions"]["SelectedCharacter"] = this["Highlighted"]),
								  this["OnSelectionChange"](),
								  (this["isReadyToStart"] = !0x1),
								  _0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"], {
										detune: -0x190,
								  }));
						}
						["preload"]() {}
						["create"]() {
							var _0x2da028 = _0x5d9431;
							(this["isStartingGameMode"] = !0x1),
								(this["Highlighted"] = _0x2164b8["Core"]["PlayerOptions"]["SelectedCharacter"]);
							var _0x1aed51 = _0x2bef3a["width"] * _0x1fa5bb["RPixelScale"],
								_0x80cc3 = (_0x2bef3a["height"] - 0x40) * _0x1fa5bb["RPixelScale"],
								_0x2d0ad7 = _0x80cc3 * _0x1fa5bb["PixelScale"];
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x1aed51,
								height: _0x80cc3,
							})),
								this["background"]["setPosition"](_0x2bef3a["centerX"], _0x2d0ad7),
								this["background"]["setOrigin"](0.5, 0x1),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								(this["scrollTopY"] = 0x40),
								(this["scrollHeight"] = _0x80cc3 - 0xc8),
								(this["ScrollBar"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["Scrollbar"], {
									x: _0x2bef3a["left"] + _0x1aed51 - 0x10,
									y: this["scrollTopY"],
									width: 0x8,
									height: this["scrollHeight"],
								})
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								this["add"]["existing"](this["ScrollBar"]),
								(this["ScrollCursor"] = this["add"]
									["image"](
										_0x2bef3a["left"] + _0x1aed51 - 0x10,
										this["scrollTopY"],
										"UI",
										"menu_slider_button_strip3.png"
									)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								(this["highlight"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["SelectionHighlight"], {
									x: 0x0,
									y: 0x0,
									width: 0x40,
									height: 0x40,
								})),
								this["highlight"]
									["setOrigin"](0x0, 0x0)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setDepth"](0xa),
								this["add"]["existing"](this["highlight"]),
								(this["header"] = this["add"]
									["text"](
										_0x2bef3a["centerX"],
										0x21,
										_0x2164b8["Lang"]["getLang"]("character_header"),
										{}
									)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5));
							var _0x3cf0ea = _0x11010a;
							this["panels"] = this["add"]["group"]();
							for (const _0x2b97ff in _0x3cf0ea)
								if (!_0x3cf0ea[_0x2b97ff][0x0]["hidden"]) {
									var _0xa37f5b = new _0x392326(this, 0x0, 0x0, 0x6e, 0x6e, _0x2b97ff);
									_0xa37f5b["Background"]["setInteractive"](),
										_0xa37f5b["Background"]["on"](
											"pointerdown",
											() => {
												var _0x460fab = _0x2da028;
												this["OnPanelClicked"](_0x2b97ff);
											},
											this
										),
										(_0xa37f5b["OnClick"] = () => {
											var _0x997e0d = _0x2da028;
											this["OnConfirmClicked"]();
										}),
										this["panels"]["add"](_0xa37f5b);
								}
							this["ShowScrollbar"] = this["panels"]["children"]["entries"]["length"] > 0xc;
							for (
								var _0x4feae4 = this["ShowScrollbar"] ? 0x6 : 0x5,
									_0x549e26 = (_0x2bef3a["width"] - 0x6e * this["Columns"]) / _0x4feae4,
									_0x79b2ed = this["panels"]["getChildren"](),
									_0x5f1187 = 0x0;
								_0x5f1187 < _0x79b2ed["length"];
								_0x5f1187++
							) {
								const _0x5a19de = _0x79b2ed[_0x5f1187];
								(_0x5a19de["x"] =
									_0x549e26 +
									(_0x5f1187 % this["Columns"]) * 0x6e +
									_0x549e26 * (_0x5f1187 % this["Columns"])),
									(_0x5a19de["y"] =
										0x3c +
										_0x549e26 +
										0x6e * Math["floor"](_0x5f1187 / this["Columns"]) +
										_0x549e26 * Math["floor"](_0x5f1187 / this["Columns"]));
							}
							var _0x239b9a = 0xdc + (_0x79b2ed["length"] / 0x4) * 0x6e;
							const _0x1013c8 = new Phaser["GameObjects"]["Graphics"](this, {
								x: 0x0,
								y: 0x0,
							});
							_0x1013c8["lineStyle"](0x1, 0xffffff, 0.9),
								_0x1013c8["fillStyle"](0xffff, 0.2),
								_0x1013c8["fillRect"](
									_0x2bef3a["left"],
									0x7c,
									_0x2bef3a["width"],
									this["renderer"]["height"] - 0x80 - 0x68
								);
							var _0x2540db = _0x1013c8["createGeometryMask"]();
							(this["sc"] = new _0x3729c3(
								this,
								_0x2bef3a["centerX"],
								_0x1013c8["y"] + 0.5 * (this["renderer"]["height"] - 0x80 - 0x68)
							)),
								this["sc"]["setMask"](_0x2540db),
								(this["Rows"] = Math["ceil"](_0x79b2ed["length"] / this["Columns"])),
								(this["confirmationPanel"] = new _0x1c7409(
									this,
									_0x2bef3a["left"] + 0x14 * _0x1aaca4,
									_0x2d0ad7 - 0x14 * _0x1aaca4
								)),
								this["add"]["existing"](this["confirmationPanel"]),
								this["confirmationPanel"]["Button"]["setInteractive"](),
								this["confirmationPanel"]["Button"]["on"](
									"pointerdown",
									() => {
										var _0x3bf9f2 = _0x2da028;
										this["OnConfirmClicked"]();
									},
									this
								),
								_0x38ad94["CalculateAndSetContainerSize"](this["confirmationPanel"]),
								(this["confirmationPanel"]["y"] -= this["confirmationPanel"]["displayHeight"]),
								(this["UI_topBar"] = this["scene"]["get"](_0x53d8cd["UI_topBar"]));
							var _0x3199b1 = this["children"]["getAll"]();
							if (
								(this["children"]["removeAll"](),
								(this["SceneContainer"] = this["add"]["container"](0x0, 0x0, _0x3199b1)),
								this["SceneContainer"]["setScale"](_0x16385e()),
								_0x38ad94["CalculateAndSetContainerSize"](this["SceneContainer"]),
								(this["SceneContainer"]["y"] =
									this["renderer"]["height"] - this["SceneContainer"]["displayHeight"]),
								(this["StatsPanel"] = new _0x1ef4d8(
									this,
									_0x2bef3a["left"],
									0x80,
									0xc8,
									0x122,
									this["Highlighted"]
								)),
								this["add"]["existing"](this["StatsPanel"]),
								_0x38ad94["CalculateAndSetContainerSize"](this["StatsPanel"]),
								(this["StatsPanel"]["x"] =
									_0x2bef3a["left"] - this["StatsPanel"]["displayWidth"] - 0x20),
								(this["StatsPanel"]["y"] =
									_0x2bef3a["centerY"] - 0.5 * this["StatsPanel"]["displayHeight"]),
								this["StatsPanel"]["Open"](),
								this["StatsPanel"]["setVisible"](
									!_0xe0047c &&
										_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["length"] > 0x1
								),
								(this["sc"]["y"] = 0.5 * _0x239b9a),
								this["sc"]["SetSize"](_0x2bef3a["width"], _0x239b9a, this["ShowScrollbar"]),
								this["sc"]["AddChildren"](_0x79b2ed),
								this["sc"]["AddChildren"](this["highlight"]),
								this["ScrollBar"]["setVisible"](this["ShowScrollbar"]),
								this["ScrollCursor"]["setVisible"](this["ShowScrollbar"]),
								this["ShowScrollbar"] && this["HandleInput"](),
								this["MakeUIGrid"](),
								this["OnPanelClicked"](this["Highlighted"]),
								_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["indexOf"](_0x2485a8["FINO"]) >
									-0x1)
							) {
								let _0x17a8ae = _0x11010a[_0x2485a8["FINO"]][0x0];
								(_0x17a8ae["maxHp"] = 0x64 * (Math["random"]() - 0.025)),
									(_0x17a8ae["armor"] = 0x2 * (Math["random"]() - 0.1)),
									(_0x17a8ae["regen"] = 0x1 * (Math["random"]() - 0.5)),
									(_0x17a8ae["moveSpeed"] = 0x2 * (Math["random"]() - 0.5)),
									(_0x17a8ae["power"] = 0x2 * (Math["random"]() - 0.1)),
									(_0x17a8ae["cooldown"] = 0x2 * (Math["random"]() - 0.1)),
									(_0x17a8ae["area"] = 0x4 * (Math["random"]() - 0.1)),
									(_0x17a8ae["speed"] = 0x2 * (Math["random"]() - 0.1)),
									(_0x17a8ae["duration"] = 0x3 * (Math["random"]() - 0.1)),
									(_0x17a8ae["amount"] = 0x2 * (Math["random"]() - 0.1)),
									(_0x17a8ae["luck"] = 0x2 * (Math["random"]() - 0.1)),
									(_0x17a8ae["growth"] = 0x2 * (Math["random"]() - 0.1)),
									(_0x17a8ae["greed"] = 0x2 * (Math["random"]() - 0.1)),
									(_0x17a8ae["magnet"] = 0x2 * (Math["random"]() - 0.1)),
									(_0x17a8ae["revivals"] = 0x2 * (Math["random"]() - 0.1)),
									(_0x17a8ae["curse"] = 0x2 * (Math["random"]() - 0.025)),
									(_0x17a8ae["startingWeapon"] =
										Math["random"]() > 0.5 ? _0x5324b3["AXE"] : _0x5324b3["SCYTHE"]),
									(_0x17a8ae["charName"] = String["fromCharCode"](
										0x6d,
										0x69,
										0x73,
										0x73,
										0x69,
										0x6e,
										0x67,
										0x4e,
										Math["floor"](0xde * Math["random"]())
									)),
									(_0x17a8ae["description"] = String["fromCharCode"](
										0x27,
										0x4d,
										0x28,
										Math["floor"](0xde * Math["random"]()),
										Math["floor"](0xde * Math["random"]()),
										0x29
									));
							}
						}
						["HandleInput"]() {
							var _0x1a090a = _0x5d9431;
							this["input"]["mouse"]["disableContextMenu"](),
								this["input"]["on"](
									"wheel",
									(_0x5c7fe2, _0x30f8d4, _0x2fbd3c, _0xe36ed1, _0x23c9a6) => {
										var _0x5bf55c = _0x1a090a;
										this["sc"]["ScrollBy"](0.4 * -_0xe36ed1);
									}
								);
						}
						["RefreshPanels"]() {
							var _0x3184ec = _0x5d9431;
							this["panels"]["getChildren"]()["map"]((_0x26eb45) => {
								var _0x453c3f = _0x3184ec;
								_0x26eb45["AssignData"](_0x26eb45["char"]);
							});
						}
						["OnSelectionChange"](
							_0x4ba187 = !0x0,
							_0x4959b2 = !0x0,
							_0x5970ea = _0x2164b8["Core"]["PlayerOptions"]["SelectedCharacter"]
						) {
							var _0x569f5b = _0x5d9431,
								_0x52e076;
							this["scene"]["bringToTop"](_0x53d8cd["UI_topBar"]),
								this["scene"]["bringToTop"](_0x53d8cd["UI_overlayScene"]);
							var _0x3c8286 = this["panels"]["getChildren"]();
							_0x3c8286["map"]((_0x5def11) => {
								var _0x4f444d = _0x569f5b;
								_0x5def11["Background"]["setTint"](0xffffff);
							});
							var _0x168462 = _0x3c8286["find"]((_0x38b0cb) => _0x38b0cb["char"] === _0x5970ea);
							if (_0x168462) {
								_0x4ba187 &&
									this["highlight"]["setPosition"](_0x168462["x"] - 0x9, _0x168462["y"] - 0x9),
									_0x4959b2 && _0x168462["Background"]["setTint"](0xffff00),
									(this["HighlightedPanel"] = _0x168462);
								let _0x40fbd1 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
								null === (_0x52e076 = _0x40fbd1["UI_grid"]) ||
									void 0x0 === _0x52e076 ||
									_0x52e076["SelectGameObject"](_0x168462),
									(_0x40fbd1["UI_selected"] = _0x168462);
							}
						}
						["update"]() {
							var _0x514fb6 = _0x5d9431,
								_0x4fff84,
								_0x459a22;
							let _0x335e67 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x335e67["UI_selected"] !=
								(null === (_0x4fff84 = _0x335e67["UI_grid"]) || void 0x0 === _0x4fff84
									? void 0x0
									: _0x4fff84["previousGameObject"]) &&
								((
									null === (_0x459a22 = _0x335e67["UI_selected"]) || void 0x0 === _0x459a22
										? void 0x0
										: _0x459a22["char"]
								)
									? (this["OnPanelClicked"](_0x335e67["UI_selected"]["char"]),
									  _0x335e67["ToggleCursorsVisibility"](!0x1),
									  this["highlight"]["setVisible"](!0x0),
									  this["correctScrollableContainerPosition"](_0x335e67["UI_selected"]))
									: (_0x335e67["ToggleCursorsVisibility"](!0x0),
									  this["highlight"]["setVisible"](!0x1))),
								this["ScrollCursor"]["setPosition"](
									this["ScrollCursor"]["x"],
									this["scrollTopY"] +
										this["sc"]["ReverseValue"] *
											(this["scrollHeight"] * _0x1fa5bb["PixelScale"] -
												this["ScrollCursor"]["displayHeight"])
								);
						}
						["correctScrollableContainerPosition"](_0x18b72f, _0x47bad1 = null) {
							var _0x27245c = _0x5d9431;
							let _0x5f31bb = 0x3f,
								_0x41313b = _0x47bad1 || this["highlight"]["y"];
							if (this["sc"]["y"] + _0x41313b + _0x5f31bb > this["renderer"]["height"] - 0x80 - 0x68) {
								for (
									this["sc"]["y"] -= _0x5f31bb;
									this["sc"]["y"] + _0x41313b + _0x5f31bb > this["renderer"]["height"] - 0x80 - 0x68;

								)
									this["sc"]["y"] -= _0x5f31bb;
							} else {
								if (this["sc"]["y"] + _0x41313b < _0x5f31bb) {
									for (this["sc"]["y"] += _0x5f31bb; this["sc"]["y"] + _0x41313b < _0x5f31bb; )
										this["sc"]["y"] += _0x5f31bb;
								}
							}
						}
						["MakeUIGrid"]() {
							var _0x267b98 = _0x5d9431;
							let _0x191a62 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							this["panels"]["children"]["entries"]["length"],
								_0x191a62["MakeUIGrid"](this["Columns"], this["Rows"] + 0x1, !0x0);
							for (let _0x41e18f = 0x0; _0x41e18f < this["Columns"]; _0x41e18f++)
								_0x191a62["UI_grid"]["SetContents"](_0x41e18f, 0x0, this["UI_topBar"]["BackButton"]);
							for (
								let _0x37f39c = 0x0;
								_0x37f39c < this["panels"]["children"]["entries"]["length"];
								_0x37f39c++
							) {
								const _0x162af7 = this["panels"]["children"]["entries"][_0x37f39c];
								_0x191a62["UI_grid"]["SetContents"](
									_0x37f39c % this["Columns"],
									0x1 + Math["floor"](_0x37f39c / this["Columns"]),
									_0x162af7
								);
							}
							_0x191a62["ToggleCursorsVisibility"](!0x1),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x191a62),
								(_0x191a62["OnCancelCallback"] = () => {
									var _0x1ed3f8 = _0x267b98,
										_0x3e79bf,
										_0x3a5439,
										_0x3686e1;
									null ===
										(_0x3686e1 =
											null ===
												(_0x3a5439 =
													null === (_0x3e79bf = this["UI_topBar"]["BackButton"]) ||
													void 0x0 === _0x3e79bf
														? void 0x0
														: _0x3e79bf["_events"]) || void 0x0 === _0x3a5439
												? void 0x0
												: _0x3a5439["pointerdown"]) ||
										void 0x0 === _0x3686e1 ||
										_0x3686e1["fn"]();
								});
						}
					}
					class _0x508888 extends Phaser["Scene"] {
						constructor() {
							var _0x411907 = _0x5d9431;
							super({
								key: _0x53d8cd["IntroScene"],
							}),
								(this["fillScale"] = 0x1),
								(this["IS_TOUCH"] = !0x1),
								(this["isInitialized"] = !0x1);
						}
						["removeDebugTextOnMobile"]() {
							var _0x5f2bad = _0x5d9431;
							try {
								(this["IS_TOUCH"] = !0x0), (this["DebugText"]["text"] = "");
							} catch (_0xfd628c) {}
							window["removeEventListener"]("touchstart", this["boundf"]);
						}
						["preload"]() {
							var _0x270420 = _0x5d9431;
							(this["boundf"] = this["removeDebugTextOnMobile"]["bind"](this)),
								window["addEventListener"]("touchstart", this["boundf"]),
								_0x2164b8["ApplyMenuResolution"](),
								_0x2164b8["Sound"]["StopMusic"](_0x2164b8["Core"]["CurrentBGM"]);
						}
						["create"]() {
							var _0x3c0e05 = _0x5d9431;
							if (
								((this["isInitialized"] = !0x1),
								_0x2164b8["Core"]["SceneManager"]["Init"](),
								(this["Background"] = this["add"]["image"](
									0.5 * this["renderer"]["width"],
									0.5 * this["renderer"]["height"],
									"introBG"
								)),
								!_0xe0047c)
							) {
								let _0x2f7b6d = this["add"]
									["image"](-0x40, 0x40, "illustrations", "villain.png")
									["setOrigin"](0x0)
									["setScale"](0x3)
									["setAlpha"](0x0);
								this["tweens"]["add"]({
									targets: _0x2f7b6d,
									alpha: 0.5,
									duration: 0x2ee,
									delay: 0x2ee,
									ease: "Linear",
								});
								let _0x46a193 = this["add"]
									["image"](
										this["renderer"]["width"],
										_0x2bef3a["centerY"],
										"illustrations",
										"imelda.png"
									)
									["setOrigin"](0x1, 0.5)
									["setScale"](0x2)
									["setAlpha"](0x0)
									["setFlipX"](!0x0);
								this["tweens"]["add"]({
									targets: _0x46a193,
									alpha: 0.75,
									duration: 0x2ee,
									delay: 0x3e8,
									ease: "Linear",
								});
							}
							let _0x278e69 = this["add"]
								["image"](_0x2bef3a["centerX"], _0x2bef3a["height"], "illustrations", "antonio.png")
								["setOrigin"](0.5, 0x1)
								["setScale"](0x2)
								["setAlpha"](0x0);
							this["tweens"]["add"]({
								targets: _0x278e69,
								alpha: 0x1,
								duration: 0x1f4,
								delay: 0x3e8,
								ease: "Linear",
							}),
								(this["title"] = this["add"]
									["image"](
										0.5 * this["renderer"]["width"],
										0.3 * this["renderer"]["height"],
										"title"
									)
									["setScale"]((0x3 * _0x1aaca4 * _0x2bef3a["width"]) / _0x2bef3a["right"])
									["setDepth"](0x1)),
								(this["VersionText"] = this["add"]
									["text"](
										0.5 * this["renderer"]["width"],
										this["title"]["y"] + 0.5 * this["title"]["displayHeight"],
										_0x2c2b99,
										{
											align: "center",
										}
									)
									["setScale"](0x2 * _0x1aaca4)
									["setOrigin"](0.5)
									["setVisible"](!0x1)),
								(this["DebugText"] = this["add"]
									["text"](
										_0x2bef3a["left"] + 0x4,
										this["title"]["y"] - 0xa + 0.5 * this["title"]["displayHeight"],
										"Menu cheats:\nC: add coins\nR: reset data\nU: unlock all\n\nGame cheats:\nX: level up\nH: heal\nZ: all weapons\nI: invulnerable\nT: next minute\nO: game over\nE: max enemies\nK: kill enemies\nG: Treasure\nV: Vacuum\nQ: Showcase\nMouseWheel: zoom",
										{
											align: "left",
										}
									)
									["setScale"](0x2 * _0x1aaca4)
									["setOrigin"](0x0)
									["setVisible"](!0x1));
							var _0x2abfb4 = Math["min"](
								this["Background"]["displayWidth"],
								this["Background"]["displayHeight"]
							);
							(this["fillScale"] = _0xe0047c
								? this["renderer"]["height"] / _0x2abfb4
								: this["renderer"]["width"] / _0x2abfb4),
								this["Background"]["setScale"](5.1 * this["fillScale"], 5.1 * this["fillScale"]),
								(this["cameraFilter"] = this["plugins"]
									["get"]("rexPixelationPipeline")
									["add"](this["cameras"]["main"])),
								(this["cameraFilter"]["pixelWidth"] = 0x32),
								(this["cameraFilter"]["pixelHeight"] = 0x32),
								(this["pluginFilter"] = this["plugins"]["get"]("rexPixelationPipeline")),
								this["tweens"]["add"]({
									targets: this["cameraFilter"],
									pixelWidth: 0x1,
									pixelHeight: 0x1,
									duration: 0x3e8,
									ease: "Linear",
									onComplete: () => {
										this["OnIntroEnded"]();
									},
								}),
								this["tweens"]["add"]({
									targets: this["cameras"]["main"],
									zoom: 0x1,
									duration: 0x44c,
								}),
								this["tweens"]["add"]({
									targets: this["Background"],
									scaleY: 1.1 * this["fillScale"],
									scaleX: 1.1 * this["fillScale"],
									duration: 0x44c,
									ease: "Linear",
								}),
								(this["touchText"] = this["add"]
									["text"](
										0.5 * this["renderer"]["width"],
										0.75 * this["renderer"]["height"],
										_0x2164b8["Lang"]["getLang"]("intro_start"),
										{}
									)
									["setOrigin"](0.5)
									["setScale"](0x4 * _0x1aaca4)
									["setVisible"](!0x1)),
								this["scene"]["launch"](_0x53d8cd["UI_topBar"]),
								this["scene"]["launch"](_0x53d8cd["UI_mainMenu"]),
								this["scene"]["setVisible"](!0x1, _0x53d8cd["UI_topBar"]),
								this["scene"]["setVisible"](!0x1, _0x53d8cd["UI_mainMenu"]),
								(this["UI_topBar"] = this["scene"]["get"](_0x53d8cd["UI_topBar"])),
								(this["UI_mainMenu"] = this["scene"]["get"](_0x53d8cd["UI_mainMenu"])),
								this["scene"]["sendToBack"](_0x53d8cd["IntroScene"]),
								this["input"]["keyboard"]
									["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["F1"])
									["once"]("down", () => {
										var _0x4d2a5f = _0x3c0e05;
										_0x2164b8["Core"]["PlayerOptions"]["exportGameData"]();
									}),
								_0x2bc3e5 &&
									(this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["C"])
										["on"]("down", () => {
											var _0x1799af = _0x3c0e05,
												_0x26355a = this["scene"]["get"](_0x53d8cd["UI_topBar"]);
											_0x2164b8["Core"]["PlayerOptions"]["AddCoins"](0x3e8),
												null == _0x26355a || _0x26355a["UpdateCoins"]();
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["R"])
										["on"]("down", () => {
											var _0x1caf1a = _0x3c0e05;
											(_0x2164b8["Core"]["PlayerOptions"] = new _0x27669b()),
												_0x2164b8["Core"]["PlayerOptions"]["CLEAR"](),
												window["location"]["reload"]();
										}),
									this["input"]["keyboard"]
										["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["U"])
										["on"]("down", () => {
											var _0x496f82 = _0x3c0e05;
											_0x2164b8["Core"]["PlayerOptions"]["UnlockedHypers"]["push"](
												_0x2f4d79["FOREST"]
											),
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedHypers"]["push"](
													_0x2f4d79["LIBRARY"]
												),
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedStages"]["push"](
													_0x2f4d79["LIBRARY"]
												);
											for (const _0x444ee3 in _0x41a274)
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedWeapons"]["push"](
													_0x444ee3
												);
											_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
												_0x2485a8["EXDASH"]
											),
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
													_0x2485a8["PORTA"]
												),
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
													_0x2485a8["ARCA"]
												),
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
													_0x2485a8["MORTACCIO"]
												),
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
													_0x2485a8["PAESANO"]
												),
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
													_0x2485a8["DOMMARIO"]
												),
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
													_0x2485a8["GERMANA"]
												),
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
													_0x2485a8["CROCI"]
												),
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
													_0x2485a8["CAVALLO"]
												),
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
													_0x2485a8["LAMA"]
												);
											var _0x55694a = this["scene"]["get"](_0x53d8cd["UI_topBar"]);
											_0x2164b8["Core"]["PlayerOptions"]["AddCoins"](0x30d40),
												null == _0x55694a || _0x55694a["UpdateCoins"](),
												_0x2164b8["Core"]["PlayerOptions"]["Save"](),
												window["location"]["reload"]();
										})),
								_0x179e04 || this["DebugText"]["setText"](""),
								this["game"]["canvas"]["focus"](),
								_0x2164b8["Core"]["SceneManager"]["LaunchUIOverlay"]();
							let _0x1c2b16 = Phaser["Input"]["Keyboard"]["KeyCodes"]["ESC"],
								_0x55dd3f = Phaser["Input"]["Keyboard"]["KeyCodes"]["ENTER"];
							this["input"]["keyboard"]["createCombo"](
								[0x26, 0x26, 0x28, 0x28, 0x25, 0x27, 0x25, 0x27, _0x1c2b16, _0x55dd3f],
								{
									resetOnMatch: !0x0,
									maxKeyDelay: 0x7d0,
								}
							),
								this["input"]["keyboard"]["createCombo"](
									[
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["X"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["MINUS"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["X"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["ONE"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["V"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["I"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["I"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["Q"],
									],
									{
										resetOnMatch: !0x0,
										maxKeyDelay: 0x7d0,
									}
								),
								this["input"]["keyboard"]["createCombo"](
									[
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["X"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["NUMPAD_SUBTRACT"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["X"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["ONE"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["V"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["I"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["I"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["Q"],
									],
									{
										resetOnMatch: !0x0,
										maxKeyDelay: 0x7d0,
									}
								),
								this["input"]["keyboard"]["createCombo"](
									[
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["X"],
										0xad,
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["X"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["ONE"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["V"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["I"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["I"],
										_0x1cb257["Input"]["Keyboard"]["KeyCodes"]["Q"],
									],
									{
										resetOnMatch: !0x0,
										maxKeyDelay: 0x7d0,
									}
								),
								this["input"]["keyboard"]["on"]("keycombomatch", (_0x183dae) => {
									var _0x42803e = _0x3c0e05,
										_0x2d35b9;
									if (0xa == _0x183dae["size"]) {
										if (_0x2164b8["Core"]["PlayerOptions"]["CheatCodeUsed"]) return;
										-0x1 ==
											_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["indexOf"](
												_0x2485a8["MORTACCIO"]
											) &&
											(_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
												_0x2485a8["MORTACCIO"]
											),
											(_0x11010a[_0x2485a8["MORTACCIO"]][0x0]["hidden"] = !0x1),
											_0x2164b8["Core"]["PlayerOptions"]["SaveUnlocks"]()),
											(_0x2164b8["Core"]["PlayerOptions"]["CheatCodeUsed"] = !0x0),
											_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
											_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ThingFound"]),
											_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
											_0x2164b8["Core"]["PlayerOptions"]["AddCoins"](0xaf0),
											null === (_0x2d35b9 = this["UI_topBar"]) ||
												void 0x0 === _0x2d35b9 ||
												_0x2d35b9["UpdateCoins"]();
									} else
										0x8 == _0x183dae["size"] &&
											-0x1 ==
												_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["indexOf"](
													_0x2485a8["EXDASH"]
												) &&
											(_0x2164b8["Core"]["PlayerOptions"]["UnlockedCharacters"]["push"](
												_0x2485a8["EXDASH"]
											),
											(_0x11010a[_0x2485a8["EXDASH"]][0x0]["hidden"] = !0x1),
											(_0x11010a[_0x2485a8["EXDASH"]][0x0]["isBought"] = !0x0),
											_0x2164b8["Core"]["PlayerOptions"]["BoughtCharacters"]["push"](
												_0x2485a8["EXDASH"]
											),
											_0x2164b8["Core"]["PlayerOptions"]["Save"](),
											_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
											_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ThingFound"], {
												detune: -0x3e8,
												rate: 0.5,
											}));
								});
						}
						["FitToScreen"]() {
							var _0x38ac13 = _0x5d9431;
							this["title"]["setScale"](
								(0x3 * _0x1aaca4 * this["renderer"]["width"]) / _0x2bef3a["right"]
							),
								this["touchText"]["setScale"](
									(0x4 * _0x1aaca4 * this["renderer"]["width"]) / _0x2bef3a["right"]
								);
						}
						["OnIntroEnded"]() {
							var _0x13a4af = _0x5d9431;
							this["pluginFilter"]["remove"](this["cameras"]["main"]),
								(this["blinkTimer"] = this["time"]["addEvent"]({
									delay: 0x1f4,
									loop: !0x0,
									callback: () => {
										var _0x140006 = _0x13a4af;
										this["touchText"]["visible"] = !this["touchText"]["visible"];
									},
								})),
								(this["touchText"]["visible"] = !0x0),
								this["Background"]["removeAllListeners"](),
								this["Background"]["setInteractive"](),
								this["CheckFirstInput"]();
						}
						["CheckFirstInput"]() {
							var _0xf7819d = _0x5d9431;
							this["Background"]["once"]("pointerdown", () => this["OnFirstInput"]()),
								this["input"]["keyboard"]["once"]("keyup", () => this["OnFirstInput"]()),
								this["input"]["gamepad"]["once"]("up", () => this["OnFirstInput"]());
						}
						["OnFirstInput"]() {
							var _0x5e572d = _0x5d9431;
							this["isInitialized"] ||
								((this["isInitialized"] = !0x0),
								this["time"]["removeEvent"](this["blinkTimer"]),
								(this["touchText"]["visible"] = !0x1),
								this["UI_topBar"]["Show"](),
								this["UI_mainMenu"]["Show"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
								this["DebugText"]["setVisible"](!0x0),
								this["VersionText"]["setVisible"](!0x1),
								this["time"]["addEvent"]({
									delay: 0x1e,
									callback: () => {
										var _0x14c5d6 = _0x5e572d;
										this["MakeUIGrid"]();
									},
								}));
						}
						["MakeUIGrid"](_0x5d9f3b = null) {
							var _0x374831 = _0x5d9431;
							_0x5d9f3b || (_0x5d9f3b = this["UI_mainMenu"]["StartButton"]);
							let _0x4466fd = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x4466fd["MakeUIGrid"](0x3, 0x4, !0x1),
								_0x4466fd["UI_grid"]["SetContents"](0x0, 0x0, this["UI_topBar"]["ExitButton"]),
								_0x4466fd["UI_grid"]["SetContents"](0x1, 0x0, this["UI_topBar"]["OptionsButton"]),
								_0x4466fd["UI_grid"]["SetContents"](0x1, 0x1, this["UI_mainMenu"]["StartButton"]),
								_0x4466fd["UI_grid"]["SetContents"](0x1, 0x2, this["UI_mainMenu"]["PowerupButton"]),
								_0x4466fd["UI_grid"]["SetContents"](0x0, 0x2, this["UI_mainMenu"]["CollectionButton"]),
								_0x4466fd["UI_grid"]["SetContents"](0x2, 0x2, this["UI_mainMenu"]["AchievementButton"]),
								_0x4466fd["UI_grid"]["SetContents"](0x1, 0x3, this["UI_mainMenu"]["CreditsButton"]),
								global["vs_ex_is_electron_win_build"] &&
									(_0x4466fd["UI_grid"]["SetContents"](
										0x0,
										0x3,
										this["UI_mainMenu"]["ResolutionButton"]
									),
									_0x4466fd["UI_grid"]["SetContents"](0x2, 0x3, this["UI_mainMenu"]["VersionButton"]),
									this["UI_mainMenu"]["VersionButton"]["setVisible"](!0x0)),
								_0x4466fd["ToggleCursorsVisibility"](!0x0),
								(_0x4466fd["OnCancelCallback"] = () =>
									_0x4466fd["UI_grid"]["SelectGameObject"](this["UI_mainMenu"]["StartButton"])),
								_0x4466fd["UI_grid"]["SelectGameObject"](_0x5d9f3b),
								(_0x4466fd["UI_selected"] = _0x5d9f3b),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x4466fd);
						}
						["update"](_0x38c69c, _0x273480) {}
					}
					var _0x486457 = _0x2931d0(0x5b8),
						_0x215019 = _0x2931d0(0x5bb),
						_0x3c2548 = _0x2931d0(0x1b7d);
					class _0x482d91 extends Phaser["Scene"] {
						constructor() {
							var _0x495ae9 = _0x5d9431;
							super({
								key: _0x53d8cd["UI_topBar"],
							});
						}
						["UpdateCoins"]() {
							var _0x31968f = _0x5d9431;
							_0x2164b8["Core"]["PlayerOptions"]["Coins"] < 0xf4240
								? (this["CoinsText"]["text"] =
										_0x2164b8["Core"]["PlayerOptions"]["Coins"]["toFixed"](0x0))
								: (this["CoinsText"]["text"] = "999999");
						}
						["preload"]() {}
						["create"]() {
							var _0x4ddb5a = _0x5d9431;
							const _0x175015 = 0.5 * this["renderer"]["width"];
							(this["Background"] = this["add"]
								["image"](0x0, 0x0, "UI", "blackDot.png")
								["setScale"](this["renderer"]["width"], 0x80 * _0x1aaca4)
								["setOrigin"](0x0)
								["setAlpha"](0.5)),
								(this["BackButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["BackButton"], {
									x: _0x2bef3a["right"] - 0x6,
									y: 0x3,
									width: 0x30,
									height: 0x1e,
								})
									["setScale"](0x4 * _0x1aaca4)
									["setOrigin"](0x1, 0x0)
									["setDepth"](Number["MAX_SAFE_INTEGER"])),
								this["add"]["existing"](this["BackButton"]),
								(this["OptionsButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: _0x2bef3a["right"] - 0x6,
									y: 0x3,
									width: 0x30,
									height: 0x1e,
								})
									["setScale"](0x4 * _0x1aaca4)
									["setOrigin"](0x1, 0x0)),
								this["add"]["existing"](this["OptionsButton"]),
								(this["ExitButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["BackButton"], {
									x: _0x2bef3a["left"] + 0x6,
									y: 0x3,
									width: 0x30,
									height: 0x1e,
								})
									["setScale"](0x4 * _0x1aaca4)
									["setOrigin"](0x0, 0x0)),
								this["add"]["existing"](this["ExitButton"]),
								(this["CoinsBG"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["ProgressBox"], {
									x: _0x175015,
									y: 0x40 * _0x1aaca4,
									width: 0x60,
									height: 0x1c,
								})
									["setScale"](0x4 * _0x1aaca4)
									["setOrigin"](0.5)),
								this["add"]["existing"](this["CoinsBG"]),
								(this["CoinsIcon"] = this["add"]
									["image"](
										this["CoinsBG"]["x"] - 0.5 * this["CoinsBG"]["displayWidth"] + 0x6,
										this["CoinsBG"]["y"],
										"UI",
										"MoneyPile.png"
									)
									["setOrigin"](0x0, 0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["CoinsText"] = this["add"]
									["text"](
										this["CoinsBG"]["x"] + 0.5 * this["CoinsBG"]["displayWidth"] - 0xc,
										this["CoinsBG"]["y"],
										"",
										{
											fontSize: "14px",
											fontFamily: _0x4166ee,
										}
									)
									["setOrigin"](0x1, 0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["BackText"] = this["add"]
									["text"](
										this["BackButton"]["x"] - 0.5 * this["BackButton"]["displayWidth"],
										this["BackButton"]["y"] + 0.5 * this["BackButton"]["displayHeight"],
										_0x2164b8["Lang"]["getLang"]("topBar_back"),
										{
											fontFamily: _0x4166ee,
										}
									)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1aaca4)),
								(this["OptionsText"] = this["add"]
									["text"](
										this["OptionsButton"]["x"] - 0.5 * this["OptionsButton"]["displayWidth"],
										this["OptionsButton"]["y"] + 0.5 * this["OptionsButton"]["displayHeight"],
										_0x2164b8["Lang"]["getLang"]("topBar_options"),
										{
											fontFamily: _0x4166ee,
										}
									)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1aaca4)),
								(this["ExitText"] = this["add"]
									["text"](
										this["ExitButton"]["x"] + 0.5 * this["ExitButton"]["displayWidth"],
										this["ExitButton"]["y"] + 0.5 * this["ExitButton"]["displayHeight"],
										_0x2164b8["Lang"]["getLang"]("topBar_quit"),
										{
											fontFamily: _0x4166ee,
										}
									)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1aaca4)),
								global["vs_ex_is_electron_win_build"] ||
									(this["ExitButton"]["setVisible"](!0x1), this["ExitText"]["setVisible"](!0x1)),
								this["UpdateCoins"](),
								this["Hide"](),
								this["DisableBack"]();
							var _0x5e6b33 = this["children"]["getAll"]();
							this["children"]["removeAll"](),
								(this["SceneContainer"] = this["add"]["container"](0x0, 0x0, _0x5e6b33)),
								this["SceneContainer"]["setScale"](_0x16385e()),
								_0x38ad94["CalculateAndSetContainerSize"](this["SceneContainer"]);
						}
						["Show"]() {
							var _0x48bd01 = _0x5d9431;
							this["scene"]["setVisible"](!0x0, _0x53d8cd["UI_topBar"]),
								this["EnableOptions"](() => {
									var _0x3ae39c = _0x48bd01;
									_0x2164b8["Core"]["SceneManager"]["OptionsFromMainMenu"]();
								});
						}
						["Hide"]() {
							var _0x32dc32 = _0x5d9431;
							this["scene"]["setVisible"](!0x1, _0x53d8cd["UI_topBar"]);
						}
						["DisableBack"]() {
							var _0x423915 = _0x5d9431;
							this["BackButton"]["setVisible"](!0x1),
								this["BackText"]["setVisible"](!0x1),
								this["BackButton"]["removeAllListeners"]();
						}
						["EnableBack"](_0x18d634) {
							var _0x37405f = _0x5d9431;
							this["BackButton"]["removeAllListeners"](),
								this["BackButton"]["setVisible"](!0x0),
								this["BackText"]["setVisible"](!0x0),
								this["BackButton"]["setInteractive"](),
								this["BackButton"]["on"]("pointerdown", () => {
									var _0x52d47b = _0x37405f;
									_0x18d634(),
										this["BackButton"]["setInteractive"](!0x1),
										this["BackButton"]["removeAllListeners"](),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]);
								}),
								this["DisableOptions"]();
						}
						["DisableOptions"]() {
							var _0x49c5d4 = _0x5d9431;
							this["OptionsButton"]["setVisible"](!0x1),
								this["OptionsText"]["setVisible"](!0x1),
								this["OptionsButton"]["removeAllListeners"](),
								this["ExitButton"]["setVisible"](!0x1),
								this["ExitText"]["setVisible"](!0x1),
								this["ExitButton"]["removeAllListeners"]();
						}
						["EnableOptions"](_0x565933) {
							var _0x4c42e3 = _0x5d9431;
							if (
								(this["OptionsButton"]["removeAllListeners"](),
								this["OptionsButton"]["setVisible"](!0x0),
								this["OptionsText"]["setVisible"](!0x0),
								this["OptionsButton"]["setInteractive"](),
								this["OptionsButton"]["on"]("pointerdown", () => {
									var _0x47bb1c = _0x4c42e3;
									_0x565933(),
										this["OptionsButton"]["setInteractive"](!0x1),
										this["OptionsButton"]["removeAllListeners"](),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]);
								}),
								this["DisableBack"](),
								_0x4f668e)
							) {
								this["ExitButton"]["removeAllListeners"](),
									this["ExitButton"]["setVisible"](!0x0),
									this["ExitText"]["setVisible"](!0x0),
									this["ExitButton"]["setInteractive"]();
								try {
									const { ipcRenderer: _0x38b64c } = _0x2931d0(0x8fa);
									this["ExitButton"]["on"]("pointerdown", () => {
										var _0x38fbd6 = _0x4c42e3;
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]),
											_0x38b64c["send"]("close-me");
									});
								} catch (_0x57d98e) {}
							}
						}
						["update"]() {}
					}
					class _0x53db69 extends Phaser["Scene"] {
						constructor() {
							var _0x5374f5 = _0x5d9431;
							super({
								key: _0x53d8cd["UI_mainMenu"],
							});
						}
						["preload"]() {}
						["create"]() {
							var _0x4f86af = _0x5d9431;
							(this["SceneContainer"] = this["add"]["container"](0x0, this["renderer"]["height"])),
								this["SceneContainer"]["setScale"](_0x16385e());
							const _0x28d4ba = 0.5 * this["renderer"]["width"],
								_0x51ce1d = (this["renderer"]["height"], 0x18 * _0x1aaca4),
								_0x38f28e = -_0x51ce1d,
								_0x537c4b = 0x8 * -_0x51ce1d;
							(this["ResolutionButton"] = new _0x5b4abe["NineSlice"](
								this,
								_0x395ea9["OptionsMiniButton"],
								{
									x: _0x2bef3a["left"] + _0x51ce1d,
									y: _0x38f28e,
									width: 0x40,
									height: 0x10,
								}
							)
								["setScale"](0x4 * _0x1aaca4)
								["setOrigin"](0x0, 0x1)),
								this["SceneContainer"]["add"](this["ResolutionButton"]),
								(this["CreditsButton"] = new _0x5b4abe["NineSlice"](
									this,
									_0x395ea9["OptionsMiniButton"],
									{
										x: _0x2bef3a["centerX"],
										y: _0x38f28e,
										width: 0x40,
										height: 0x10,
									}
								)
									["setScale"](0x4 * _0x1aaca4)
									["setOrigin"](0.5, 0x1)),
								this["SceneContainer"]["add"](this["CreditsButton"]),
								(this["VersionButton"] = new _0x5b4abe["NineSlice"](
									this,
									_0x395ea9["DisabledMiniButton"],
									{
										x: _0x2bef3a["right"] - _0x51ce1d,
										y: _0x38f28e,
										width: 0x40,
										height: 0x10,
									}
								)
									["setScale"](0x4 * _0x1aaca4)
									["setOrigin"](0x1, 0x1)
									["setVisible"](!0x1)),
								this["SceneContainer"]["add"](this["VersionButton"]),
								(this["CollectionButton"] = new _0x5b4abe["NineSlice"](
									this,
									_0x395ea9["OptionsButton"],
									{
										x: _0x2bef3a["left"] + _0x51ce1d,
										y: _0x537c4b,
										width: 0x40,
										height: 0x1e,
									}
								)
									["setScale"](0x4 * _0x1aaca4)
									["setOrigin"](0x0, 0x1)),
								this["SceneContainer"]["add"](this["CollectionButton"]),
								(this["AchievementButton"] = new _0x5b4abe["NineSlice"](
									this,
									_0x395ea9["OptionsButton"],
									{
										x: _0x2bef3a["right"] - _0x51ce1d,
										y: _0x537c4b,
										width: 0x40,
										height: 0x1e,
									}
								)
									["setScale"](0x4 * _0x1aaca4)
									["setOrigin"](0x1, 0x1)),
								this["SceneContainer"]["add"](this["AchievementButton"]),
								(this["PowerupButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["GreenButton"], {
									x: _0x28d4ba,
									y: _0x537c4b,
									width: 0x50,
									height: 0x20,
								})
									["setScale"](0x4 * _0x1aaca4)
									["setOrigin"](0.5, 0x1)),
								this["SceneContainer"]["add"](this["PowerupButton"]),
								(this["StartButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: _0x28d4ba,
									y: this["PowerupButton"]["y"] - 0xa * _0x51ce1d,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](0x4 * _0x1aaca4)
									["setOrigin"](0.5, 0x1)),
								this["SceneContainer"]["add"](this["StartButton"]),
								(this["CollectionText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["CollectionButton"]["x"] + 0.5 * this["CollectionButton"]["displayWidth"],
									this["CollectionButton"]["y"] - 0.5 * this["CollectionButton"]["displayHeight"],
									_0x2164b8["Lang"]["getLang"]("menu_collection"),
									{
										fontFamily: _0x4166ee,
									}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1aaca4)),
								this["SceneContainer"]["add"](this["CollectionText"]),
								(this["AchievementText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["AchievementButton"]["x"] - 0.5 * this["AchievementButton"]["displayWidth"],
									this["AchievementButton"]["y"] - 0.5 * this["AchievementButton"]["displayHeight"],
									_0x2164b8["Lang"]["getLang"]("menu_achievements"),
									{
										fontFamily: _0x4166ee,
									}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1aaca4)),
								this["SceneContainer"]["add"](this["AchievementText"]),
								(this["PowerupText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["PowerupButton"]["x"],
									this["PowerupButton"]["y"] - 0.5 * this["PowerupButton"]["displayHeight"],
									_0x2164b8["Lang"]["getLang"]("menu_power_up"),
									{
										fontFamily: _0x4166ee,
									}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x3 * _0x1aaca4)),
								this["SceneContainer"]["add"](this["PowerupText"]),
								(this["StartText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["StartButton"]["x"],
									this["StartButton"]["y"] - 0.5 * this["StartButton"]["displayHeight"],
									_0x2164b8["Lang"]["getLang"]("menu_start"),
									{
										fontFamily: _0x4166ee,
									}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x4 * _0x1aaca4)),
								this["SceneContainer"]["add"](this["StartText"]),
								(this["CreditsText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["CreditsButton"]["x"],
									this["CreditsButton"]["y"] - 0.5 * this["CreditsButton"]["displayHeight"],
									_0x2164b8["Lang"]["getLang"]("menu_credit"),
									{
										fontFamily: _0x4166ee,
									}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1aaca4)),
								this["SceneContainer"]["add"](this["CreditsText"]),
								(this["ResolutionText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["ResolutionButton"]["x"] + 0.5 * this["ResolutionButton"]["displayWidth"],
									this["ResolutionButton"]["y"] - 0.5 * this["ResolutionButton"]["displayHeight"],
									_0x2164b8["Lang"]["getLang"]("menu_screen"),
									{
										fontFamily: _0x4166ee,
									}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1aaca4)),
								this["SceneContainer"]["add"](this["ResolutionText"]),
								(this["VersionText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["VersionButton"]["x"] - 0.5 * this["VersionButton"]["displayWidth"],
									this["VersionButton"]["y"] - 0.5 * this["VersionButton"]["displayHeight"],
									_0x2c2b99,
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1aaca4)),
								this["SceneContainer"]["add"](this["VersionText"]),
								this["Hide"](),
								global["vs_ex_is_electron_win_build"] ||
									(this["ResolutionButton"]["setVisible"](!0x1),
									this["ResolutionText"]["setVisible"](!0x1));
						}
						["Show"]() {
							var _0x48ba92 = _0x5d9431;
							this["scene"]["setVisible"](!0x0, _0x53d8cd["UI_mainMenu"]), this["EnableButtons"]();
						}
						["Hide"]() {
							var _0x1f1683 = _0x5d9431;
							this["scene"]["setVisible"](!0x1, _0x53d8cd["UI_mainMenu"]);
						}
						["EnableButtons"]() {
							var _0x1e62ad = _0x5d9431;
							this["StartButton"]["setInteractive"](),
								this["StartButton"]["on"]("pointerdown", () => {
									var _0x3e117c = _0x1e62ad;
									_0x2164b8["Core"]["SceneManager"]["StartFromMainMenu"](),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]);
								}),
								this["PowerupButton"]["setInteractive"](),
								this["PowerupButton"]["on"]("pointerdown", () => {
									var _0x52ea97 = _0x1e62ad;
									_0x2164b8["Core"]["SceneManager"]["PowerUpFromMainMenu"](),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]);
								}),
								this["CollectionButton"]["setInteractive"](),
								this["CollectionButton"]["on"]("pointerdown", () => {
									var _0x5a53e0 = _0x1e62ad;
									_0x2164b8["Core"]["SceneManager"]["CollectionFromMainMenu"](),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]);
								}),
								this["AchievementButton"]["setInteractive"](),
								this["AchievementButton"]["on"]("pointerdown", () => {
									_0x2164b8["Core"]["SceneManager"]["AchievementsFromMainMenu"](),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]);
								}),
								this["CreditsButton"]["setInteractive"](),
								this["CreditsButton"]["on"]("pointerdown", () => {
									var _0x5bbf3e = _0x1e62ad;
									_0x2164b8["Core"]["SceneManager"]["Credits_FromMainMenu"](),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]);
								}),
								global["vs_ex_is_electron_win_build"] &&
									(this["ResolutionButton"]["setInteractive"](),
									this["ResolutionButton"]["on"]("pointerdown", () => {
										var _0x15fd67 = _0x1e62ad;
										_0x2164b8["Core"]["SceneManager"]["Resolution_FromMainMenu"](),
											_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]);
									}));
						}
						["DisableButtons"]() {}
						["update"](_0x5411df) {}
						["HighlightButton"]() {
							var _0x55c398 = _0x5d9431;
							this["selected"] &&
								(this["highlight"]["copyPosition"](this["selected"]),
								this["highlight"]["setOrigin"](
									this["selected"]["originX"],
									this["selected"]["originY"]
								),
								this["highlight"]["setScale"](this["selected"]["scaleX"], this["selected"]["scaleY"]));
						}
					}
					class _0x17311a extends Phaser["GameObjects"]["Container"] {
						constructor(_0x57493c, _0x23f341, _0x2a5685, _0x30d671, _0x3fbac1, _0x4d10ca) {
							var _0x5836c2 = _0x5d9431;
							super(_0x57493c, _0x23f341, _0x2a5685),
								(this["power"] = _0x4d10ca),
								this["setScale"](_0x1fa5bb["PixelScale"]);
							var _0x43a510 = {
									x: 0x0,
									y: 0x0,
									width: _0x30d671,
									height: _0x3fbac1,
								},
								_0x1923fa = 0.5 * _0x30d671;
							(this["Background"] = new _0x5b4abe["NineSlice"](
								this["scene"],
								{
									sourceKey: "UI",
									sourceFrame: "frame1_c2.png",
									sourceLayout: {
										width: 0xc,
										height: 0xc,
									},
								},
								_0x43a510
							)),
								(this["myIconBG"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									_0x1923fa,
									_0x1923fa,
									"UI",
									"frameD.png"
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myWeaponIcon"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									_0x1923fa,
									_0x1923fa,
									"items",
									""
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myName"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									_0x1923fa,
									0x6,
									_0x2164b8["Lang"]["getLang"]("powerupSelection_name"),
									{}
								)
									["setOrigin"](0.5, 0x0)
									["setScale"](_0x1fa5bb["PixelScale"])),
								_0x4a95c8[this["power"]];
							var _0x39775d = _0x4a95c8[this["power"]][0x0];
							(this["myLevelsBG"] = new Phaser["GameObjects"]["Container"](this["scene"])),
								(this["myLevelsChecks"] = new Phaser["GameObjects"]["Container"](this["scene"]));
							for (let _0x48ec88 = 0x0; _0x48ec88 < _0x39775d["unlockedRank"]; _0x48ec88++)
								this["myLevelsBG"]["add"](
									new Phaser["GameObjects"]["Image"](
										this["scene"],
										0x10 * _0x48ec88,
										_0x1923fa + 0x26,
										"UI",
										"menu_checkbox_16_bg.png"
									)
										["setOrigin"](0.5)
										["setScale"](_0x1fa5bb["PixelScale"])
								),
									this["myLevelsChecks"]["add"](
										new Phaser["GameObjects"]["Image"](
											this["scene"],
											0x10 * _0x48ec88,
											_0x1923fa + 0x26,
											"UI",
											"menu_checkbox_16_checkmark.png"
										)
											["setOrigin"](0.5)
											["setScale"](_0x1fa5bb["PixelScale"])
											["setVisible"](!0x0)
									);
							var _0x12ba61 = _0x1923fa - 0x8 * (_0x39775d["unlockedRank"] - 0x1);
							(this["myLevelsBG"]["x"] = _0x12ba61),
								(this["myLevelsChecks"]["x"] = _0x12ba61),
								this["AssignData"](this["power"]),
								this["add"]([
									this["Background"],
									this["myIconBG"],
									this["myWeaponIcon"],
									this["myName"],
								]),
								this["add"](this["myLevelsBG"]),
								this["add"](this["myLevelsChecks"]),
								(this["_events"] = {}),
								(this["_events"]["pointerdown"] = {}),
								(this["_events"]["pointerdown"]["fn"] = () => {
									this["OnClick"]();
								});
						}
						["OnClick"]() {}
						["AssignData"](_0x4ef383) {
							var _0x6f9db1 = _0x5d9431;
							this["power"] = _0x4ef383;
							var _0x4b6de3 = _0x4a95c8[this["power"]][0x0],
								_0x4b50b1 = _0x4b6de3["level"];
							(this["myName"]["text"] = _0x4b6de3["name"]),
								this["myName"]["setTint"](_0x4b50b1 > 0x0 ? 0xffffff : 0x444444),
								this["myWeaponIcon"]["setTexture"](_0x4b6de3["texture"], _0x4b6de3["frameName"]),
								this["myIconBG"]["setFrame"](_0x4b6de3["specialBG"] ? "frameE.png" : "frameD.png"),
								_0x4a95c8[this["power"]],
								this["Background"]["setTint"](
									_0x4b50b1 < _0x4b6de3["unlockedRank"] ? 0xffffff : 0xcccc88
								);
							for (let _0x309a6c = 0x0; _0x309a6c < _0x4b6de3["unlockedRank"]; _0x309a6c++)
								this["myLevelsChecks"]["getAt"](_0x309a6c)["setVisible"](_0x309a6c < _0x4b50b1);
						}
					}
					const _0x11f911 = _0x17311a;
					class _0x2adf9e extends Phaser["GameObjects"]["Container"] {
						constructor(_0x22910a, _0x3a724c, _0x5d5a02) {
							var _0x2335e3 = _0x5d9431;
							super(_0x22910a, _0x3a724c, _0x5d5a02),
								(this["power"] = _0x300df5["AMOUNT"]),
								this["setScale"](_0x1fa5bb["PixelScale"]);
							var _0x1bf127 = {
								x: 0x0,
								y: 0x0,
								width: 0.96 * _0x1499e1,
								height: 0x68,
							};
							(this["Background"] = new _0x5b4abe["NineSlice"](
								this["scene"],
								_0x395ea9["PanelBackground"],
								_0x1bf127
							)),
								(this["myIconBG"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x40,
									0x40,
									"UI",
									"frameD.png"
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myWeaponIcon"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x40,
									0x40,
									"items",
									""
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myName"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x40,
									0x6,
									_0x2164b8["Lang"]["getLang"]("powerupConfirm_name"),
									{}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								(this["myDesc"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x8c,
									0x20,
									_0x2164b8["Lang"]["getLang"]("powerupConfirm_description"),
									{}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setWordWrapWidth"](0xf0)),
								(this["myBuy"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x1ae,
									0x40,
									_0x2164b8["Lang"]["getLang"]("powerupConfirm_confirm"),
									{}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								(this["Button"] = new _0x5b4abe["NineSlice"](this["scene"], _0x395ea9["GreenButton"], {
									x: 0x1ae,
									y: 0x44,
									width: 0x30,
									height: 0x1e,
								})
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								(this["myPrice"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x1c2,
									0x18,
									_0x2164b8["Lang"]["getLang"]("powerupConfirm_price"),
									{}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								(this["myCoins"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x0,
									0x0,
									"UI",
									"CoinGold.png"
								)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x1, 0.5)),
								this["AssignData"](this["power"]),
								this["add"]([
									this["Background"],
									this["myIconBG"],
									this["myWeaponIcon"],
									this["myName"],
									this["myDesc"],
									this["Button"],
									this["myBuy"],
									this["myCoins"],
									this["myPrice"],
								]);
						}
						["AssignData"](_0x1dfd96) {
							var _0x426072 = _0x5d9431;
							this["power"] = _0x1dfd96;
							var _0x5914b8 = _0x4a95c8[this["power"]][0x0],
								_0x110b34 = (_0x4a95c8[this["power"]], _0x5914b8["level"]),
								_0x46ba2c = _0x5914b8["price"];
							this["Background"]["setTint"](_0x110b34 < _0x5914b8["unlockedRank"] ? 0xffffff : 0xcccc88),
								this["myIconBG"]["setFrame"](_0x5914b8["specialBG"] ? "frameE.png" : "frameD.png"),
								(this["myName"]["text"] = _0x5914b8["name"]),
								this["myWeaponIcon"]["setTexture"](_0x5914b8["texture"], _0x5914b8["frameName"]),
								this["myDesc"]["setText"](_0x5914b8["description"]),
								this["myBuy"]["setText"](
									_0x110b34 < _0x5914b8["unlockedRank"]
										? _0x2164b8["Lang"]["getLang"]("powerupConfirm_buy")
										: _0x2164b8["Lang"]["getLang"]("powerupConfirm_maxed")
								),
								this["Button"]["setVisible"](_0x110b34 < _0x5914b8["unlockedRank"]),
								this["myPrice"]["setText"](
									((0x1 + _0x110b34) * _0x46ba2c * _0x2164b8["Core"]["PowerUpMarkup"])["toFixed"](0x0)
								),
								this["myPrice"]["setVisible"](_0x110b34 < _0x5914b8["unlockedRank"]),
								this["myCoins"]["setPosition"](
									this["myPrice"]["x"] - 0.35 * this["myPrice"]["width"],
									this["myPrice"]["y"]
								),
								this["myCoins"]["setVisible"](_0x110b34 < _0x5914b8["unlockedRank"]);
						}
						["TurnToStart"]() {
							var _0xa13b3c = _0x5d9431;
							this["Background"]["setTint"](0xffff00),
								this["myBuy"]["setText"](_0x2164b8["Lang"]["getLang"]("powerupConfirm_start"));
						}
						["TurnToSelection"]() {
							var _0x46e67 = _0x5d9431;
							this["AssignData"](this["power"]);
						}
					}
					const _0x3b16b3 = _0x2adf9e;
					class _0x396aed extends Phaser["Scene"] {
						constructor() {
							var _0x29b5fc = _0x5d9431;
							super({
								key: _0x53d8cd["PowerUpScene"],
							}),
								(this["TopLeft"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["IsInitialised"] = !0x1),
								(this["HighlightedPanel"] = null),
								(this["Columns"] = 0x4),
								(this["Rows"] = 0x0),
								(this["scrollTopY"] = 0x40),
								(this["scrollHeight"] = 0x0);
						}
						["OnPanelClicked"](_0x18fcab) {
							var _0x123f02 = _0x5d9431;
							(this["Highlighted"] = _0x18fcab),
								this["confirmationPanel"]["AssignData"](this["Highlighted"]),
								this["OnSelectionChange"]();
						}
						["OnConfirmClicked"]() {
							var _0xd19b1a = _0x5d9431,
								_0x150425 = _0x4a95c8[this["Highlighted"]][0x0],
								_0x5693b7 = (_0x4a95c8[this["Highlighted"]], _0x150425["level"]),
								_0x32fa31 = _0x150425["price"];
							(_0x32fa31 = (0x1 + _0x5693b7) * _0x32fa31 * _0x2164b8["Core"]["PowerUpMarkup"]),
								(_0x2164b8["Core"]["PlayerOptions"]["Coins"] = Math["ceil"](
									_0x2164b8["Core"]["PlayerOptions"]["Coins"]
								)),
								_0x5693b7 < _0x150425["unlockedRank"] &&
									_0x2164b8["Core"]["PlayerOptions"]["Coins"] >= _0x32fa31 &&
									((_0x2164b8["Core"]["PlayerOptions"]["Coins"] -= _0x32fa31),
									this["UI_topBar"]["UpdateCoins"](),
									(_0x150425["level"] = _0x5693b7 + 0x1),
									_0x2164b8["Core"]["OnPowerUpBought"](this["Highlighted"]),
									this["RefreshPanels"](),
									this["confirmationPanel"]["AssignData"](this["Highlighted"]),
									_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]));
						}
						["preload"]() {}
						["create"]() {
							var _0x52a9ff = _0x5d9431;
							this["Highlighted"] = _0x300df5["MIGHT"];
							var _0x797ec8 = _0x2bef3a["width"] * _0x1fa5bb["RPixelScale"],
								_0x4b602b = (_0x2bef3a["height"] - 0x40) * _0x1fa5bb["RPixelScale"],
								_0x294302 = _0x4b602b * _0x1fa5bb["RPixelScale"];
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x797ec8,
								height: _0x4b602b,
							})),
								this["background"]["setPosition"](_0x2bef3a["centerX"], _0x294302),
								this["background"]["setOrigin"](0.5, 0x1),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								(this["scrollTopY"] = 0x40),
								(this["scrollHeight"] = _0x4b602b - 0xc8),
								(this["ScrollBar"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["Scrollbar"], {
									x: _0x2bef3a["left"] + _0x797ec8 - 0x10,
									y: this["scrollTopY"],
									width: 0x8,
									height: this["scrollHeight"],
								})
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								this["add"]["existing"](this["ScrollBar"]),
								(this["ScrollCursor"] = this["add"]
									["image"](
										_0x2bef3a["left"] + _0x797ec8 - 0x10,
										this["scrollTopY"],
										"UI",
										"menu_slider_button_strip3.png"
									)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								(this["highlight"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["SelectionHighlight"], {
									x: 0x0,
									y: 0x0,
									width: 0x40,
									height: 0x40,
								})),
								this["highlight"]
									["setOrigin"](0x0, 0x0)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setDepth"](0xa),
								this["add"]["existing"](this["highlight"]),
								(this["header"] = this["add"]
									["text"](
										_0x2bef3a["centerX"],
										0x21,
										_0x2164b8["Lang"]["getLang"]("powerup_header"),
										{}
									)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5));
							var _0x238ec3 = _0x4a95c8;
							this["panels"] = this["add"]["group"]();
							for (const _0x111de1 in _0x238ec3)
								if (!_0x238ec3[_0x111de1][0x0]["hidden"]) {
									var _0x5166ac = new _0x11f911(this, 0x0, 0x0, 0x6e, 0x6e, _0x111de1);
									_0x5166ac["Background"]["setInteractive"](),
										_0x5166ac["Background"]["on"](
											"pointerdown",
											() => {
												this["OnPanelClicked"](_0x111de1);
											},
											this
										),
										(_0x5166ac["OnClick"] = () => {
											this["OnConfirmClicked"]();
										}),
										this["panels"]["add"](_0x5166ac);
								}
							for (
								var _0x578268 = (_0x2bef3a["width"] - 0x6e * this["Columns"]) / 0x6,
									_0x46a079 = this["panels"]["getChildren"](),
									_0x4ded4a = 0x0;
								_0x4ded4a < _0x46a079["length"];
								_0x4ded4a++
							) {
								const _0x5ceae0 = _0x46a079[_0x4ded4a];
								(_0x5ceae0["x"] =
									_0x578268 +
									(_0x4ded4a % this["Columns"]) * 0x6e +
									_0x578268 * (_0x4ded4a % this["Columns"])),
									(_0x5ceae0["y"] =
										0x78 +
										_0x578268 +
										0x6e * Math["floor"](_0x4ded4a / this["Columns"]) +
										_0x578268 * Math["floor"](_0x4ded4a / this["Columns"]));
							}
							var _0x3df21b = 0xdc + (_0x46a079["length"] / 0x4) * 0x6e;
							const _0x74b735 = new Phaser["GameObjects"]["Graphics"](this, {
								x: 0x0,
								y: 0x0,
							});
							_0x74b735["lineStyle"](0x1, 0xffffff, 0.9),
								_0x74b735["fillStyle"](0xffff, 0.2),
								_0x74b735["fillRect"](
									_0x2bef3a["left"],
									0x7c,
									_0x2bef3a["width"],
									this["renderer"]["height"] - 0x80 - 0x68
								);
							var _0x2b7677 = _0x74b735["createGeometryMask"]();
							(this["sc"] = new _0x3729c3(
								this,
								_0x2bef3a["centerX"],
								_0x74b735["y"] + 0.5 * (this["renderer"]["height"] - 0x80 - 0x68)
							)),
								this["sc"]["setMask"](_0x2b7677),
								(this["Rows"] = Math["ceil"](_0x4ded4a / this["Columns"])),
								(this["confirmationPanel"] = new _0x3b16b3(
									this,
									_0x2bef3a["left"] + 0xa,
									_0x294302 - 0xa
								)),
								this["add"]["existing"](this["confirmationPanel"]),
								this["confirmationPanel"]["Button"]["setInteractive"](),
								this["confirmationPanel"]["Button"]["on"](
									"pointerdown",
									() => {
										var _0x3a1120 = _0x52a9ff;
										this["OnConfirmClicked"]();
									},
									this
								),
								_0x38ad94["CalculateAndSetContainerSize"](this["confirmationPanel"]),
								(this["confirmationPanel"]["y"] -= this["confirmationPanel"]["displayHeight"]),
								(this["UI_topBar"] = this["scene"]["get"](_0x53d8cd["UI_topBar"])),
								this["scene"]["bringToTop"](_0x53d8cd["UI_topBar"]),
								this["scene"]["bringToTop"](_0x53d8cd["UI_overlayScene"]);
							var _0x5654a2 = this["children"]["getAll"]();
							this["children"]["removeAll"](),
								(this["SceneContainer"] = this["add"]["container"](0x0, 0x0, _0x5654a2)),
								this["SceneContainer"]["setScale"](_0x16385e()),
								_0x38ad94["CalculateAndSetContainerSize"](this["SceneContainer"]),
								(this["SceneContainer"]["y"] =
									this["renderer"]["height"] - this["SceneContainer"]["displayHeight"]),
								(this["RefundButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: 0.5 * _0x2bef3a["width"],
									y: 0x5a,
									width: 0xc8,
									height: 0x20,
								})
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								this["add"]["existing"](this["RefundButton"]),
								(this["RefundText"] = this["add"]
									["text"](
										this["RefundButton"]["x"],
										this["RefundButton"]["y"],
										_0x2164b8["Lang"]["getLang"]("powerup_refund"),
										{
											align: "center",
										}
									)
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								(this["sc"]["y"] = 0.5 * _0x3df21b),
								this["sc"]["SetSize"](_0x2bef3a["width"], _0x3df21b),
								this["sc"]["AddChildren"](_0x46a079),
								this["sc"]["AddChildren"](this["highlight"]),
								this["sc"]["AddChildren"](this["RefundButton"]),
								this["sc"]["AddChildren"](this["RefundText"]),
								this["HandleInput"](),
								this["MakeUIGrid"](),
								this["OnPanelClicked"](this["Highlighted"]);
						}
						["HandleInput"]() {
							var _0x4d4f2a = _0x5d9431;
							this["input"]["mouse"]["disableContextMenu"](),
								this["input"]["on"](
									"wheel",
									(_0xf33875, _0x5258b9, _0x28d889, _0x556b9c, _0x37efd3) => {
										this["sc"]["ScrollBy"](0.4 * -_0x556b9c);
									}
								),
								this["RefundButton"]["setInteractive"](),
								this["RefundButton"]["on"]("pointerdown", () => {
									var _0x42a18c = _0x4d4f2a;
									_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]),
										_0x2164b8["Core"]["PlayerOptions"]["RefundAll"](),
										this["UI_topBar"]["UpdateCoins"](),
										this["RefreshPanels"](),
										this["Highlighted"] &&
											this["confirmationPanel"]["AssignData"](this["Highlighted"]);
								});
						}
						["RefreshPanels"]() {
							var _0xb46e15 = _0x5d9431;
							this["panels"]["getChildren"]()["map"]((_0x18680d) => {
								var _0x430194 = _0xb46e15;
								_0x18680d["AssignData"](_0x18680d["power"]);
							});
						}
						["OnSelectionChange"]() {
							var _0x245b74 = _0x5d9431;
							this["scene"]["bringToTop"](_0x53d8cd["UI_topBar"]),
								this["scene"]["bringToTop"](_0x53d8cd["UI_overlayScene"]);
							var _0x228e03 = this["panels"]
								["getChildren"]()
								["find"]((_0x11334c) => _0x11334c["power"] === this["Highlighted"]);
							if (_0x228e03) {
								this["highlight"]["setPosition"](_0x228e03["x"] - 0x9, _0x228e03["y"] - 0x9),
									(this["HighlightedPanel"] = _0x228e03);
								let _0x1a0a47 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
								_0x1a0a47["UI_grid"]["SelectGameObject"](_0x228e03),
									(_0x1a0a47["UI_selected"] = _0x228e03);
							}
						}
						["update"]() {
							var _0x2fec5e = _0x5d9431,
								_0xc93eaf;
							let _0x4598ef = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x4598ef["UI_selected"] != _0x4598ef["UI_grid"]["previousGameObject"] &&
								((
									null === (_0xc93eaf = _0x4598ef["UI_selected"]) || void 0x0 === _0xc93eaf
										? void 0x0
										: _0xc93eaf["power"]
								)
									? (this["OnPanelClicked"](_0x4598ef["UI_selected"]["power"]),
									  _0x4598ef["ToggleCursorsVisibility"](!0x1),
									  this["highlight"]["setVisible"](!0x0),
									  this["correctScrollableContainerPosition"](_0x4598ef["UI_selected"]))
									: (_0x4598ef["ToggleCursorsVisibility"](!0x0),
									  this["highlight"]["setVisible"](!0x1),
									  _0x4598ef["UI_selected"] === this["RefundButton"] &&
											this["correctScrollableContainerPosition"](
												_0x4598ef["UI_selected"],
												this["RefundButton"]["y"]
											))),
								this["ScrollCursor"]["setPosition"](
									this["ScrollCursor"]["x"],
									this["scrollTopY"] +
										this["sc"]["ReverseValue"] *
											(this["scrollHeight"] * _0x1fa5bb["PixelScale"] -
												this["ScrollCursor"]["displayHeight"])
								);
						}
						["correctScrollableContainerPosition"](_0x29e24d, _0x41c3c2 = null) {
							var _0x11fa02 = _0x5d9431;
							let _0x2815da = 0x3f,
								_0x164f59 = _0x41c3c2 || this["highlight"]["y"];
							if (this["sc"]["y"] + _0x164f59 + _0x2815da > this["renderer"]["height"] - 0x80 - 0x68) {
								for (
									this["sc"]["y"] -= _0x2815da;
									this["sc"]["y"] + _0x164f59 + _0x2815da > this["renderer"]["height"] - 0x80 - 0x68;

								)
									this["sc"]["y"] -= _0x2815da;
							} else {
								if (this["sc"]["y"] + _0x164f59 < _0x2815da) {
									for (this["sc"]["y"] += _0x2815da; this["sc"]["y"] + _0x164f59 < _0x2815da; )
										this["sc"]["y"] += _0x2815da;
								}
							}
						}
						["MakeUIGrid"]() {
							var _0x1edc08 = _0x5d9431;
							let _0x4bec75 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							this["panels"]["children"]["entries"]["length"],
								_0x4bec75["MakeUIGrid"](this["Columns"], this["Rows"] + 0x2, !0x0);
							for (let _0x3bf1bf = 0x0; _0x3bf1bf < this["Columns"]; _0x3bf1bf++)
								_0x4bec75["UI_grid"]["SetContents"](_0x3bf1bf, 0x0, this["UI_topBar"]["BackButton"]);
							for (let _0x398c0c = 0x0; _0x398c0c < this["Columns"]; _0x398c0c++)
								_0x4bec75["UI_grid"]["SetContents"](_0x398c0c, 0x1, this["RefundButton"]);
							let _0x34d497 = 0x0;
							for (
								_0x34d497 = 0x0;
								_0x34d497 < this["panels"]["children"]["entries"]["length"];
								_0x34d497++
							) {
								const _0x4343d5 = this["panels"]["children"]["entries"][_0x34d497];
								_0x4bec75["UI_grid"]["SetContents"](
									_0x34d497 % this["Columns"],
									0x2 + Math["floor"](_0x34d497 / this["Columns"]),
									_0x4343d5
								);
							}
							_0x4bec75["ToggleCursorsVisibility"](!0x1),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x4bec75),
								(_0x4bec75["OnCancelCallback"] = () => {
									var _0x4e4b35 = _0x1edc08,
										_0x55f7d0,
										_0x3237cd,
										_0x4fee84;
									null ===
										(_0x4fee84 =
											null ===
												(_0x3237cd =
													null === (_0x55f7d0 = this["UI_topBar"]["BackButton"]) ||
													void 0x0 === _0x55f7d0
														? void 0x0
														: _0x55f7d0["_events"]) || void 0x0 === _0x3237cd
												? void 0x0
												: _0x3237cd["pointerdown"]) ||
										void 0x0 === _0x4fee84 ||
										_0x4fee84["fn"]();
								});
						}
					}
					class _0x36e4d3 extends Phaser["Scene"] {
						constructor() {
							var _0x430d48 = _0x5d9431;
							super({
								key: _0x53d8cd["OmniScene"],
							}),
								(this["isAltDown"] = !0x1),
								(this["isFullScreen"] = !0x1),
								(this["canToggleFullscreen"] = !0x0);
						}
						["preload"]() {}
						["create"]() {
							var _0x3b896f = _0x5d9431;
							_0x4f668e &&
								((this["altKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["ALT"]
								)),
								this["altKey"]["on"]("down", () => {
									this["isAltDown"] = !0x0;
								}),
								this["altKey"]["on"]("up", () => {
									var _0x58bcec = _0x3b896f;
									this["isAltDown"] = !0x1;
								}),
								(this["enterKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["ENTER"]
								)),
								this["enterKey"]["on"]("down", (_0x54bf1e, _0x2b0959) => {
									var _0x512acd = _0x3b896f;
									this["isAltDown"] &&
										((this["isAltDown"] = !0x1),
										this["ToggleFullScreen"]() && (this["isAltDown"] = !0x1));
								}),
								(this["f11key"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["F11"]
								)),
								this["f11key"]["on"]("down", () => {
									var _0x4e9797 = _0x3b896f;
									this["ToggleFullScreen"]();
								}));
						}
						["ToggleFullScreen"]() {
							var _0x5dd0c7 = _0x5d9431;
							return (
								!!this["canToggleFullscreen"] &&
								((this["canToggleFullscreen"] = !0x1),
								this["time"]["addEvent"]({
									delay: 0xc8,
									callback: () => {
										this["canToggleFullscreen"] = !0x0;
									},
								}),
								(this["isFullScreen"] = !this["isFullScreen"]),
								_0x4f668e && _0x4f668e["sendSync"]("fullscreen", this["isFullScreen"]),
								!0x0)
							);
						}
					}
					class _0x30e762 extends Phaser["Scene"] {
						constructor() {
							var _0x5d3a15 = _0x5d9431;
							super({
								key: _0x53d8cd["OptionsScene"],
							}),
								(this["sliderMinX"] = 0x26c),
								(this["sliderMaxX"] = 0x2d0),
								(this["sliderBounds"] = new Phaser["Geom"]["Rectangle"](
									this["sliderMinX"],
									0x0,
									this["sliderMaxX"] - this["sliderMinX"],
									0x0
								));
						}
						["preload"]() {}
						["create"]() {
							var _0x18e8dd = _0x5d9431,
								_0x35ae3f = _0x2bef3a["width"] * _0x1fa5bb["RPixelScale"],
								_0x523485 = (_0x2bef3a["height"] - 0x40) * _0x1fa5bb["RPixelScale"],
								_0x3d79d1 = _0x523485 * _0x1fa5bb["PixelScale"];
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x35ae3f,
								height: _0x523485,
							})),
								this["background"]["setPosition"](_0x2bef3a["centerX"], _0x3d79d1),
								this["background"]["setOrigin"](0.5, 0x1),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								this["background"]["setInteractive"](),
								(this["header"] = this["add"]
									["text"](
										_0x2bef3a["centerX"],
										0x21,
										_0x2164b8["Lang"]["getLang"]("options_header"),
										{}
									)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5));
							const _0x39937d = 0x1e + _0x2bef3a["left"],
								_0x566f9e = 0x1ae + _0x2bef3a["left"],
								_0x2532e7 = _0x2bef3a["right"] + 0x78;
							this["langDropDown"] = new (class {
								constructor(_0x30745c, _0x397cf2, _0x427a19, _0x1979d9) {
									var _0x5cbcce = _0x18e8dd;
									(this["scene"] = _0x30745c),
										(this["posX"] = _0x397cf2),
										(this["posY"] = _0x427a19),
										(this["options"] = _0x1979d9),
										(this["isOpen"] = !0x1),
										(this["result"] = ""),
										(this["resultIndex"] = 0x0);
									let _0xe1ac9c = this["getMaxTextObjectSize"](_0x1979d9);
									(this["dropDownButton"] = this["scene"]["rexUI"]["add"]
										["label"]({
											x: this["posX"],
											y: this["posY"],
											background: this["scene"]["add"]
												["image"](0x0, 0x0, "UI", "whiteDot.png")
												["setScale"](0x2 * _0x1fa5bb["PixelScale"])
												["setOrigin"](0x0, 0.5)
												["setTint"](0x1c142a),
											text: this["createTextObject"]("")["setFixedSize"](
												_0xe1ac9c["width"],
												_0xe1ac9c["height"]
											),
											space: {
												left: 0x14,
												right: 0x14,
												top: 0xa,
												bottom: 0xa,
											},
										})
										["setData"]("value", "")),
										this["options"][0x0] &&
											(this["dropDownButton"]["setData"]("value", this["options"][0x0]),
											(this["dropDownButton"]["text"] = this["options"][0x0]),
											(this["resultIndex"] = 0x0),
											(this["result"] = this["options"][0x0])),
										this["dropDownButton"]["layout"]();
								}
								["onOpenDropDown"]() {
									var _0x1c8a2c = _0x18e8dd;
									this["isOpen"] ||
										((this["isOpen"] = !0x0),
										(this["dropDownMenu"] = this["scene"]["rexUI"]["add"]["menu"]({
											x: this["posX"] - 0x44,
											y: this["posY"] + 0x53,
											orientation: "y",
											items: this["options"]["map"](
												function (_0x443743) {
													return {
														label: _0x443743,
													};
												}["bind"](this)
											),
											createButtonCallback: this["createMenuButton"]["bind"](this),
											easeIn: {
												duration: 0x1f4,
												orientation: "y",
											},
											easeOut: {
												duration: 0x64,
												orientation: "y",
											},
										})));
								}
								["onCloseDropDown"]() {
									var _0x3ebec3 = _0x18e8dd;
									this["isOpen"] &&
										((this["isOpen"] = !0x1),
										this["dropDownMenu"]["collapse"](),
										(this["dropDownMenu"] = void 0x0));
								}
								["createMenuButton"](_0xec2c0b, _0xc5b9c4, _0x2d223b) {
									var _0x1d018c = _0x18e8dd;
									let _0x216949 = this["scene"]["rexUI"]["add"]["label"]({
										background: this["scene"]["add"]
											["image"](0x0, 0x0, "UI", "whiteDot.png")
											["setScale"](0x2 * _0x1fa5bb["PixelScale"])
											["setOrigin"](0x0, 0.5)
											["setTint"](0x4b4f74),
										text: this["createTextObject"](_0xec2c0b["label"]),
										space: {
											left: 0x14,
											right: 0x14,
											top: 0xa,
											bottom: 0xa,
										},
									});
									return (_0x216949["index"] = _0xc5b9c4), _0x216949;
								}
								["onMenuOver"](_0x47e4dc) {
									var _0x5111f6 = _0x18e8dd;
									_0x47e4dc["getElement"]("background")["tint"] = 0xaa00;
								}
								["onMenuOut"](_0x456649) {
									var _0x292cf8 = _0x18e8dd;
									_0x456649["getElement"]("background")["tint"] = 0x4b4f74;
								}
								["onMenuClick"](_0x1cf266) {
									var _0x3ad32b = _0x18e8dd;
									this["dropDownButton"]["setData"]("value", _0x1cf266["text"]),
										(this["dropDownButton"]["text"] = _0x1cf266["text"]),
										(this["result"] = _0x1cf266["text"]),
										(this["resultIndex"] = _0x1cf266["index"]),
										this["onCloseDropDown"]();
								}
								["getMaxTextObjectSize"](_0xcc1893) {
									var _0x493d7d = _0x18e8dd;
									let _0x3f85d3 = this["createTextObject"](""),
										_0x947c09 = 0x0,
										_0x13f97b = 0x0;
									for (
										let _0x3a1aaa = 0x0, _0x7fc60d = _0xcc1893["length"];
										_0x3a1aaa < _0x7fc60d;
										_0x3a1aaa++
									)
										(_0x3f85d3["text"] = _0xcc1893[_0x3a1aaa]),
											(_0x947c09 = Math["max"](_0x3f85d3["width"], _0x947c09)),
											(_0x13f97b = Math["max"](_0x3f85d3["height"], _0x13f97b));
									return (
										_0x3f85d3["destroy"](),
										{
											width: _0x947c09,
											height: _0x13f97b,
										}
									);
								}
								["createTextObject"](_0x1f04d8) {
									var _0x141e45 = _0x18e8dd;
									return this["scene"]["add"]["text"](0x0, 0x0, _0x1f04d8, {
										fontSize: "20px",
									});
								}
								["MakeUIGrid"]() {
									var _0x3f973c = _0x18e8dd;
									let _0x13f073 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
									_0x13f073["MakeUIGrid"](0x1, this["options"]["length"] + 0x1, !0x1),
										_0x13f073["UI_grid"]["SetContents"](0x0, 0x0, this["dropDownButton"]);
									for (
										let _0x18e1f6 = 0x0;
										_0x18e1f6 < this["dropDownMenu"]["buttons"]["length"];
										_0x18e1f6++
									)
										(this["dropDownMenu"]["buttons"][_0x18e1f6]["_events"] = []),
											this["dropDownMenu"]["buttons"][_0x18e1f6]["setInteractive"](),
											this["dropDownMenu"]["buttons"][_0x18e1f6]["on"]("pointerdown", () => {
												var _0x5ab1f2 = _0x3f973c;
												this["dropDownMenu"] &&
													this["onMenuClick"](this["dropDownMenu"]["buttons"][_0x18e1f6]);
											}),
											this["dropDownMenu"]["buttons"][_0x18e1f6]["on"]("pointerover", () => {
												var _0xdf572c = _0x3f973c;
												this["dropDownMenu"] &&
													this["onMenuOver"](this["dropDownMenu"]["buttons"][_0x18e1f6]);
											}),
											this["dropDownMenu"]["buttons"][_0x18e1f6]["on"]("pointerout", () => {
												var _0x24b755 = _0x3f973c;
												this["dropDownMenu"] &&
													this["onMenuOut"](this["dropDownMenu"]["buttons"][_0x18e1f6]);
											}),
											_0x13f073["UI_grid"]["SetContents"](
												0x0,
												_0x18e1f6 + 0x1,
												this["dropDownMenu"]["buttons"][_0x18e1f6]
											);
									_0x13f073["ToggleCursorsVisibility"](!0x0),
										_0x13f073["UI_grid"]["SelectGameObject"](this["dropDownButton"]),
										(_0x13f073["UI_selected"] = this["dropDownButton"]),
										_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x13f073),
										(_0x13f073["OnCancelCallback"] = () => {
											this["onCloseDropDown"]();
										});
								}
								["DestroyUIGrid"]() {
									var _0x255662 = _0x18e8dd;
									_0x2164b8["Core"]["SceneManager"]["UI_overlayScene"]["DestroyGrid"]();
								}
								["setManualValue"](_0x123616, _0x101e73) {
									var _0x34ffd3 = _0x18e8dd;
									this["dropDownButton"]["setData"]("value", _0x123616),
										(this["dropDownButton"]["text"] = _0x123616),
										(this["result"] = _0x123616),
										(this["resultIndex"] = _0x101e73);
								}
							})(this, _0x2532e7, 0x21, _0x2164b8["Lang"]["langNameList"]);
							let _0x3f1b2f = 0x72;
							(this["SFX_text"] = this["add"]
								["text"](_0x39937d, _0x3f1b2f, _0x2164b8["Lang"]["getLang"]("options_sounds"), {
									align: "left",
								})
								["setScale"](1.5 * _0x1fa5bb["PixelScale"])
								["setOrigin"](0x0, 0.5)),
								(this["SFX_box"] = this["add"]
									["image"](_0x566f9e, _0x3f1b2f, "UI", "menu_square_flat_24.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								this["add"]
									["rectangle"](
										this["sliderBounds"]["left"],
										this["SFX_box"]["y"] - 0x2,
										this["sliderBounds"]["width"] +
											this["SFX_box"]["width"] * this["SFX_box"]["scale"],
										0x4,
										0x0
									)
									["setOrigin"](0x0, 0.5),
								this["children"]["bringToTop"](this["SFX_box"]),
								(_0x3f1b2f = 0xbd),
								(this["BGM_text"] = this["add"]
									["text"](_0x39937d, _0x3f1b2f, _0x2164b8["Lang"]["getLang"]("options_music"), {
										align: "left",
									})
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["BGM_box"] = this["add"]
									["image"](_0x566f9e, _0x3f1b2f, "UI", "menu_square_flat_24.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								this["add"]
									["rectangle"](
										this["sliderBounds"]["left"],
										this["BGM_box"]["y"] - 0x2,
										this["sliderBounds"]["width"] +
											this["BGM_box"]["width"] * this["BGM_box"]["scale"],
										0x4,
										0x0
									)
									["setOrigin"](0x0, 0.5),
								this["children"]["bringToTop"](this["BGM_box"]),
								(_0x3f1b2f = 0x108),
								(this["FLASH_text"] = this["add"]
									["text"](
										_0x39937d,
										_0x3f1b2f,
										_0x2164b8["Lang"]["getLang"]("options_flashing_VFX"),
										{
											align: "left",
										}
									)
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["FLASH_box"] = this["add"]
									["image"](_0x566f9e, _0x3f1b2f, "UI", "menu_checkbox_24_bg.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["FLASH_toggle"] = this["add"]
									["image"](_0x566f9e, _0x3f1b2f, "UI", "yes16.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(_0x3f1b2f = 0x153),
								(this["JOYSTICK_text"] = this["add"]
									["text"](
										_0x39937d,
										_0x3f1b2f,
										_0x2164b8["Lang"]["getLang"]("options_visibleJoystick"),
										{
											align: "left",
										}
									)
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["JOYSTICK_box"] = this["add"]
									["image"](_0x566f9e, _0x3f1b2f, "UI", "menu_checkbox_24_bg.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["JOYSTICK_toggle"] = this["add"]
									["image"](_0x566f9e, _0x3f1b2f, "UI", "yes16.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(_0x3f1b2f = 0x19e),
								(this["DAMAGE_text"] = this["add"]
									["text"](
										_0x39937d,
										_0x3f1b2f,
										_0x2164b8["Lang"]["getLang"]("options_damageNumbers"),
										{
											align: "left",
										}
									)
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["DAMAGE_box"] = this["add"]
									["image"](_0x566f9e, _0x3f1b2f, "UI", "menu_checkbox_24_bg.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["DAMAGE_toggle"] = this["add"]
									["image"](_0x566f9e, _0x3f1b2f, "UI", "yes16.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(_0x3f1b2f = 0x1e9),
								(this["STREAMERSAFE_text"] = this["add"]
									["text"](
										_0x39937d,
										_0x3f1b2f,
										_0x2164b8["Lang"]["getLang"]("options_streamersafe"),
										{
											align: "left",
										}
									)
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["STREAMERSAFE_box"] = this["add"]
									["image"](_0x566f9e, _0x3f1b2f, "UI", "menu_checkbox_24_bg.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["STREAMERSAFE_toggle"] = this["add"]
									["image"](_0x566f9e, _0x3f1b2f, "UI", "yes16.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["RestoreBackupButton"] = new _0x5b4abe["NineSlice"](
									this,
									_0x395ea9["BackButton"],
									{
										x: this["renderer"]["width"] - 0x8 - 0x64,
										y: this["renderer"]["height"] - 0x80,
										width: 0x64,
										height: 0x20,
									}
								)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								this["add"]["existing"](this["RestoreBackupButton"]),
								(this["RestoreBackupText"] = this["add"]
									["text"](
										this["RestoreBackupButton"]["x"],
										this["RestoreBackupButton"]["y"],
										"RESTORE BACKUP",
										{
											align: "center",
										}
									)
									["setScale"](0x1 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								(this["UI_topBar"] = this["scene"]["get"](_0x53d8cd["UI_topBar"])),
								(this["UI_mainMenu"] = this["scene"]["get"](_0x53d8cd["UI_mainMenu"]));
							var _0x27acb4 = this["children"]["getAll"]();
							this["children"]["removeAll"](),
								(this["SceneContainer"] = this["add"]["container"](0x0, 0x0, _0x27acb4)),
								this["SceneContainer"]["setScale"](_0x16385e()),
								_0x38ad94["CalculateAndSetContainerSize"](this["SceneContainer"]),
								(this["SceneContainer"]["y"] =
									this["renderer"]["height"] - this["SceneContainer"]["displayHeight"]),
								this["EnableInput"](),
								this["ReadPlayerOptions"](),
								this["RestoreBackupButton"]["setVisible"](!0x1),
								this["RestoreBackupText"]["setVisible"](!0x1),
								_0x2164b8["Core"]["PlayerOptions"]["hasBackup"]() &&
									(this["RestoreBackupButton"]["setInteractive"](),
									this["RestoreBackupButton"]["setVisible"](!0x0),
									this["RestoreBackupText"]["setVisible"](!0x0)),
								this["MakeUIGrid"](this["UI_topBar"]["BackButton"]);
						}
						["EnableInput"]() {
							var _0x16e341 = _0x5d9431;
							this["SFX_box"]["setInteractive"](),
								this["BGM_box"]["setInteractive"](),
								this["langDropDown"]["dropDownButton"]["setInteractive"](),
								this["langDropDown"]["dropDownButton"]["on"]("pointerdown", () => {
									var _0x19aaff = _0x16e341;
									this["langDropDown"]["isOpen"]
										? this["closeLangDropDown"]()
										: this["openLangDropDown"]();
								}),
								this["input"]["setDraggable"](this["SFX_box"], !0x0),
								this["input"]["setDraggable"](this["BGM_box"], !0x0),
								this["input"]["on"]("dragstart", function (_0x1a8728, _0x4c1666) {}["bind"](this)),
								this["input"]["on"](
									"drag",
									function (_0x3faf8f, _0x290b32, _0x3ef321, _0x4975ad) {
										var _0x237057 = _0x16e341;
										_0x3ef321 <= this["sliderBounds"]["left"]
											? (_0x3ef321 = this["sliderBounds"]["left"])
											: _0x3ef321 >= this["sliderBounds"]["right"] &&
											  (_0x3ef321 = this["sliderBounds"]["right"]),
											(_0x290b32["x"] = _0x3ef321);
										let _0x16c9ce =
											(_0x290b32["x"] - this["sliderBounds"]["left"]) /
											this["sliderBounds"]["width"];
										_0x290b32 === this["SFX_box"] &&
											(_0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"] = _0x16c9ce),
											_0x290b32 === this["BGM_box"] &&
												((_0x2164b8["Core"]["PlayerOptions"]["MusicVolume"] = _0x16c9ce),
												_0x2164b8["Sound"]["UpdateMusicVolume"](
													_0x2164b8["Core"]["CurrentBGM"],
													_0x16c9ce
												));
									}["bind"](this)
								),
								this["input"]["on"](
									"dragend",
									function (_0x28bdcb, _0x49d197) {
										var _0x5a65c4 = _0x16e341;
										_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
											this["ReadPlayerOptions"]();
									}["bind"](this)
								),
								this["FLASH_box"]["setInteractive"](),
								this["FLASH_box"]["on"]("pointerdown", () => {
									var _0x1ef0c1 = _0x16e341;
									(_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] =
										!_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"]),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
										_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
										this["ReadPlayerOptions"]();
								}),
								this["JOYSTICK_box"]["setInteractive"](),
								this["JOYSTICK_box"]["on"]("pointerdown", () => {
									var _0x365d93 = _0x16e341;
									(_0x2164b8["Core"]["PlayerOptions"]["JoystickVisible"] =
										!_0x2164b8["Core"]["PlayerOptions"]["JoystickVisible"]),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
										_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
										this["ReadPlayerOptions"]();
								}),
								this["DAMAGE_box"]["setInteractive"](),
								this["DAMAGE_box"]["on"]("pointerdown", () => {
									var _0x588c5a = _0x16e341;
									(_0x2164b8["Core"]["PlayerOptions"]["DamageNumbersEnabled"] =
										!_0x2164b8["Core"]["PlayerOptions"]["DamageNumbersEnabled"]),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
										_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
										this["ReadPlayerOptions"]();
								}),
								this["STREAMERSAFE_box"]["setInteractive"](),
								this["STREAMERSAFE_box"]["on"]("pointerdown", () => {
									var _0x1fa980 = _0x16e341;
									(_0x2164b8["Core"]["PlayerOptions"]["StreamSafeEnabled"] =
										!_0x2164b8["Core"]["PlayerOptions"]["StreamSafeEnabled"]),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
										_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
										this["ReadPlayerOptions"]();
								}),
								this["RestoreBackupButton"]["setInteractive"](),
								this["RestoreBackupButton"]["once"]("pointerdown", () => {
									this["ChangeRestoreButtonToConfirm"]();
								});
						}
						["ChangeRestoreButtonToConfirm"]() {
							var _0x3688bf = _0x5d9431;
							this["RestoreBackupButton"]["removeInteractive"](),
								(this["RestoreBackupText"]["text"] = "CONFIRM"),
								this["time"]["addEvent"]({
									delay: 0x1f4,
									callback: () => {
										var _0x552a57 = _0x3688bf;
										this["RestoreBackupButton"]["setInteractive"](),
											this["RestoreBackupButton"]["once"]("pointerdown", () => {
												var _0x31f72a = _0x552a57;
												_0x2164b8["Core"]["PlayerOptions"]["loadJsonBackup"]();
											});
									},
								});
						}
						["openLangDropDown"]() {
							var _0x17febd = _0x5d9431;
							this["langDropDown"]["onOpenDropDown"](),
								this["DestroyUIGrid"](),
								this["langDropDown"]["MakeUIGrid"](),
								this["langDropDown"]["dropDownMenu"]["on"](
									"collapse",
									this["closeLangDropDown"]["bind"](this)
								);
						}
						["closeLangDropDown"]() {
							var _0x59f5c5 = _0x5d9431;
							this["langDropDown"]["onCloseDropDown"](),
								this["langDropDown"]["DestroyUIGrid"](),
								this["MakeUIGrid"](this["langDropDown"]["dropDownButton"]);
							let _0x97fc2d = _0x2164b8["Lang"]["langCodeList"][this["langDropDown"]["resultIndex"]];
							_0x2164b8["Core"]["PlayerOptions"]["Language"] != _0x97fc2d &&
								((_0x2164b8["Core"]["PlayerOptions"]["Language"] = _0x97fc2d),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
								_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
								this["UpdateOptionLang"](_0x97fc2d));
						}
						["onLeft"](_0x43d781) {
							var _0x38d1d8 = _0x5d9431;
							if (_0x43d781 === this["SFX_box"]) {
								let _0x32b5e1 = _0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"];
								(_0x32b5e1 = Math["max"](_0x32b5e1 - 0.1, 0x0)),
									(this["SFX_box"]["x"] =
										this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0x32b5e1),
									(_0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"] = _0x32b5e1),
									_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
									this["ReadPlayerOptions"]();
							}
							if (_0x43d781 === this["BGM_box"]) {
								let _0x57b0a6 = _0x2164b8["Core"]["PlayerOptions"]["MusicVolume"];
								(_0x57b0a6 = Math["max"](_0x57b0a6 - 0.1, 0x0)),
									(this["BGM_box"]["x"] =
										this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0x57b0a6),
									(_0x2164b8["Core"]["PlayerOptions"]["MusicVolume"] = _0x57b0a6),
									_0x2164b8["Sound"]["UpdateMusicVolume"](_0x2164b8["Core"]["CurrentBGM"], _0x57b0a6),
									_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
									this["ReadPlayerOptions"]();
							}
						}
						["onRight"](_0x3a9fb8) {
							var _0x502a7c = _0x5d9431;
							if (_0x3a9fb8 === this["SFX_box"]) {
								let _0x309fb5 = _0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"];
								(_0x309fb5 = Math["min"](_0x309fb5 + 0.1, 0x1)),
									(this["SFX_box"]["x"] =
										this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0x309fb5),
									(_0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"] = _0x309fb5),
									_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
									this["ReadPlayerOptions"]();
							}
							if (_0x3a9fb8 === this["BGM_box"]) {
								let _0xe0b2c4 = _0x2164b8["Core"]["PlayerOptions"]["MusicVolume"];
								(_0xe0b2c4 = Math["min"](_0xe0b2c4 + 0.1, 0x1)),
									(this["BGM_box"]["x"] =
										this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0xe0b2c4),
									(_0x2164b8["Core"]["PlayerOptions"]["MusicVolume"] = _0xe0b2c4),
									_0x2164b8["Sound"]["UpdateMusicVolume"](_0x2164b8["Core"]["CurrentBGM"], _0xe0b2c4),
									_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
									this["ReadPlayerOptions"]();
							}
						}
						["MakeUIGrid"](_0x5245bb) {
							var _0x23444e = _0x5d9431;
							let _0x44ca58 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x44ca58["MakeUIGrid"](0x1, 0x9, !0x1),
								_0x44ca58["UI_grid"]["SetContents"](0x0, 0x0, this["UI_topBar"]["BackButton"]),
								_0x44ca58["UI_grid"]["SetContents"](0x0, 0x1, this["langDropDown"]["dropDownButton"]),
								_0x44ca58["UI_grid"]["SetContents"](0x0, 0x2, this["SFX_box"]),
								_0x44ca58["UI_grid"]["SetContents"](0x0, 0x3, this["BGM_box"]),
								_0x44ca58["UI_grid"]["SetContents"](0x0, 0x4, this["FLASH_box"]),
								_0x44ca58["UI_grid"]["SetContents"](0x0, 0x5, this["JOYSTICK_box"]),
								_0x44ca58["UI_grid"]["SetContents"](0x0, 0x6, this["DAMAGE_box"]),
								_0x44ca58["UI_grid"]["SetContents"](0x0, 0x7, this["STREAMERSAFE_box"]),
								_0x44ca58["ToggleCursorsVisibility"](!0x0),
								_0x44ca58["UI_grid"]["SelectGameObject"](_0x5245bb),
								(_0x44ca58["UI_selected"] = _0x5245bb),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x44ca58),
								(_0x44ca58["UI_grid"]["onLeft"] = this["onLeft"]["bind"](this)),
								(_0x44ca58["UI_grid"]["onRight"] = this["onRight"]["bind"](this)),
								(_0x44ca58["OnCancelCallback"] = () => {
									var _0x180060 = _0x23444e,
										_0x3401d1,
										_0x330c96,
										_0x4a3a4d;
									null ===
										(_0x4a3a4d =
											null ===
												(_0x330c96 =
													null === (_0x3401d1 = this["UI_topBar"]["BackButton"]) ||
													void 0x0 === _0x3401d1
														? void 0x0
														: _0x3401d1["_events"]) || void 0x0 === _0x330c96
												? void 0x0
												: _0x330c96["pointerdown"]) ||
										void 0x0 === _0x4a3a4d ||
										_0x4a3a4d["fn"]();
								});
						}
						["DestroyUIGrid"]() {
							var _0x38589a = _0x5d9431;
							_0x2164b8["Core"]["SceneManager"]["UI_overlayScene"]["DestroyGrid"]();
						}
						["UpdateOptionLang"](_0x11f432) {
							var _0x467b7b = _0x5d9431;
							_0x2164b8["Lang"]["setLangCode"](_0x11f432),
								(this["header"]["text"] = _0x2164b8["Lang"]["getLang"]("options_header")),
								(this["SFX_text"]["text"] = _0x2164b8["Lang"]["getLang"]("options_sounds")),
								(this["BGM_text"]["text"] = _0x2164b8["Lang"]["getLang"]("options_music")),
								(this["FLASH_text"]["text"] = _0x2164b8["Lang"]["getLang"]("options_flashing_VFX")),
								(this["JOYSTICK_text"]["text"] =
									_0x2164b8["Lang"]["getLang"]("options_visibleJoystick")),
								(this["DAMAGE_text"]["text"] = _0x2164b8["Lang"]["getLang"]("options_damageNumbers")),
								(this["STREAMERSAFE_text"]["text"] =
									_0x2164b8["Lang"]["getLang"]("options_streamersafe")),
								(this["UI_topBar"]["BackText"]["text"] = _0x2164b8["Lang"]["getLang"]("topBar_back")),
								(this["UI_topBar"]["OptionsText"]["text"] =
									_0x2164b8["Lang"]["getLang"]("topBar_options")),
								(this["UI_topBar"]["ExitText"]["text"] = _0x2164b8["Lang"]["getLang"]("topBar_quit")),
								(this["UI_mainMenu"]["CollectionText"]["text"] =
									_0x2164b8["Lang"]["getLang"]("menu_collection")),
								(this["UI_mainMenu"]["AchievementText"]["text"] =
									_0x2164b8["Lang"]["getLang"]("menu_achievements")),
								(this["UI_mainMenu"]["PowerupText"]["text"] =
									_0x2164b8["Lang"]["getLang"]("menu_power_up")),
								(this["UI_mainMenu"]["StartText"]["text"] = _0x2164b8["Lang"]["getLang"]("menu_start")),
								(this["UI_mainMenu"]["CreditsText"]["text"] =
									_0x2164b8["Lang"]["getLang"]("menu_credit")),
								(this["UI_mainMenu"]["ResolutionText"]["text"] =
									_0x2164b8["Lang"]["getLang"]("menu_screen"));
						}
						["ReadPlayerOptions"]() {
							var _0x5e3dd3 = _0x5d9431;
							let _0x285ca4 = _0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"];
							this["SFX_box"]["x"] =
								this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0x285ca4;
							let _0x79938 = _0x2164b8["Core"]["PlayerOptions"]["MusicVolume"];
							this["BGM_box"]["x"] =
								this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0x79938;
							var _0x219222 = _0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"];
							this["FLASH_toggle"]["setFrame"](_0x219222 ? "yes16.png" : "no16.png");
							var _0x4cf207 = _0x2164b8["Core"]["PlayerOptions"]["JoystickVisible"];
							this["JOYSTICK_toggle"]["setFrame"](_0x4cf207 ? "yes16.png" : "no16.png");
							var _0x31a32 = _0x2164b8["Core"]["PlayerOptions"]["DamageNumbersEnabled"];
							this["DAMAGE_toggle"]["setFrame"](_0x31a32 ? "yes16.png" : "no16.png");
							var _0x7da9f7 = _0x2164b8["Core"]["PlayerOptions"]["Language"],
								_0x2ada25 = _0x2164b8["Lang"]["langCodeList"]["indexOf"](_0x7da9f7);
							this["langDropDown"]["setManualValue"](
								_0x2164b8["Lang"]["langNameList"][_0x2ada25],
								_0x2ada25
							);
							var _0xc9346e = _0x2164b8["Core"]["PlayerOptions"]["StreamSafeEnabled"];
							this["STREAMERSAFE_toggle"]["setFrame"](_0xc9346e ? "yes16.png" : "no16.png");
						}
					}
					class _0x395892 extends Phaser["Scene"] {
						constructor() {
							var _0x163c9f = _0x5d9431;
							super({
								key: _0x53d8cd["GameOverScene"],
							}),
								(this["fillScale"] = 0x1),
								(this["canSeeReviveButton"] = !0x1),
								(this["bonusCoinsAmount"] = 0x0),
								(this["awardGivenXTimes"] = 0x0),
								(this["totalCoins"] = 0x0);
						}
						["preload"]() {
							var _0x1cef63 = _0x5d9431;
							_0x2164b8["ApplyMenuResolution"]();
						}
						["create"]() {
							var _0x583dc1 = _0x5d9431;
							(this["canSeeReviveButton"] = _0x2164b8["Core"]["Player"]["revivals"] > 0x0),
								_0x2164b8["Core"]["PlayerOptions"]["SaveGameResults"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["BGM_GameOver"], {
									volume: 1.4,
								}),
								(this["Background"] = this["add"]
									["image"](
										0.5 * this["renderer"]["width"],
										0.5 * this["renderer"]["height"],
										"introBG"
									)
									["setAlpha"](0x0)),
								(this["title"] = this["add"]
									["image"](
										0.5 * this["renderer"]["width"],
										0.3 * this["renderer"]["height"],
										"gameOver"
									)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setAlpha"](0x1)),
								(this["rewardTitle"] = this["add"]
									["image"](
										0.5 * this["renderer"]["width"],
										0.3 * this["renderer"]["height"],
										"stageComplete"
									)
									["setScale"](0x0)
									["setAlpha"](0x1)),
								(this["bonusCoinsIcon"] = this["add"]
									["image"](
										0.5 * this["renderer"]["width"] - 0xaf,
										0.3 * this["renderer"]["height"] + 0x64,
										"UI",
										"MoneyPile.png"
									)
									["setScale"](0x0)
									["setAlpha"](0x1)
									["setOrigin"](0.5)),
								(this["bonusCoinsText"] = this["add"]
									["text"](
										0.5 * this["renderer"]["width"] + 0x19,
										0.3 * this["renderer"]["height"] + 0x64,
										_0x2164b8["Lang"]["getLang"]("gameOver_bonus", [""])
									)
									["setScale"](0x0)
									["setAlpha"](0x1)
									["setOrigin"](0.5));
							var _0x5cabad = Math["min"](
								this["Background"]["displayWidth"],
								this["Background"]["displayHeight"]
							);
							(this["fillScale"] = _0xe0047c
								? this["renderer"]["height"] / _0x5cabad
								: this["renderer"]["width"] / _0x5cabad),
								this["Background"]["setScale"](5.1 * this["fillScale"], 5.1 * this["fillScale"]),
								(this["SceneContainer"] = this["add"]["container"](0x0, this["renderer"]["height"])),
								this["SceneContainer"]["setScale"](_0x16385e());
							const _0x52b567 = _0x2bef3a["centerX"];
							(this["ReviveButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["GreenButton"], {
								x: _0x52b567,
								y: -0x3c,
								width: 0x60,
								height: 0x20,
							})
								["setScale"](0x0)
								["setOrigin"](0.5, 0x1)
								["setVisible"](this["canSeeReviveButton"])),
								this["SceneContainer"]["add"](this["ReviveButton"]),
								(this["QuitButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["BackButton"], {
									x: _0x52b567,
									y: this["ReviveButton"]["y"] - 0x78,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](0x0)
									["setOrigin"](0.5, 0x1)
									["setVisible"](!this["canSeeReviveButton"])),
								this["SceneContainer"]["add"](this["QuitButton"]),
								(this["ReviveText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["ReviveButton"]["x"],
									this["ReviveButton"]["y"] - 0x20,
									_0x2164b8["Lang"]["getLang"]("gameOver_revive"),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x0)
									["setVisible"](this["canSeeReviveButton"])),
								this["SceneContainer"]["add"](this["ReviveText"]),
								(this["QuitText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["QuitButton"]["x"],
									this["QuitButton"]["y"] - 0x20,
									_0x2164b8["Lang"]["getLang"]("gameOver_quit"),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x0)
									["setVisible"](!this["canSeeReviveButton"])),
								this["SceneContainer"]["add"](this["QuitText"]),
								(this["cameraFilter"] = this["plugins"]
									["get"]("rexPixelationPipeline")
									["add"](this["cameras"]["main"])),
								(this["cameraFilter"]["pixelWidth"] = 0x32),
								(this["cameraFilter"]["pixelHeight"] = 0x32),
								this["tweens"]["add"]({
									targets: this["cameraFilter"],
									pixelWidth: 0x1,
									pixelHeight: 0x1,
									duration: 0x3e8,
									ease: "Linear",
									onComplete: () => {
										this["OnIntroEnded"]();
									},
								}),
								this["tweens"]["add"]({
									targets: this["Background"],
									scaleY: this["fillScale"],
									scaleX: this["fillScale"],
									alpha: 0.4,
									duration: 0x320,
									ease: "Linear",
								}),
								this["makeAngelVFX"](),
								(this["bonusCoinsAmount"] = 0x0);
						}
						["MakeUIGrid"]() {
							var _0x571722 = _0x5d9431;
							let _0x12979c = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x12979c["MakeUIGrid"](0x1, 0x1, !0x1),
								this["canSeeReviveButton"]
									? _0x12979c["UI_grid"]["SetContents"](0x0, 0x0, this["ReviveButton"])
									: _0x12979c["UI_grid"]["SetContents"](0x0, 0x0, this["QuitButton"]);
							let _0x221038 = this["canSeeReviveButton"] ? this["ReviveButton"] : this["QuitButton"];
							_0x12979c["ToggleCursorsVisibility"](!0x1),
								_0x12979c["UI_grid"]["SelectGameObject"](_0x221038),
								(_0x12979c["UI_selected"] = _0x221038),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x12979c),
								(_0x12979c["OnCancelCallback"] = () => {}),
								this["time"]["addEvent"]({
									delay: 0x1e,
									callback: () => {
										_0x12979c["ToggleCursorsVisibility"](!0x0);
									},
								});
						}
						["makeAngelVFX"]() {
							var _0xf9f8b7 = _0x5d9431;
							this["screenFade"] = this["add"]
								["sprite"](0x0, 0x0, "vfx", "WhiteDot.png")
								["setScrollFactor"](0x0)
								["setScale"](this["renderer"]["width"], this["renderer"]["height"])
								["setAlpha"](0x0)
								["setOrigin"](0x0);
							const _0x3b36b1 = this["anims"]["generateFrameNames"]("angel", {
								start: 0x1,
								end: 0xa,
								zeroPad: 0x0,
								prefix: "angel",
								suffix: ".png",
							});
							(this["Angel"] = this["add"]["sprite"](
								0.5 * this["renderer"]["width"],
								0.5 * this["renderer"]["height"],
								"angel"
							)),
								this["Angel"]["anims"]["create"]({
									key: "angel",
									frames: _0x3b36b1,
									frameRate: 0x10,
									repeat: 0x0,
								}),
								(this["Angel"]["visible"] = !0x1),
								this["Angel"]["setScale"](0x2 * _0x1fa5bb["PixelScale"]),
								this["Angel"]["setDepth"](0x3e8),
								this["Angel"]["setTintFill"](0xffffbb),
								this["Angel"]["on"]("animationcomplete", this["Revive"]["bind"](this));
						}
						["playReviveAnim"]() {
							var _0x4c5f8c = _0x5d9431;
							_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] &&
								this["tweens"]["add"]({
									targets: this["screenFade"],
									alpha: 0x1,
									duration: 0x64,
									yoyo: !0x0,
									ease: "Linear",
									delay: 0x1a9,
								}),
								this["tweens"]["add"]({
									targets: this["Background"],
									alpha: 0x0,
									duration: 0x271,
									yoyo: !0x0,
									ease: "Linear",
								}),
								(this["Angel"]["visible"] = !0x0),
								this["Angel"]["play"]("angel");
						}
						["EnableButtons"]() {
							var _0x4e1b0b = _0x5d9431;
							this["canSeeReviveButton"] ||
								(this["QuitButton"]["setInteractive"](),
								this["QuitButton"]["on"]("pointerdown", () => {
									var _0x4bb054 = _0x4e1b0b;
									_0x2164b8["Core"]["PlayerOptions"]["AddCoins"](this["totalCoins"]),
										(this["totalCoins"] = 0x0),
										(this["awardGivenXTimes"] = 0x0);
									try {
										_0x2164b8["Core"]["OnPlayerQuit"](),
											_0x2164b8["Core"]["SceneManager"]["PostGameFromGameOver"](),
											_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]);
									} catch (_0x1e6be9) {
										console["log"](_0x1e6be9),
											_0x2164b8["Core"]["OnPlayerQuit"](),
											_0x2164b8["Core"]["SceneManager"]["PostGameFromGameOver"]();
									}
								}),
								this["tweens"]["add"]({
									targets: [this["QuitButton"], this["QuitText"]],
									scale: 0x2 * _0x1fa5bb["PixelScale"],
									duration: 0xfa,
									ease: "Linear",
								})),
								this["canSeeReviveButton"] &&
									(this["ReviveButton"]["setInteractive"](),
									this["ReviveButton"]["on"]("pointerdown", () => {
										var _0xf43997 = _0x4e1b0b;
										this["ReviveButton"]["removeAllListeners"](),
											this["HideReviveButton"](),
											_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
											_0x2164b8["Core"]["Player"]["revivals"]--,
											_0x2164b8["Core"]["Player"]["revivals"] <= 0x0 &&
												_0x2164b8["Core"]["Weapons"]["find"](
													(_0x21d787) => _0x21d787["bulletType"] === _0x5324b3["REVIVAL"]
												) &&
												_0x2164b8["Core"]["RemoveWeapon"](_0x5324b3["REVIVAL"]),
											this["playReviveAnim"]();
									}),
									this["tweens"]["add"]({
										targets: [this["ReviveButton"], this["ReviveText"]],
										scale: 0x2 * _0x1fa5bb["PixelScale"],
										duration: 0xfa,
										ease: "Linear",
									}));
						}
						["HideQuitButton"]() {
							var _0x1f16dc = _0x5d9431;
							this["tweens"]["add"]({
								targets: [this["QuitButton"], this["QuitText"]],
								alpha: 0x0,
								scale: 0x0,
								duration: 0x64,
								ease: "Linear",
							}),
								this["QuitButton"]["removeInteractive"]();
						}
						["HideReviveButton"]() {
							var _0x58a20b = _0x5d9431;
							this["tweens"]["add"]({
								targets: [this["ReviveButton"], this["ReviveText"]],
								alpha: 0x0,
								scale: 0x0,
								duration: 0x64,
								ease: "Linear",
							}),
								this["ReviveButton"]["removeInteractive"]();
						}
						["Revive"]() {
							var _0x4f0577 = _0x5d9431;
							_0x2164b8["Core"]["SceneManager"]["BackFromGameOver"](),
								_0x2164b8["Core"]["Player"]["Revive"](0.5);
						}
						["OnIntroEnded"]() {
							var _0x1d02b1 = _0x5d9431;
							_0x2164b8["Core"]["SurvivedSeconds"] >= 0x708
								? this["EnterStageReward"]()
								: (this["EnableButtons"](), this["MakeUIGrid"]());
						}
						["EnterStageReward"]() {
							var _0x131c9a = _0x5d9431;
							this["awardGivenXTimes"]++,
								this["time"]["addEvent"]({
									delay: 0x1f4,
									callback: () => {
										var _0x23d328 = _0x131c9a;
										this["tweens"]["add"]({
											targets: this["title"],
											alpha: 0x0,
											scale: 0x0,
											duration: 0xfa,
											ease: "Linear",
										}),
											this["tweens"]["add"]({
												targets: this["rewardTitle"],
												scale: _0x1fa5bb["PixelScale"],
												duration: 0xfa,
												ease: "Linear",
											}),
											this["tweens"]["add"]({
												targets: [this["bonusCoinsIcon"], this["bonusCoinsText"]],
												scale: 0x2 * _0x1fa5bb["PixelScale"],
												duration: 0xfa,
												ease: "Linear",
											});
										let _0x17e80a = 0x1f4;
										switch (this["awardGivenXTimes"]) {
											case 0x0:
											case 0x1:
												_0x17e80a = 0x1f4;
												break;
											case 0x2:
											default:
												_0x17e80a = 0x64;
												break;
											case 0x3:
												_0x17e80a = 0xc8;
												break;
											case 0x4:
												_0x17e80a = 0x12c;
												break;
											case 0x5:
												_0x17e80a = 0x190;
										}
										(this["bonusCoinsAmount"] = this["totalCoins"]),
											this["tweens"]["add"]({
												targets: this,
												bonusCoinsAmount: this["totalCoins"] + _0x17e80a,
												duration: 0x5dc,
												ease: "Linear",
												onComplete: () => {
													this["EnableButtons"](), this["MakeUIGrid"]();
												},
											}),
											(this["totalCoins"] += _0x17e80a);
									},
								});
						}
						["update"]() {
							var _0x147da2 = _0x5d9431;
							this["bonusCoinsText"]["text"] = _0x2164b8["Lang"]["getLang"]("gameOver_bonus", [
								this["bonusCoinsAmount"]["toFixed"](),
							]);
						}
					}
					class _0x210ea9 extends Phaser["Scene"] {
						constructor() {
							var _0x140091 = _0x5d9431;
							super({
								key: _0x53d8cd["PauseScene"],
							}),
								(this["sliderMinX"] = 0x24e),
								(this["sliderMaxX"] = 0x2b2),
								(this["sliderBounds"] = new Phaser["Geom"]["Rectangle"](
									this["sliderMinX"],
									0x0,
									this["sliderMaxX"] - this["sliderMinX"],
									0x0
								));
						}
						["preload"]() {
							_0x2164b8["ApplyMenuResolution"]();
						}
						["create"]() {
							var _0x5f3cc4 = _0x5d9431;
							const _0x222445 = _0x2bef3a["centerX"];
							var _0xee5f8 = _0x2bef3a["width"];
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0xee5f8,
								height: 0x1b8,
							})),
								this["background"]["setPosition"](_0x222445, 0x40),
								this["background"]["setOrigin"](0.5, 0x0),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]);
							const _0x2c38c0 = _0x2bef3a["left"] + 0x1e,
								_0x3460a6 = _0x2bef3a["left"] + 0x12c;
							(this["SFX_text"] = this["add"]
								["text"](_0x2c38c0, 0x72, _0x2164b8["Lang"]["getLang"]("options_sounds"), {
									align: "left",
								})
								["setScale"](1.5 * _0x1fa5bb["PixelScale"])
								["setOrigin"](0x0, 0.5)),
								(this["SFX_box"] = this["add"]
									["image"](_0x3460a6, 0x72, "UI", "menu_square_flat_24.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								this["add"]
									["rectangle"](
										this["sliderBounds"]["left"],
										this["SFX_box"]["y"] - 0x2,
										this["sliderBounds"]["width"] +
											this["SFX_box"]["width"] * this["SFX_box"]["scale"],
										0x4,
										0x0
									)
									["setOrigin"](0x0, 0.5),
								this["children"]["bringToTop"](this["SFX_box"]),
								(this["BGM_text"] = this["add"]
									["text"](_0x2c38c0, 0xc7, _0x2164b8["Lang"]["getLang"]("options_music"), {
										align: "left",
									})
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["BGM_box"] = this["add"]
									["image"](_0x3460a6, 0xc7, "UI", "menu_square_flat_24.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								this["add"]
									["rectangle"](
										this["sliderBounds"]["left"],
										this["BGM_box"]["y"] - 0x2,
										this["sliderBounds"]["width"] +
											this["BGM_box"]["width"] * this["BGM_box"]["scale"],
										0x4,
										0x0
									)
									["setOrigin"](0x0, 0.5),
								this["children"]["bringToTop"](this["BGM_box"]),
								(this["FLASH_text"] = this["add"]
									["text"](_0x2c38c0, 0x11c, _0x2164b8["Lang"]["getLang"]("options_flashing_VFX"), {
										align: "left",
									})
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["FLASH_box"] = this["add"]
									["image"](_0x3460a6, 0x11c, "UI", "menu_checkbox_24_bg.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["FLASH_toggle"] = this["add"]
									["image"](_0x3460a6, 0x11c, "UI", "yes16.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["JOYSTICK_text"] = this["add"]
									["text"](
										_0x2c38c0,
										0x171,
										_0x2164b8["Lang"]["getLang"]("options_visibleJoystick"),
										{
											align: "left",
										}
									)
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["JOYSTICK_box"] = this["add"]
									["image"](_0x3460a6, 0x171, "UI", "menu_checkbox_24_bg.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["JOYSTICK_toggle"] = this["add"]
									["image"](_0x3460a6, 0x171, "UI", "yes16.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["DAMAGE_text"] = this["add"]
									["text"](_0x2c38c0, 0x1c6, _0x2164b8["Lang"]["getLang"]("options_damageNumbers"), {
										align: "left",
									})
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["DAMAGE_box"] = this["add"]
									["image"](_0x3460a6, 0x1c6, "UI", "menu_checkbox_24_bg.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)),
								(this["DAMAGE_toggle"] = this["add"]
									["image"](_0x3460a6, 0x1c6, "UI", "yes16.png")
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5));
							let _0x49ac1d = 0.5 * this["renderer"]["width"],
								_0x4decfa = this["renderer"]["height"] - 0x40;
							(this["QuitButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["BackButton"], {
								x: _0x49ac1d - 0xc8,
								y: _0x4decfa,
								width: 0x60,
								height: 0x20,
							})
								["setScale"](1.5 * _0x1fa5bb["PixelScale"])
								["setOrigin"](0.5)),
								this["add"]["existing"](this["QuitButton"]),
								(this["QuitText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["QuitButton"]["x"],
									this["QuitButton"]["y"],
									_0x2164b8["Lang"]["getLang"]("pause_quit"),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])),
								this["add"]["existing"](this["QuitText"]);
							var _0x40a886 = this["children"]["getAll"]();
							this["children"]["removeAll"](),
								(this["OptionsContainer"] = this["add"]["container"](0x0, 0x0, _0x40a886)),
								(this["blackBg"] = this["add"]
									["image"](0x0, 0x0, "UI", "blackDot.png")
									["setOrigin"](0x0)
									["setScale"](1.1 * this["renderer"]["width"], 1.1 * this["renderer"]["height"])
									["setAlpha"](0.5)
									["setDepth"](-0x1)),
								this["ReadPlayerOptions"](),
								this["time"]["addEvent"]({
									delay: 0x64,
									callback: () => this["EnableButtons"](),
								}),
								(this["OptionsButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: _0x49ac1d - 0xc8,
									y: _0x4decfa,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								this["add"]["existing"](this["OptionsButton"]),
								(this["OptionsText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["OptionsButton"]["x"],
									this["OptionsButton"]["y"],
									_0x2164b8["Lang"]["getLang"]("topBar_options"),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								this["add"]["existing"](this["OptionsText"]),
								(this["ResumeButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: _0x49ac1d + 0xc8,
									y: _0x4decfa,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								this["add"]["existing"](this["ResumeButton"]),
								(this["ResumeText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["ResumeButton"]["x"],
									this["ResumeButton"]["y"],
									_0x2164b8["Lang"]["getLang"]("pause_resume"),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								this["add"]["existing"](this["ResumeText"]),
								_0x2164b8["Core"]["PlayerOptions"]["UnlockedWeapons"]["length"] > 0x5 &&
									((this["WeaponsPanel"] = new _0x183119(this, _0x2bef3a["left"], 0x80, 0xc8, 0x122)),
									this["WeaponsPanel"]["Background"]["setAlpha"](0.75),
									this["add"]["existing"](this["WeaponsPanel"]),
									_0x38ad94["CalculateAndSetContainerSize"](this["WeaponsPanel"]),
									(this["WeaponsPanel"]["x"] = 0x8),
									(this["WeaponsPanel"]["y"] = 0x20),
									(this["StatsPanel"] = new _0x1ef4d8(
										this,
										_0x2bef3a["left"],
										0x80,
										0xc8,
										0x122,
										_0x2164b8["Core"]["Player"]["characterType"]
									)),
									this["StatsPanel"]["Background"]["setAlpha"](0.75),
									this["add"]["existing"](this["StatsPanel"]),
									_0x38ad94["CalculateAndSetContainerSize"](this["StatsPanel"]),
									(this["StatsPanel"]["x"] = 0x8),
									(this["StatsPanel"]["y"] =
										this["WeaponsPanel"]["y"] + this["WeaponsPanel"]["displayHeight"]),
									this["StatsPanel"]["AssignPlayer"](_0x2164b8["Core"]["Player"]),
									this["WeaponsPanel"]["Open"](),
									this["WeaponsPanel"]["setVisible"](!_0xe0047c),
									this["StatsPanel"]["Open"](),
									this["StatsPanel"]["setVisible"](!_0xe0047c)),
								this["OptionsContainer"]["setVisible"](!0x1);
						}
						["EnableOptionButtons"]() {
							var _0x4d979c = _0x5d9431;
							this["QuitButton"]["setInteractive"](),
								this["QuitButton"]["on"]("pointerdown", () => {
									var _0x107860 = _0x4d979c;
									try {
										_0x2164b8["Core"]["OnPlayerQuit"](),
											_0x2164b8["Core"]["SceneManager"]["QuitFromPauseMenu"](),
											_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]);
									} catch (_0x5c81da) {
										console["log"](_0x5c81da),
											_0x2164b8["Core"]["OnPlayerQuit"](),
											_0x2164b8["Core"]["SceneManager"]["QuitFromPauseMenu"]();
									}
								}),
								this["SFX_box"]["setInteractive"](),
								this["BGM_box"]["setInteractive"](),
								this["input"]["setDraggable"](this["SFX_box"], !0x0),
								this["input"]["setDraggable"](this["BGM_box"], !0x0),
								this["input"]["on"]("dragstart", function (_0x4e90a0, _0x4daa1c) {}["bind"](this)),
								this["input"]["on"](
									"drag",
									function (_0x1738c7, _0x3e2cf1, _0x43c43c, _0x45176a) {
										var _0x3c5793 = _0x4d979c;
										_0x43c43c <= this["sliderBounds"]["left"]
											? (_0x43c43c = this["sliderBounds"]["left"])
											: _0x43c43c >= this["sliderBounds"]["right"] &&
											  (_0x43c43c = this["sliderBounds"]["right"]),
											(_0x3e2cf1["x"] = _0x43c43c);
										let _0x2c8c59 =
											(_0x3e2cf1["x"] - this["sliderBounds"]["left"]) /
											this["sliderBounds"]["width"];
										_0x3e2cf1 === this["SFX_box"] &&
											(_0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"] = _0x2c8c59),
											_0x3e2cf1 === this["BGM_box"] &&
												((_0x2164b8["Core"]["PlayerOptions"]["MusicVolume"] = _0x2c8c59),
												_0x2164b8["Sound"]["UpdateMusicVolume"](
													_0x2164b8["Core"]["CurrentBGM"],
													_0x2c8c59
												));
									}["bind"](this)
								),
								this["input"]["on"](
									"dragend",
									function (_0x55ef96, _0x8d027f) {
										var _0x244165 = _0x4d979c;
										_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
											this["ReadPlayerOptions"]();
									}["bind"](this)
								),
								this["FLASH_box"]["setInteractive"](),
								this["FLASH_box"]["on"]("pointerdown", () => {
									var _0x5c9f68 = _0x4d979c;
									(_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"] =
										!_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"]),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
										_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
										this["ReadPlayerOptions"]();
								}),
								this["JOYSTICK_box"]["setInteractive"](),
								this["JOYSTICK_box"]["on"]("pointerdown", () => {
									var _0x4e7106 = _0x4d979c;
									(_0x2164b8["Core"]["PlayerOptions"]["JoystickVisible"] =
										!_0x2164b8["Core"]["PlayerOptions"]["JoystickVisible"]),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
										_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
										this["ReadPlayerOptions"]();
								}),
								this["DAMAGE_box"]["setInteractive"](),
								this["DAMAGE_box"]["on"]("pointerdown", () => {
									var _0x2326ca = _0x4d979c;
									(_0x2164b8["Core"]["PlayerOptions"]["DamageNumbersEnabled"] =
										!_0x2164b8["Core"]["PlayerOptions"]["DamageNumbersEnabled"]),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
										_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
										this["ReadPlayerOptions"]();
								}),
								this["MakeUIGrid_Options"]();
						}
						["EnableButtons"]() {
							var _0x4596e9 = _0x5d9431;
							this["OptionsButton"]["setInteractive"](),
								this["OptionsButton"]["on"]("pointerdown", () => {
									var _0x2039fb = _0x4596e9;
									this["OpenOptions"]();
								}),
								this["ResumeButton"]["setInteractive"](),
								this["ResumeButton"]["on"]("pointerdown", () => {
									var _0x26c568 = _0x4596e9;
									_0x2164b8["Core"]["SceneManager"]["ResumeFromPause"]();
								}),
								this["MakeUIGrid"]();
						}
						["OpenOptions"]() {
							var _0x52cd91 = _0x5d9431;
							this["OptionsButton"]["setVisible"](!0x1),
								this["OptionsText"]["setVisible"](!0x1),
								this["OptionsContainer"]["setVisible"](!0x0),
								this["OptionsButton"]["removeInteractive"](),
								this["time"]["addEvent"]({
									delay: 0x64,
									callback: () => this["EnableOptionButtons"](),
								});
						}
						["onLeft"](_0x2241e3) {
							var _0x3d5ed2 = _0x5d9431;
							if (_0x2241e3 === this["SFX_box"]) {
								let _0x5a25e5 = _0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"];
								(_0x5a25e5 = Math["max"](_0x5a25e5 - 0.1, 0x0)),
									(this["SFX_box"]["x"] =
										this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0x5a25e5),
									(_0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"] = _0x5a25e5),
									_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
									this["ReadPlayerOptions"]();
							}
							if (_0x2241e3 === this["BGM_box"]) {
								let _0x1ad7e7 = _0x2164b8["Core"]["PlayerOptions"]["MusicVolume"];
								(_0x1ad7e7 = Math["max"](_0x1ad7e7 - 0.1, 0x0)),
									(this["BGM_box"]["x"] =
										this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0x1ad7e7),
									(_0x2164b8["Core"]["PlayerOptions"]["MusicVolume"] = _0x1ad7e7),
									_0x2164b8["Sound"]["UpdateMusicVolume"](_0x2164b8["Core"]["CurrentBGM"], _0x1ad7e7),
									_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
									this["ReadPlayerOptions"]();
							}
						}
						["onRight"](_0x3b33df) {
							var _0x3e36d3 = _0x5d9431;
							if (_0x3b33df === this["SFX_box"]) {
								let _0x1bed7c = _0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"];
								(_0x1bed7c = Math["min"](_0x1bed7c + 0.1, 0x1)),
									(this["SFX_box"]["x"] =
										this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0x1bed7c),
									(_0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"] = _0x1bed7c),
									_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
									this["ReadPlayerOptions"]();
							}
							if (_0x3b33df === this["BGM_box"]) {
								let _0x4ebcbc = _0x2164b8["Core"]["PlayerOptions"]["MusicVolume"];
								(_0x4ebcbc = Math["min"](_0x4ebcbc + 0.1, 0x1)),
									(this["BGM_box"]["x"] =
										this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0x4ebcbc),
									(_0x2164b8["Core"]["PlayerOptions"]["MusicVolume"] = _0x4ebcbc),
									_0x2164b8["Sound"]["UpdateMusicVolume"](_0x2164b8["Core"]["CurrentBGM"], _0x4ebcbc),
									_0x2164b8["Core"]["PlayerOptions"]["SaveOptions"](),
									this["ReadPlayerOptions"]();
							}
						}
						["MakeUIGrid"]() {
							var _0x52c3e6 = _0x5d9431;
							let _0x402e7f = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x402e7f["DestroyGrid"](),
								_0x402e7f["MakeUIGrid"](0x2, 0x1, !0x1),
								_0x402e7f["UI_grid"]["SetContents"](0x0, 0x0, this["OptionsButton"]),
								_0x402e7f["UI_grid"]["SetContents"](0x1, 0x0, this["ResumeButton"]),
								_0x402e7f["ToggleCursorsVisibility"](!0x0),
								_0x402e7f["UI_grid"]["SelectGameObject"](this["ResumeButton"]),
								(_0x402e7f["UI_selected"] = this["ResumeButton"]),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x402e7f),
								(_0x402e7f["OnCancelCallback"] = () => {
									var _0x55494a = _0x52c3e6,
										_0xa6737f,
										_0x3e0015,
										_0x5d4082;
									null ===
										(_0x5d4082 =
											null ===
												(_0x3e0015 =
													null === (_0xa6737f = this["ResumeButton"]) ||
													void 0x0 === _0xa6737f
														? void 0x0
														: _0xa6737f["_events"]) || void 0x0 === _0x3e0015
												? void 0x0
												: _0x3e0015["pointerdown"]) ||
										void 0x0 === _0x5d4082 ||
										_0x5d4082["fn"]();
								});
						}
						["MakeUIGrid_Options"]() {
							var _0x13cc51 = _0x5d9431;
							let _0x5017bb = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x5017bb["DestroyGrid"](),
								_0x5017bb["MakeUIGrid"](0x2, 0x6, !0x1),
								_0x5017bb["UI_grid"]["SetContents"](0x1, 0x0, this["SFX_box"]),
								_0x5017bb["UI_grid"]["SetContents"](0x1, 0x1, this["BGM_box"]),
								_0x5017bb["UI_grid"]["SetContents"](0x1, 0x2, this["FLASH_box"]),
								_0x5017bb["UI_grid"]["SetContents"](0x1, 0x3, this["JOYSTICK_box"]),
								_0x5017bb["UI_grid"]["SetContents"](0x1, 0x4, this["DAMAGE_box"]),
								_0x5017bb["UI_grid"]["SetContents"](0x1, 0x5, this["ResumeButton"]),
								_0x5017bb["UI_grid"]["SetContents"](0x0, 0x5, this["QuitButton"]),
								_0x5017bb["ToggleCursorsVisibility"](!0x0),
								_0x5017bb["UI_grid"]["SelectGameObject"](this["ResumeButton"]),
								(_0x5017bb["UI_selected"] = this["ResumeButton"]),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x5017bb),
								(_0x5017bb["UI_grid"]["onLeft"] = this["onLeft"]["bind"](this)),
								(_0x5017bb["UI_grid"]["onRight"] = this["onRight"]["bind"](this)),
								(_0x5017bb["OnCancelCallback"] = () => {
									var _0x1c1422 = _0x13cc51,
										_0x17e620,
										_0x57fcfd,
										_0x1863d5;
									null ===
										(_0x1863d5 =
											null ===
												(_0x57fcfd =
													null === (_0x17e620 = this["ResumeButton"]) ||
													void 0x0 === _0x17e620
														? void 0x0
														: _0x17e620["_events"]) || void 0x0 === _0x57fcfd
												? void 0x0
												: _0x57fcfd["pointerdown"]) ||
										void 0x0 === _0x1863d5 ||
										_0x1863d5["fn"]();
								});
						}
						["ReadPlayerOptions"]() {
							var _0x24633a = _0x5d9431;
							let _0x270fd1 = _0x2164b8["Core"]["PlayerOptions"]["SoundsVolume"];
							this["SFX_box"]["x"] =
								this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0x270fd1;
							let _0x252e27 = _0x2164b8["Core"]["PlayerOptions"]["MusicVolume"];
							this["BGM_box"]["x"] =
								this["sliderBounds"]["left"] + this["sliderBounds"]["width"] * _0x252e27;
							var _0x3a98c6 = _0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"];
							this["FLASH_toggle"]["setFrame"](_0x3a98c6 ? "yes16.png" : "no16.png");
							var _0x3fd632 = _0x2164b8["Core"]["PlayerOptions"]["JoystickVisible"];
							this["JOYSTICK_toggle"]["setFrame"](_0x3fd632 ? "yes16.png" : "no16.png");
							var _0xf6ec48 = _0x2164b8["Core"]["PlayerOptions"]["DamageNumbersEnabled"];
							this["DAMAGE_toggle"]["setFrame"](_0xf6ec48 ? "yes16.png" : "no16.png");
						}
						["HideQuitButton"]() {
							var _0x1099ad = _0x5d9431;
							this["tweens"]["add"]({
								targets: [this["QuitButton"], this["QuitText"]],
								alpha: 0x0,
								scale: 0x0,
								duration: 0x64,
								ease: "Linear",
							}),
								this["QuitButton"]["removeInteractive"]();
						}
						["update"]() {}
					}
					class _0x5388bb extends Phaser["GameObjects"]["Container"] {
						constructor(_0x863535, _0x43b965, _0x5f0011, _0x188ec4) {
							var _0xbfb3d9 = _0x5d9431;
							super(_0x863535, _0x43b965, _0x5f0011),
								(this["power"] = _0x5324b3["AMOUNT"]),
								(this["power"] = _0x188ec4),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								(this["myIconBG"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x20,
									0x20,
									"UI",
									"frameB.png"
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myWeaponIcon"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x20,
									0x20,
									"items",
									""
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								this["AssignData"](this["power"]),
								this["add"]([this["myIconBG"], this["myWeaponIcon"]]);
						}
						["AssignData"](_0x396257) {
							var _0x2fe2b7 = _0x5d9431;
							this["power"] = _0x396257;
							var _0x5e49ec = _0x41a274[this["power"]][0x0];
							_0x5e49ec["seen"]
								? (this["myWeaponIcon"]
										["setTexture"](_0x5e49ec["texture"], _0x5e49ec["frameName"])
										["setScale"](0x2 * _0x1fa5bb["PixelScale"]),
								  this["myIconBG"]["setAlpha"](0x1)["setScale"](0x2 * _0x1fa5bb["PixelScale"]))
								: (this["myWeaponIcon"]
										["setTexture"]("items", "QuestionMark.png")
										["setScale"](_0x1fa5bb["PixelScale"]),
								  this["myIconBG"]["setAlpha"](0.5)["setScale"](1.6 * _0x1fa5bb["PixelScale"]));
						}
					}
					const _0xb27d81 = _0x5388bb;
					class _0x1b515f extends Phaser["GameObjects"]["Container"] {
						constructor(_0x3fb0c6, _0x360fb0, _0x403b1b) {
							var _0x31ea11 = _0x5d9431;
							super(_0x3fb0c6, _0x360fb0, _0x403b1b),
								(this["power"] = _0x5324b3["AMOUNT"]),
								this["setScale"](_0x1fa5bb["PixelScale"]);
							var _0x1f6922 = {
									x: 0x0,
									y: 0x0,
									width: 0.96 * _0x2bef3a["width"],
									height: 0x68,
								},
								_0x56ac04 = 0.96 * _0x2bef3a["width"] * 0.5,
								_0x36837c = 0.96 * _0x2bef3a["width"] * 0.25;
							(this["Background"] = new _0x5b4abe["NineSlice"](
								this["scene"],
								_0x395ea9["PanelBackground"],
								_0x1f6922
							)),
								(this["myIconBG"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x34,
									0x34,
									"UI",
									"frameB.png"
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myWeaponIcon"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x34,
									0x34,
									"items",
									""
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myName"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									_0x56ac04,
									0x6,
									_0x2164b8["Lang"]["getLang"]("weaponCollectionPanel_name"),
									{
										color: "yellow",
									}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								(this["myDesc"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0.5 * _0x56ac04,
									0x20,
									_0x2164b8["Lang"]["getLang"]("weaponCollectionPanel_description"),
									{}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setWordWrapWidth"](0x3 * _0x36837c)),
								(this["myTips"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0.5 * _0x56ac04,
									0x40,
									_0x2164b8["Lang"]["getLang"]("weaponCollectionPanel_ignores"),
									{
										color: "orange",
									}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setWordWrapWidth"](0x3 * _0x36837c)),
								this["AssignData"](this["power"]),
								this["add"]([
									this["Background"],
									this["myIconBG"],
									this["myWeaponIcon"],
									this["myName"],
									this["myDesc"],
									this["myTips"],
								]);
						}
						["AssignData"](_0x505f75) {
							var _0x5a501a = _0x5d9431;
							this["power"] = _0x505f75;
							var _0xa382fc = _0x41a274[this["power"]];
							const _0x37ade9 = (_0xa382fc =
								void 0x0 !== _0xa382fc ? _0x41a274[this["power"]][0x0] : _0x171870[this["power"]])[
								"seen"
							];
							this["Background"]["setTint"](_0x37ade9 ? 0xffffff : 0x888888),
								(this["myName"]["text"] = _0x37ade9 ? _0xa382fc["name"] : "???"),
								_0x37ade9
									? this["myWeaponIcon"]["setTexture"](_0xa382fc["texture"], _0xa382fc["frameName"])
									: this["myWeaponIcon"]["setTexture"]("items", "QuestionMark.png"),
								this["myDesc"]["setText"](
									_0x37ade9
										? _0xa382fc["description"]
										: _0x2164b8["Lang"]["getLang"]("weaponCollectionPanel_notFound")
								),
								this["myTips"]["setText"](_0x37ade9 ? _0xa382fc["tips"] : "");
						}
						["TurnToSelection"]() {
							var _0x40b173 = _0x5d9431;
							this["AssignData"](this["power"]);
						}
					}
					const _0x230289 = _0x1b515f;
					class _0x4e2b37 extends Phaser["GameObjects"]["Container"] {
						constructor(_0xb39923, _0x731874, _0x59ae99, _0x65c33a) {
							var _0x3391e9 = _0x5d9431;
							super(_0xb39923, _0x731874, _0x59ae99),
								(this["power"] = _0x3bf2f1["COIN"]),
								(this["power"] = _0x65c33a),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								(this["myIconBG"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x20,
									0x20,
									"UI",
									"frameC.png"
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myWeaponIcon"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x20,
									0x20,
									"items",
									""
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								this["AssignData"](this["power"]),
								this["add"]([this["myIconBG"], this["myWeaponIcon"]]);
						}
						["AssignData"](_0x4fcde8) {
							var _0x3cd2b9 = _0x5d9431;
							this["power"] = _0x4fcde8;
							var _0x151ee9 = _0x171870[this["power"]];
							_0x151ee9["seen"]
								? (this["myWeaponIcon"]
										["setTexture"](_0x151ee9["texture"], _0x151ee9["frameName"])
										["setScale"](0x2 * _0x1fa5bb["PixelScale"]),
								  this["myIconBG"]["setAlpha"](0x1)["setScale"](0x2 * _0x1fa5bb["PixelScale"]))
								: (this["myWeaponIcon"]
										["setTexture"]("items", "QuestionMark.png")
										["setScale"](_0x1fa5bb["PixelScale"]),
								  this["myIconBG"]["setAlpha"](0.5)["setScale"](1.6 * _0x1fa5bb["PixelScale"]));
						}
					}
					const _0x27090a = _0x4e2b37;
					class _0x5b2c17 extends Phaser["Scene"] {
						constructor() {
							var _0x30c274 = _0x5d9431;
							super({
								key: _0x53d8cd["CollectionWeaponScene"],
							}),
								(this["TopLeft"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["Highlighted"] = _0x5324b3["WHIP"]),
								(this["Columns"] = 0x8),
								(this["Rows"] = 0x0);
						}
						["preload"]() {}
						["create"]() {
							var _0x360f78 = _0x5d9431,
								_0x468e20 = _0x2bef3a["width"],
								_0x2232cf = _0x2bef3a["height"] - 0x40,
								_0x4996dc = _0x2232cf;
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x468e20,
								height: _0x2232cf,
							})),
								this["background"]["setPosition"](_0x2bef3a["centerX"], _0x4996dc),
								this["background"]["setOrigin"](0.5, 0x1),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								(this["header"] = this["add"]
									["text"](
										_0x2bef3a["centerX"],
										0x21,
										_0x2164b8["Lang"]["getLang"]("weapon_header"),
										{}
									)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5));
							var _0x44c83e = _0x41a274;
							this["panels"] = this["add"]["group"]();
							for (const _0xc72352 in _0x44c83e)
								if (!_0x44c83e[_0xc72352][0x0]["hidden"]) {
									var _0x448cdf = new _0xb27d81(this, 0x0, 0x0, _0xc72352);
									this["add"]["existing"](_0x448cdf),
										_0x448cdf["myIconBG"]["setInteractive"](),
										_0x448cdf["myIconBG"]["on"](
											"pointerdown",
											() => {
												this["OnPanelClicked"](_0xc72352);
											},
											this
										),
										this["panels"]["add"](_0x448cdf);
								}
							var _0x5cbcb5 = _0x171870;
							for (const _0x5d2b49 in _0x5cbcb5)
								if (!_0x5cbcb5[_0x5d2b49]["hidden"]) {
									var _0x33dddc = new _0x27090a(this, 0x0, 0x0, _0x5d2b49);
									this["add"]["existing"](_0x33dddc),
										_0x33dddc["myIconBG"]["setInteractive"](),
										_0x33dddc["myIconBG"]["on"](
											"pointerdown",
											() => {
												this["OnPanelClicked"](_0x5d2b49);
											},
											this
										),
										this["panels"]["add"](_0x33dddc);
								}
							const _0x10c530 = new Phaser["GameObjects"]["Graphics"](this, {
								x: 0x0,
								y: 0x0,
							});
							_0x10c530["lineStyle"](0x1, 0xffffff, 0.9),
								_0x10c530["fillStyle"](0xffff, 0.2),
								_0x10c530["fillRect"](
									_0x2bef3a["left"],
									0x7c,
									_0x2bef3a["width"],
									this["renderer"]["height"] - 0x80 - 0x68
								);
							for (
								var _0x190b98 = _0x10c530["createGeometryMask"](),
									_0x4d1fd1 = _0x4996dc - 0x68,
									_0x573e75 = this["Columns"],
									_0x5c31ca = this["panels"]["getChildren"](),
									_0xc49d5 = 0x0;
								_0xc49d5 < _0x5c31ca["length"];
								_0xc49d5++
							) {
								const _0x30670c = _0x5c31ca[_0xc49d5];
								(_0x30670c["x"] = 0xc + (_0xc49d5 % _0x573e75) * 0x30 + (_0xc49d5 % _0x573e75) * 0xc),
									(_0x30670c["y"] =
										0x38 +
										0x30 * Math["floor"](_0xc49d5 / _0x573e75) +
										0xc * Math["floor"](_0xc49d5 / _0x573e75));
							}
							(this["Rows"] = Math["ceil"](_0xc49d5 / _0x573e75)),
								(this["highlight"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["SelectionHighlight"], {
									x: 0x0,
									y: 0x0,
									width: 0x24,
									height: 0x24,
								})),
								this["highlight"]
									["setOrigin"](0x0, 0x0)
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setDepth"](0x3e8),
								this["add"]["existing"](this["highlight"]);
							var _0x2cec7e = new _0x3729c3(this, _0x2bef3a["centerX"], 0.5 * _0x4d1fd1);
							_0x2cec7e["setMask"](_0x190b98),
								(this["confirmationPanel"] = new _0x230289(
									this,
									_0x2bef3a["left"] + 0xa,
									_0x4996dc - 0xa
								)),
								this["add"]["existing"](this["confirmationPanel"]),
								_0x38ad94["CalculateAndSetContainerSize"](this["confirmationPanel"]),
								(this["confirmationPanel"]["y"] -= this["confirmationPanel"]["displayHeight"]),
								(this["UI_topBar"] = this["scene"]["get"](_0x53d8cd["UI_topBar"])),
								this["scene"]["bringToTop"](this["UI_topBar"]);
							var _0x11e8c2 = this["children"]["getAll"]();
							this["children"]["removeAll"](),
								(this["SceneContainer"] = this["add"]["container"](0x0, 0x0, _0x11e8c2)),
								this["SceneContainer"]["setScale"](_0x16385e()),
								_0x38ad94["CalculateAndSetContainerSize"](this["SceneContainer"]),
								(this["SceneContainer"]["y"] =
									this["renderer"]["height"] - this["SceneContainer"]["displayHeight"]),
								_0x2cec7e["SetSize"](_0x2bef3a["width"], _0x4d1fd1),
								_0x2cec7e["AddChildren"](_0x5c31ca),
								_0x2cec7e["AddChildren"](this["highlight"]),
								_0x2cec7e["disableInteractive"](),
								this["MakeUIGrid"](),
								this["OnPanelClicked"](this["Highlighted"]);
						}
						["MakeUIGrid"]() {
							var _0x362d67 = _0x5d9431;
							let _0x39e13f = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							this["panels"]["children"]["entries"]["length"],
								_0x39e13f["MakeUIGrid"](this["Columns"], this["Rows"] + 0x1, !0x0);
							for (let _0x2a53fa = 0x0; _0x2a53fa < this["Columns"]; _0x2a53fa++)
								_0x39e13f["UI_grid"]["SetContents"](_0x2a53fa, 0x0, this["UI_topBar"]["BackButton"]);
							for (
								let _0x3eef64 = 0x0;
								_0x3eef64 < this["panels"]["children"]["entries"]["length"];
								_0x3eef64++
							) {
								const _0x315e9e = this["panels"]["children"]["entries"][_0x3eef64];
								let _0x1458e7 = _0x3eef64 % this["Columns"],
									_0x2a7797 = 0x1 + Math["floor"](_0x3eef64 / this["Columns"]);
								_0x39e13f["UI_grid"]["SetContents"](_0x1458e7, _0x2a7797, _0x315e9e);
							}
							_0x39e13f["UI_grid"]["SelectAt"](0x0, 0x0),
								(_0x39e13f["UI_selected"] = this["UI_topBar"]["BackButton"]),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x39e13f),
								(_0x39e13f["OnCancelCallback"] = () => {
									var _0x25f5d3 = _0x362d67,
										_0x7bcfae,
										_0x211ab7,
										_0x4aa461;
									null ===
										(_0x4aa461 =
											null ===
												(_0x211ab7 =
													null === (_0x7bcfae = this["UI_topBar"]["BackButton"]) ||
													void 0x0 === _0x7bcfae
														? void 0x0
														: _0x7bcfae["_events"]) || void 0x0 === _0x211ab7
												? void 0x0
												: _0x211ab7["pointerdown"]) ||
										void 0x0 === _0x4aa461 ||
										_0x4aa461["fn"]();
								});
						}
						["update"]() {
							var _0x567bc6 = _0x5d9431,
								_0x478827;
							let _0x1b3f78 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							(
								null === (_0x478827 = _0x1b3f78["UI_selected"]) || void 0x0 === _0x478827
									? void 0x0
									: _0x478827["power"]
							)
								? (this["OnPanelClicked"](_0x1b3f78["UI_selected"]["power"]),
								  _0x1b3f78["ToggleCursorsVisibility"](!0x1),
								  this["highlight"]["setVisible"](!0x0))
								: (_0x1b3f78["ToggleCursorsVisibility"](!0x0), this["highlight"]["setVisible"](!0x1));
						}
						["OnSelectionChange"]() {
							var _0x511f82 = _0x5d9431,
								_0x5faccc = this["panels"]
									["getChildren"]()
									["find"]((_0x335532) => _0x335532["power"] === this["Highlighted"]);
							if (_0x5faccc) {
								this["highlight"]["setPosition"](_0x5faccc["x"] + 0x5, _0x5faccc["y"] + 0x5);
								let _0x56c1b8 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
								_0x56c1b8["UI_grid"]["SelectGameObject"](_0x5faccc),
									(_0x56c1b8["UI_selected"] = _0x5faccc);
							}
						}
						["OnPanelClicked"](_0x594103) {
							var _0x56face = _0x5d9431;
							(this["Highlighted"] = _0x594103),
								this["confirmationPanel"]["AssignData"](this["Highlighted"]),
								this["OnSelectionChange"]();
						}
						["OnConfirmClicked"]() {}
					}
					class _0x209c56 {
						static ["MakeTexture_PowerUps"](
							_0x4d5336,
							_0x3aad2b = "tex",
							_0x1ecec = 0xff,
							_0x5bafb9 = 0.5,
							_0x5bc2dd = !0x0
						) {
							var _0xa70911 = _0x5d9431,
								_0x285487,
								_0x5f4509 = new Array();
							if (
								((null === (_0x285487 = _0x2164b8["Core"]) || void 0x0 === _0x285487
									? void 0x0
									: _0x285487["LevelUpFactory"]) &&
									(_0x5f4509 =
										_0x2164b8["Core"]["LevelUpFactory"]["GetRemainingWeaponsAndPowerUps"]()),
								_0x5f4509["length"] <= 0x0)
							) {
								for (const _0xa04869 in _0x41a274)
									_0x41a274[_0xa04869][0x0]["isPowerUp"] &&
										_0x5f4509["push"](_0x41a274[_0xa04869][0x0]["bulletType"]);
							}
							_0x5bc2dd && Phaser["Utils"]["Array"]["Shuffle"](_0x5f4509);
							var _0x2e46f4 = this["MinAmountOfPowerUps"] - _0x5f4509["length"];
							const _0x2ad9b5 = _0x4d5336["make"]["renderTexture"]({
									x: -0x2710,
									y: -0x2710,
									width: 0x20,
									height: 0x20 * (_0x5f4509["length"] + _0x2e46f4),
								}),
								_0x50372b = _0x4d5336["make"]["renderTexture"]({
									x: -0x2710,
									y: -0x2710,
									width: 0x20,
									height: 0x20 * (_0x5f4509["length"] + _0x2e46f4),
								}),
								_0x568b6a = new Phaser["GameObjects"]["Graphics"](_0x4d5336, {
									x: 0x0,
									y: 0x0,
								});
							_0x568b6a["fillStyle"](_0x1ecec, _0x5bafb9),
								_0x568b6a["fillRect"](0x0, 0x0, 0x20, 0x20 * (_0x5f4509["length"] + _0x2e46f4)),
								_0x2ad9b5["draw"](_0x568b6a),
								_0x50372b["draw"](_0x568b6a),
								_0x50372b["saveTexture"](_0x3aad2b + "_empty");
							var _0x4c6952 = 0x0;
							for (
								_0x4c6952 = 0x0;
								_0x4c6952 < _0x5f4509["length"] && _0x4c6952 < this["MinAmountOfPowerUps"];
								_0x4c6952++
							) {
								var _0x21c914 = _0x41a274[_0x5f4509[_0x4c6952]][0x0];
								_0x2ad9b5["drawFrame"](
									_0x21c914["texture"],
									_0x21c914["frameName"],
									0x8,
									0x20 * _0x4c6952
								);
							}
							for (let _0x18f1e0 = 0x0; _0x18f1e0 < _0x2e46f4; _0x18f1e0++)
								_0x2ad9b5["drawFrame"](
									"items",
									"MoneyBagGreen.png",
									0x8,
									0x20 * (_0x4c6952 + _0x18f1e0)
								);
							_0x2ad9b5["saveTexture"](_0x3aad2b);
						}
						static ["MakeTexture_ExistingWeapons"](
							_0x2936eb,
							_0x14e656 = "tex",
							_0x49aa8c = 0xff0000,
							_0x5ce395 = 0.5
						) {
							var _0x534d5f = _0x5d9431,
								_0x284ddf,
								_0x3f1cda = new Array();
							if (
								((null === (_0x284ddf = _0x2164b8["Core"]) || void 0x0 === _0x284ddf
									? void 0x0
									: _0x284ddf["LevelUpFactory"]) &&
									(_0x3f1cda = _0x2164b8["Core"]["LevelUpFactory"]["GetExistingNotMaxedWeapons"]()),
								_0x3f1cda["length"] <= 0x0)
							) {
								for (const _0x4e3b0a in _0x41a274)
									_0x41a274[_0x4e3b0a][0x0]["isPowerUp"] ||
										_0x3f1cda["push"](_0x41a274[_0x4e3b0a][0x0]["bulletType"]);
							}
							var _0x54d3ec = this["MinAmountOfPowerUps"] - _0x3f1cda["length"];
							const _0x5d7ff3 = _0x2936eb["make"]["renderTexture"]({
									x: -0x2710,
									y: -0x2710,
									width: 0x20,
									height: 0x20 * (_0x3f1cda["length"] + _0x54d3ec),
								}),
								_0x4e3e58 = _0x2936eb["make"]["renderTexture"]({
									x: -0x2710,
									y: -0x2710,
									width: 0x20,
									height: 0x20 * (_0x3f1cda["length"] + _0x54d3ec),
								}),
								_0x4411d4 = new Phaser["GameObjects"]["Graphics"](_0x2936eb, {
									x: 0x0,
									y: 0x0,
								});
							_0x4411d4["fillStyle"](_0x49aa8c, _0x5ce395),
								_0x4411d4["fillRect"](0x0, 0x0, 0x20, 0x20 * (_0x3f1cda["length"] + _0x54d3ec)),
								_0x5d7ff3["draw"](_0x4411d4),
								_0x4e3e58["draw"](_0x4411d4),
								_0x4e3e58["saveTexture"](_0x14e656 + "_empty");
							var _0x2db7b6 = 0x0;
							for (
								_0x2db7b6 = 0x0;
								_0x2db7b6 < _0x3f1cda["length"] && _0x2db7b6 < this["MinAmountOfPowerUps"];
								_0x2db7b6++
							) {
								var _0x32a102 = _0x41a274[_0x3f1cda[_0x2db7b6]][0x0];
								_0x5d7ff3["drawFrame"](
									_0x32a102["texture"],
									_0x32a102["frameName"],
									0x8,
									0x20 * _0x2db7b6
								);
							}
							for (let _0x5ea404 = 0x0; _0x5ea404 < _0x54d3ec; _0x5ea404++)
								_0x5d7ff3["drawFrame"](
									"items",
									"MoneyBagGreen.png",
									0x8,
									0x20 * (_0x2db7b6 + _0x5ea404)
								);
							_0x5d7ff3["saveTexture"](_0x14e656);
						}
						static ["MakeTexture_Any"](
							_0x2061c8,
							_0x2a642a = "tex",
							_0x12f189 = 0xff,
							_0x394d97 = 0.5,
							_0xb4623b = !0x0
						) {
							var _0x8083a5 = _0x5d9431,
								_0x1422e3 = new Array();
							for (const _0x1e2078 in _0x41a274)
								_0x1422e3["push"](_0x41a274[_0x1e2078][0x0]["bulletType"]);
							_0xb4623b &&
								(Phaser["Utils"]["Array"]["Shuffle"](_0x1422e3),
								_0x1422e3["sort"]((_0x3791c0, _0x58df48) =>
									_0x41a274[_0x58df48][0x0]["isEvolution"] ? 0x1 : -0x1
								));
							var _0x209302 = this["MinAmountOfPowerUps"] - _0x1422e3["length"];
							const _0x23d9c4 = _0x2061c8["make"]["renderTexture"]({
									x: -0x2710,
									y: -0x2710,
									width: 0x20,
									height: 0x20 * (_0x1422e3["length"] + _0x209302),
								}),
								_0x33a7a6 = _0x2061c8["make"]["renderTexture"]({
									x: -0x2710,
									y: -0x2710,
									width: 0x20,
									height: 0x20 * (_0x1422e3["length"] + _0x209302),
								}),
								_0x278351 = new Phaser["GameObjects"]["Graphics"](_0x2061c8, {
									x: 0x0,
									y: 0x0,
								});
							_0x278351["fillStyle"](_0x12f189, _0x394d97),
								_0x278351["fillRect"](0x0, 0x0, 0x20, 0x20 * (_0x1422e3["length"] + _0x209302)),
								_0x23d9c4["draw"](_0x278351),
								_0x33a7a6["draw"](_0x278351),
								_0x33a7a6["saveTexture"](_0x2a642a + "_empty");
							var _0x4dd655 = 0x0;
							for (
								_0x4dd655 = 0x0;
								_0x4dd655 < _0x1422e3["length"] && _0x4dd655 < this["MinAmountOfPowerUps"];
								_0x4dd655++
							) {
								var _0x3406a2 = _0x41a274[_0x1422e3[_0x4dd655]][0x0];
								_0x23d9c4["drawFrame"](
									_0x3406a2["texture"],
									_0x3406a2["frameName"],
									0x8,
									0x20 * _0x4dd655
								);
							}
							for (let _0x1bb377 = 0x0; _0x1bb377 < _0x209302; _0x1bb377++)
								_0x23d9c4["drawFrame"](
									"items",
									"MoneyBagGreen.png",
									0x8,
									0x20 * (_0x4dd655 + _0x1bb377)
								);
							_0x23d9c4["saveTexture"](_0x2a642a);
						}
						static ["RotateVectorByDegrees"](_0x44b2f1, _0xa8ca13, _0x4fb357) {
							var _0x1fdc00 = _0x5d9431,
								_0x144b2d = Phaser["Math"]["DegToRad"](_0xa8ca13);
							(_0x4fb357["x"] =
								_0x44b2f1["x"] * Math["cos"](_0x144b2d) - _0x44b2f1["y"] * Math["sin"](_0x144b2d)),
								(_0x4fb357["y"] =
									_0x44b2f1["x"] * Math["sin"](_0x144b2d) + _0x44b2f1["y"] * Math["cos"](_0x144b2d));
						}
						static ["MakeRectangleMask"](_0x530227, _0x47194a, _0x31f091, _0x354e70, _0xdb468b) {
							var _0x2caceb = _0x5d9431;
							const _0x203318 = new Phaser["GameObjects"]["Graphics"](_0x530227, {
								x: 0x0,
								y: 0x0,
							});
							return (
								_0x203318["fillRect"](_0x47194a, _0x31f091, _0x354e70, _0xdb468b),
								_0x203318["createGeometryMask"]()
							);
						}
					}
					_0x209c56["MinAmountOfPowerUps"] = 0xc;
					const _0x3fbe95 = _0x209c56,
						_0xd73702 = class {
							constructor(_0x2b5380, _0x3bc5ae, _0x2aa449, _0x357661, _0x14e34c = 0xd) {
								var _0x4e28c1 = _0x5d9431;
								(this["isPlaying"] = !0x1),
									(this["scene"] = _0x2b5380),
									(this["x"] = _0x3bc5ae),
									(this["y"] = _0x2aa449),
									(this["prizeName"] = _0x357661),
									(this["bg"] = this["scene"]["add"]
										["sprite"](_0x3bc5ae, _0x2aa449, "vfx", "PrizeBG.png")
										["setScale"](0x0)
										["setDepth"](_0x14e34c)
										["setAlpha"](0.8)
										["setVisible"](!0x1)),
									(this["star1"] = this["scene"]["add"]
										["sprite"](_0x3bc5ae, _0x2aa449, "vfx", "HitStarWhite2.png")
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
										["setScale"](0x6)
										["setAlpha"](0.7)
										["setDepth"](_0x14e34c)
										["setVisible"](!0x1)),
									(this["star2"] = this["scene"]["add"]
										["sprite"](_0x3bc5ae, _0x2aa449, "vfx", "HitStarWhite2.png")
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
										["setScale"](0x8)
										["setAlpha"](0.7)
										["setAngle"](0x2d)
										["setDepth"](_0x14e34c)
										["setVisible"](!0x1)),
									(this["ring"] = this["scene"]["add"]
										["sprite"](_0x3bc5ae, _0x2aa449, "vfx", "sPFX_ring_64.png")
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
										["setScale"](0x8)
										["setAlpha"](0.5)
										["setDepth"](_0x14e34c)
										["setVisible"](!0x1)),
									(this["prize"] = this["scene"]["add"]
										["sprite"](_0x3bc5ae, _0x2aa449, "items", _0x357661)
										["setScale"](0x0)
										["setDepth"](_0x14e34c)
										["setVisible"](!0x1));
							}
							["Play"]() {
								var _0x3e2cc3 = _0x5d9431;
								this["isPlaying"] ||
									((this["isPlaying"] = !0x0),
									this["bg"]["setVisible"](!0x0),
									this["prize"]["setVisible"](!0x0),
									this["ring"]["setVisible"](!0x0),
									this["star2"]["setVisible"](!0x0),
									this["star1"]["setVisible"](!0x0),
									this["scene"]["tweens"]["add"]({
										duration: 0x2710,
										targets: [this["star1"]],
										angle: 0x168,
										repeat: -0x1,
									}),
									this["scene"]["tweens"]["add"]({
										duration: 0x1b58,
										targets: [this["star2"]],
										angle: 0x195,
										repeat: -0x1,
									}),
									this["scene"]["tweens"]["add"]({
										duration: 0x32,
										targets: [this["bg"], this["prize"]],
										scale: 0x2,
									}),
									this["scene"]["tweens"]["add"]({
										duration: 0x64,
										targets: this["ring"],
										scale: 0x0,
									}),
									this["scene"]["tweens"]["add"]({
										duration: 0x32,
										targets: [this["star1"], this["star2"]],
										scale: 0x2,
										onComplete: () => {
											var _0x59027b = _0x3e2cc3;
											this["star1"]["setFrame"]("HitStar2.png"),
												this["star2"]["setFrame"]("HitStar2.png"),
												this["star1"]["setDepth"](this["star1"]["depth"] - 0x1),
												this["star2"]["setDepth"](this["star2"]["depth"] - 0x1),
												this["scene"]["tweens"]["add"]({
													duration: 0x1f4,
													targets: [this["star1"]],
													scale: 0x4,
													yoyo: !0x0,
													repeat: -0x1,
												}),
												this["scene"]["tweens"]["add"]({
													duration: 0x258,
													targets: [this["star2"]],
													scale: 0x4,
													yoyo: !0x0,
													repeat: -0x1,
												});
										},
									}));
							}
							["Hide"](_0x5ab1af = this["x"], _0x383f1e = this["y"]) {
								var _0x158e6d = _0x5d9431;
								this["scene"]["tweens"]["add"]({
									duration: 0x96,
									targets: [this["bg"], this["prize"], this["star1"], this["star2"]],
									scale: 0x0,
									alpha: 0x0,
									x: _0x5ab1af,
									y: _0x383f1e,
									ease: "Sine.easeInOut",
								});
							}
						};
					class _0x2136fc {
						constructor() {
							var _0x3190c0 = _0x5d9431;
							(this["color"] = 0xff),
								(this["prizeType"] = _0x49ae78["POWERUP"]),
								(this["alpha"] = 0.5),
								(this["textureName"] = "texPowerUps");
						}
					}
					class _0x1f593c {
						constructor(_0x2d5698, _0xab62a, _0x12e024, _0x255e28, _0x10baee) {
							var _0x516199 = _0x5d9431;
							(this["start"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["end"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["scene"] = _0x2d5698),
								(this["reelConfig"] = _0xab62a),
								(this["start"] = _0x12e024),
								(this["end"] = _0x255e28),
								(this["mask"] = _0x10baee),
								_0xab62a["prizeType"] === _0x49ae78["POWERUP"]
									? _0x3fbe95["MakeTexture_PowerUps"](
											_0x2d5698,
											_0xab62a["textureName"],
											_0xab62a["color"],
											_0xab62a["alpha"]
									  )
									: _0xab62a["prizeType"] === _0x49ae78["EXISTING_WEAPON"] ||
									  _0xab62a["prizeType"] === _0x49ae78["EXISTING_ANY"]
									? _0x3fbe95["MakeTexture_ExistingWeapons"](
											_0x2d5698,
											_0xab62a["textureName"],
											_0xab62a["color"],
											_0xab62a["alpha"]
									  )
									: _0xab62a["prizeType"] === _0x49ae78["FIXED"] ||
									  _0xab62a["prizeType"] === _0x49ae78["EVOLUTION"]
									? _0x3fbe95["MakeTexture_Any"](
											_0x2d5698,
											_0xab62a["textureName"],
											_0xab62a["color"],
											_0xab62a["alpha"]
									  )
									: _0x3fbe95["MakeTexture_ExistingWeapons"](
											_0x2d5698,
											_0xab62a["textureName"],
											_0xab62a["color"],
											_0xab62a["alpha"]
									  );
							var _0xed53a5 = [0x0, 0x0, this["end"]["x"], this["end"]["y"]],
								_0x1fe109 = new Phaser["Curves"]["Line"](_0xed53a5);
							(this["sprite1"] = this["AddSpriteFollower"](
								_0x1fe109,
								this["start"]["x"],
								this["start"]["y"],
								_0xab62a["textureName"]
							)),
								(this["sprite2"] = this["AddSpriteFollower"](
									_0x1fe109,
									this["start"]["x"],
									this["start"]["y"],
									_0xab62a["textureName"]
								));
						}
						["AddSpriteFollower"](_0x491de0, _0x26d496, _0xcc70c4, _0x12f3c5) {
							var _0x283da1 = _0x5d9431;
							return this["scene"]["add"]
								["follower"](_0x491de0, _0x26d496, _0xcc70c4, _0x12f3c5)
								["setOrigin"](0.5, 0x0)
								["setScale"](0x2)
								["setMask"](this["mask"]);
						}
						["Play"]() {
							var _0x26e666 = _0x5d9431;
							this["sprite1"]["startFollow"](_0x1f593c["FollowConfig_Reel_Standard1"]),
								this["sprite2"]["startFollow"](_0x1f593c["FollowConfig_Reel_Standard2"]);
						}
						["Stop"]() {
							var _0x2d8f9c = _0x5d9431;
							this["sprite1"]["setTexture"](this["reelConfig"]["textureName"] + "_empty"),
								this["sprite2"]["setTexture"](this["reelConfig"]["textureName"] + "_empty"),
								this["sprite1"]["stopFollow"](),
								this["sprite2"]["stopFollow"](),
								this["sprite1"]["setTintFill"](0xffffff),
								this["sprite2"]["setTintFill"](0xffffff),
								this["sprite1"]["setBlendMode"](_0x1cb257["BlendModes"]["ADD"]),
								this["sprite2"]["setBlendMode"](_0x1cb257["BlendModes"]["ADD"]),
								this["scene"]["time"]["addEvent"]({
									delay: 0x32,
									callback: () => {
										var _0x33ebf4 = _0x2d8f9c;
										this["sprite1"]["clearTint"](),
											this["sprite2"]["clearTint"](),
											this["sprite1"]["setBlendMode"](_0x1cb257["BlendModes"]["NORMAL"]),
											this["sprite2"]["setBlendMode"](_0x1cb257["BlendModes"]["NORMAL"]);
									},
								});
						}
						["Hide"]() {
							var _0x8645f = _0x5d9431;
							this["scene"]["tweens"]["add"]({
								targets: [this["sprite1"], this["sprite2"]],
								alpha: 0x0,
								scaleX: 0x0,
								duration: 0x12c,
							});
						}
						["SetDepth"](_0x379422) {
							var _0x5e875c = _0x5d9431;
							this["sprite1"]["setDepth"](_0x379422), this["sprite2"]["setDepth"](_0x379422);
						}
						["Nuke"]() {
							var _0x6e31df = _0x5d9431;
							this["scene"]["children"]["remove"](this["sprite1"]),
								this["scene"]["children"]["remove"](this["sprite2"]),
								this["sprite1"]["destroy"](),
								this["sprite2"]["destroy"](),
								this["mask"]["destroy"]();
						}
					}
					(_0x1f593c["FollowConfig_Reel_Standard1"] = {
						duration: 0x7d0,
						positionOnPath: !0x1,
						repeat: -0x1,
						rotateToPath: !0x0,
						rotationOffset: 0x5a,
						ease: "Linear",
					}),
						(_0x1f593c["FollowConfig_Reel_Standard2"] = {
							duration: 0x7d0,
							positionOnPath: !0x1,
							repeat: -0x1,
							rotateToPath: !0x0,
							rotationOffset: 0x5a,
							ease: "Linear",
							delay: 0x3e8,
						});
					const _0x100d11 = _0x1f593c;
					class _0x45380b {}
					class _0x3f5add extends Phaser["GameObjects"]["Container"] {
						constructor(_0x52b04b, _0x2812f4, _0x1661ce) {
							var _0x5db9d7 = _0x5d9431;
							super(_0x52b04b, _0x2812f4, _0x1661ce),
								(this["weapon"] = _0x5324b3["AMOUNT"]),
								(this["item"] = _0x3bf2f1["COIN"]),
								(this["character"] = _0x2485a8["MORTACCIO"]),
								(this["achievement"] = _0x40d1e4["Defeat5000Enemies"]),
								this["setScale"](_0x1fa5bb["PixelScale"]);
							var _0x20e0d2 = {
									x: 0x0,
									y: 0x0,
									width: 0.96 * _0x1499e1,
									height: 0x68,
								},
								_0x419a49 = 0.96 * _0x1499e1 * 0.5,
								_0x557f2a = 0.96 * _0x1499e1 * 0.25;
							(this["Background"] = new _0x5b4abe["NineSlice"](
								this["scene"],
								_0x395ea9["PanelBackground"],
								_0x20e0d2
							)),
								(this["myIconBG"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x34,
									0x34,
									"UI",
									"frameB.png"
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myOverlay"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x34,
									0x34,
									"UI",
									"frameB.png"
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setVisible"](!0x1)),
								(this["myIcon"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x34,
									0x34,
									"items",
									""
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myName"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									_0x419a49,
									0x6,
									_0x2164b8["Lang"]["getLang"]("genericPopup_name"),
									{
										color: "yellow",
									}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								(this["myNextLevel"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x34,
									0x6,
									_0x2164b8["Lang"]["getLang"]("genericPopup_new"),
									{}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)
									["setVisible"](!0x1)),
								(this["myCounter"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x2 * _0x419a49 - 0x6,
									0x6,
									"",
									{
										color: "black",
									}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0x1, 0x0)),
								(this["myDesc"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0.5 * _0x419a49,
									0x20,
									_0x2164b8["Lang"]["getLang"]("genericPopup_description"),
									{}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setWordWrapWidth"](0x3 * _0x557f2a)),
								(this["myTips"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0.5 * _0x419a49,
									0x40,
									_0x2164b8["Lang"]["getLang"]("genericPopup_tips"),
									{
										color: "orange",
									}
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setWordWrapWidth"](0x3 * _0x557f2a)),
								this["add"]([
									this["Background"],
									this["myIconBG"],
									this["myIcon"],
									this["myOverlay"],
									this["myNextLevel"],
									this["myName"],
									this["myDesc"],
									this["myTips"],
									this["myCounter"],
								]),
								(this["ShowTween"] = this["scene"]["tweens"]["add"]({
									targets: this,
									scaleY: _0x1fa5bb["PixelScale"],
									duration: 0x12c,
									paused: !0x0,
								})),
								(this["HideTween"] = this["scene"]["tweens"]["add"]({
									targets: this,
									scaleY: 0x0,
									duration: 0x12c,
									paused: !0x0,
								})),
								(this["scaleY"] = 0x0),
								_0x38ad94["CalculateAndSetContainerSize"](this);
						}
						["Show"]() {
							var _0x33114a = _0x5d9431;
							this["ShowTween"]["resume"](), this["ShowTween"]["restart"]();
						}
						["Hide"]() {
							var _0x24e5c6 = _0x5d9431;
							this["HideTween"]["resume"](), this["HideTween"]["restart"]();
						}
						["AssignWeapon"](_0x14c4e1, _0x225098 = "") {
							var _0xd5a19a = _0x5d9431,
								_0x4b130d = _0x41a274[_0x14c4e1][0x0];
							this["myCounter"]["setText"](_0x225098),
								this["Background"]["setTint"](_0x4b130d["isEvolution"] ? 0xffff00 : 0xffffff),
								(this["myName"]["text"] = _0x4b130d["name"]),
								this["myIcon"]["setTexture"](_0x4b130d["texture"], _0x4b130d["frameName"]),
								this["myDesc"]["setText"](_0x4b130d["description"]),
								this["myTips"]["setText"](_0x4b130d["tips"]),
								this["myOverlay"]["setVisible"](!0x1),
								this["myIconBG"]["setVisible"](!0x0),
								this["myIconBG"]["setFrame"]("frameB.png")["setOrigin"](0.5);
						}
						["AssignItem"](_0x13e8aa, _0x2b381a = "") {
							var _0x21ac1d = _0x5d9431,
								_0x395739 = _0x171870[_0x13e8aa];
							this["myCounter"]["setText"](_0x2b381a),
								this["Background"]["setTint"](0xffffff),
								(this["myName"]["text"] = _0x395739["name"]),
								this["myIcon"]["setTexture"](_0x395739["texture"], _0x395739["frameName"]),
								this["myDesc"]["setText"](_0x395739["description"]),
								this["myTips"]["setText"](_0x395739["tips"]),
								this["myOverlay"]["setVisible"](!0x1),
								this["myIconBG"]["setVisible"](!0x0),
								this["myIconBG"]["setFrame"]("frameB.png")["setOrigin"](0.5);
						}
						["AssignCharacter"](_0xda65cf, _0x2c7ce0 = "") {
							var _0x147f60 = _0x5d9431,
								_0x3d62ab = _0x11010a[_0xda65cf];
							this["myCounter"]["setText"](_0x2c7ce0),
								this["Background"]["setTint"](0xffffff),
								(this["myName"]["text"] = _0x3d62ab["charName"]),
								this["myIcon"]["setTexture"]("characters", _0x3d62ab["spriteName"]),
								this["myDesc"]["setText"](_0x3d62ab["description"]),
								this["myTips"]["setText"](_0x3d62ab["tips"]),
								this["myOverlay"]["setVisible"](!0x1),
								this["myIconBG"]["setVisible"](!0x1);
						}
						["AssignAchievement"](_0x4ea752, _0x4321c3 = "") {
							var _0x5ea9b8 = _0x5d9431,
								_0x489fd5 = _0x5b281e[_0x4ea752];
							if (
								(this["myCounter"]["setText"](_0x4321c3),
								this["Background"]["setTint"](_0x489fd5["achieved"] ? 0xffffff : 0x888888),
								(this["myName"]["text"] = _0x489fd5["achieved"]
									? _0x2164b8["Lang"]["getLang"]("genericPopup_obtained")
									: ""),
								this["myDesc"]["setText"](_0x489fd5["description"]),
								_0x489fd5["weaponToUnlock"])
							) {
								var _0x165056 = _0x41a274[_0x489fd5["weaponToUnlock"]][0x0];
								this["myIcon"]
									["setTexture"](_0x165056["texture"], _0x165056["frameName"])
									["setOrigin"](0.5),
									this["myTips"]["setText"](
										(_0x489fd5["achieved"]
											? _0x2164b8["Lang"]["getLang"]("genericPopup_unlocked")
											: _0x2164b8["Lang"]["getLang"]("genericPopup_unlocks")) + _0x165056["name"]
									),
									this["myOverlay"]["setVisible"](!0x1),
									this["myIconBG"]["setVisible"](!0x0)["setFrame"]("frameB.png")["setOrigin"](0.5);
							}
							if (_0x489fd5["characterToUnlock"]) {
								var _0x22ad68 = _0x11010a[_0x489fd5["characterToUnlock"]][0x0];
								this["myIcon"]["setTexture"]("characters", _0x22ad68["spriteName"])["setOrigin"](0.5),
									this["myTips"]["setText"](
										(_0x489fd5["achieved"]
											? _0x2164b8["Lang"]["getLang"]("genericPopup_unlocked")
											: _0x2164b8["Lang"]["getLang"]("genericPopup_unlocks")) +
											(_0x22ad68["prefix"]
												? _0x22ad68["prefix"] + " " + _0x22ad68["charName"]
												: _0x22ad68["charName"])
									),
									this["myOverlay"]["setVisible"](!0x1),
									this["myIconBG"]["setVisible"](!0x1);
							}
							if (_0x489fd5["stageToUnlock"]) {
								let _0x43d8df = _0x117b45[_0x489fd5["stageToUnlock"]][0x0],
									_0x517ba6 = _0x43d8df["frameNameUnlock"]
										? _0x43d8df["frameNameUnlock"]
										: "QuestionMark.png";
								this["myIcon"]["setTexture"]("UI", _0x517ba6)["setOrigin"](0.5),
									this["myTips"]["setText"](
										(_0x489fd5["achieved"]
											? _0x2164b8["Lang"]["getLang"]("genericPopup_unlocked")
											: _0x2164b8["Lang"]["getLang"]("genericPopup_unlocks")) +
											_0x43d8df["stageName"]
									),
									this["myOverlay"]["setVisible"](!0x1),
									this["myIconBG"]["setVisible"](!0x1);
							}
							if (_0x489fd5["hyperToUnlock"]) {
								let _0x52ff20 = _0x117b45[_0x489fd5["hyperToUnlock"]][0x0],
									_0x55ed07 = _0x52ff20["frameName"] ? _0x52ff20["frameName"] : "QuestionMark.png";
								this["myIcon"]["setTexture"]("UI", _0x55ed07)["setOrigin"](0.5),
									this["myTips"]["setText"](
										_0x489fd5["achieved"]
											? _0x2164b8["Lang"]["getLang"]("genericPopup_unlockedHyper", [
													_0x52ff20["stageName"],
											  ])
											: _0x2164b8["Lang"]["getLang"]("genericPopup_unlocksHyper", [
													_0x52ff20["stageName"],
											  ])
									),
									this["myOverlay"]["setVisible"](!0x1),
									this["myIconBG"]["setVisible"](!0x1);
							}
							if (
								(_0x489fd5["goldPrize"] &&
									_0x489fd5["weaponIcon"] &&
									((_0x165056 = _0x41a274[_0x489fd5["weaponIcon"]][0x0]),
									this["myIcon"]
										["setTexture"]("items", _0x165056["frameName"])
										["setOrigin"](0.75, 0.5),
									this["myTips"]["setText"](
										_0x489fd5["achieved"]
											? _0x2164b8["Lang"]["getLang"]("genericPopup_obtainedCoin", [
													_0x489fd5["goldPrize"]["toFixed"](),
											  ])
											: _0x2164b8["Lang"]["getLang"]("genericPopup_obtainsCoin", [
													_0x489fd5["goldPrize"]["toFixed"](),
											  ])
									),
									this["myIconBG"]["setVisible"](!0x1),
									this["myOverlay"]["setVisible"](!0x0),
									this["myOverlay"]
										["setFrame"]("MoneyBagGreen.png")
										["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								_0x489fd5["powerUpToUnlock"])
							) {
								let _0x11a4cc = _0x4a95c8[_0x489fd5["powerUpToUnlock"]][0x0],
									_0xa9a4ec = _0x11a4cc["frameName"] ? _0x11a4cc["frameName"] : "QuestionMark.png";
								this["myIcon"]["setTexture"]("items", _0xa9a4ec)["setOrigin"](0.5),
									this["myTips"]["setText"](
										(_0x11a4cc["achieved"]
											? _0x2164b8["Lang"]["getLang"]("genericPopup_unlocked")
											: _0x2164b8["Lang"]["getLang"]("genericPopup_unlocks")) + _0x11a4cc["name"]
									),
									this["myOverlay"]["setVisible"](!0x1),
									this["myIconBG"]
										["setVisible"](!0x0)
										["setFrame"](_0x11a4cc["specialBG"] ? "frameE.png" : "frameD.png");
							}
						}
						["AssignData"](_0x494730, _0x3fa038, _0x2fefdd = "", _0x1ed26b = 0x0) {
							var _0x468881 = _0x5d9431,
								_0x472ddc;
							switch (_0x3fa038) {
								case "Weapon":
									_0x472ddc = _0x41a274[_0x494730][0x0];
									break;
								case "Character":
									_0x472ddc = _0x11010a[_0x494730][0x0];
									break;
								case "Item":
									_0x472ddc = _0x171870[_0x494730];
									break;
								case "Achievement":
									_0x472ddc = _0x5b281e[_0x494730];
									break;
								case "Stage":
									_0x472ddc = _0x117b45[_0x494730];
							}
							if (_0x472ddc) {
								if (
									(this["Background"]["setTint"](
										"Weapon" === _0x3fa038 && _0x472ddc["isEvolution"] ? 0xffff00 : 0xffffff
									),
									this["myIconBG"]["setVisible"]("Character" !== _0x3fa038),
									(this["myName"]["text"] = _0x472ddc["name"]),
									this["myIcon"]["setTexture"](_0x472ddc["texture"], _0x472ddc["frameName"]),
									this["myDesc"]["setText"](_0x472ddc["description"]),
									this["myTips"]["setText"](_0x472ddc["tips"]),
									this["myTips"]["setVisible"](_0x1ed26b <= 0x0),
									this["myCounter"]["setText"](_0x2fefdd),
									this["myNextLevel"]["setVisible"]("Weapon" === _0x3fa038),
									(this["myNextLevel"]["text"] =
										_0x1ed26b > 0x0
											? _0x2164b8["Lang"]["getLang"]("genericPopup_level") +
											  (0x1 + _0x1ed26b)["toString"]()
											: _0x2164b8["Lang"]["getLang"]("genericPopup_new")),
									this["myNextLevel"]["setTint"](_0x1ed26b > 0x0 ? 0xffffff : 0xffff00),
									"Weapon" === _0x3fa038 && _0x1ed26b > 0x0)
								) {
									const _0x5eed7f = _0x472ddc["isPowerUp"];
									_0x472ddc = _0x41a274[_0x494730][_0x1ed26b];
									const _0x4bec4c = _0x3dbd7f["ParseLevelUpInfo"](_0x472ddc, _0x5eed7f);
									this["myDesc"]["setText"](_0x4bec4c);
								}
								if (
									("Character" === _0x3fa038 &&
										((this["myName"]["text"] = _0x472ddc["charName"]),
										this["myIcon"]["setTexture"]("characters", _0x472ddc["spriteName"])),
									"Achievement" === _0x3fa038)
								) {
									if ((this["myNextLevel"]["setVisible"](!0x1), _0x472ddc["weaponToUnlock"])) {
										var _0x21c0f0 = _0x41a274[_0x472ddc["weaponToUnlock"]][0x0];
										(this["myName"]["text"] =
											_0x2164b8["Lang"]["getLang"]("genericPopup_achievement")),
											this["myIcon"]
												["setTexture"](_0x21c0f0["texture"], _0x21c0f0["frameName"])
												["setOrigin"](0.5),
											this["myTips"]["setText"](
												_0x2164b8["Lang"]["getLang"]("genericPopup_unlocked") +
													_0x21c0f0["name"]
											),
											this["myOverlay"]["setVisible"](!0x1),
											this["myIconBG"]
												["setVisible"](!0x0)
												["setFrame"]("frameB.png")
												["setOrigin"](0.5);
									}
									if (_0x472ddc["characterToUnlock"]) {
										var _0x300122 = _0x11010a[_0x472ddc["characterToUnlock"]][0x0];
										(this["myName"]["text"] =
											_0x2164b8["Lang"]["getLang"]("genericPopup_achievement")),
											this["myIcon"]
												["setTexture"]("characters", _0x300122["spriteName"])
												["setOrigin"](0.5),
											this["myTips"]["setText"](
												_0x2164b8["Lang"]["getLang"]("genericPopup_unlocked") +
													_0x300122["charName"]
											),
											this["myIconBG"]["setVisible"](!0x1),
											this["myOverlay"]["setVisible"](!0x1);
									}
									if (_0x472ddc["stageToUnlock"]) {
										let _0x43dce1 = _0x117b45[_0x472ddc["stageToUnlock"]][0x0];
										this["myName"]["text"] =
											_0x2164b8["Lang"]["getLang"]("genericPopup_achievement");
										let _0x8f7312 = _0x43dce1["frameNameUnlock"]
											? _0x43dce1["frameNameUnlock"]
											: "QuestionMark.png";
										this["myIcon"]["setTexture"]("UI", _0x8f7312)["setOrigin"](0.5),
											this["myTips"]["setText"](
												_0x2164b8["Lang"]["getLang"]("genericPopup_unlocked") +
													_0x43dce1["stageName"]
											),
											this["myIconBG"]["setVisible"](!0x1),
											this["myOverlay"]["setVisible"](!0x1);
									}
									if (_0x472ddc["hyperToUnlock"]) {
										let _0x2e604c = _0x117b45[_0x472ddc["hyperToUnlock"]][0x0];
										this["myName"]["text"] =
											_0x2164b8["Lang"]["getLang"]("genericPopup_achievement");
										let _0x2aeb49 = _0x2e604c["frameName"]
											? _0x2e604c["frameName"]
											: "QuestionMark.png";
										this["myIcon"]["setTexture"]("UI", _0x2aeb49)["setOrigin"](0.5),
											this["myTips"]["setText"](
												_0x2164b8["Lang"]["getLang"]("genericPopup_unlockedHyper", [
													_0x2e604c["stageName"],
												])
											),
											this["myIconBG"]["setVisible"](!0x1),
											this["myOverlay"]["setVisible"](!0x1);
									}
									if (
										(_0x472ddc["goldPrize"] &&
											_0x472ddc["weaponIcon"] &&
											((_0x21c0f0 = _0x41a274[_0x472ddc["weaponIcon"]][0x0]),
											(this["myName"]["text"] =
												_0x2164b8["Lang"]["getLang"]("genericPopup_achievement")),
											this["myIcon"]
												["setTexture"]("items", _0x21c0f0["frameName"])
												["setOrigin"](0.75, 0.5),
											this["myTips"]["setText"](
												_0x472ddc["achieved"]
													? _0x2164b8["Lang"]["getLang"]("genericPopup_obtainedCoin", [
															_0x472ddc["goldPrize"]["toFixed"](),
													  ])
													: _0x2164b8["Lang"]["getLang"]("genericPopup_obtainsCoin", [
															_0x472ddc["goldPrize"]["toFixed"](),
													  ])
											),
											this["myIconBG"]["setVisible"](!0x1),
											this["myOverlay"]["setVisible"](!0x0),
											this["myOverlay"]
												["setFrame"]("MoneyBagGreen.png")
												["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
										_0x472ddc["powerUpToUnlock"])
									) {
										let _0x80d038 = _0x4a95c8[_0x472ddc["powerUpToUnlock"]][0x0],
											_0x364925 = _0x80d038["frameName"]
												? _0x80d038["frameName"]
												: "QuestionMark.png";
										this["myIcon"]["setTexture"]("items", _0x364925)["setOrigin"](0.5),
											this["myTips"]["setText"](
												(_0x80d038["achieved"]
													? _0x2164b8["Lang"]["getLang"]("genericPopup_unlocked")
													: _0x2164b8["Lang"]["getLang"]("genericPopup_unlocks")) +
													_0x80d038["name"]
											),
											this["myOverlay"]["setVisible"](!0x1),
											this["myIconBG"]
												["setVisible"](!0x0)
												["setFrame"](_0x80d038["specialBG"] ? "frameE.png" : "frameD.png");
									}
								}
							}
						}
						["AssignStage"](_0x387679) {
							var _0x23617a = _0x5d9431,
								_0x41d504 = _0x117b45[_0x387679];
							(this["myName"]["text"] = _0x41d504["name"]),
								this["myDesc"]["setText"](_0x41d504["description"]),
								this["myIcon"]["setVisible"](!0x1),
								this["myIconBG"]["setVisible"](!0x1);
						}
					}
					const _0x48a6c7 = _0x3f5add;
					class _0x6683f9 {
						constructor(_0x3aa757, _0x5a5d35) {
							var _0xab1714 = _0x5d9431;
							(this["prizeType"] = _0x3aa757), (this["prizeEnum"] = _0x5a5d35);
						}
					}
					class _0x6bf905 extends Phaser["Scene"] {
						constructor() {
							var _0x29e521 = _0x5d9431;
							super({
								key: _0x53d8cd["UI_treasureScene"],
							}),
								(this["TopLeft"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["BottomRight"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["StripEnd"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["CoinsAward"] = 0x64),
								(this["CoinsTickerDisplay"] = 0x64),
								(this["prizes"] = new Array()),
								(this["AccumulatedWeaponPrizes"] = new Array()),
								(this["AccumulatedItemPrizes"] = new Array()),
								(this["AccumulatedCoinPrize"] = 0x0),
								(this["ribbons"] = new Array()),
								(this["ribbons2"] = new Array()),
								(this["prizeIcons"] = new Array()),
								(this["reels"] = new Array()),
								(this["QSEvent"] = null),
								(this["QSCounterDelay"] = 0x0),
								(this["updateTrail"] = !0x1),
								(this["updateTrail2"] = !0x1),
								(this["FollowConfig_Reel_Standard1"] = {
									duration: 0x7d0,
									positionOnPath: !0x1,
									repeat: -0x1,
									rotateToPath: !0x0,
									rotationOffset: 0x5a,
									ease: "Linear",
								}),
								(this["FollowConfig_Reel_Standard2"] = {
									duration: 0x7d0,
									positionOnPath: !0x1,
									repeat: -0x1,
									rotateToPath: !0x0,
									rotationOffset: 0x5a,
									ease: "Linear",
									delay: 0x3e8,
								}),
								(this["QSSeekTrack"] = 0x0),
								(this["hasSkipped"] = !0x1),
								(this["TextureNames"] = new Array());
						}
						["preload"]() {
							_0x2164b8["ApplyMenuResolution"]();
						}
						["create"]() {
							var _0x23f072 = _0x5d9431;
							(this["bubbles"] = new (class {
								constructor(_0x56abeb) {
									var _0x230614 = _0x23f072;
									(this["count"] = 0x1),
										(this["enabled"] = !0x1),
										(this["scene"] = _0x56abeb),
										(this["background"] = this["scene"]["add"]
											["image"](0x0, 0x0, "vfx", "Gradient2.png")
											["setScale"](
												this["scene"]["renderer"]["width"] / 0x20,
												this["scene"]["renderer"]["height"] / 0x20
											)
											["setTint"](0xffff00)
											["setScrollFactor"](0x0)
											["setAlpha"](0x0)
											["setOrigin"](0x0)),
										(this["background2"] = this["scene"]["add"]
											["image"](0x0, 0x0, "vfx", "Gradient2.png")
											["setScale"](
												this["scene"]["renderer"]["width"] / 0x20,
												this["scene"]["renderer"]["height"] / 0x20
											)
											["setTint"](0xffffff)
											["setScrollFactor"](0x0)
											["setAlpha"](0x0)
											["setOrigin"](0x0)
											["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])),
										(this["graphics"] = this["scene"]["add"]
											["graphics"]()
											["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
											["setScrollFactor"](0x0)),
										(this["shapes"] = new Array(0xf)
											["fill"](null)
											["map"](
												() =>
													new Phaser["Geom"]["Circle"](
														Phaser["Math"]["Between"](
															0x0,
															this["scene"]["renderer"]["width"]
														),
														Phaser["Math"]["Between"](
															0x0,
															this["scene"]["renderer"]["height"]
														),
														Phaser["Math"]["Between"](12.5, 37.5)
													)
											)),
										(this["rect"] = Phaser["Geom"]["Rectangle"]["Clone"](
											this["scene"]["cameras"]["main"]
										));
								}
								["Update"]() {
									var _0x389d1f = _0x23f072;
									this["enabled"] &&
										((this["count"] += 0.001),
										this["shapes"]["forEach"]((_0x162512, _0x5e2e1a) => {
											_0x162512["y"] -= 0xa * this["count"] + 0x1 * _0x5e2e1a;
										}),
										Phaser["Actions"]["WrapInRectangle"](this["shapes"], this["rect"], 0x48),
										this["Draw"]());
								}
								["Draw"]() {
									var _0x5e30fd = _0x23f072;
									this["graphics"]["clear"](),
										this["shapes"]["forEach"]((_0x8b070, _0x35fd25) => {
											var _0x111395 = _0x5e30fd;
											this["graphics"]
												["fillStyle"](this["Color"](_0x35fd25), 0.5)
												["fillCircleShape"](_0x8b070)
												["setScale"](0x1, 1.3);
										}, this);
								}
								["Color"](_0x49bff8) {
									return (_0x49bff8 % 0xf) * 0x111100 + (_0x49bff8 % 0x5) * 0x33;
								}
								["Show"](_0x443566 = 0x1770, _0x15e64e = 0xffff00) {
									var _0x3b7b69 = _0x23f072;
									(this["enabled"] = !0x0),
										this["background"]["setTint"](_0x15e64e),
										(this["showTween1"] = this["scene"]["tweens"]["add"]({
											targets: [this["graphics"]],
											alpha: 0x1,
											duration: 0x12c,
										})),
										(this["showTween2"] = this["scene"]["tweens"]["add"]({
											targets: [this["background"], this["background2"]],
											alpha: 0x1,
											duration: _0x443566,
										}));
								}
								["Hide"](_0x57b835 = 0x3e8) {
									var _0x3ed05f = _0x23f072;
									this["showTween1"]["complete"](),
										this["showTween2"]["complete"](),
										this["scene"]["tweens"]["add"]({
											targets: [this["graphics"]],
											alpha: 0x0,
											duration: 0x12c,
										}),
										this["scene"]["tweens"]["add"]({
											targets: [this["background"], this["background2"]],
											alpha: 0x0,
											duration: _0x57b835,
											onComplete: () => {
												this["enabled"] = !0x1;
											},
										});
								}
							})(this)),
								this["bubbles"]["graphics"]["setAlpha"](0x0),
								(this["hasSkipped"] = !0x1),
								(this["CoinsAward"] = 0x64),
								(this["prizes"] = new Array()),
								(this["AccumulatedWeaponPrizes"] = new Array()),
								(this["ribbons"] = new Array()),
								(this["prizeIcons"] = new Array()),
								(this["reels"] = new Array()),
								(this["AccumulatedCoinPrize"] = 0x0),
								(this["updateTrail"] = !0x1),
								(this["updateTrail2"] = !0x1),
								(this["_coinRT"] = new Array()),
								(this["_coinSprites"] = new Array());
							const _0x3de527 = [0x1e, 0x14, 0x18, 0xe];
							for (let _0x23efc7 = 0x0; _0x23efc7 < 0x4; _0x23efc7++) {
								var _0x6ee580 = this["make"]["renderTexture"]({
									x: -0x186a0,
									y: -0x186a0,
									width: 0x10,
									height: 0x10,
								});
								_0x6ee580["saveTexture"]("coinRT" + _0x23efc7), this["_coinRT"]["push"](_0x6ee580);
							}
							var _0x3c1e51 = this["anims"]["generateFrameNames"]("items", {
									start: 0x1,
									end: 0x4,
									zeroPad: 0x2,
									prefix: "coin-spin-gold_",
									suffix: ".png",
								}),
								_0x3e4325 = this["anims"]["generateFrameNames"]("items", {
									start: 0x1,
									end: 0x4,
									zeroPad: 0x2,
									prefix: "coin-spin-silver_",
									suffix: ".png",
								});
							for (let _0x869255 = 0x0; _0x869255 < 0x4; _0x869255++) {
								var _0x3d9cbc = this["add"]
									["sprite"](-0x186a0, -0x186a0, "items", "")
									["setOrigin"](0x0);
								_0x3d9cbc["anims"]["create"]({
									key: "spin",
									frames: _0x869255 < 0x2 ? _0x3c1e51 : _0x3e4325,
									frameRate: _0x3de527[_0x869255],
									repeat: -0x1,
								}),
								!global["anims_disabled"].value ? _0x3d9cbc["anims"]["play"]("spin") : '',
									this["_coinSprites"]["push"](_0x3d9cbc);
							}
							const _0x124a88 = this["anims"]["generateFrameNames"]("vfx", {
									start: 0x1,
									end: 0x6,
									zeroPad: 0x0,
									prefix: "Burst",
									suffix: ".png",
								}),
								_0x2c9956 = this["anims"]["generateFrameNames"]("UI", {
									start: 0x1,
									end: 0x8,
									zeroPad: 0x2,
									prefix: "TreasureIdle_",
									suffix: ".png",
								}),
								_0x374576 = this["anims"]["generateFrameNames"]("UI", {
									start: 0x1,
									end: 0x8,
									zeroPad: 0x2,
									prefix: "TreasureOpen_",
									suffix: ".png",
								}),
								_0x34f299 = this["anims"]["generateFrameNames"]("UI", {
									start: 0x1,
									end: 0x8,
									zeroPad: 0x2,
									prefix: "TreasureOpenFront_",
									suffix: ".png",
								});
							(this["OnEnterAnimation"] = this["add"]["sprite"](
								0.5 * this["renderer"]["width"],
								0.5 * this["renderer"]["width"],
								"vfx",
								"Burst1.png"
							)),
								this["OnEnterAnimation"]["anims"]["create"]({
									key: "enter",
									frames: _0x124a88,
									frameRate: 0x1e,
									repeat: 0x0,
								}),
								this["OnEnterAnimation"]
									["setVisible"](!0x0)
									["setScale"](0x8)
									["setDepth"](0x3e8)
									["setTint"](0xffff00)
									["setBlendMode"](_0x1cb257["BlendModes"]["ADD"]);
							var _0x19c7bc = 0.8 * _0x1499e1,
								_0x4f5f60 = 0.8 * _0x22d9a5;
							switch (
								((this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
									x: 0x0,
									y: 0x0,
									width: _0x19c7bc / 0x2,
									height: _0x4f5f60 / 0x2,
								})),
								this["background"]["setPosition"](
									0.5 * this["renderer"]["width"],
									0.5 * this["renderer"]["height"]
								),
								this["background"]["setOrigin"](0.5),
								this["background"]["setScale"](0x2 * _0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								(this["backgroundOverlay"] = new _0x5b4abe["NineSlice"](
									this,
									_0x395ea9["PanelBackgroundAdd"],
									{
										x: 0x0,
										y: 0x0,
										width: _0x19c7bc / 0x2,
										height: _0x4f5f60 / 0x2,
									}
								)),
								this["backgroundOverlay"]["setPosition"](
									0.5 * this["renderer"]["width"],
									0.5 * this["renderer"]["height"]
								),
								this["backgroundOverlay"]["setOrigin"](0.5),
								this["backgroundOverlay"]["setScale"](0x2 * _0x1fa5bb["PixelScale"]),
								this["backgroundOverlay"]["setAlpha"](0x0),
								this["backgroundOverlay"]["setBlendMode"](_0x1cb257["BlendModes"]["ADD"]),
								this["add"]["existing"](this["backgroundOverlay"]),
								(this["TopLeft"]["x"] =
									this["background"]["x"] - 0.5 * this["background"]["width"] * 0x2),
								(this["TopLeft"]["y"] =
									this["background"]["y"] - 0.5 * this["background"]["height"] * 0x2),
								(this["BottomRight"]["x"] =
									this["background"]["x"] + 0.5 * this["background"]["width"] * 0x2),
								(this["BottomRight"]["y"] =
									this["background"]["y"] + 0.5 * this["background"]["height"] * 0x2),
								(this["Chest"] = this["add"]
									["sprite"](
										0.5 * this["renderer"]["width"],
										this["BottomRight"]["y"] - 0x6e,
										"UI",
										"TreasureIdle_01.png"
									)
									["setOrigin"](0.5, 0x1)
									["setScale"](0x5)),
								(this["ChestFront"] = this["add"]
									["sprite"](this["Chest"]["x"], this["Chest"]["y"], "UI", "TreasureOpenFront_01.png")
									["setOrigin"](0.5, 0x1)
									["setScale"](0x5)),
								this["Chest"]["anims"]["create"]({
									key: "idle",
									frames: _0x2c9956,
									frameRate: 0xf,
									repeat: 0x0,
								}),
								this["Chest"]["anims"]["create"]({
									key: "open",
									frames: _0x374576,
									frameRate: 0x1e,
									repeat: 0x0,
								}),
								this["ChestFront"]["anims"]["create"]({
									key: "open",
									frames: _0x34f299,
									frameRate: 0x1e,
									repeat: 0x0,
								}),
								!global["anims_disabled"].value ? this["Chest"]["anims"]["play"]("idle") : '',
								(this["openButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: 0.5 * this["renderer"]["width"],
									y: this["BottomRight"]["y"] - 0x40,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](0x0)
									["setOrigin"](0.5, 0.5)
									["setAngle"](0xb4)),
								this["add"]["existing"](this["openButton"]),
								(this["header"] = new Phaser["GameObjects"]["Text"](
									this,
									0.5 * this["renderer"]["width"],
									this["TopLeft"]["y"] + 0x2d,
									_0x2164b8["Lang"]["getLang"]("treasure_header"),
									{}
								)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								(this["openText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["openButton"]["x"],
									this["openButton"]["y"],
									_0x2164b8["Lang"]["getLang"]("treasure_open"),
									{
										align: "center",
									}
								)
									["setScale"](0x0)
									["setOrigin"](0.5)
									["setAngle"](0xb4)),
								(this["tickerCounter"] = new Phaser["GameObjects"]["Text"](
									this,
									this["openButton"]["x"],
									this["openButton"]["y"],
									"999.99",
									{
										align: "center",
									}
								)
									["setScale"](0x0)
									["setOrigin"](0.5)
									["setVisible"](!0x1)),
								(this["counterRing"] = this["add"]
									["sprite"](
										this["tickerCounter"]["x"],
										this["tickerCounter"]["y"],
										"vfx",
										"sPFX_ring_64.png"
									)
									["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
									["setScale"](0x8)
									["setAlpha"](0.5)
									["setDepth"](0xc)
									["setVisible"](!0x1)),
								this["add"]["existing"](this["header"]),
								this["add"]["existing"](this["openText"]),
								this["add"]["existing"](this["tickerCounter"]),
								this["background"]["setScale"](-0.2, -0.1),
								this["background"]["setAngle"](0xb4),
								(this["OnEnterTween"] = this["tweens"]["add"]({
									targets: this["background"],
									scale: 0x2 * _0x1fa5bb["PixelScale"],
									angle: 0x0,
									duration: 0x96,
									ease: "Linear",
									yoyo: !0x1,
								})),
								this["OnEnterTween"]["restart"](),
								_0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"]
									? this["OnEnterAnimation"]["play"]("enter")
									: this["OnEnterAnimation"]["setVisible"](!0x1),
								this["time"]["addEvent"]({
									delay: 0x12c,
									callback: this["enableInput"],
									callbackScope: this,
									loop: !0x1,
								}),
								this["MakeMasks"](),
								(this["IdleTimer"] = this["time"]["addEvent"]({
									delay: 0xbb8,
									loop: !0x0,
									callback: () => !global["anims_disabled"].value ? this["Chest"]["anims"]["play"]("idle") : '',
								})),
								_0x2164b8["Core"]["CurrentTreasureLevel"])
							) {
								default:
								case 0x1:
									this["SetupTreasureLevel1"]();
									break;
								case 0x2:
									this["SetupTreasureLevel2"]();
									break;
								case 0x3:
									this["SetupTreasureLevel3"]();
							}
							this["LayerUp"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ThingFound"], {
									volume: 0.7,
								}),
								(this["escKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["ESC"]
								)),
								(this["CoinIcon"] = this["add"]
									["image"](0x0, 0x0, "items", "coin-spin-gold_01.png")
									["setScale"](0x0)
									["setVisible"](!0x1));
						}
						["SkipAnimation"](_0x3acde5) {
							var _0x4bbdbf = _0x5d9431,
								_0x3d5f06,
								_0x3a388b,
								_0x7ce875,
								_0x22be51,
								_0x54f42e,
								_0x593ab9;
							if (!this["hasSkipped"] && this["QSEvent"])
								try {
									(this["hasSkipped"] = !0x0),
										_0x2164b8["Sound"]["StopSound"](this["QS_SFX"]),
										_0x2164b8["Sound"]["PlaySound"](this["QS_SFX"], {
											volume: 0x1,
											seek: this["QSSeekTrack"],
										}),
										null === (_0x3d5f06 = this["QScoinsCounterTween"]) ||
											void 0x0 === _0x3d5f06 ||
											_0x3d5f06["complete"](this["QSCounterDelay"]),
										null === (_0x3a388b = this["QScoinsEmitterTimer"]) ||
											void 0x0 === _0x3a388b ||
											_0x3a388b["callback"](),
										null === (_0x7ce875 = this["QScoinsEmitterTimer"]) ||
											void 0x0 === _0x7ce875 ||
											_0x7ce875["destroy"](),
										null === (_0x22be51 = this["QSEvent"]) ||
											void 0x0 === _0x22be51 ||
											_0x22be51["callback"](),
										null === (_0x54f42e = this["QSEvent"]) ||
											void 0x0 === _0x54f42e ||
											_0x54f42e["destroy"](),
										this["QS_SFX"] === _0x522ca7["Treasure2"] &&
											(null === (_0x593ab9 = this["backgroundOverlay"]) ||
												void 0x0 === _0x593ab9 ||
												_0x593ab9["setVisible"](!0x1)),
										this["QSSecondEvent"] && (this["QSSecondEvent"]["timeScale"] = 0x3),
										(this["QSEvent"] = null);
								} catch (_0x13860f) {
									throw _0x13860f;
								}
						}
						["MakeUIGrid"]() {
							var _0x41b968 = _0x5d9431;
							let _0x3752cd = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x3752cd["MakeUIGrid"](0x1, 0x6, !0x1),
								_0x3752cd["UI_grid"]["SetContents"](0x0, 0x0, this["openButton"]),
								_0x3752cd["ToggleCursorsVisibility"](!0x1),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x3752cd),
								_0x3752cd["UI_grid"]["Deselect"](),
								(_0x3752cd["OnCancelCallback"] = () => {});
						}
						["MakePrizePairFromAvailablePowerUps"](_0x36eaef, _0x121e78) {
							var _0x4a3e59 = _0x5d9431,
								_0x5099ea,
								_0xbc946 = _0x36eaef;
							switch (
								(_0x36eaef === _0x49ae78["RANDOM"] &&
									(_0x36eaef = Phaser["Math"]["RND"]["pick"]([
										_0x49ae78["POWERUP"],
										_0x49ae78["EXISTING_ANY"],
									])),
								_0x36eaef)
							) {
								default:
								case _0x49ae78["FILLER"]:
									(_0x5099ea = _0x3bf2f1["COINBAG2"]), (_0xbc946 = _0x49ae78["FILLER"]);
									break;
								case _0x49ae78["POWERUP"]:
									(_0x5099ea = _0x2164b8["Core"]["LevelUpFactory"]["PullRemainingPowerUp"]()),
										(_0xbc946 = _0x49ae78["POWERUP"]),
										void 0x0 === _0x5099ea &&
											((_0x5099ea = _0x3bf2f1["COINBAG2"]), (_0xbc946 = _0x49ae78["FILLER"]));
									break;
								case _0x49ae78["EXISTING_WEAPON"]:
									(_0x5099ea = _0x2164b8["Core"]["LevelUpFactory"]["PullExistingRemainingWeapon"](
										!0x1
									)),
										(_0xbc946 = _0x49ae78["EXISTING_WEAPON"]),
										void 0x0 === _0x5099ea &&
											((_0x5099ea = _0x3bf2f1["COINBAG2"]), (_0xbc946 = _0x49ae78["FILLER"]));
									break;
								case _0x49ae78["EXISTING_ANY"]:
									(_0x5099ea = _0x2164b8["Core"]["LevelUpFactory"]["PullExistingRemainingWeapon"]()),
										(_0xbc946 = _0x49ae78["EXISTING_ANY"]),
										void 0x0 === _0x5099ea &&
											((_0x5099ea = _0x3bf2f1["COINBAG2"]), (_0xbc946 = _0x49ae78["FILLER"]));
									break;
								case _0x49ae78["EVOLUTION"]:
									(_0x5099ea = _0x2164b8["Core"]["LevelUpFactory"]["PullEvolution"]()),
										(_0xbc946 = _0x49ae78["EVOLUTION"]),
										void 0x0 === _0x5099ea &&
											((_0x5099ea =
												_0x2164b8["Core"]["LevelUpFactory"]["PullExistingRemainingWeapon"]()),
											(_0xbc946 = _0x49ae78["EXISTING_ANY"]),
											void 0x0 === _0x5099ea &&
												((_0x5099ea = _0x3bf2f1["COINBAG2"]),
												(_0xbc946 = _0x49ae78["FILLER"])));
									break;
								case _0x49ae78["FIXED"]:
									(_0x5099ea = _0x2164b8["Core"]["LevelUpFactory"]["PullExisting"](_0x121e78)),
										(_0xbc946 = _0x49ae78["FIXED"]),
										void 0x0 === _0x5099ea &&
											(_0x41a274[_0x121e78][0x0]["isEvolution"] &&
												_0x2164b8["Core"]["LevelUpFactory"]["GetSpecialWeapon"](_0x121e78) &&
												((_0x5099ea = _0x121e78), (_0xbc946 = _0x49ae78["FIXED"])),
											void 0x0 === _0x5099ea &&
												((_0x5099ea =
													_0x2164b8["Core"]["LevelUpFactory"][
														"PullExistingRemainingWeapon"
													]()),
												(_0xbc946 = _0x49ae78["EXISTING_ANY"]),
												void 0x0 === _0x5099ea &&
													((_0x5099ea = _0x3bf2f1["COINBAG2"]),
													(_0xbc946 = _0x49ae78["FILLER"]))));
							}
							return (
								_0xbc946 != _0x49ae78["FILLER"]
									? (this["AccumulatedWeaponPrizes"]["push"](_0x5099ea),
									  _0x2164b8["Core"]["LevelUpFactory"]["RemoveFromStore"](_0x5099ea))
									: _0xbc946 === _0x49ae78["FILLER"] &&
									  (this["AccumulatedCoinPrize"] += _0x171870[_0x3bf2f1["COINBAG2"]]["value"]),
								new _0x6683f9(_0xbc946, _0x5099ea)
							);
						}
						["OnSceneOver"]() {
							var _0x197b15 = _0x5d9431;
							for (
								let _0xf4d92a = 0x0;
								_0xf4d92a < this["AccumulatedWeaponPrizes"]["length"];
								_0xf4d92a++
							)
								_0x2164b8["Core"]["LevelWeaponUp"](this["AccumulatedWeaponPrizes"][_0xf4d92a], !0x1);
							for (let _0x1c67a7 = 0x0; _0x1c67a7 < this["AccumulatedItemPrizes"]["length"]; _0x1c67a7++)
								_0x2164b8["Core"]["MakePickup"](
									_0x2164b8["Core"]["Player"]["x"],
									_0x2164b8["Core"]["Player"]["y"],
									this["AccumulatedItemPrizes"][_0x1c67a7]
								);
							_0x2164b8["Core"]["PlayerOptions"]["AddCoins"](
								this["CoinsAward"] + this["AccumulatedCoinPrize"]
							),
								_0x2164b8["Core"]["MainUI"]["UpdateCoins"](),
								_0x2164b8["Core"]["Player"]["SetInvulForMilliSeconds"](0x3e8),
								_0x2164b8["Core"]["SceneManager"]["ResumeFromTreasureScene"]();
						}
						["MakePrize"](_0x12ba8a) {
							var _0x39eb70 = _0x5d9431;
							switch (((this["prizes"] = []), _0x12ba8a)) {
								default:
								case 0x1:
									(this["CoinsAward"] = Math["floor"](0x32 + 0x32 * Math["random"]())),
										(this["prizes"] = [
											this["MakePrizePairFromAvailablePowerUps"](
												_0x2164b8["Core"]["CurrentTreasureTypes"][0x0],
												_0x2164b8["Core"]["CurrentFixedTreasures"][0x0]
											),
										]);
									break;
								case 0x2:
									(this["CoinsAward"] = Math["floor"](0x64 + 0x64 * Math["random"]())),
										this["prizes"]["push"](
											this["MakePrizePairFromAvailablePowerUps"](
												_0x2164b8["Core"]["CurrentTreasureTypes"][0x0],
												_0x2164b8["Core"]["CurrentFixedTreasures"][0x0]
											)
										),
										this["prizes"]["push"](
											this["MakePrizePairFromAvailablePowerUps"](
												_0x2164b8["Core"]["CurrentTreasureTypes"][0x1],
												_0x2164b8["Core"]["CurrentFixedTreasures"][0x1]
											)
										),
										this["prizes"]["push"](
											this["MakePrizePairFromAvailablePowerUps"](
												_0x2164b8["Core"]["CurrentTreasureTypes"][0x2],
												_0x2164b8["Core"]["CurrentFixedTreasures"][0x2]
											)
										);
									break;
								case 0x3:
									(this["CoinsAward"] = Math["floor"](0xc8 + 0x64 * Math["random"]())),
										this["prizes"]["push"](
											this["MakePrizePairFromAvailablePowerUps"](
												_0x2164b8["Core"]["CurrentTreasureTypes"][0x0],
												_0x2164b8["Core"]["CurrentFixedTreasures"][0x0]
											)
										),
										this["prizes"]["push"](
											this["MakePrizePairFromAvailablePowerUps"](
												_0x2164b8["Core"]["CurrentTreasureTypes"][0x1],
												_0x2164b8["Core"]["CurrentFixedTreasures"][0x1]
											)
										),
										this["prizes"]["push"](
											this["MakePrizePairFromAvailablePowerUps"](
												_0x2164b8["Core"]["CurrentTreasureTypes"][0x2],
												_0x2164b8["Core"]["CurrentFixedTreasures"][0x2]
											)
										),
										this["prizes"]["push"](
											this["MakePrizePairFromAvailablePowerUps"](
												_0x2164b8["Core"]["CurrentTreasureTypes"][0x3],
												_0x2164b8["Core"]["CurrentFixedTreasures"][0x3]
											)
										),
										this["prizes"]["push"](
											this["MakePrizePairFromAvailablePowerUps"](
												_0x2164b8["Core"]["CurrentTreasureTypes"][0x4],
												_0x2164b8["Core"]["CurrentFixedTreasures"][0x4]
											)
										);
							}
						}
						["SetupTreasureLevel1"]() {
							var _0xea6583 = _0x5d9431;
							this["MakePrize"](0x1),
								this["MakeRibbons"](0x2, this["Chest"]["x"], this["Chest"]["y"] - 0x32, 0x5dc, -0x1),
								this["textures"]["removeKey"]("reel_1_blue_powerup"),
								this["textures"]["removeKey"]("reel_1_blue_powerup_empty");
							var _0x23d1f1 = new _0x2136fc();
							(_0x23d1f1["textureName"] = "reel_1_blue_powerup"),
								(_0x23d1f1["alpha"] = 0.5),
								(_0x23d1f1["color"] = 0xff),
								(_0x23d1f1["prizeType"] = this["prizes"][0x0]["prizeType"]),
								this["MakeReels"]([_0x23d1f1]),
								this["MakeCoinsEmitter"](0x1),
								this["MakeWinIcons"](),
								this["openButton"]["on"]("pointerdown", () => {
									var _0x1f5ef2 = _0xea6583;
									_0x2164b8["Sound"]["StopSound"](_0x522ca7["ThingFound"]),
										this["disableInput"](),
										this["openButton"]["removeAllListeners"](),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Treasure1"], {
											volume: 0x1,
										}),
										this["OpenChest"](),
										this["StartCounter"](0x1d4c),
										this["HideHeader"](),
										this["StartCoinsEmitters"](0x189c),
										this["StartRibbons"](),
										this["StartReels"](),
										this["bubbles"]["Show"](0x1770, 0x666600),
										(this["QSCounterDelay"] = 0x4b0),
										(this["QSSeekTrack"] = 6.3),
										(this["QS_SFX"] = _0x522ca7["Treasure1"]),
										(this["QSEvent"] = this["Delay"](0x189c, () => {
											var _0x1cdab3 = _0x1f5ef2;
											(this["hasSkipped"] = !0x0),
												this["StopReels"](),
												this["StopRibbons"](),
												this["StartPrizes"](),
												this["bubbles"]["Hide"](),
												this["escKey"]["removeAllListeners"](),
												(this["QSSecondEvent"] = this["Delay"](0x1770, () => {
													var _0x5a0c8a = _0x1cdab3;
													this["HideReels"](), this["MoveCounter"](), this["ShowOKButton"]();
												}));
										})),
										(_0x171870[_0x3bf2f1["STATS_TREASURE_1"]]["pickedupAmount"] >= 0x5 ||
											_0x171870[_0x3bf2f1["STATS_TREASURE_3"]]["pickedupAmount"] >= 0x1 ||
											_0x171870[_0x3bf2f1["TREASURE"]]["pickedupAmount"] >= 0x32) &&
											this["Delay"](0x384, () => {
												this["EnableQS"]();
											});
								});
						}
						["SetupTreasureLevel2"]() {
							var _0x3661c4 = _0x5d9431;
							this["MakePrize"](0x2),
								this["MakeRibbons"](0x6, this["Chest"]["x"], this["Chest"]["y"] - 0x32, 0x5dc, -0x1),
								this["MakeTextureNamesFromPrizes"]();
							var _0xaf6d8e = new _0x2136fc();
							(_0xaf6d8e["textureName"] = this["TextureNames"][0x0]),
								(_0xaf6d8e["alpha"] = 0.5),
								(_0xaf6d8e["color"] = 0x8800ff),
								(_0xaf6d8e["prizeType"] = this["prizes"][0x0]["prizeType"]);
							var _0x2990b6 = new _0x2136fc();
							(_0x2990b6["textureName"] = this["TextureNames"][0x2]),
								(_0x2990b6["alpha"] = 0.5),
								(_0x2990b6["color"] = 0xff00ff),
								(_0x2990b6["prizeType"] = this["prizes"][0x1]["prizeType"]);
							var _0x6bb0b = new _0x2136fc();
							(_0x6bb0b["textureName"] = this["TextureNames"][0x4]),
								(_0x6bb0b["alpha"] = 0.5),
								(_0x6bb0b["color"] = 0xff00ff),
								(_0x6bb0b["prizeType"] = this["prizes"][0x2]["prizeType"]),
								this["MakeReels"]([_0xaf6d8e, _0x2990b6, _0x6bb0b]),
								this["MakeCoinsEmitter"](0x2),
								this["MakeWinIcons"](),
								this["openButton"]["on"]("pointerdown", () => {
									var _0x3aef43 = _0x3661c4;
									_0x2164b8["Sound"]["StopSound"](_0x522ca7["ThingFound"]),
										this["disableInput"](),
										this["openButton"]["removeAllListeners"](),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Treasure2"], {
											volume: 0x1,
										}),
										this["OpenChest"](),
										this["StartCounter"](0x2af8),
										this["HideHeader"](),
										this["StartCoinsEmitters"](0x2af8),
										this["StartRibbons"](),
										this["StartReels"]([0x2]),
										this["Delay"](0x50, () => this["StartReels"]([0x0])),
										this["Delay"](0xa0, () => this["StartReels"]([0x1])),
										this["bubbles"]["Show"](0x25e4, 0xcccc00),
										this["tweens"]["add"]({
											targets: this["backgroundOverlay"],
											alpha: 0.7,
											duration: 0x25e4,
										}),
										(this["QSCounterDelay"] = 0x514),
										(this["QSSeekTrack"] = 9.7),
										(this["QS_SFX"] = _0x522ca7["Treasure2"]),
										(this["QSEvent"] = this["Delay"](0x25e4, () => {
											var _0x13e317 = _0x3aef43;
											(this["hasSkipped"] = !0x0),
												this["tweens"]["add"]({
													targets: this["backgroundOverlay"],
													alpha: 0x0,
													duration: 0x3e8,
												}),
												this["StopReels"](),
												this["StopRibbons"](),
												this["StartPrizes"](),
												this["bubbles"]["Hide"](),
												this["escKey"]["removeAllListeners"](),
												(this["QSSecondEvent"] = this["Delay"](0x1770, () => {
													var _0xd5d0e5 = _0x13e317;
													this["HideReels"](), this["MoveCounter"](), this["ShowOKButton"]();
												}));
										}));
								}),
								(_0x171870[_0x3bf2f1["STATS_TREASURE_1"]]["pickedupAmount"] >= 0x3 ||
									_0x171870[_0x3bf2f1["STATS_TREASURE_3"]]["pickedupAmount"] >= 0x1 ||
									_0x171870[_0x3bf2f1["TREASURE"]]["pickedupAmount"] >= 0x32) &&
									this["Delay"](0x708, () => {
										var _0x3dc5dd = _0x3661c4;
										this["EnableQS"]();
									});
						}
						["EnableQS"]() {
							var _0x384063 = _0x5d9431,
								_0x3221ef;
							this["input"]["on"](
								"pointerdown",
								function (_0x5565bf) {
									var _0x19657b = _0x384063;
									this["hasSkipped"]
										? this["input"]["gamepad"]["removeAllListeners"]()
										: (null == _0x5565bf ? void 0x0 : _0x5565bf["rightButtonDown"]()) &&
										  this["SkipAnimation"]("ms");
								},
								this
							),
								this["escKey"]["once"]("down", () => {
									var _0x20127e = _0x384063;
									this["hasSkipped"]
										? this["escKey"]["removeAllListeners"]()
										: this["SkipAnimation"]("kb");
								});
							try {
								if (
									null === (_0x3221ef = this["input"]["gamepad"]["pad1"]) || void 0x0 === _0x3221ef
										? void 0x0
										: _0x3221ef["connected"]
								) {
									if (this["hasSkipped"]) return;
									this["input"]["gamepad"]["pad1"],
										this["input"]["gamepad"]["on"](
											"down",
											function (_0xdda841, _0x28f23d, _0x67208b) {
												var _0x168604 = _0x384063;
												if (this["hasSkipped"])
													this["input"]["gamepad"]["removeAllListeners"]();
												else {
													if (0x1 === _0x28f23d["index"])
														try {
															this["SkipAnimation"]("pd");
														} catch (_0x3f76af) {
															throw _0x3f76af;
														}
												}
											},
											this
										);
								}
							} catch (_0x5b95e6) {
								throw _0x5b95e6;
							}
						}
						["MakeTextureNamesFromPrizes"]() {
							var _0x12b320 = _0x5d9431;
							this["TextureNames"] = new Array();
							for (let _0x39905f = 0x0; _0x39905f < this["prizes"]["length"]; _0x39905f++) {
								const _0x21e4e1 = this["prizes"][_0x39905f];
								this["TextureNames"]["push"](
									"reel" +
										(_0x39905f + 0x1) +
										"_" +
										_0x21e4e1["prizeType"]["toString"]() +
										"_" +
										_0x21e4e1["prizeEnum"]["toString"]()
								),
									this["TextureNames"]["push"](
										"reel" +
											(_0x39905f + 0x1) +
											"_" +
											_0x21e4e1["prizeType"]["toString"]() +
											"_" +
											_0x21e4e1["prizeEnum"]["toString"]() +
											"_empty"
									);
							}
							for (let _0x1e1c12 = 0x0; _0x1e1c12 < this["TextureNames"]["length"]; _0x1e1c12++)
								this["textures"]["removeKey"](this["TextureNames"][_0x1e1c12]);
						}
						["SetupTreasureLevel3"]() {
							var _0x37549d = _0x5d9431;
							this["MakePrize"](0x3), this["MakeTextureNamesFromPrizes"]();
							var _0x120441 = new _0x2136fc();
							(_0x120441["textureName"] = this["TextureNames"][0x0]),
								(_0x120441["alpha"] = 0.5),
								(_0x120441["color"] = 0xff0000),
								(_0x120441["prizeType"] = this["prizes"][0x0]["prizeType"]);
							var _0x4e889a = new _0x2136fc();
							(_0x4e889a["textureName"] = this["TextureNames"][0x2]),
								(_0x4e889a["alpha"] = 0.5),
								(_0x4e889a["color"] = 0xff8800),
								(_0x4e889a["prizeType"] = this["prizes"][0x1]["prizeType"]);
							var _0x56db00 = new _0x2136fc();
							(_0x56db00["textureName"] = this["TextureNames"][0x4]),
								(_0x56db00["alpha"] = 0.5),
								(_0x56db00["color"] = 0xff8800),
								(_0x56db00["prizeType"] = this["prizes"][0x2]["prizeType"]);
							var _0x829cb3 = new _0x2136fc();
							(_0x829cb3["textureName"] = this["TextureNames"][0x6]),
								(_0x829cb3["alpha"] = 0.5),
								(_0x829cb3["color"] = 0xffff00),
								(_0x829cb3["prizeType"] = this["prizes"][0x3]["prizeType"]);
							var _0x1b526c = new _0x2136fc();
							(_0x1b526c["textureName"] = this["TextureNames"][0x8]),
								(_0x1b526c["alpha"] = 0.5),
								(_0x1b526c["color"] = 0xffff00),
								(_0x1b526c["prizeType"] = this["prizes"][0x4]["prizeType"]),
								this["MakeReels"]([_0x120441, _0x4e889a, _0x56db00, _0x829cb3, _0x1b526c]),
								this["MakeRibbons"](0x8, this["Chest"]["x"], this["Chest"]["y"] - 0x32, 0x5dc, -0x1),
								this["MakeRibbonsLevel3"](),
								this["MakeCoinsEmitter"](0x3),
								this["MakeWinIcons"](),
								this["openButton"]["on"]("pointerdown", () => {
									var _0x582fd0 = _0x37549d;
									_0x2164b8["Sound"]["StopSound"](_0x522ca7["ThingFound"]),
										this["disableInput"](),
										this["openButton"]["removeAllListeners"](),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["Treasure3"], {
											volume: 1.1,
										}),
										this["StartFireworks"](),
										this["Delay"](0x640, () => {
											var _0x53780f = _0x582fd0;
											this["OpenChest"](),
												this["tweens"]["add"]({
													targets: this["backgroundOverlay"],
													alpha: 0x1,
													duration: 0x1e,
													yoyo: !0x0,
													onComplete: () => {
														var _0x396a7c = _0x53780f;
														this["tweens"]["add"]({
															targets: this["backgroundOverlay"],
															alpha: 0x1,
															duration: 0x1af4,
														});
													},
												}),
												this["StartCounter"](0x364c),
												this["HideHeader"](),
												this["StartCoinsEmitters"](0x3840),
												this["StartRibbons"](),
												this["StartReels"]([0x0, 0x1, 0x2]),
												this["bubbles"]["Show"](0x1450, 0xffff00),
												this["Delay"](0x1af4, () => {
													var _0x283df0 = _0x53780f;
													this["StartRibbons2"](),
														this["Delay"](0x3e8, () => {
															this["ribbons2"][0x0]["setMask"](this["UpperMask"]),
																this["ribbons2"][0x1]["setMask"](this["UpperMask"]);
														});
												}),
												this["Delay"](0x1edc, () => {
													var _0x28fd18 = _0x53780f;
													this["StartReels"]([0x3, 0x4]);
												}),
												this["Delay"](0x2f44, () => {
													var _0x5777e5 = _0x53780f;
													this["tweens"]["add"]({
														targets: this["backgroundOverlay"],
														alpha: 0x0,
														duration: 0x3e8,
													}),
														this["StopReels"](),
														this["StopRibbons"](),
														this["StartPrizes"](),
														this["bubbles"]["Hide"](),
														this["Delay"](0x1770, () => {
															var _0x3b5c8c = _0x5777e5;
															this["HideReels"](),
																this["MoveCounter"](),
																this["ShowOKButton"]();
														});
												});
										});
								});
						}
						["StartFireworks"]() {
							var _0x341cdf = _0x5d9431,
								_0x5fd10b = this["add"]["particles"]("vfx");
							this["fwEmitters"] = [];
							for (let _0x3ff999 = 0x0; _0x3ff999 < 0x5; _0x3ff999++)
								this["fwEmitters"]["push"](
									_0x5fd10b["createEmitter"]({
										frame: Phaser["Math"]["RND"]["pick"]([
											"PfxBlue.png",
											"PfxPink.png",
											"PfxPurple.png",
											"PfxBlue.png",
										]),
										x:
											this["Chest"]["x"] +
											(Math["random"]() - 0.5) * (0.5 * this["BottomRight"]["x"]),
										y: this["Chest"]["y"] - 0xe1 - (0x96 * Math["random"]()) / 0x2,
										lifespan: 0xbb8,
										rotate: {
											min: 0x0,
											max: 0x168,
										},
										angle: {
											start: 0x0,
											end: 0x168,
											steps: 0x10,
										},
										speed: {
											min: 0x64,
											max: 0x96 + ((_0x3ff999 / 0x5) * 0x12c) / 0x2,
										},
										quantity: 0x20 + (_0x3ff999 / 0x5) * 0x20,
										scale: {
											start: 0x2 + (_0x3ff999 / 0x5) * 0x2,
											end: 0x0,
										},
										frequency: 0x40,
										blendMode: "ADD",
										on: !0x1,
									})
								);
							_0x5fd10b["createGravityWell"]({
								x: this["Chest"]["x"],
								y: this["Chest"]["y"] - 0x64,
								power: 0x1,
								epsilon: 0x19,
								gravity: 0x96,
							});
							const _0x4b626b = [0x64, 0x190, 0x2bc, 0x3e8, 0x514];
							for (let _0x5d725b = 0x0; _0x5d725b < 0x5; _0x5d725b++)
								this["time"]["addEvent"]({
									delay: _0x4b626b[_0x5d725b],
									callback: () => {
										var _0x3c7e48 = _0x341cdf;
										this["tweens"]["add"]({
											targets: this["backgroundOverlay"],
											alpha: 0x1,
											yoyo: !0x0,
											duration: 0x1e,
											onUpdate: () => {
												this["fwEmitters"][_0x5d725b]["start"]();
											},
											onComplete: () => {
												var _0x1055a2 = _0x3c7e48;
												this["fwEmitters"][_0x5d725b]["stop"]();
											},
										});
									},
								});
						}
						["MakeRibbonsLevel3"]() {
							var _0xea8899 = _0x5d9431,
								_0x50f5e0 = [
									0x0, 0x0, 0x1c, -0xc, 0xb1, -0x45, 0x39, -0x69, -0x5a, -0x7c, 0x4c, -0xc7, 0x33,
									-0xf3,
								];
							this["ribbons2"] = new Array();
							for (let _0x301863 = 0x0; _0x301863 < 0x2; _0x301863++) {
								var _0x1d44ef = new _0x34ead4(
									this,
									0x0,
									0x0,
									this["TextureNames"][0x6],
									null,
									0x20,
									!0x1
								);
								this["add"]["existing"](_0x1d44ef);
								var _0x446585 = (this["BottomRight"]["y"] - this["TopLeft"]["y"]) / 0xf3 / 0x2,
									_0x3e99b3 = new Phaser["Curves"]["Spline"](_0x50f5e0);
								for (let _0x2e201f = 0x0; _0x2e201f < _0x3e99b3["points"]["length"]; _0x2e201f++) {
									const _0x393995 = _0x3e99b3["points"][_0x2e201f];
									(_0x393995["x"] *= _0x446585), (_0x393995["y"] *= _0x446585);
								}
								if (
									(_0x3e99b3["points"]["push"](
										new Phaser["Math"]["Vector2"](
											(this["Chest"]["x"] - this["TopLeft"]["x"]) / 0x2,
											(this["Chest"]["y"] - this["BottomRight"]["y"] - 0x32) / 0x2
										)
									),
									_0x301863 % 0x2 == 0x1)
								) {
									for (let _0xc41b7c = 0x0; _0xc41b7c < _0x3e99b3["points"]["length"]; _0xc41b7c++)
										_0x3e99b3["points"][_0xc41b7c]["x"] *= -0x1;
								}
								(_0x1d44ef["follower"] = this["add"]
									["follower"](_0x3e99b3, 0x0, 0x0)
									["setVisible"](!0x1)),
									(_0x1d44ef["followerConfig"] = {
										duration: 0x5dc,
										ease: "Sine.easeInOut",
									});
								const _0xa52e9c =
									_0x301863 % 0x2 == 0x0 ? this["TopLeft"]["x"] : this["BottomRight"]["x"];
								_0x1d44ef["setMask"](this["BGMask"])
									["setDepth"](0xd)
									["setVisible"](!0x1)
									["setScale"](0x2)
									["setPosition"](_0xa52e9c, this["BottomRight"]["y"])
									["resetPoints"](_0xa52e9c, this["BottomRight"]["y"]),
									this["ribbons2"]["push"](_0x1d44ef);
							}
						}
						["LayerUp"]() {
							var _0x43c21b = _0x5d9431;
							this["Chest"]["setDepth"](0x5),
								this["Pfx_Coin_Manager"]["setDepth"](0x6),
								this["Pfx_Coin_Manager2"]["setDepth"](0x6),
								this["Pfx_CoinFront_Manager"]["setDepth"](0x7),
								this["Pfx_CoinFront_Manager2"]["setDepth"](0x7);
							for (let _0x2bb486 = 0x0; _0x2bb486 < this["reels"]["length"]; _0x2bb486++)
								this["reels"][_0x2bb486]["SetDepth"](0x8);
							this["ChestFront"]["setDepth"](0xc);
						}
						["ShowOKButton"]() {
							var _0xf50367 = _0x5d9431;
							this["CyclePrizes"](),
								(this["openText"]["text"] = _0x2164b8["Lang"]["getLang"]("postGame_done1")),
								this["openButton"]["removeAllListeners"](),
								this["openButton"]["setInteractive"](),
								this["tweens"]["add"]({
									targets: [this["openText"], this["openButton"]],
									scale: 0x2 * _0x1fa5bb["PixelScale"],
									angle: 0x0,
									duration: 0x96,
									ease: "Linear",
									yoyo: !0x1,
								}),
								this["time"]["addEvent"]({
									delay: 0x96,
									callback: () => {
										var _0xe0a1a8 = _0xf50367;
										let _0x5e2521 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
										_0x5e2521["ToggleCursorsVisibility"](!0x0),
											_0x5e2521["UI_grid"]["SelectGameObject"](this["openButton"]),
											(_0x5e2521["UI_selected"] = this["openButton"]),
											this["openButton"]["on"]("pointerdown", () => {
												var _0x86ba04 = _0xe0a1a8;
												this["disableInput"](),
													this["DismissScene"](),
													this["openButton"]["removeAllListeners"]();
											});
									},
								});
						}
						["DismissScene"]() {
							var _0x222202 = _0x5d9431;
							this["time"]["addEvent"]({
								delay: 0x1f4,
								callback: () => {
									this["OnSceneOver"]();
								},
							}),
								this["HidePrizes"](),
								this["tweens"]["add"]({
									targets: [
										this["Chest"],
										this["ChestFront"],
										this["tickerCounter"],
										this["CoinIcon"],
									],
									scale: 0x0,
									alpha: 0x0,
									duration: 0x96,
								}),
								this["tweens"]["add"]({
									targets: this["background"],
									scaleX: -0.2,
									scaleY: -0.1,
									alpha: 0x0,
									angle: 0xb4,
									duration: 0x96,
								});
						}
						["MakeRibbons"](
							_0x21ccd7,
							_0x34e434,
							_0x34ee85,
							_0xc953b8 = 0x5dc,
							_0x469d75 = 0x2,
							_0x457b61 = 0x64
						) {
							var _0x269cfe = _0x5d9431;
							for (let _0x577013 = 0x0; _0x577013 < this["ribbons"]["length"]; _0x577013++) {
								const _0x1dca6d = this["ribbons"][_0x577013];
								this["children"]["remove"](_0x1dca6d);
							}
							this["ribbons"] = new Array();
							for (let _0x3c2487 = 0x0; _0x3c2487 < _0x21ccd7; _0x3c2487++) {
								var _0x222478 = new _0x34ead4(this, 0x0, 0x0, "vfx", "Ribbon1.png", 0x20, !0x1);
								this["add"]["existing"](_0x222478);
								var _0xdb469b = new Phaser["Curves"]["Spline"]([
									0x0, 0x0, 0x0, 0x0, 0x1c, -0x29, -0x17, -0x51, 0x1f, -0x8f, -0x21, -0xbd, -0x60,
									-0x9e, -0x51, -0x5f, 0x13, -0x49, 0x9d, -0xa9,
								]);
								for (let _0x6f52b2 = 0x0; _0x6f52b2 < _0xdb469b["points"]["length"]; _0x6f52b2++) {
									const _0x521895 = _0xdb469b["points"][_0x6f52b2];
									(_0x521895["x"] += 0x18 * (Math["random"]() - 0.5)),
										(_0x521895["x"] *= 0x4),
										(_0x521895["y"] *= 0x4);
								}
								if (_0x3c2487 % 0x2 == 0x0) {
									for (let _0x15779e = 0x0; _0x15779e < _0xdb469b["points"]["length"]; _0x15779e++)
										_0xdb469b["points"][_0x15779e]["x"] *= -0x1;
								}
								if (Math["random"]() > 0.5)
									for (let _0x5f0604 = 0x0; _0x5f0604 < _0xdb469b["points"]["length"]; _0x5f0604++) {
										const _0x29093c = _0xdb469b["points"][_0x5f0604];
										_0x3fbe95["RotateVectorByDegrees"](
											_0x29093c,
											Phaser["Math"]["RND"]["pick"]([0xa, -0xa]),
											_0x29093c
										);
									}
								(_0x222478["follower"] = this["add"]
									["follower"](_0xdb469b, 0x0, 0x0)
									["setVisible"](!0x1)),
									(_0x222478["followerConfig"] = {
										duration: _0xc953b8,
										yoyo: !0x0,
										repeat: -0x1,
										ease: "Sine.easeInOut",
										delay: _0x457b61 * _0x3c2487,
										startAt: 0x0,
									}),
									_0x222478["setMask"](this["UpperFreeMask"])
										["setScale"](Phaser["Math"]["RND"]["pick"]([0x1, 1.1, 1.2, 1.3, 0.9, 0.8, 0.7]))
										["setDepth"](Phaser["Math"]["RND"]["pick"]([0x7, 0x8, 0x9]))
										["setVisible"](!0x1)
										["setScale"](0.5)
										["setBlendMode"](_0x1cb257["BlendModes"]["ADD"])
										["setPosition"](_0x34e434, _0x34ee85)
										["resetPoints"](0x0, 0x0),
									this["ribbons"]["push"](_0x222478);
							}
						}
						["StartRibbons"]() {
							var _0xe97cfc = _0x5d9431;
							this["updateTrail"] = !0x0;
							for (let _0x376a07 = 0x0; _0x376a07 < this["ribbons"]["length"]; _0x376a07++) {
								const _0x116524 = this["ribbons"][_0x376a07];
								_0x116524["setVisible"](!0x0),
									_0x116524["follower"]["startFollow"](_0x116524["followerConfig"]);
							}
						}
						["StartRibbons2"]() {
							var _0x57cf89 = _0x5d9431;
							this["updateTrail2"] = !0x0;
							for (let _0x5cbad5 = 0x0; _0x5cbad5 < this["ribbons2"]["length"]; _0x5cbad5++) {
								const _0x5c69c8 = this["ribbons2"][_0x5cbad5];
								_0x5c69c8["setVisible"](!0x0),
									_0x5c69c8["follower"]["startFollow"](_0x5c69c8["followerConfig"]);
							}
							this["time"]["addEvent"]({
								delay: 0x0,
								callback: () => {
									var _0x3eea8f = _0x57cf89;
									this["tweens"]["add"]({
										targets: this["backgroundOverlay"],
										alpha: 0x0,
										yoyo: !0x0,
										duration: 0x12c,
										delay: 0x64,
									});
									for (let _0x1bb0c3 = 0x0; _0x1bb0c3 < this["fwEmitters"]["length"]; _0x1bb0c3++)
										this["fwEmitters"][_0x1bb0c3]["y"]["propertyValue"] += 0xc8;
									this["time"]["addEvent"]({
										delay: 0x1,
										repeat: 0x4,
										callback: () => {
											var _0x18692c = _0x3eea8f;
											for (
												let _0x4e2a1f = 0x0;
												_0x4e2a1f < this["fwEmitters"]["length"];
												_0x4e2a1f++
											)
												this["fwEmitters"][_0x4e2a1f]["start"]();
										},
									}),
										this["time"]["addEvent"]({
											delay: 0x3c,
											repeat: 0x8,
											callback: () => {
												var _0x177e97 = _0x3eea8f;
												for (
													let _0x2ec965 = 0x0;
													_0x2ec965 < this["fwEmitters"]["length"];
													_0x2ec965++
												)
													this["fwEmitters"][_0x2ec965]["stop"]();
											},
										});
								},
							});
						}
						["StopRibbons"]() {
							var _0x5914ea = _0x5d9431,
								_0x181dac = this["GetStopDelays"](),
								_0x95744d = Math["max"]["apply"](null, _0x181dac);
							for (let _0x4d8660 = 0x0; _0x4d8660 < this["ribbons"]["length"]; _0x4d8660++) {
								const _0x1621fc = this["ribbons"][_0x4d8660];
								this["tweens"]["add"]({
									targets: _0x1621fc,
									alpha: 0x0,
									duration: 0x64,
									delay: (_0x4d8660 / this["ribbons"]["length"]) * _0x95744d,
								});
							}
						}
						["MakeReels"](_0x5c40eb) {
							var _0x7528fc = _0x5d9431;
							for (let _0x571a4f = 0x0; _0x571a4f < this["reels"]["length"]; _0x571a4f++)
								this["reels"][_0x571a4f]["Nuke"]();
							(this["reels"] = new Array()),
								(this["StripEnd"]["x"] = 0x0),
								(this["StripEnd"]["y"] = -0x600);
							const _0x4685e7 = [0x0, 0x14, -0x14, 0x28, -0x28];
							for (let _0x4586fd = 0x0; _0x4586fd < _0x5c40eb["length"]; _0x4586fd++) {
								const _0x2b4ede = _0x5c40eb[_0x4586fd];
								var _0x45082a = new Phaser["Math"]["Vector2"](
										this["Chest"]["x"],
										this["Chest"]["y"] - 0xa
									),
									_0x40dba6 = new Phaser["Math"]["Vector2"](
										this["StripEnd"]["x"],
										this["StripEnd"]["y"]
									),
									_0x120a5e = _0x4685e7[_0x4586fd % _0x4685e7["length"]];
								0x0 != _0x120a5e &&
									_0x3fbe95["RotateVectorByDegrees"](this["StripEnd"], _0x120a5e, _0x40dba6),
									this["reels"]["push"](
										new _0x100d11(this, _0x2b4ede, _0x45082a, _0x40dba6, this["UpperMask"])
									);
							}
						}
						["StartReels"](_0x216d4a = []) {
							var _0x578637 = _0x5d9431;
							if (0x0 === _0x216d4a["length"]) {
								for (let _0x514cbf = 0x0; _0x514cbf < this["reels"]["length"]; _0x514cbf++)
									this["reels"][_0x514cbf]["Play"]();
							} else {
								for (let _0x387b8d = 0x0; _0x387b8d < _0x216d4a["length"]; _0x387b8d++)
									this["reels"][_0x216d4a[_0x387b8d]]["Play"]();
							}
						}
						["StopReels"]() {
							var _0x1ee40e = _0x5d9431,
								_0x100213 = this["GetStopDelays"]();
							for (let _0x1015ad = 0x0; _0x1015ad < this["reels"]["length"]; _0x1015ad++) {
								const _0x5be9f7 = this["reels"][_0x1015ad];
								this["time"]["addEvent"]({
									delay: _0x100213[_0x1015ad % this["prizeIcons"]["length"]],
									callback: () => {
										var _0x27bb41 = _0x1ee40e;
										_0x5be9f7["Stop"]();
									},
								});
							}
						}
						["HideReels"]() {
							var _0x673a03 = _0x5d9431;
							for (let _0x58bc7d = 0x0; _0x58bc7d < this["reels"]["length"]; _0x58bc7d++)
								this["reels"][_0x58bc7d]["Hide"]();
						}
						["MakeWinIcons"]() {
							var _0x245eca = _0x5d9431;
							const _0x1cd3c9 = [
								new Phaser["Math"]["Vector2"](this["Chest"]["x"], this["Chest"]["y"] - 0xfa),
								new Phaser["Math"]["Vector2"](this["Chest"]["x"] - 0x73, this["Chest"]["y"] - 0x145),
								new Phaser["Math"]["Vector2"](this["Chest"]["x"] + 0x73, this["Chest"]["y"] - 0x145),
								new Phaser["Math"]["Vector2"](this["Chest"]["x"] - 0x96, this["Chest"]["y"] - 0xbe),
								new Phaser["Math"]["Vector2"](this["Chest"]["x"] + 0x96, this["Chest"]["y"] - 0xbe),
							];
							for (let _0x310545 = 0x0; _0x310545 < this["prizes"]["length"]; _0x310545++) {
								const _0x39c8a1 = this["prizes"][_0x310545];
								var _0x466f6b = _0x171870["COINBAG2"];
								_0x39c8a1["prizeType"] === _0x49ae78["POWERUP"] ||
								_0x39c8a1["prizeType"] === _0x49ae78["EXISTING_WEAPON"] ||
								_0x39c8a1["prizeType"] === _0x49ae78["EXISTING_ANY"] ||
								_0x39c8a1["prizeType"] === _0x49ae78["FIXED"] ||
								_0x39c8a1["prizeType"] === _0x49ae78["EVOLUTION"]
									? (_0x466f6b = _0x41a274[_0x39c8a1["prizeEnum"]][0x0])
									: _0x39c8a1["prizeType"] === _0x49ae78["FILLER"] &&
									  (_0x466f6b = _0x171870[_0x39c8a1["prizeEnum"]]),
									this["prizeIcons"]["push"](
										new _0xd73702(
											this,
											_0x1cd3c9[_0x310545]["x"],
											_0x1cd3c9[_0x310545]["y"],
											_0x466f6b["frameName"]
										)
									);
							}
						}
						["GetStopDelays"]() {
							var _0x173d03 = _0x5d9431,
								_0x238de9;
							switch (this["prizeIcons"]["length"]) {
								default:
								case 0x1:
									_0x238de9 = [0x0];
									break;
								case 0x3:
									_0x238de9 = [0x258, 0x0, 0x12c];
									break;
								case 0x5:
									_0x238de9 = [0x258, 0x12c, 0x12c, 0x0, 0x0];
							}
							return _0x238de9;
						}
						["StartPrizes"]() {
							var _0x4efecc = _0x5d9431,
								_0x2c1e8e = this["GetStopDelays"]();
							for (let _0x5c8df8 = 0x0; _0x5c8df8 < this["prizeIcons"]["length"]; _0x5c8df8++) {
								const _0x517a89 = this["prizeIcons"][_0x5c8df8];
								this["time"]["addEvent"]({
									delay: _0x2c1e8e[_0x5c8df8 % this["prizeIcons"]["length"]],
									callback: () => {
										_0x517a89["Play"]();
									},
								});
							}
						}
						["HidePrizes"]() {
							var _0x5e1520 = _0x5d9431;
							for (let _0x1171e1 = 0x0; _0x1171e1 < this["prizeIcons"]["length"]; _0x1171e1++)
								this["prizeIcons"][_0x1171e1]["Hide"](0.5 * this["renderer"]["width"], 0x0);
						}
						["Delay"](_0x33ad0a, _0x527413) {
							var _0xe5ede7 = _0x5d9431;
							return this["time"]["addEvent"]({
								delay: _0x33ad0a,
								callback: () => {
									_0x527413();
								},
								callbackScope: this,
							});
						}
						["HideHeader"]() {
							var _0x1e8689 = _0x5d9431;
							this["tweens"]["add"]({
								targets: this["header"],
								scale: 0x0,
								duration: 0x12c,
							});
						}
						["StartCounter"](_0x321d53 = 0x1c84) {
							var _0x1f41e4 = _0x5d9431,
								_0x24f0d5,
								_0x24e67d;
							this["tickerCounter"]["setVisible"](!0x0),
								this["tweens"]["add"]({
									targets: [this["tickerCounter"], this["CoinIcon"]],
									scale: 0x2,
									duration: 0x12c,
								}),
								this["CoinIcon"]["setVisible"](!0x0);
							let _0x1bf335 = (
								null === (_0x24f0d5 = _0x2164b8["Core"]["Player"]) || void 0x0 === _0x24f0d5
									? void 0x0
									: _0x24f0d5["greed"]
							)
								? null === (_0x24e67d = _0x2164b8["Core"]["Player"]) || void 0x0 === _0x24e67d
									? void 0x0
									: _0x24e67d["greed"]
								: 0x1;
							const _0x48a534 = Math["ceil"](
								this["CoinsAward"] * _0x1fa5bb["GoldMultiplier"] * _0x1bf335
							);
							(this["CoinsTickerDisplay"] = 0x0),
								(this["QScoinsCounterTween"] = this["tweens"]["add"]({
									targets: this,
									CoinsTickerDisplay: _0x48a534,
									duration: _0x321d53,
									onUpdate: () => {
										var _0x5f1a7f = _0x1f41e4;
										this["tickerCounter"]["text"] = this["CoinsTickerDisplay"]["toFixed"](0x2);
									},
									onComplete: () => {
										var _0x5d3564 = _0x1f41e4;
										(this["tickerCounter"]["text"] = _0x48a534["toFixed"](0x2)),
											this["tickerCounter"]["setTint"](0xffff00),
											this["counterRing"]["setVisible"](!0x0),
											this["tweens"]["add"]({
												duration: 0x64,
												targets: this["counterRing"],
												scale: 0x0,
											}),
											this["tweens"]["add"]({
												duration: 0x3e8,
												targets: this["tickerCounter"],
												scale: 2.2,
												repeat: -0x1,
												yoyo: !0x0,
											});
									},
								}));
						}
						["MoveCounter"]() {
							var _0x38213a = _0x5d9431;
							this["tweens"]["add"]({
								duration: 0xfa,
								targets: this["tickerCounter"],
								scale: 0x0,
								onComplete: () => {
									var _0x2fce9b = _0x38213a;
									(this["tickerCounter"]["x"] = this["header"]["x"]),
										(this["tickerCounter"]["y"] = this["header"]["y"]),
										this["tweens"]["add"]({
											duration: 0xfa,
											targets: this["tickerCounter"],
											scale: 0x2,
										});
								},
							});
						}
						["AddSpriteFollower"](_0x1db3f6, _0x27cec5, _0x1af369, _0xa7a6d6) {
							var _0x374bd0 = _0x5d9431;
							return this["add"]
								["follower"](_0x1db3f6, _0x27cec5, _0x1af369, _0xa7a6d6)
								["setOrigin"](0.5, 0x0)
								["setScale"](0x2)
								["setMask"](this["UpperMask"]);
						}
						["MakeMasks"]() {
							var _0x4ce0ce = _0x5d9431;
							(this["UpperMask"] = _0x3fbe95["MakeRectangleMask"](
								this,
								this["TopLeft"]["x"] + 0xf,
								this["TopLeft"]["y"] + 0xf,
								0x2 * this["background"]["width"] - 0x1e,
								this["Chest"]["y"] - this["TopLeft"]["y"] - 0x46
							)),
								(this["UpperFreeMask"] = _0x3fbe95["MakeRectangleMask"](
									this,
									0x0,
									0x0,
									this["renderer"]["width"],
									this["Chest"]["y"] - 0x32
								)),
								(this["BGMask"] = _0x3fbe95["MakeRectangleMask"](
									this,
									this["TopLeft"]["x"] + 0xf,
									this["TopLeft"]["y"] + 0xf,
									0x2 * this["background"]["width"] - 0x1e,
									0x2 * this["background"]["height"] - 0x1e
								));
						}
						["OnButtonClicked"]() {
							var _0x58c38b = _0x5d9431;
							this["disableInput"]();
						}
						["OpenChest"]() {
							var _0x260b49 = _0x5d9431;
							this["time"]["removeEvent"](this["IdleTimer"]),
							!global["anims_disabled"].value ? this["Chest"]["anims"]["play"]("open") : '',
							!global["anims_disabled"].value ? this["ChestFront"]["anims"]["play"]("open") : '';
						}
						["enableInput"]() {
							var _0x464fe5 = _0x5d9431;
							this["MakeUIGrid"](),
								this["tweens"]["add"]({
									targets: [this["openText"], this["openButton"]],
									scale: 0x2 * _0x1fa5bb["PixelScale"],
									angle: 0x0,
									duration: 0x96,
									ease: "Linear",
									yoyo: !0x1,
								});
							let _0x4cd9ba = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x4cd9ba["ToggleCursorsVisibility"](!0x0),
								_0x4cd9ba["UI_grid"]["SelectGameObject"](this["openButton"]),
								(_0x4cd9ba["UI_selected"] = this["openButton"]),
								this["openButton"]["setInteractive"]();
						}
						["disableInput"]() {
							var _0x48e6a1 = _0x5d9431;
							this["openButton"]["removeInteractive"]();
							let _0x15168a = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x15168a["ToggleCursorsVisibility"](!0x1),
								_0x15168a["UI_grid"]["Deselect"](),
								this["tweens"]["add"]({
									targets: [this["openText"], this["openButton"]],
									scale: 0x0,
									angle: -0xb4,
									duration: 0x96,
									ease: "Linear",
									yoyo: !0x1,
								});
						}
						["customAngle"](_0x58ffb2, _0x511312, _0x1ef90a) {
							return _0x58ffb2["angle"] + 0x5;
						}
						["onEmitcustomAngle"](_0x3a7c54, _0x3a92de, _0x5de179) {
							var _0x5f15ff = _0x5d9431;
							return 0x168 * Math["random"]();
						}
						["MakeCoinsEmitter"](_0x178c5f) {
							var _0x25c41b = _0x5d9431;
							_0x178c5f--;
							var _0x3d7bbf = this["Chest"]["x"],
								_0x36ed88 = this["Chest"]["y"] - 0xa,
								_0x273ff5 = [0x64, 0x32, 0x19, 0xc8, 0x64, 0x32];
							(this["Pfx_Coin_Manager"] = this["add"]["particles"]("coinRT0")),
								(this["Pfx_Coin"] = this["Pfx_Coin_Manager"]["createEmitter"]({
									x: _0x3d7bbf,
									y: _0x36ed88 - 0x14,
									lifespan: 0xfa0,
									rotate: {
										onEmit: (_0x25c6d0, _0x44c8bb, _0x3cb14b) =>
											this["onEmitcustomAngle"](_0x25c6d0, _0x44c8bb, _0x3cb14b),
										onUpdate: (_0x15a8e7, _0x224300, _0x332688) =>
											this["customAngle"](_0x15a8e7, _0x224300, _0x332688),
									},
									angle: {
										min: 0xe1,
										max: 0x13b,
									},
									speed: {
										min: 0x1c2,
										max: 0x258,
									},
									scale: {
										start: 0x2 * _0x1fa5bb["PixelScale"],
										end: _0x1fa5bb["PixelScale"],
									},
									gravityY: 0x1f4,
									bounce: 0.9,
									bounds: {
										x: 0x0,
										y: 0x0,
										w: this["renderer"]["width"],
										h: 0x0,
									},
									collideTop: !0x1,
									collideBottom: !0x1,
									frequency: 0x2 * _0x273ff5[_0x178c5f],
									on: !0x1,
								})),
								(this["Pfx_Coin_Manager2"] = this["add"]["particles"]("coinRT1")),
								(this["Pfx_Coin2"] = this["Pfx_Coin_Manager2"]["createEmitter"]({
									x: _0x3d7bbf,
									y: _0x36ed88 - 0x14,
									lifespan: 0xfa0,
									rotate: {
										onEmit: (_0x29be3a, _0x2cd66b, _0x5cec45) =>
											this["onEmitcustomAngle"](_0x29be3a, _0x2cd66b, _0x5cec45),
										onUpdate: (_0x5d5ff5, _0x1bec45, _0x5aa126) =>
											this["customAngle"](_0x5d5ff5, _0x1bec45, _0x5aa126),
									},
									angle: {
										min: 0xe1,
										max: 0x13b,
									},
									speed: {
										min: 0x1c2,
										max: 0x258,
									},
									scale: {
										start: 0x2 * _0x1fa5bb["PixelScale"],
										end: _0x1fa5bb["PixelScale"],
									},
									gravityY: 0x1f4,
									bounce: 0.9,
									bounds: {
										x: 0x0,
										y: 0x0,
										w: this["renderer"]["width"],
										h: 0x0,
									},
									collideTop: !0x1,
									collideBottom: !0x1,
									frequency: 0x2 * _0x273ff5[_0x178c5f],
									on: !0x1,
								})),
								(this["Pfx_CoinFront_Manager"] = this["add"]["particles"]("coinRT2")),
								(this["Pfx_CoinFront"] = this["Pfx_CoinFront_Manager"]["createEmitter"]({
									x: _0x3d7bbf,
									y: _0x36ed88 - 0x14,
									lifespan: 0xfa0,
									rotate: {
										onEmit: (_0x44a8c8, _0x558844, _0x489f2d) =>
											this["onEmitcustomAngle"](_0x44a8c8, _0x558844, _0x489f2d),
										onUpdate: (_0x29979b, _0x3b31c0, _0x34cb5b) =>
											this["customAngle"](_0x29979b, _0x3b31c0, _0x34cb5b),
									},
									angle: {
										min: 0xe1,
										max: 0x13b,
									},
									speed: {
										min: 0x1c2,
										max: 0x258,
									},
									scale: {
										start: 0x2 * _0x1fa5bb["PixelScale"],
										end: 2.1 * _0x1fa5bb["PixelScale"],
									},
									gravityY: 0x1f4,
									bounce: 0.9,
									bounds: {
										x: 0x0,
										y: 0x0,
										w: this["renderer"]["width"],
										h: 0x0,
									},
									collideTop: !0x1,
									collideBottom: !0x1,
									frequency: 0x2 * _0x273ff5[_0x178c5f + 0x3],
									on: !0x1,
								})),
								(this["Pfx_CoinFront_Manager2"] = this["add"]["particles"]("coinRT3")),
								(this["Pfx_CoinFront2"] = this["Pfx_CoinFront_Manager2"]["createEmitter"]({
									x: _0x3d7bbf,
									y: _0x36ed88 - 0x14,
									lifespan: 0xfa0,
									rotate: {
										onEmit: (_0x1b1dcd, _0x2db54e, _0x254ee7) =>
											this["onEmitcustomAngle"](_0x1b1dcd, _0x2db54e, _0x254ee7),
										onUpdate: (_0x5219a9, _0x5cd6d2, _0xbbe39a) =>
											this["customAngle"](_0x5219a9, _0x5cd6d2, _0xbbe39a),
									},
									angle: {
										min: 0xe1,
										max: 0x13b,
									},
									speed: {
										min: 0x1c2,
										max: 0x258,
									},
									scale: {
										start: 0x2 * _0x1fa5bb["PixelScale"],
										end: 2.1 * _0x1fa5bb["PixelScale"],
									},
									gravityY: 0x1f4,
									bounce: 0.9,
									bounds: {
										x: 0x0,
										y: 0x0,
										w: this["renderer"]["width"],
										h: 0x0,
									},
									collideTop: !0x1,
									collideBottom: !0x1,
									frequency: 0x2 * _0x273ff5[_0x178c5f + 0x3],
									on: !0x1,
								}));
						}
						["StartCoinsEmitters"](_0xd6ec22 = 0x189c) {
							var _0x57a0ea = _0x5d9431;
							this["Pfx_Coin"]["start"](),
								this["Pfx_CoinFront"]["start"](),
								this["Pfx_Coin2"]["start"](),
								this["Pfx_CoinFront2"]["start"](),
								(this["QScoinsEmitterTimer"] = this["time"]["addEvent"]({
									delay: _0xd6ec22,
									callback: () => {
										var _0x2b5941 = _0x57a0ea;
										this["Pfx_Coin"]["stop"](),
											this["Pfx_CoinFront"]["stop"](),
											this["Pfx_Coin2"]["stop"](),
											this["Pfx_CoinFront2"]["stop"]();
									},
								}));
						}
						["CyclePrizes"]() {
							var _0x7c1f42 = _0x5d9431,
								_0xd017f0 = new Array();
							for (
								let _0x3e071f = 0x0;
								_0x3e071f < this["AccumulatedWeaponPrizes"]["length"];
								_0x3e071f++
							) {
								const _0x10b058 = this["AccumulatedWeaponPrizes"][_0x3e071f];
								((_0x28c1ea = new _0x45380b())["dataKey"] = _0x10b058),
									(_0x28c1ea["dataType"] = "Weapon"),
									_0xd017f0["push"](_0x28c1ea);
							}
							for (
								let _0xbca004 = 0x0;
								_0xbca004 < this["AccumulatedItemPrizes"]["length"];
								_0xbca004++
							) {
								const _0x1c8a20 = this["AccumulatedItemPrizes"][_0xbca004];
								var _0x28c1ea;
								((_0x28c1ea = new _0x45380b())["dataKey"] = _0x1c8a20),
									(_0x28c1ea["dataType"] = "Item"),
									_0xd017f0["push"](_0x28c1ea);
							}
							(this["achievementsPopup"] = new _0x48a6c7(this, 0x0, 0x0)),
								this["achievementsPopup"]["setPosition"](
									0.5 * this["renderer"]["width"] - 0.5 * this["achievementsPopup"]["displayWidth"],
									this["renderer"]["height"] -
										this["achievementsPopup"]["height"] * _0x1fa5bb["PixelScale"]
								),
								this["add"]["existing"](this["achievementsPopup"]);
							const _0x594027 = _0xd017f0["length"];
							var _0x55dc35 = 0x0;
							const _0x4332fe = () => {
								var _0x312d76 = _0x7c1f42;
								const _0x1b6533 = _0xd017f0[_0x55dc35 % _0x594027];
								var _0x309499 = 0x0;
								if ("Weapon" === _0x1b6533["dataType"]) {
									var _0x471111 = this["findWeaponLevel"](_0x1b6533["dataKey"]);
									for (let _0x112527 = 0x0; _0x112527 < _0x55dc35 % _0x594027; _0x112527++) {
										var _0x1faeec = _0xd017f0[_0x112527];
										"Weapon" === _0x1faeec["dataType"] &&
											_0x1faeec["dataKey"] === _0x1b6533["dataKey"] &&
											_0x309499++;
									}
									_0x309499 += _0x471111;
								}
								this["achievementsPopup"]["AssignData"](
									_0x1b6533["dataKey"],
									_0x1b6533["dataType"],
									_0x594027 > 0x1 ? 0x1 + (_0x55dc35 % _0x594027) + "/" + _0x594027 : "",
									_0x309499
								),
									this["achievementsPopup"]["Show"](),
									_0x55dc35++,
									this["time"]["addEvent"]({
										delay: 0x1194,
										callback: () => {
											var _0x1ff4ac = _0x312d76;
											this["achievementsPopup"]["Hide"]();
										},
									});
							};
							_0x594027 > 0x0 &&
								(_0x4332fe(),
								_0x594027 > 0x1 &&
									this["time"]["addEvent"]({
										delay: 0x1388,
										callback: () => {
											_0x4332fe();
										},
										repeat: _0x594027 - 0x2,
									}));
						}
						["findWeaponLevel"](_0x115b11) {
							var _0x27bbf7 = _0x5d9431,
								_0x39fe43 = _0x2164b8["Core"]["Weapons"]["find"](
									(_0x4d62f8) => _0x4d62f8["bulletType"] === _0x115b11
								);
							return _0x39fe43 ? _0x39fe43["level"] : 0x0;
						}
						["update"]() {
							var _0xb378b3 = _0x5d9431;
							for (let _0xcbffc5 = 0x0; _0xcbffc5 < this["_coinRT"]["length"]; _0xcbffc5++) {
								const _0x230471 = this["_coinRT"][_0xcbffc5];
								_0x230471["clear"](), _0x230471["draw"](this["_coinSprites"][_0xcbffc5], 0x0, 0x0);
							}
							if ((this["bubbles"]["Update"](), this["updateTrail"])) {
								for (let _0x53d72d = 0x0; _0x53d72d < this["ribbons"]["length"]; _0x53d72d++)
									this["ribbons"][_0x53d72d]["trailUpdate"]();
							}
							if (this["updateTrail2"]) {
								for (let _0x202900 = 0x0; _0x202900 < this["ribbons2"]["length"]; _0x202900++)
									this["ribbons2"][_0x202900]["trailUpdate"]();
							}
							(this["CoinIcon"]["x"] =
								this["tickerCounter"]["x"] + 0.5 * this["tickerCounter"]["displayWidth"] + 0x10),
								(this["CoinIcon"]["y"] = this["tickerCounter"]["y"]);
						}
					}
					class _0x5a7163 {}
					class _0x5057fc extends Phaser["Scene"] {
						constructor() {
							var _0x393040 = _0x5d9431;
							super({
								key: _0x53d8cd["PostGameScene"],
							}),
								(this["fillScale"] = 0x1),
								(this["TopLeft"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["achievements"] = new Array()),
								(this["isShowingStats"] = !0x0),
								(this["icons_container_defaultY"] = 0x0);
						}
						["preload"]() {
							var _0x42923f = _0x5d9431;
							_0x2164b8["ApplyMenuResolution"](),
								(this["survivedTime"] = {
									text: null,
									value: null,
								}),
								(this["obtainedGold"] = {
									text: null,
									value: null,
								}),
								(this["enemiesDefeated"] = {
									text: null,
									value: null,
								}),
								(this["levelReached"] = {
									text: null,
									value: null,
								}),
								(this["powerUps"] = new Array()),
								(this["achievements"] = new Array());
						}
						["create"]() {
							var _0x1a4e45 = _0x5d9431,
								_0x29cd79,
								_0xda0186;
							(_0x2164b8["Core"]["PlayerOptions"]["LifetimeSurvived"] +=
								_0x2164b8["Core"]["SurvivedSeconds"]),
								(this["isShowingStats"] = !0x1),
								(this["RedBackground"] = this["add"]["image"](
									0.5 * this["renderer"]["width"],
									0.5 * this["renderer"]["height"],
									"introBG"
								)),
								(this["fillScale"] = this["renderer"]["height"] / this["RedBackground"]["height"]),
								this["RedBackground"]["setScale"](0x5 * this["fillScale"], 0x5 * this["fillScale"]);
							var _0x19a98b = (0.8 * this["renderer"]["width"]) / _0x1fa5bb["PixelScale"],
								_0x2a0bc7 = (0.8 * _0x2bef3a["height"]) / _0x1fa5bb["PixelScale"];
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x19a98b,
								height: _0x2a0bc7,
							})),
								this["background"]["setPosition"](
									0.5 * this["renderer"]["width"],
									0.5 * this["renderer"]["height"]
								),
								this["background"]["setOrigin"](0.5),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								(this["TopLeft"]["x"] =
									this["background"]["x"] -
									0.5 * this["background"]["width"] * _0x1fa5bb["PixelScale"]),
								(this["TopLeft"]["y"] =
									this["background"]["y"] -
									0.5 * this["background"]["height"] * _0x1fa5bb["PixelScale"]);
							var _0x5f3862 = this["background"]["x"] * _0x1fa5bb["PixelScale"];
							(this["header"] = new Phaser["GameObjects"]["Text"](
								this,
								0.5 * this["renderer"]["width"],
								this["TopLeft"]["y"] + 0x28,
								_0x2164b8["Lang"]["getLang"]("postGame_header"),
								{}
							)
								["setScale"](0x2 * _0x1fa5bb["PixelScale"])
								["setOrigin"](0.5)),
								this["add"]["existing"](this["header"]);
							const _0x1855f9 = 0x18;
							(this["divider"] = new Phaser["GameObjects"]["Image"](
								this,
								0.5 * this["renderer"]["width"],
								0x60 + this["TopLeft"]["y"],
								"UI",
								"whiteDot.png"
							)
								["setScale"](0x1, 0.75 * _0x2a0bc7)
								["setOrigin"](0.5, 0x0)),
								this["add"]["existing"](this["divider"]),
								_0x2164b8["Core"]["PlayerOptions"]["LifetimeSurvived"];
							let _0x3322a5 =
								_0x117b45[_0x2164b8["Core"]["PlayerOptions"]["SelectedStage"]][0x0]["stageName"];
							(_0x3322a5 += _0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"]
								? _0x2164b8["Lang"]["getLang"]("postGame_hyper", [
										_0x1fa5bb["GoldMultiplier"]["toString"](),
								  ])
								: _0x2164b8["Lang"]["getLang"]("postGame_normal", [
										_0x1fa5bb["GoldMultiplier"]["toString"](),
								  ])),
								this["add"]
									["text"](
										0.5 * this["renderer"]["width"] - 0.25 * this["background"]["width"],
										0x48 + this["TopLeft"]["y"],
										_0x3322a5,
										{}
									)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setTint"](0xffff00)
									["setOrigin"](0.5);
							var _0xb5b77b =
								_0x2164b8["Core"]["SurvivedSeconds"] >= 0x708
									? _0x2164b8["Lang"]["getLang"]("postGame_survivedTime", [
											_0x5a261c["FormatTime"](_0x2164b8["Core"]["SurvivedSeconds"]),
									  ])
									: _0x5a261c["FormatTime"](_0x2164b8["Core"]["SurvivedSeconds"]);
							(this["survivedTime"]["text"] = this["add"]
								["text"](
									_0x1855f9 + this["TopLeft"]["x"],
									0x60 + this["TopLeft"]["y"],
									_0x2164b8["Lang"]["getLang"]("postGame_survived"),
									{}
								)
								["setScale"](_0x1fa5bb["PixelScale"])),
								(this["survivedTime"]["value"] = this["add"]
									["text"](_0x5f3862 - _0x1855f9, 0x60 + this["TopLeft"]["y"], _0xb5b77b, {
										align: "right",
									})
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0x1, 0x0)),
								(this["obtainedGold"]["text"] = this["add"]
									["text"](
										_0x1855f9 + this["TopLeft"]["x"],
										0x78 + this["TopLeft"]["y"],
										_0x2164b8["Lang"]["getLang"]("postGame_goldEarned"),
										{}
									)
									["setScale"](_0x1fa5bb["PixelScale"])),
								(this["obtainedGold"]["value"] = this["add"]
									["text"](
										_0x5f3862 - _0x1855f9,
										0x78 + this["TopLeft"]["y"],
										Math["ceil"](_0x2164b8["Core"]["PlayerOptions"]["RunCoins"])["toString"](),
										{
											align: "right",
										}
									)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0x1, 0x0)),
								(this["levelReached"]["text"] = this["add"]
									["text"](
										_0x1855f9 + this["TopLeft"]["x"],
										0x90 + this["TopLeft"]["y"],
										_0x2164b8["Lang"]["getLang"]("postGame_levelReached"),
										{}
									)
									["setScale"](_0x1fa5bb["PixelScale"])),
								(this["levelReached"]["value"] = this["add"]
									["text"](
										_0x5f3862 - _0x1855f9,
										0x90 + this["TopLeft"]["y"],
										null === (_0x29cd79 = _0x2164b8["Core"]["Player"]) || void 0x0 === _0x29cd79
											? void 0x0
											: _0x29cd79["level"]["toString"](),
										{
											align: "right",
										}
									)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0x1, 0x0)),
								(this["enemiesDefeated"]["text"] = this["add"]
									["text"](
										_0x1855f9 + this["TopLeft"]["x"],
										0xa8 + this["TopLeft"]["y"],
										_0x2164b8["Lang"]["getLang"]("postGame_enemiesDefeated"),
										{}
									)
									["setScale"](_0x1fa5bb["PixelScale"])),
								(this["enemiesDefeated"]["value"] = this["add"]
									["text"](
										_0x5f3862 - _0x1855f9,
										0xa8 + this["TopLeft"]["y"],
										null === (_0xda0186 = _0x2164b8["Core"]["PlayerOptions"]["RunEnemies"]) ||
											void 0x0 === _0xda0186
											? void 0x0
											: _0xda0186["toString"](),
										{
											align: "right",
										}
									)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0x1, 0x0)),
								_0x2164b8["Core"]["SurvivedSeconds"] >= 0x708 &&
									this["survivedTime"]["value"]["setTint"](0xffff00);
							var _0xed4fbd = 0.5 * this["renderer"]["width"] + 0.25 * this["background"]["width"],
								_0x4bbebb = _0x11010a[_0x2164b8["Core"]["Player"]["characterType"]][0x0];
							let _0x28aba5 =
								(_0x4bbebb["prefix"] ? _0x4bbebb["prefix"] + " " : "") +
								_0x4bbebb["charName"] +
								" " +
								_0x4bbebb["surname"];
							(this["characterName"] = this["add"]
								["text"](_0xed4fbd, 0x54 + this["TopLeft"]["y"], _0x28aba5, {})
								["setScale"](_0x1fa5bb["PixelScale"])
								["setOrigin"](0.5, 0x0)
								["setTint"](0xffff00)),
								(this["characterSprite"] = this["add"]
									["image"](
										_0xed4fbd - 0.5 * this["characterName"]["displayWidth"] - 0x8,
										0x54 + this["TopLeft"]["y"],
										"characters",
										_0x4bbebb["spriteName"]
									)
									["setOrigin"](0x1, 0.25));
							var _0x343f8a = _0x1fa5bb["PixelScale"],
								_0x4f0e0a = 0xc,
								_0x813e2 = 0x10 * _0x343f8a,
								_0x35068c = 0xc;
							(this["icons_container_defaultY"] = this["TopLeft"]["y"] + 0xc0),
								(this["icons_container"] = this["add"]["container"](
									this["TopLeft"]["x"] + 0x20 + _0x35068c,
									this["icons_container_defaultY"]
								));
							let _0x41b825 = new Array();
							for (let _0x1b8ebb = 0x0; _0x1b8ebb < _0x2164b8["Core"]["Weapons"]["length"]; _0x1b8ebb++) {
								const _0x3cc474 = _0x2164b8["Core"]["Weapons"][_0x1b8ebb];
								var _0x1a4daa = _0x41a274[_0x3cc474["bulletType"]][0x0],
									_0x295fdc = _0x3cc474["level"] >= _0x41a274[_0x3cc474["bulletType"]]["length"],
									_0x2fc4cf =
										_0x813e2 * (_0x1b8ebb % _0x4f0e0a) + _0x35068c * (_0x1b8ebb % _0x4f0e0a),
									_0x53c1a0 =
										_0x35068c +
										0x2 * _0x813e2 * Math["floor"](_0x1b8ebb / _0x4f0e0a) +
										_0x343f8a * _0x35068c * Math["floor"](_0x1b8ebb / _0x4f0e0a),
									_0x300851 = this["add"]
										["image"](_0x2fc4cf, _0x53c1a0, _0x1a4daa["texture"], _0x1a4daa["frameName"])
										["setScale"](_0x343f8a)
										["setOrigin"](0.5, 0x0);
								this["icons_container"]["add"](_0x300851),
									(_0x7dfa8f = this["add"]
										["text"](_0x2fc4cf, _0x53c1a0 + _0x813e2, "" + _0x3cc474["level"], {})
										["setScale"](_0x1fa5bb["PixelScale"])
										["setOrigin"](0.5, 0x0)
										["setAlpha"](0x0))["setTint"](_0x295fdc ? 0xffff00 : 0xffffff);
								let _0x1487a7 = 0x3e8 / _0x2164b8["Core"]["Weapons"]["length"];
								this["add"]["tween"]({
									targets: _0x7dfa8f,
									alpha: 0x1,
									duration: 0xfa,
									delay: 0xfa + _0x1b8ebb * _0x1487a7,
								}),
									_0x41b825["push"](_0x300851),
									this["icons_container"]["add"](_0x7dfa8f);
							}
							_0x38ad94["CalculateAndSetContainerSize"](this["icons_container"]),
								(this["icons_container"]["x"] = _0xed4fbd - 0.5 * this["icons_container"]["width"]),
								(this["icons_container"]["y"] = 0x78 + this["TopLeft"]["y"]);
							for (let _0x1ba05e = 0x0; _0x1ba05e < _0x41b825["length"]; _0x1ba05e++) {
								const _0x410677 = _0x41b825[_0x1ba05e];
								(_0x410677["x"] = 0.5 * this["icons_container"]["width"]),
									(_0x410677["y"] = -0x22),
									_0x410677["setScale"](0x0),
									_0x410677["setAlpha"](0.5),
									(_0x2fc4cf =
										_0x813e2 * (_0x1ba05e % _0x4f0e0a) + _0x35068c * (_0x1ba05e % _0x4f0e0a)),
									(_0x53c1a0 =
										_0x35068c +
										0x2 * _0x813e2 * Math["floor"](_0x1ba05e / _0x4f0e0a) +
										_0x343f8a * _0x35068c * Math["floor"](_0x1ba05e / _0x4f0e0a));
								let _0x508efd = 0x3e8 / _0x41b825["length"];
								this["add"]["tween"]({
									targets: _0x410677,
									x: _0x2fc4cf,
									y: _0x53c1a0,
									scale: 0x1,
									alpha: 0x1,
									duration: 0xfa,
									delay: _0x1ba05e * _0x508efd,
								});
							}
							this["powerup_container"] = this["add"]["container"](
								this["TopLeft"]["x"] + 0x20 + _0x35068c,
								this["icons_container_defaultY"]
							);
							let _0x350dd4 = new Array(),
								_0x358b59 = 0x0,
								_0x4c8141 = 0x0;
							for (var _0xe3a686 in _0x4a95c8) _0x4a95c8[_0xe3a686][0x0]["level"] > 0x0 && _0x4c8141++;
							for (var _0x3eaecc in _0x4a95c8) {
								var _0x2da9ef = _0x4a95c8[_0x3eaecc][0x0];
								if (_0x2da9ef["level"] <= 0x0) continue;
								(_0x2fc4cf = _0x813e2 * (_0x358b59 % _0x4f0e0a) + _0x35068c * (_0x358b59 % _0x4f0e0a)),
									(_0x53c1a0 =
										_0x35068c +
										0x2 * _0x813e2 * Math["floor"](_0x358b59 / _0x4f0e0a) +
										_0x343f8a * _0x35068c * Math["floor"](_0x358b59 / _0x4f0e0a));
								let _0x36c4f6 = this["add"]
									["image"](_0x2fc4cf, _0x53c1a0, "UI", "frameD.png")
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0);
								this["powerup_container"]["add"](_0x36c4f6);
								let _0x39fce4 = this["add"]
									["image"](_0x2fc4cf, _0x53c1a0 + 0x4, _0x2da9ef["texture"], _0x2da9ef["frameName"])
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)
									["setAlpha"](0x0);
								this["powerup_container"]["add"](_0x39fce4);
								var _0x7dfa8f = this["add"]
									["text"](_0x2fc4cf, _0x53c1a0 + 1.5 * _0x813e2, "" + _0x2da9ef["level"], {})
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)
									["setAlpha"](0x0);
								let _0x563ca6 = _0x2da9ef["level"] == _0x4a95c8[_0x3eaecc]["length"];
								_0x7dfa8f["setTint"](_0x563ca6 ? 0xffff00 : 0xffffff),
									this["powerup_container"]["add"](_0x7dfa8f),
									_0x350dd4["push"](_0x36c4f6);
								let _0x597baf = 0x5dc / _0x4c8141;
								this["add"]["tween"]({
									targets: [_0x7dfa8f, _0x39fce4],
									alpha: 0x1,
									duration: 0xfa,
									delay: 0xfa + _0x358b59 * _0x597baf,
								}),
									_0x358b59++;
							}
							_0x38ad94["CalculateAndSetContainerSize"](this["powerup_container"]),
								(this["powerup_container"]["x"] = _0xed4fbd - 0.5 * this["powerup_container"]["width"]),
								(this["powerup_container"]["y"] =
									this["icons_container"]["y"] + this["icons_container"]["height"] + 0x18);
							for (let _0x2a7934 = 0x0; _0x2a7934 < _0x350dd4["length"]; _0x2a7934++) {
								const _0x299a54 = _0x350dd4[_0x2a7934];
								(_0x299a54["x"] = 0.5 * this["powerup_container"]["width"]),
									(_0x299a54["y"] = -this["powerup_container"]["height"] - _0x35068c + 0x2 - 0x30),
									_0x299a54["setScale"](0x0),
									_0x299a54["setAlpha"](0.5),
									(_0x2fc4cf =
										_0x813e2 * (_0x2a7934 % _0x4f0e0a) + _0x35068c * (_0x2a7934 % _0x4f0e0a)),
									(_0x53c1a0 =
										_0x35068c +
										0x2 * _0x813e2 * Math["floor"](_0x2a7934 / _0x4f0e0a) +
										_0x343f8a * _0x35068c * Math["floor"](_0x2a7934 / _0x4f0e0a));
								let _0x19b32b = 0x5dc / _0x350dd4["length"];
								this["add"]["tween"]({
									targets: _0x299a54,
									x: _0x2fc4cf,
									y: _0x53c1a0,
									scale: 0x1,
									alpha: 0x1,
									duration: 0xfa,
									delay: _0x2a7934 * _0x19b32b,
								});
							}
							this["pickups_container"] = this["add"]["container"](
								this["TopLeft"]["x"] + 0x20 + _0x35068c,
								this["icons_container_defaultY"]
							);
							let _0x517353 = new Array();
							if (
								(_0x2164b8["Core"]["PlayerOptions"]["RunPickups"]["forEach"]((_0x44d535) => {
									var _0x319721 = _0x1a4e45;
									if (_0x44d535 !== _0x3bf2f1["TREASURE"]) {
										let _0x3def0f = _0x517353["find"](
											(_0x1d2482) => _0x1d2482["itemType"] === _0x44d535
										);
										_0x3def0f
											? (_0x3def0f["amount"] += 0x1)
											: _0x517353["push"]({
													itemType: _0x44d535,
													amount: 0x1,
													frameName: _0x171870[_0x44d535]["frameName"],
											  });
									}
								}),
								_0x517353["length"] > 0x0)
							) {
								_0x517353["sort"]((_0x50aa21, _0x314a71) => _0x314a71["amount"] - _0x50aa21["amount"]);
								let _0xbb836 = {
									amount: "",
									frameName:
										_0x2abb02[_0x2164b8["Core"]["Stage"]["destructibleType"]]["frameName"] +
										"1.png",
								};
								_0x517353 = [_0xbb836, ..._0x517353];
								let _0xb7c6ce = new Array(),
									_0x60e056 = 0xa;
								for (let _0x405dd9 = 0x0; _0x405dd9 < _0x517353["length"]; _0x405dd9++) {
									(_0x1a4daa = _0x517353[_0x405dd9]),
										(_0x2fc4cf =
											_0x813e2 * (_0x405dd9 % _0x60e056) + (_0x405dd9 % _0x60e056) * 0x14),
										(_0x53c1a0 =
											_0x35068c +
											0x2 * _0x813e2 * Math["floor"](_0x405dd9 / _0x60e056) +
											_0x343f8a * _0x35068c * Math["floor"](_0x405dd9 / _0x60e056)),
										(_0x300851 = this["add"]
											["image"](_0x2fc4cf, _0x53c1a0, "items", _0x1a4daa["frameName"])
											["setScale"](_0x343f8a)
											["setOrigin"](0.5, 0x0)),
										this["pickups_container"]["add"](_0x300851),
										(_0x7dfa8f = this["add"]
											["text"](_0x2fc4cf, _0x53c1a0 + _0x813e2, _0x1a4daa["amount"], {})
											["setScale"](_0x1fa5bb["PixelScale"])
											["setOrigin"](0.5, 0x0)
											["setAlpha"](0x0));
									let _0x1c3b69 = 0x5dc / _0x517353["length"];
									this["add"]["tween"]({
										targets: _0x7dfa8f,
										alpha: 0x1,
										duration: 0xfa,
										delay: 0xfa + _0x405dd9 * _0x1c3b69,
									}),
										_0xb7c6ce["push"](_0x300851),
										this["pickups_container"]["add"](_0x7dfa8f);
								}
								_0x38ad94["CalculateAndSetContainerSize"](this["pickups_container"]),
									(this["pickups_container"]["x"] =
										_0xed4fbd - 0.5 * this["pickups_container"]["width"]),
									this["powerup_container"]["length"] > 0x0
										? (this["pickups_container"]["y"] =
												this["powerup_container"]["y"] +
												this["powerup_container"]["height"] +
												0x18)
										: (this["pickups_container"]["y"] =
												this["icons_container"]["y"] +
												this["icons_container"]["height"] +
												0x18);
								let _0x2353ec = this["add"]
									["image"](-0xc, 0xc, "UI", "blackDot.png")
									["setScale"](
										this["pickups_container"]["displayWidth"],
										this["pickups_container"]["displayHeight"]
									)
									["setAlpha"](0.1)
									["setOrigin"](0x0);
								this["pickups_container"]["addAt"](_0x2353ec, 0x0);
								for (let _0xb6fdf1 = 0x0; _0xb6fdf1 < _0xb7c6ce["length"]; _0xb6fdf1++) {
									const _0x34d90f = _0xb7c6ce[_0xb6fdf1];
									(_0x34d90f["x"] = 0.5 * this["pickups_container"]["width"]),
										(_0x34d90f["y"] = -0x22),
										_0x34d90f["setScale"](0x0),
										_0x34d90f["setAlpha"](0.5),
										(_0x2fc4cf =
											_0x813e2 * (_0xb6fdf1 % _0x60e056) + (_0xb6fdf1 % _0x60e056) * 0x14),
										(_0x53c1a0 =
											_0x35068c +
											0x2 * _0x813e2 * Math["floor"](_0xb6fdf1 / _0x60e056) +
											_0x343f8a * _0x35068c * Math["floor"](_0xb6fdf1 / _0x60e056));
									let _0x2d0b96 = 0x5dc / _0xb7c6ce["length"];
									this["add"]["tween"]({
										targets: _0x34d90f,
										x: _0x2fc4cf,
										y: _0x53c1a0,
										scale: 0x1,
										alpha: 0x1,
										duration: 0xfa,
										delay: _0xb6fdf1 * _0x2d0b96,
									});
								}
							}
							this["BuildStats"](
								this["TopLeft"]["x"] + 0x8,
								this["TopLeft"]["y"] + 0xc0 + 0x8,
								0x0,
								0x12,
								0xaa,
								0xfa,
								0x140,
								0x194,
								0x10
							);
							const _0x22f849 = _0x42c3a["GetNewAchievementsEarnedOnThisRun"]();
							for (let _0x26d812 = 0x0; _0x26d812 < _0x22f849["length"]; _0x26d812++) {
								const _0x42830f = _0x22f849[_0x26d812];
								((_0x4465ee = new _0x45380b())["dataKey"] = _0x42830f),
									(_0x4465ee["dataType"] = "Achievement"),
									this["achievements"]["push"](_0x4465ee),
									_0x4f668e &&
										setTimeout(() => {
											var _0x144c2f = _0x1a4e45;
											_0x4f668e["send"]("activateAchievement", _0x42830f["toString"]());
										}, 0x12c * _0x26d812);
							}
							var _0x4465ee;
							if (this["achievements"]["length"] > 0x0) {
								(this["isShowingAchievements"] = !0x0),
									(this["achievementsPopup"] = new _0x48a6c7(this, 0x0, 0x0)),
									this["achievementsPopup"]["setPosition"](
										0.5 * this["renderer"]["width"] -
											0.5 * this["achievementsPopup"]["displayWidth"],
										0.5 * this["renderer"]["height"] +
											0.5 * this["background"]["displayHeight"] -
											this["achievementsPopup"]["height"] -
											0x18
									),
									this["add"]["existing"](this["achievementsPopup"]);
								const _0x5a7b22 = this["achievements"]["length"];
								var _0x4a5e8f = 0x0;
								if (
									(this["achievementsPopup"]["AssignData"](
										this["achievements"][0x0]["dataKey"],
										this["achievements"][0x0]["dataType"],
										_0x5a7b22 > 0x1 ? "1/" + _0x5a7b22 : ""
									),
									this["achievementsPopup"]["Show"](),
									_0x5a7b22 > 0x1)
								) {
									this["time"]["addEvent"]({
										delay: 0xdac,
										callback: () => {
											var _0x49a7f0 = _0x1a4e45;
											this["achievementsPopup"]["Hide"](),
												this["time"]["addEvent"]({
													delay: 0x1f4,
													callback: () => {
														var _0x50f5d1 = _0x49a7f0;
														_0x4a5e8f++,
															this["achievementsPopup"]["AssignData"](
																this["achievements"][_0x4a5e8f % _0x5a7b22]["dataKey"],
																this["achievements"][_0x4a5e8f % _0x5a7b22]["dataType"],
																0x1 + (_0x4a5e8f % _0x5a7b22) + "/" + _0x5a7b22
															),
															this["achievementsPopup"]["Show"]();
													},
												});
										},
										repeat: -0x1,
									});
									let _0x1e4100 =
											this["achievementsPopup"]["x"] +
											this["achievementsPopup"]["displayWidth"] +
											0x40,
										_0x9c6c87 = this["achievementsPopup"]["y"] + 0x34;
									(this["AchiAdGroup"] = this["add"]["container"](_0x1e4100, _0x9c6c87)),
										(this["AchiAd_BG"] = this["add"]
											["image"](0x0, 0x0, "vfx", "PrizeBG.png")
											["setScale"](0x4)
											["setAlpha"](0.5)
											["setOrigin"](0.5)),
										(this["AchiAd_Text"] = this["add"]
											["text"](0x0, -0x8, _0x5a7b22["toString"]())
											["setScale"](0x3)
											["setOrigin"](0.5)),
										(this["AchiAd_Sub"] = this["add"]
											["text"](0x0, 0x18, _0x2164b8["Lang"]["getLang"]("postGame_unlocks"))
											["setScale"](0x1)
											["setOrigin"](0.5)),
										this["AchiAdGroup"]["add"](this["AchiAd_BG"]),
										this["AchiAdGroup"]["add"](this["AchiAd_Text"]),
										this["AchiAdGroup"]["add"](this["AchiAd_Sub"]),
										this["tweens"]["add"]({
											targets: this["AchiAd_BG"],
											scale: 0.9 * this["AchiAd_BG"]["scale"],
											duration: 0x640,
											yoyo: !0x0,
											repeat: -0x1,
										});
								}
							}
							const _0x511641 = _0x2bef3a["centerX"],
								_0x2e8863 = _0x2bef3a["height"];
							(this["QuitButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
								x: _0x511641,
								y: _0x2e8863 - 0xc,
								width: 0x60,
								height: 0x20,
							})
								["setScale"](0x2 * _0x1fa5bb["PixelScale"])
								["setOrigin"](0.5, 0x1)),
								this["add"]["existing"](this["QuitButton"]),
								(this["QuitText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["QuitButton"]["x"],
									this["QuitButton"]["y"] - 0.5 * this["QuitButton"]["displayHeight"],
									_0x2164b8["Lang"]["getLang"]("postGame_done"),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								this["add"]["existing"](this["QuitText"]),
								this["achievements"]["length"] > 0x0 &&
									((this["AchiButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["GreenButton"], {
										x: _0x511641 - 0x60 - 0x10,
										y: _0x2e8863 - 0xc,
										width: 0x60,
										height: 0x20,
									})
										["setScale"](0x2 * _0x1fa5bb["PixelScale"])
										["setOrigin"](0.5, 0x1)),
									this["add"]["existing"](this["AchiButton"]),
									(this["AchiText"] = new Phaser["GameObjects"]["Text"](
										this,
										this["AchiButton"]["x"],
										this["AchiButton"]["y"] - 0.5 * this["AchiButton"]["displayHeight"],
										_0x2164b8["Lang"]["getLang"]("postGame_hideAchievements"),
										{
											align: "center",
										}
									)
										["setOrigin"](0.5, 0.5)
										["setScale"](_0x1fa5bb["PixelScale"])),
									this["add"]["existing"](this["AchiText"]),
									(this["QuitButton"]["x"] += 0x70),
									(this["QuitText"]["x"] += 0x70)),
								_0x2164b8["Core"]["PlayerOptions"]["Save"](),
								this["EnableButtons"](),
								this["stats_container"]["setScale"](0x1, 0x0),
								_0x38ad94["CalculateAndSetContainerSize"](this["stats_container"]),
								this["time"]["addEvent"]({
									delay: 0x96,
									callback: () => {
										this["ShowDPSStats"]();
									},
								});
						}
						["ShowDPSStats"]() {
							var _0x2ea54d = _0x5d9431;
							this["isShowingStats"]
								? ((this["isShowingStats"] = !0x1),
								  this["tweens"]["add"]({
										targets: this["stats_container"],
										scaleY: 0x0,
										duration: 0x64,
								  }))
								: ((this["isShowingStats"] = !0x0),
								  this["tweens"]["add"]({
										targets: this["stats_container"],
										scaleY: 0x1,
										duration: 0xfa,
								  }));
						}
						["ShowAchievements"]() {
							var _0x50c90f = _0x5d9431,
								_0x5ae261;
							(this["isShowingAchievements"] = !this["isShowingAchievements"]),
								this["achievementsPopup"]["setVisible"](this["isShowingAchievements"]),
								this["achievements"]["length"] > 0x0 &&
									(null === (_0x5ae261 = this["AchiAdGroup"]) ||
										void 0x0 === _0x5ae261 ||
										_0x5ae261["setVisible"](this["isShowingAchievements"]),
									(this["AchiText"]["text"] = this["isShowingAchievements"]
										? _0x2164b8["Lang"]["getLang"]("postGame_hideAchievements")
										: _0x2164b8["Lang"]["getLang"]("postGame_showAchievements")));
						}
						["BuildStats"](
							_0x158ccd,
							_0x41c0c4,
							_0x4ce7a9,
							_0x478dce,
							_0x41be91,
							_0x1e69bd,
							_0x2df6c0,
							_0x399b1b,
							_0x675e0b
						) {
							var _0x16786f = _0x5d9431;
							this["stats_container"] = this["add"]["container"](_0x158ccd, _0x41c0c4);
							const _0x5c4912 = _0x2164b8["Core"]["RemovedWeapons"]["concat"](
									_0x2164b8["Core"]["Weapons"]
								),
								_0x1ca675 = _0x5c4912["find"](
									(_0x59c7e6) => _0x59c7e6["bulletType"] === _0x5324b3["LAUREL"]
								);
							_0x1ca675 && _0x5c4912["splice"](_0x5c4912["indexOf"](_0x1ca675), 0x1);
							const _0x2a714c = _0x5c4912["find"](
								(_0x203964) => _0x203964["bulletType"] === _0x5324b3["LANCET"]
							);
							_0x2a714c && _0x5c4912["splice"](_0x5c4912["indexOf"](_0x2a714c), 0x1);
							let _0x23123e = new Array();
							for (let _0x1111a9 = 0x0; _0x1111a9 < _0x5c4912["length"]; _0x1111a9++) {
								let _0x2e482e = _0x5c4912[_0x1111a9];
								if (!_0x2e482e["isPowerUp"]) {
									var _0x2b92b6 = _0x41a274[_0x2e482e["bulletType"]][0x0];
									let _0x66ee34 = new _0x5a7163();
									(_0x66ee34["name"] = _0x2b92b6["name"]),
										(_0x66ee34["level"] = _0x2e482e["level"]),
										(_0x66ee34["texture"] = _0x2b92b6["texture"]),
										(_0x66ee34["frameName"] = _0x2b92b6["frameName"]),
										(_0x66ee34["stats_inflictedDamage"] = 0xa * _0x2e482e["stats_inflictedDamage"]),
										(_0x66ee34["stats_lifetime"] = _0x2e482e["stats_lifetime"]),
										(_0x66ee34["stats_DPS"] = 0xa * _0x2e482e["stats_getDPS"]()),
										_0x23123e["push"](_0x66ee34);
								}
							}
							_0x23123e["length"] > 0x1 &&
								((_0x23123e["reduce"](function (_0x295401, _0x53cf70) {
									var _0x719c72 = _0x16786f;
									return _0x295401["stats_DPS"] > _0x53cf70["stats_DPS"] ? _0x295401 : _0x53cf70;
								})["stats_isBestDPS"] = !0x0),
								(_0x23123e["reduce"](function (_0x134084, _0x514a81) {
									var _0x360ea2 = _0x16786f;
									return _0x134084["stats_inflictedDamage"] > _0x514a81["stats_inflictedDamage"]
										? _0x134084
										: _0x514a81;
								})["stats_isBestRaw"] = !0x0)),
								this["stats_container"]["add"](
									this["add"]
										["text"](_0x478dce, 0x0, _0x2164b8["Lang"]["getLang"]("postGame_weapon"))
										["setTint"](0xffff00)
								),
								this["stats_container"]["add"](
									this["add"]
										["text"](_0x41be91, 0x0, _0x2164b8["Lang"]["getLang"]("postGame_level"))
										["setTint"](0xffff00)
										["setOrigin"](0.5, 0x0)
								),
								this["stats_container"]["add"](
									this["add"]
										["text"](_0x1e69bd, 0x0, _0x2164b8["Lang"]["getLang"]("postGame_damage"))
										["setTint"](0xffff00)
										["setOrigin"](0x1, 0x0)
								),
								this["stats_container"]["add"](
									this["add"]
										["text"](_0x2df6c0, 0x0, _0x2164b8["Lang"]["getLang"]("postGame_time"))
										["setTint"](0xffff00)
										["setOrigin"](0x1, 0x0)
								),
								this["stats_container"]["add"](
									this["add"]
										["text"](_0x399b1b, 0x0, _0x2164b8["Lang"]["getLang"]("postGame_dps"))
										["setTint"](0xffff00)
										["setOrigin"](0x1, 0x0)
								);
							for (let _0x6baf0e = 0x0; _0x6baf0e < _0x23123e["length"]; _0x6baf0e++) {
								const _0x651e78 = _0x23123e[_0x6baf0e];
								let _0xee405c = _0x6baf0e + 0x1;
								this["stats_container"]["add"](
									this["add"]
										["sprite"](
											_0x4ce7a9,
											0x2 + _0x675e0b * _0xee405c,
											_0x651e78["texture"],
											_0x651e78["frameName"]
										)
										["setOrigin"](0x0)
								),
									this["stats_container"]["add"](
										this["add"]["text"](_0x478dce, 0x2 + _0x675e0b * _0xee405c, _0x651e78["name"])
									),
									this["stats_container"]["add"](
										this["add"]
											["text"](_0x41be91, 0x2 + _0x675e0b * _0xee405c, _0x651e78["level"])
											["setOrigin"](0.5, 0x0)
									),
									this["stats_container"]["add"](
										this["add"]
											["text"](
												_0x1e69bd,
												0x2 + _0x675e0b * _0xee405c,
												this["nFormatter"](_0x651e78["stats_inflictedDamage"], 0x1)
											)
											["setOrigin"](0x1, 0x0)
											["setTint"](_0x651e78["stats_isBestRaw"] ? 0xffff00 : 0xffffff)
									),
									this["stats_container"]["add"](
										this["add"]
											["text"](
												_0x2df6c0,
												0x2 + _0x675e0b * _0xee405c,
												_0x5a261c["FormatTime"](
													Math["floor"](_0x651e78["stats_lifetime"] / 0x3e8)
												)
											)
											["setOrigin"](0x1, 0x0)
									),
									this["stats_container"]["add"](
										this["add"]
											["text"](
												_0x399b1b,
												0x2 + _0x675e0b * _0xee405c,
												this["nFormatter"](_0x651e78["stats_DPS"], 0x1)
											)
											["setOrigin"](0x1, 0x0)
											["setTint"](_0x651e78["stats_isBestDPS"] ? 0xffff00 : 0xffffff)
									);
							}
						}
						["nFormatter"](_0x1e4832, _0x111200) {
							var _0x37dd28 = _0x5d9431,
								_0x55be3b = [
									{
										value: 0x1,
										symbol: "",
									},
									{
										value: 0x3e8,
										symbol: "k",
									},
									{
										value: 0xf4240,
										symbol: "M",
									},
									{
										value: 0x3b9aca00,
										symbol: "G",
									},
									{
										value: 0xe8d4a51000,
										symbol: "T",
									},
									{
										value: 0x38d7ea4c68000,
										symbol: "P",
									},
									{
										value: 0xde0b6b3a7640000,
										symbol: "E",
									},
								]
									["slice"]()
									["reverse"]()
									["find"](function (_0x870950) {
										var _0x3049f6 = _0x37dd28;
										return _0x1e4832 >= _0x870950["value"];
									});
							let _0x357771 = _0x55be3b
								? (_0x1e4832 / _0x55be3b["value"])
										["toFixed"](_0x111200)
										["replace"](/\.0+$|(\.[0-9]*[1-9])0+$/, "$1") + _0x55be3b["symbol"]
								: "0";
							return (
								"0" === _0x357771 &&
									0x0 != _0x1e4832 &&
									(_0x357771 = null == _0x1e4832 ? void 0x0 : _0x1e4832["toFixed"](0x2)),
								_0x357771
							);
						}
						["EnableButtons"]() {
							var _0x4feadc = _0x5d9431,
								_0x25ad88,
								_0x28ea81;
							this["QuitButton"]["setInteractive"](),
								this["QuitButton"]["on"]("pointerdown", () => {
									var _0x170c6b = _0x4feadc;
									(_0x2164b8["Core"]["PlayerOptions"]["Coins"] = Math["ceil"](
										_0x2164b8["Core"]["PlayerOptions"]["Coins"]
									)),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]),
										_0x2164b8["Core"]["SceneManager"]["StartFromPostGame"]();
								}),
								this["achievements"]["length"] > 0x0 &&
									(null === (_0x25ad88 = this["AchiButton"]) ||
										void 0x0 === _0x25ad88 ||
										_0x25ad88["setInteractive"](),
									null === (_0x28ea81 = this["AchiButton"]) ||
										void 0x0 === _0x28ea81 ||
										_0x28ea81["on"]("pointerdown", () => {
											var _0x5015c1 = _0x4feadc;
											_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
												this["ShowAchievements"]();
										})),
								this["MakeUIGrid"]();
						}
						["MakeUIGrid"]() {
							var _0xc748c6 = _0x5d9431;
							let _0x5b644f = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"],
								_0x5e1b2d = this["achievements"]["length"] > 0x0 ? 0x2 : 0x1;
							_0x5b644f["MakeUIGrid"](_0x5e1b2d, 0x1, !0x1),
								this["achievements"]["length"] > 0x0 &&
									_0x5b644f["UI_grid"]["SetContents"](0x0, 0x0, this["AchiButton"]),
								_0x5b644f["UI_grid"]["SetContents"](_0x5e1b2d - 0x1, 0x0, this["QuitButton"]),
								_0x5b644f["ToggleCursorsVisibility"](!0x0),
								_0x5b644f["UI_grid"]["SelectGameObject"](this["QuitButton"]),
								(_0x5b644f["UI_selected"] = this["QuitButton"]),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x5b644f),
								(_0x5b644f["OnCancelCallback"] = () => {});
						}
						["HideQuitButton"]() {
							var _0x2e0177 = _0x5d9431;
							this["tweens"]["add"]({
								targets: [this["QuitButton"], this["QuitText"]],
								alpha: 0x0,
								scale: 0x0,
								duration: 0x64,
								ease: "Linear",
							}),
								this["QuitButton"]["removeInteractive"]();
						}
						["OnIntroEnded"]() {
							var _0x107f55 = _0x5d9431;
							this["EnableButtons"]();
						}
						["update"]() {}
					}
					class _0x1a9209 extends Phaser["GameObjects"]["Container"] {
						constructor(_0x15df9b, _0x102016, _0x41c421, _0x5b8b9f) {
							var _0x85e315 = _0x5d9431;
							super(_0x15df9b, _0x102016, _0x41c421),
								(this["power"] = _0x40d1e4["ReachLV5"]),
								(this["power"] = _0x5b8b9f),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								(this["myCheckbox"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x20,
									0x20,
									"UI",
									"menu_checkbox_24_bg.png"
								)
									["setOrigin"](0.5)
									["setScale"](_0x1fa5bb["PixelScale"])),
								(this["myTick"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x20,
									0x20,
									"UI",
									"menu_checkbox_24_checkmark.png"
								)
									["setOrigin"](0.5)
									["setScale"](_0x1fa5bb["PixelScale"])),
								(this["myDesc"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x36,
									0x20,
									_0x2164b8["Lang"]["getLang"]("collectionAchievementPanel_description"),
									{}
								)
									["setOrigin"](0x0, 0.5)
									["setWordWrapWidth"](0x168)
									["setScale"](_0x1fa5bb["PixelScale"])),
								(this["myIconBG"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x1b0,
									0x20,
									"UI",
									"frameB.png"
								)["setOrigin"](0.5)),
								(this["myIcon"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x1b0,
									0x20,
									"items",
									""
								)
									["setOrigin"](0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								(this["myInteractable"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0xa,
									0x10,
									"UI",
									"blackDot.png"
								)
									["setOrigin"](0x0)
									["setScale"](0x1a4, 0x20)
									["setAlpha"](0.001)),
								(this["myOverlay"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x1b0,
									0x20,
									"UI",
									"frameB.png"
								)
									["setOrigin"](0.5)
									["setVisible"](!0x1)),
								this["AssignData"](this["power"]),
								this["add"]([
									this["myInteractable"],
									this["myCheckbox"],
									this["myTick"],
									this["myDesc"],
									this["myIconBG"],
									this["myIcon"],
									this["myOverlay"],
								]);
						}
						["AssignData"](_0x25c1f0) {
							var _0x253349 = _0x5d9431;
							this["power"] = _0x25c1f0;
							var _0x4a2957 = _0x5b281e[this["power"]];
							if (
								((this["myDesc"]["text"] = _0x4a2957["description"]),
								this["myTick"]["setVisible"](_0x4a2957["achieved"]),
								_0x4a2957["weaponToUnlock"])
							) {
								var _0xc473a6 = _0x41a274[_0x4a2957["weaponToUnlock"]][0x0];
								this["myIcon"]["setTexture"](_0xc473a6["texture"], _0xc473a6["frameName"]),
									this["myIconBG"]["setVisible"](!0x1)["setOrigin"](0.5),
									this["myOverlay"]["setVisible"](!0x1);
							}
							if (_0x4a2957["characterToUnlock"]) {
								let _0x1b3c7c = _0x11010a[_0x4a2957["characterToUnlock"]][0x0],
									_0x4a3864 = _0x1b3c7c["portraitName"]
										? _0x1b3c7c["portraitName"]
										: "QuestionMark.png";
								this["myIcon"]["setTexture"]("UI", _0x4a3864)["setOrigin"](0.5),
									this["myIconBG"]["setVisible"](!0x1),
									this["myOverlay"]["setVisible"](!0x1);
							}
							if (_0x4a2957["stageToUnlock"]) {
								let _0x34e5a3 = _0x117b45[_0x4a2957["stageToUnlock"]][0x0],
									_0x2ebbe4 = _0x34e5a3["frameNameUnlock"]
										? _0x34e5a3["frameNameUnlock"]
										: "QuestionMark.png";
								this["myIcon"]["setTexture"]("UI", _0x2ebbe4)["setOrigin"](0.5),
									this["myIconBG"]["setVisible"](!0x1),
									this["myOverlay"]["setVisible"](!0x1);
							}
							if (_0x4a2957["hyperToUnlock"]) {
								let _0x448e7f = _0x117b45[_0x4a2957["hyperToUnlock"]][0x0],
									_0x8870a5 = _0x448e7f["frameName"] ? _0x448e7f["frameName"] : "QuestionMark.png";
								this["myIcon"]["setTexture"]("UI", _0x8870a5)["setOrigin"](0.5),
									this["myIconBG"]["setVisible"](!0x1),
									this["myOverlay"]["setVisible"](!0x1);
							}
							if (
								(_0x4a2957["goldPrize"] &&
									_0x4a2957["weaponIcon"] &&
									((_0xc473a6 = _0x41a274[_0x4a2957["weaponIcon"]][0x0]),
									this["myIcon"]
										["setTexture"]("items", _0xc473a6["frameName"])
										["setOrigin"](0.75, 0.5),
									this["myIconBG"]["setVisible"](!0x1),
									this["myOverlay"]["setVisible"](!0x0),
									this["myOverlay"]
										["setFrame"]("MoneyBagGreen.png")
										["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								_0x4a2957["powerUpToUnlock"])
							) {
								var _0x44aec2 = _0x4a95c8[_0x4a2957["powerUpToUnlock"]][0x0];
								this["myIcon"]["setTexture"]("items", _0x44aec2["frameName"])["setOrigin"](0.5, 0.5),
									this["myIconBG"]["setVisible"](!0x1),
									this["myOverlay"]["setVisible"](!0x1);
							}
						}
					}
					const _0x5ba4d2 = _0x1a9209;
					class _0x1c3251 extends Phaser["Scene"] {
						constructor() {
							var _0x320317 = _0x5d9431;
							super({
								key: _0x53d8cd["CollectionAchievementsScene"],
							}),
								(this["TopLeft"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["Highlighted"] = _0x40d1e4["ReachLV5"]),
								(this["scrollTopY"] = 0x40),
								(this["scrollHeight"] = 0x0),
								(this["Columns"] = 0x1),
								(this["Rows"] = 0x0),
								(this["screenYcoordToPositionScrollableContainer"] = 0x0),
								(this["screenYcoordToCutScrollableContainer"] = 0x0),
								(this["alphaMod"] = -0.02);
						}
						["preload"]() {}
						["create"]() {
							var _0x1f9cb6 = _0x5d9431,
								_0x798fc1 = _0x2bef3a["width"],
								_0x10e776 = _0x2bef3a["height"] - 0x40,
								_0x25e7e4 = _0x10e776;
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x798fc1,
								height: _0x10e776,
							})),
								this["background"]["setPosition"](_0x2bef3a["centerX"], _0x25e7e4),
								this["background"]["setOrigin"](0.5, 0x1),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								(this["scrollTopY"] = 0x40),
								(this["scrollHeight"] = _0x10e776 - 0xc8),
								(this["ScrollBar"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["Scrollbar"], {
									x: _0x2bef3a["left"] + _0x798fc1 - 0x20,
									y: this["scrollTopY"],
									width: 0x8,
									height: this["scrollHeight"],
								})
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								this["add"]["existing"](this["ScrollBar"]),
								(this["ScrollCursor"] = this["add"]
									["image"](
										_0x2bef3a["left"] + _0x798fc1 - 0x20,
										this["scrollTopY"],
										"UI",
										"menu_slider_button_strip3.png"
									)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0));
							var _0x21fc31 = 0x0,
								_0x39c986 = 0x0;
							for (const _0x21f31a in _0x5b281e)
								(_0x21fc31 += _0x5b281e[_0x21f31a]["achieved"] ? 0x1 : 0x0), _0x39c986++;
							this["header"] = this["add"]
								["text"](
									_0x2bef3a["centerX"],
									0x21,
									_0x2164b8["Lang"]["getLang"]("achievements_header", [
										_0x21fc31["toString"](),
										_0x39c986["toString"](),
									]),
									{}
								)
								["setScale"](0x2 * _0x1fa5bb["PixelScale"])
								["setOrigin"](0.5);
							var _0x7d20d1 = _0x5b281e;
							this["panels"] = this["add"]["group"]();
							for (const _0xb76cd in _0x7d20d1)
								if (!_0x7d20d1[_0xb76cd]["hidden"]) {
									var _0x4ab805 = new _0x5ba4d2(this, 0x0, 0x0, _0xb76cd);
									_0x4ab805["myInteractable"]["setInteractive"](),
										_0x4ab805["myInteractable"]["on"](
											"pointerdown",
											() => {
												var _0x195e63 = _0x1f9cb6;
												this["OnPanelClicked"](_0xb76cd);
											},
											this
										),
										this["panels"]["add"](_0x4ab805);
								}
							this["Rows"] = this["panels"]["children"]["entries"]["length"];
							var _0x344378 = this["panels"]["getChildren"]();
							for (let _0x1edb47 = 0x0; _0x1edb47 < _0x344378["length"]; _0x1edb47++) {
								const _0x5be730 = _0x344378[_0x1edb47];
								(_0x5be730["x"] = 0x0), (_0x5be730["y"] = 0x2d + 0x20 * _0x1edb47 + 0xc * _0x1edb47);
							}
							var _0x2c9163 = 0x40 * (0x6 + _0x344378["length"]);
							(this["screenYcoordToPositionScrollableContainer"] =
								this["renderer"]["height"] - 0x80 - 0x68),
								(this["screenYcoordToCutScrollableContainer"] =
									0x7c + 0.5 * this["screenYcoordToPositionScrollableContainer"]);
							const _0xb4821f = new Phaser["GameObjects"]["Graphics"](this, {
								x: 0x0,
								y: 0x0,
							});
							_0xb4821f["lineStyle"](0x1, 0xffffff, 0.9),
								_0xb4821f["fillStyle"](0xffff, 0.2),
								_0xb4821f["fillRect"](
									_0x2bef3a["left"],
									0x7c,
									_0x2bef3a["width"],
									this["renderer"]["height"] - 0x80 - 0x68
								);
							var _0x5aa136 = _0xb4821f["createGeometryMask"]();
							(this["highlight"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["SelectionHighlight"], {
								x: 0x0,
								y: 0x0,
								width: 0x1b8,
								height: 0x24,
							})),
								this["highlight"]
									["setOrigin"](0x0, 0x0)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setDepth"](0x3e8),
								this["add"]["existing"](this["highlight"]),
								(this["sc"] = new _0x3729c3(
									this,
									_0x2bef3a["centerX"],
									_0xb4821f["y"] + 0.5 * (this["renderer"]["height"] - 0x80 - 0x68)
								)),
								this["sc"]["setMask"](_0x5aa136),
								(this["confirmationPanel"] = new _0x48a6c7(
									this,
									_0x2bef3a["left"] + 0xa,
									_0x25e7e4 - 0xa
								)["setScale"](_0x1fa5bb["PixelScale"])),
								this["add"]["existing"](this["confirmationPanel"]),
								_0x38ad94["CalculateAndSetContainerSize"](this["confirmationPanel"]),
								(this["confirmationPanel"]["y"] -= this["confirmationPanel"]["displayHeight"]),
								(this["UI_topBar"] = this["scene"]["get"](_0x53d8cd["UI_topBar"])),
								this["scene"]["bringToTop"](this["UI_topBar"]);
							var _0x30ac97 = this["children"]["getAll"]();
							this["children"]["removeAll"](),
								(this["SceneContainer"] = this["add"]["container"](0x0, 0x0, _0x30ac97)),
								this["SceneContainer"]["setScale"](_0x16385e()),
								_0x38ad94["CalculateAndSetContainerSize"](this["SceneContainer"]),
								(this["SceneContainer"]["y"] =
									this["renderer"]["height"] - this["SceneContainer"]["displayHeight"]),
								(this["sc"]["y"] = 0.5 * _0x2c9163),
								this["sc"]["SetSize"](_0x2bef3a["width"], _0x2c9163),
								this["sc"]["AddChildren"](_0x344378),
								this["sc"]["AddChildren"](this["highlight"]),
								this["HandleInput"](),
								this["MakeUIGrid"](),
								this["OnPanelClicked"](this["Highlighted"]);
						}
						["HandleInput"]() {
							var _0x3e0d70 = _0x5d9431;
							this["input"]["mouse"]["disableContextMenu"](),
								this["input"]["on"]("pointerup", (_0x271fff) => {
									var _0x13e3c1 = _0x3e0d70;
									this["alphaMod"] = -0.1;
								}),
								this["input"]["on"]("pointerdown", (_0x273066) => {
									this["alphaMod"] = 0.1;
								}),
								this["input"]["on"](
									"wheel",
									(_0x54184d, _0x51a420, _0x474fb3, _0x26c330, _0x49080c) => {
										this["sc"]["ScrollBy"](0.4 * -_0x26c330), (this["alphaMod"] = 0.1);
									}
								);
						}
						["update"]() {
							var _0x4d6ef4 = _0x5d9431,
								_0x24b514;
							let _0x10a8b7 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x10a8b7["UI_selected"] != _0x10a8b7["UI_grid"]["previousGameObject"] &&
								((
									null === (_0x24b514 = _0x10a8b7["UI_selected"]) || void 0x0 === _0x24b514
										? void 0x0
										: _0x24b514["power"]
								)
									? (this["OnPanelClicked"](_0x10a8b7["UI_selected"]["power"]),
									  _0x10a8b7["ToggleCursorsVisibility"](!0x1),
									  this["highlight"]["setVisible"](!0x0),
									  this["correctScrollableContainerPosition"](_0x10a8b7["UI_selected"]),
									  (this["alphaMod"] = 0x1))
									: (_0x10a8b7["ToggleCursorsVisibility"](!0x0),
									  this["highlight"]["setVisible"](!0x1))),
								(this["ScrollCursor"]["alpha"] += this["alphaMod"]),
								(this["ScrollBar"]["alpha"] += this["alphaMod"]),
								this["ScrollCursor"]["setPosition"](
									this["ScrollCursor"]["x"],
									this["scrollTopY"] +
										this["sc"]["ReverseValue"] *
											(this["scrollHeight"] * _0x1fa5bb["PixelScale"] -
												this["ScrollCursor"]["displayHeight"])
								);
						}
						["correctScrollableContainerPosition"](_0x5af53f) {
							var _0x6b4665 = _0x5d9431;
							let _0x27660c = 0x2c;
							if (
								this["sc"]["y"] + this["highlight"]["y"] >
								this["renderer"]["height"] - 0x80 - 0x68 + _0x27660c
							) {
								for (
									this["sc"]["y"] -= _0x27660c;
									this["sc"]["y"] + this["highlight"]["y"] >
									this["renderer"]["height"] - 0x80 - 0x68 + _0x27660c;

								)
									this["sc"]["y"] -= _0x27660c;
							} else {
								if (this["sc"]["y"] + this["highlight"]["y"] < _0x27660c) {
									for (
										this["sc"]["y"] += _0x27660c;
										this["sc"]["y"] + this["highlight"]["y"] < _0x27660c;

									)
										this["sc"]["y"] += _0x27660c;
								}
							}
						}
						["MakeUIGrid"]() {
							var _0x30fb10 = _0x5d9431;
							let _0xc8b13c = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							this["panels"]["children"]["entries"]["length"],
								_0xc8b13c["MakeUIGrid"](this["Columns"], this["Rows"] + 0x1, !0x0);
							for (let _0x1631af = 0x0; _0x1631af < this["Columns"]; _0x1631af++)
								_0xc8b13c["UI_grid"]["SetContents"](_0x1631af, 0x0, this["UI_topBar"]["BackButton"]);
							for (
								let _0x121c31 = 0x0;
								_0x121c31 < this["panels"]["children"]["entries"]["length"];
								_0x121c31++
							) {
								const _0x3f6fff = this["panels"]["children"]["entries"][_0x121c31];
								_0xc8b13c["UI_grid"]["SetContents"](
									_0x121c31 % this["Columns"],
									0x1 + Math["floor"](_0x121c31 / this["Columns"]),
									_0x3f6fff
								);
							}
							_0xc8b13c["UI_grid"]["SelectAt"](0x0, 0x0),
								(_0xc8b13c["UI_selected"] = this["UI_topBar"]["BackButton"]),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0xc8b13c),
								(_0xc8b13c["OnCancelCallback"] = () => {
									var _0x5565b7 = _0x30fb10,
										_0x18c6a3,
										_0x2faa01,
										_0x4488ff;
									null ===
										(_0x4488ff =
											null ===
												(_0x2faa01 =
													null === (_0x18c6a3 = this["UI_topBar"]["BackButton"]) ||
													void 0x0 === _0x18c6a3
														? void 0x0
														: _0x18c6a3["_events"]) || void 0x0 === _0x2faa01
												? void 0x0
												: _0x2faa01["pointerdown"]) ||
										void 0x0 === _0x4488ff ||
										_0x4488ff["fn"]();
								});
						}
						["OnSelectionChange"]() {
							var _0x492be8 = _0x5d9431;
							this["scene"]["bringToTop"](_0x53d8cd["UI_topBar"]),
								this["scene"]["bringToTop"](_0x53d8cd["UI_overlayScene"]);
							var _0x31e480 = this["panels"]
								["getChildren"]()
								["find"]((_0x516fe7) => _0x516fe7["power"] === this["Highlighted"]);
							if (_0x31e480) {
								this["highlight"]["setPosition"](_0x31e480["x"] + 0xe, _0x31e480["y"] + 0xe);
								let _0x476bd5 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
								_0x476bd5["UI_grid"]["SelectGameObject"](_0x31e480),
									(_0x476bd5["UI_selected"] = _0x31e480);
							}
						}
						["OnPanelClicked"](_0x2ca1de) {
							var _0x2621c0 = _0x5d9431;
							(this["Highlighted"] = _0x2ca1de),
								this["confirmationPanel"]["AssignAchievement"](this["Highlighted"]),
								this["OnSelectionChange"]();
						}
					}
					class _0x3cecce extends Phaser["GameObjects"]["Container"] {
						constructor(_0x40741f, _0xdfa2b9, _0x11497f, _0x2fe78c) {
							var _0x1b548c = _0x5d9431;
							super(_0x40741f, _0xdfa2b9, _0x11497f),
								(this["power"] = _0x2f4d79["FOREST"]),
								(this["power"] = _0x2fe78c),
								this["setScale"](_0x1fa5bb["PixelScale"]),
								(this["myIconBG"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x10,
									0x10,
									"UI",
									"whiteDot.png"
								)
									["setOrigin"](0x0)
									["setScale"](0x1cc, 0x60)
									["setAlpha"](0.1)
									["setTint"](0xffff00)
									["setVisible"](!0x1)),
								(this["myInteractable"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x10,
									0x10,
									"UI",
									"stage_forest.png"
								)
									["setOrigin"](0x0)
									["setScale"](_0x1fa5bb["PixelScale"])),
								(this["myName"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x5e,
									0x1a,
									_0x2164b8["Lang"]["getLang"]("stageSelectionPanel_name"),
									{
										color: "yellow",
									}
								)
									["setOrigin"](0.5, 0x0)
									["setWordWrapWidth"](0x12c)
									["setScale"](_0x1fa5bb["PixelScale"])),
								(this["myDesc"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0xb4,
									0x1a,
									_0x2164b8["Lang"]["getLang"]("stageSelectionPanel_description"),
									{}
								)
									["setOrigin"](0x0, 0x0)
									["setWordWrapWidth"](0x12c)
									["setScale"](_0x1fa5bb["PixelScale"])),
								this["AssignData"](this["power"]),
								this["add"]([this["myIconBG"], this["myInteractable"], this["myName"], this["myDesc"]]),
								(this["_events"] = {}),
								(this["_events"]["pointerdown"] = {}),
								(this["_events"]["pointerdown"]["fn"] = () => {
									this["OnClick"]();
								});
						}
						["OnClick"]() {}
						["ToggleHighlight"](_0x2b2453) {
							var _0x4c053d = _0x5d9431;
							this["myIconBG"]["setVisible"](_0x2b2453);
						}
						["AssignData"](_0x1a400c) {
							var _0x4ae714 = _0x5d9431;
							this["power"] = _0x1a400c;
							var _0x375593 = _0x117b45[this["power"]][0x0];
							(this["myName"]["text"] = _0x375593["unlocked"]
								? _0x375593["stageName"]
								: _0x2164b8["Lang"]["getLang"]("stageSelectionPanel_?")),
								(this["myDesc"]["text"] = _0x375593["unlocked"]
									? _0x375593["description"]
									: _0x2164b8["Lang"]["getLang"]("stageSelectionPanel_hidden")),
								this["myInteractable"]["setTexture"](_0x375593["uiTexture"], _0x375593["uiFrame"]);
						}
					}
					const _0x54defe = _0x3cecce;
					class _0x154bdc extends Phaser["GameObjects"]["Container"] {
						constructor(_0x103632, _0x448c40, _0x5e5e0c) {
							var _0x2ab9dd = _0x5d9431;
							super(_0x103632, _0x448c40, _0x5e5e0c),
								(this["stageType"] = _0x2f4d79["FOREST"]),
								this["setScale"](_0x1fa5bb["PixelScale"]);
							var _0x46a2ff = 0.24 * _0x1499e1 * 0x2,
								_0x2662bf = {
									x: 0x0,
									y: 0x0,
									width: 0.24 * _0x1499e1 * 0x4,
									height: 0x68,
								};
							(this["Background"] = new _0x5b4abe["NineSlice"](
								this["scene"],
								_0x395ea9["PanelBackground"],
								_0x2662bf
							)),
								(this["myName"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									_0x46a2ff,
									0xc,
									_0x2164b8["Lang"]["getLang"]("stageConfirm_name"),
									{}
								)
									["setScale"](0x1)
									["setOrigin"](0.5, 0x0)),
								(this["myHyper"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									0x38,
									0x16,
									_0x2164b8["Lang"]["getLang"]("stageConfirm_hyper"),
									{}
								)
									["setScale"](0x1)
									["setOrigin"](0.5, 0x0)),
								(this["myWarn"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									_0x46a2ff,
									0x20,
									_0x2164b8["Lang"]["getLang"]("stageConfirm_description"),
									{}
								)
									["setScale"](0x1)
									["setWordWrapWidth"](0x12c)
									["setOrigin"](0.5, 0x0)
									["setTint"](0x880000)),
								(this["myDesc"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									_0x46a2ff,
									0x2e,
									_0x2164b8["Lang"]["getLang"]("stageConfirm_description"),
									{}
								)
									["setScale"](0x1)
									["setWordWrapWidth"](0x12c)
									["setOrigin"](0.5, 0x0)
									["setTint"](0xffff00)),
								(this["myButton1"] = new _0x5b4abe["NineSlice"](
									this["scene"],
									_0x395ea9["GreenButton"],
									{
										x: 0x1ae,
										y: 0x44,
										width: 0x30,
										height: 0x1e,
									}
								)
									["setScale"](0x2)
									["setOrigin"](0.5)),
								(this["myButton1Text"] = new Phaser["GameObjects"]["Text"](
									this["scene"],
									this["myButton1"]["x"],
									this["myButton1"]["y"],
									_0x2164b8["Lang"]["getLang"]("stageConfirm_start"),
									{}
								)
									["setScale"](0x1)
									["setOrigin"](0.5)),
								(this["Hyper_Box"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x20,
									0x40,
									"UI",
									"menu_checkbox_24_bg.png"
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)
									["setScale"](0x2)),
								(this["Hyper_Toggle"] = new Phaser["GameObjects"]["Image"](
									this["scene"],
									0x20,
									0x40,
									"UI",
									"yes16.png"
								)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0x0, 0.5)
									["setScale"](0x2)),
								this["AssignStage"](this["stageType"]),
								this["add"]([
									this["Background"],
									this["myName"],
									this["myWarn"],
									this["myDesc"],
									this["myButton1"],
									this["myButton1Text"],
									this["myHyper"],
									this["Hyper_Box"],
									this["Hyper_Toggle"],
								]);
						}
						["AssignStage"](_0x434c99) {
							var _0x683ca2 = _0x5d9431;
							if (((this["stageType"] = _0x434c99), _0x117b45[this["stageType"]])) {
								var _0x3e9626 = _0x117b45[this["stageType"]][0x0];
								this["Background"]["setTint"](0xffffff),
									(this["myName"]["text"] = _0x3e9626["unlocked"]
										? _0x3e9626["stageName"]
										: _0x2164b8["Lang"]["getLang"]("stageConfirm_?")),
									this["myWarn"]["setText"](_0x3e9626["unlocked"] ? _0x3e9626["tips"] : ""),
									this["myButton1"]["setVisible"](_0x3e9626["unlocked"]),
									this["myButton1Text"]["setVisible"](_0x3e9626["unlocked"]),
									this["myHyper"]["setVisible"](_0x3e9626["hyper"]["unlocked"]),
									this["Hyper_Box"]["setVisible"](_0x3e9626["hyper"]["unlocked"]),
									this["Hyper_Toggle"]["setVisible"](_0x3e9626["hyper"]["unlocked"]),
									_0x3e9626["unlocked"] &&
										(this["myDesc"]["setText"](
											_0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"]
												? _0x3e9626["hyperTips"]
												: ""
										),
										this["Hyper_Toggle"]["setVisible"](
											!!_0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"]
										),
										_0x3e9626["hyper"]["unlocked"] ||
											(_0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"] = !0x1),
										_0x3e9626["hyper"]["unlocked"] &&
											(this["Hyper_Box"]["removeAllListeners"](),
											this["Hyper_Box"]["setInteractive"](),
											this["Hyper_Box"]["on"]("pointerdown", () => {
												var _0x334866 = _0x683ca2;
												(_0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"] =
													!_0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"]),
													_0x2164b8["Sound"]["PlaySound"](
														_0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"]
															? _0x522ca7["ClickIn"]
															: _0x522ca7["ClickOut"]
													),
													this["Hyper_Toggle"]["setVisible"](
														!!_0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"]
													),
													this["myDesc"]["setText"](
														_0x2164b8["Core"]["PlayerOptions"]["SelectedHyper"]
															? _0x3e9626["hyperTips"]
															: ""
													);
											})));
							} else console["log"](this["stageType"] + " not found");
						}
						["TurnToStart"]() {
							var _0x3e5138 = _0x5d9431;
							this["Background"]["setTint"](0xffff00);
						}
						["TurnToSelection"]() {
							var _0x27c0ef = _0x5d9431;
							this["AssignStage"](this["stageType"]);
						}
					}
					const _0x499118 = _0x154bdc;
					class _0x6384af extends Phaser["Scene"] {
						constructor() {
							var _0x5760ff = _0x5d9431;
							super({
								key: _0x53d8cd["StageSelectionScene"],
							}),
								(this["TopLeft"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["Highlighted"] = _0x2f4d79["FOREST"]),
								(this["scrollTopY"] = 0x40),
								(this["scrollHeight"] = 0x0),
								(this["isStartingGameMode"] = !0x1),
								(this["isReadyToStart"] = !0x1),
								(this["alphaMod"] = -0.02);
						}
						["preload"]() {}
						["create"]() {
							var _0x2ef8c8 = _0x5d9431;
							(this["isStartingGameMode"] = !0x1),
								(this["Highlighted"] = _0x2164b8["Core"]["PlayerOptions"]["SelectedStage"]),
								_0x117b45[this["Highlighted"]] ||
									(console["log"](this["Highlighted"] + " not found, defaulting to Forest"),
									(this["Highlighted"] = _0x2f4d79["FOREST"]));
							var _0x56b8ec = _0x2bef3a["width"],
								_0x28f9fd = _0x2bef3a["height"] - 0x40,
								_0x3da9a4 = _0x28f9fd;
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x56b8ec,
								height: _0x28f9fd,
							})),
								this["background"]["setPosition"](_0x2bef3a["centerX"], _0x3da9a4),
								this["background"]["setOrigin"](0.5, 0x1),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								(this["scrollTopY"] = 0x40),
								(this["scrollHeight"] = _0x28f9fd - 0xc8),
								(this["ScrollBar"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["Scrollbar"], {
									x: _0x2bef3a["left"] + _0x56b8ec - 0x20,
									y: this["scrollTopY"],
									width: 0x8,
									height: this["scrollHeight"],
								})
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								this["add"]["existing"](this["ScrollBar"]),
								(this["ScrollCursor"] = this["add"]
									["image"](
										_0x2bef3a["left"] + _0x56b8ec - 0x20,
										this["scrollTopY"],
										"UI",
										"menu_slider_button_strip3.png"
									)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								(this["header"] = this["add"]
									["text"](
										_0x2bef3a["centerX"],
										0x21,
										_0x2164b8["Lang"]["getLang"]("stageSelection_header"),
										{}
									)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5));
							var _0x4880a3 = _0x117b45;
							this["panels"] = this["add"]["group"]();
							for (const _0x1116a7 in _0x4880a3)
								if (!_0x4880a3[_0x1116a7][0x0]["hidden"]) {
									var _0x367bec = new _0x54defe(this, 0x0, 0x0, _0x1116a7);
									_0x367bec["myInteractable"]["setInteractive"](),
										_0x367bec["myInteractable"]["on"](
											"pointerdown",
											() => {
												var _0x32ada9 = _0x2ef8c8;
												this["OnPanelClicked"](_0x1116a7);
											},
											this
										),
										(_0x367bec["OnClick"] = () => {
											this["OnConfirmClicked"]();
										}),
										this["panels"]["add"](_0x367bec);
								}
							var _0x248a3b = this["panels"]["getChildren"]();
							for (let _0x11cb8b = 0x0; _0x11cb8b < _0x248a3b["length"]; _0x11cb8b++) {
								const _0x5ece29 = _0x248a3b[_0x11cb8b];
								(_0x5ece29["x"] = 0x0), (_0x5ece29["y"] = 0x2d + 0x60 * _0x11cb8b + 0xc * _0x11cb8b);
							}
							var _0x25eea5 = 0x3c * (0x2 + _0x248a3b["length"]);
							(this["screenYcoordToPositionScrollableContainer"] =
								this["renderer"]["height"] - 0x80 - 0x68),
								(this["screenYcoordToCutScrollableContainer"] =
									0x7c + 0.5 * this["screenYcoordToPositionScrollableContainer"]);
							const _0x150af0 = new Phaser["GameObjects"]["Graphics"](this, {
								x: 0x0,
								y: 0x0,
							});
							_0x150af0["lineStyle"](0x1, 0xffffff, 0.9),
								_0x150af0["fillStyle"](0xffff, 0.2),
								_0x150af0["fillRect"](
									_0x2bef3a["left"],
									0x7c,
									_0x2bef3a["width"],
									this["renderer"]["height"] - 0x80 - 0x68
								);
							var _0x3b4fbc = _0x150af0["createGeometryMask"]();
							(this["highlight"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["SelectionHighlight"], {
								x: 0x0,
								y: 0x0,
								width: 0xa0,
								height: 0x64,
							})),
								this["highlight"]
									["setOrigin"](0x0, 0x0)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setDepth"](0x3e8),
								this["add"]["existing"](this["highlight"]),
								(this["sc"] = new _0x3729c3(
									this,
									_0x2bef3a["centerX"],
									_0x150af0["y"] + 0.5 * (this["renderer"]["height"] - 0x80 - 0x68)
								)),
								this["sc"]["setMask"](_0x3b4fbc),
								(this["confirmationPanel"] = new _0x499118(
									this,
									_0x2bef3a["left"] + 0xa,
									_0x3da9a4 - 0xa
								)["setScale"](_0x1fa5bb["PixelScale"])),
								this["add"]["existing"](this["confirmationPanel"]),
								this["confirmationPanel"]["myButton1"]["setInteractive"](),
								this["confirmationPanel"]["myButton1"]["on"](
									"pointerdown",
									() => {
										var _0x5a3476 = _0x2ef8c8;
										this["OnConfirmClicked"]();
									},
									this
								),
								_0x38ad94["CalculateAndSetContainerSize"](this["confirmationPanel"]),
								(this["confirmationPanel"]["y"] -= this["confirmationPanel"]["displayHeight"]),
								(this["UI_topBar"] = this["scene"]["get"](_0x53d8cd["UI_topBar"])),
								this["scene"]["bringToTop"](this["UI_topBar"]);
							var _0x5861a1 = this["children"]["getAll"]();
							this["children"]["removeAll"](),
								(this["SceneContainer"] = this["add"]["container"](0x0, 0x0, _0x5861a1)),
								this["SceneContainer"]["setScale"](_0x16385e()),
								_0x38ad94["CalculateAndSetContainerSize"](this["SceneContainer"]),
								(this["SceneContainer"]["y"] =
									this["renderer"]["height"] - this["SceneContainer"]["displayHeight"]),
								(this["sc"]["y"] = 0.5 * _0x25eea5),
								this["sc"]["SetSize"](_0x2bef3a["width"], _0x25eea5),
								this["sc"]["AddChildren"](_0x248a3b),
								this["sc"]["AddChildren"](this["highlight"]),
								this["HandleInput"](),
								this["MakeUIGrid_ScrollView"](),
								this["confirmationPanel"]["AssignStage"](this["Highlighted"]),
								(this["isReadyToStart"] = !0x1),
								this["OnSelectionChange"]();
						}
						["HandleInput"]() {
							var _0x10a0fa = _0x5d9431;
							this["input"]["mouse"]["disableContextMenu"](),
								this["input"]["on"]("pointerup", (_0xc1bd46) => {
									var _0x4e83ac = _0x10a0fa;
									this["alphaMod"] = -0.1;
								}),
								this["input"]["on"]("pointerdown", (_0x48cb9e) => {
									this["alphaMod"] = 0.1;
								});
						}
						["update"]() {
							var _0xc6dad3 = _0x5d9431,
								_0x47bf6c,
								_0x284896;
							if (this["isStartingGameMode"]) return;
							let _0x442d7c = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x442d7c["UI_selected"] != _0x442d7c["UI_grid"]["previousGameObject"] &&
								((
									null === (_0x47bf6c = _0x442d7c["UI_selected"]) || void 0x0 === _0x47bf6c
										? void 0x0
										: _0x47bf6c["power"]
								)
									? ((this["Highlighted"] =
											null === (_0x284896 = _0x442d7c["UI_selected"]) || void 0x0 === _0x284896
												? void 0x0
												: _0x284896["power"]),
									  this["OnSelectionChange"](),
									  this["confirmationPanel"]["AssignStage"](this["Highlighted"]),
									  _0x442d7c["ToggleCursorsVisibility"](!0x1),
									  this["highlight"]["setVisible"](!0x0),
									  this["correctScrollableContainerPosition"](_0x442d7c["UI_selected"]),
									  (this["alphaMod"] = 0x1))
									: (_0x442d7c["ToggleCursorsVisibility"](!0x0),
									  this["highlight"]["setVisible"](!0x1))),
								(this["ScrollCursor"]["alpha"] += this["alphaMod"]),
								(this["ScrollBar"]["alpha"] += this["alphaMod"]),
								this["ScrollCursor"]["setPosition"](
									this["ScrollCursor"]["x"],
									this["scrollTopY"] +
										this["sc"]["ReverseValue"] *
											(this["scrollHeight"] * _0x1fa5bb["PixelScale"] -
												this["ScrollCursor"]["displayHeight"])
								);
						}
						["correctScrollableContainerPosition"](_0x27dbfc) {
							var _0x36cd8c = _0x5d9431;
							let _0x179925 = 0x6c;
							if (this["sc"]["y"] + this["highlight"]["y"] > this["renderer"]["height"] - 0x80 - 0x68) {
								for (
									this["sc"]["y"] -= _0x179925;
									this["sc"]["y"] + this["highlight"]["y"] > this["renderer"]["height"] - 0x80 - 0x68;

								)
									this["sc"]["y"] -= _0x179925;
							} else {
								if (this["sc"]["y"] + this["highlight"]["y"] < 0x0) {
									for (this["sc"]["y"] += _0x179925; this["sc"]["y"] + this["highlight"]["y"] < 0x0; )
										this["sc"]["y"] += _0x179925;
								}
							}
						}
						["OnSelectionChange"]() {
							var _0x11f36e = _0x5d9431,
								_0x7a3e2f,
								_0x44e1f2 = this["panels"]["getChildren"]();
							_0x44e1f2["forEach"]((_0x232de9) => _0x232de9["ToggleHighlight"](!0x1));
							var _0x16c925 = _0x44e1f2["find"](
								(_0x11e2ef) => _0x11e2ef["power"] === this["Highlighted"]
							);
							_0x16c925 &&
								(this["highlight"]["setPosition"](_0x16c925["x"] + 0xe, _0x16c925["y"] + 0xe),
								_0x16c925["ToggleHighlight"](!0x0)),
								(this["HighlightedPanel"] = _0x16c925);
							let _0x307ac6 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							null === (_0x7a3e2f = _0x307ac6["UI_grid"]) ||
								void 0x0 === _0x7a3e2f ||
								_0x7a3e2f["SelectGameObject"](_0x16c925),
								(_0x307ac6["UI_selected"] = _0x16c925),
								this["ToggleButtonInUIGrid"](_0x117b45[this["Highlighted"]][0x0]["unlocked"]),
								this["ToggleHyperInUIGrid"](_0x117b45[this["Highlighted"]][0x0]["hyper"]["unlocked"]),
								(this["isReadyToStart"] = !0x1),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x307ac6);
						}
						["OnPanelClicked"](_0x870ed8) {
							var _0x309de2 = _0x5d9431;
							this["isStartingGameMode"] ||
								((this["Highlighted"] = _0x870ed8),
								this["confirmationPanel"]["AssignStage"](this["Highlighted"]),
								(this["isReadyToStart"] = !0x1),
								this["OnSelectionChange"]());
						}
						["OnConfirmClicked"]() {
							var _0xf7db56 = _0x5d9431;
							_0x117b45[this["Highlighted"]][0x0]["unlocked"]
								? this["isReadyToStart"]
									? this["isReadyToStart"] &&
									  (_0x2164b8["Core"]["SceneManager"]["UI_overlayScene"]["DestroyGrid"](),
									  _0x2164b8["Core"]["SceneManager"]["StartFromStageSelection"](),
									  _0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"], {
											detune: 0xfa,
									  }),
									  (this["isStartingGameMode"] = !0x0))
									: ((_0x2164b8["Core"]["PlayerOptions"]["SelectedStage"] = this["Highlighted"]),
									  this["OnSelectionChange"](),
									  this["confirmationPanel"]["TurnToStart"](),
									  (this["isReadyToStart"] = !0x0),
									  _0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"], {
											detune: 0xe1,
									  }),
									  this["gridScene"]["UI_grid"]["SelectAt"](0x1, this["gridBottom"]),
									  (this["gridScene"]["UI_selected"] = this["confirmationPanel"]["myButton1"]))
								: _0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]);
						}
						["MakeUIGrid_ScrollView"]() {
							var _0x3ca784 = _0x5d9431;
							this["gridScene"] = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							let _0x3cbbdd = this["panels"]["children"]["entries"]["length"];
							(this["gridBottom"] = _0x3cbbdd + 0x1),
								this["gridScene"]["MakeUIGrid"](0x2, _0x3cbbdd + 0x2, !0x1),
								this["gridScene"]["UI_grid"]["SetContents"](0x1, 0x0, this["UI_topBar"]["BackButton"]);
							let _0x53a990 = 0x0;
							for (
								_0x53a990 = 0x0;
								_0x53a990 < this["panels"]["children"]["entries"]["length"];
								_0x53a990++
							) {
								const _0x446069 = this["panels"]["children"]["entries"][_0x53a990];
								this["gridScene"]["UI_grid"]["SetContents"](0x1, 0x1 + _0x53a990, _0x446069);
							}
							this["gridScene"]["UI_grid"]["SetContents"](
								0x0,
								this["gridBottom"],
								this["confirmationPanel"]["Hyper_Box"]
							),
								this["gridScene"]["UI_grid"]["SetContents"](
									0x1,
									this["gridBottom"],
									this["confirmationPanel"]["myButton1"]
								),
								this["gridScene"]["ToggleCursorsVisibility"](!0x1),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](this["gridScene"]),
								(this["gridScene"]["OnCancelCallback"] = () => {
									var _0x2a95e3 = _0x3ca784,
										_0xba518f,
										_0x4fc92f,
										_0x45da60;
									null ===
										(_0x45da60 =
											null ===
												(_0x4fc92f =
													null === (_0xba518f = this["UI_topBar"]["BackButton"]) ||
													void 0x0 === _0xba518f
														? void 0x0
														: _0xba518f["_events"]) || void 0x0 === _0x4fc92f
												? void 0x0
												: _0x4fc92f["pointerdown"]) ||
										void 0x0 === _0x45da60 ||
										_0x45da60["fn"]();
								});
						}
						["ToggleButtonInUIGrid"](_0x560ca0) {
							var _0x27d4fb = _0x5d9431;
							_0x560ca0
								? this["gridScene"]["UI_grid"]["SetContents"](
										0x1,
										this["gridBottom"],
										this["confirmationPanel"]["myButton1"]
								  )
								: this["gridScene"]["UI_grid"]["SetContents"](0x1, this["gridBottom"], null);
						}
						["ToggleHyperInUIGrid"](_0x3a359e) {
							var _0x33ebc1 = _0x5d9431;
							_0x3a359e
								? this["gridScene"]["UI_grid"]["SetContents"](
										0x0,
										this["gridBottom"],
										this["confirmationPanel"]["Hyper_Box"]
								  )
								: this["gridScene"]["UI_grid"]["SetContents"](0x0, this["gridBottom"], null);
						}
					}
					class _0x4d4aab extends Phaser["Scene"] {
						constructor() {
							super({
								key: _0x53d8cd["DebugScene"],
							}),
								(this["buttons"] = {});
						}
						["preload"]() {
							var _0x356f5d = _0x5d9431;
							_0x2164b8["ApplyMenuResolution"]();
						}
						["create"]() {
							var _0x4c704c = _0x5d9431;
							if (!_0x2bc3e5) return void _0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"]();
							const _0x2ca1bc = _0x2bef3a["centerX"],
								_0x3bb608 = _0x2bef3a["height"];
							var _0x5805c2 = _0x2bef3a["width"],
								_0x9fddce = _0x2bef3a["height"];
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x5805c2,
								height: _0x9fddce,
							})),
								this["background"]["setPosition"](_0x2ca1bc, 0x0),
								this["background"]["setOrigin"](0.5, 0x0),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								(this["header"] = this["add"]
									["text"](_0x2ca1bc, 0x21, "Cheats", {})
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								(this["ResumeButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: _0x2ca1bc,
									y: _0x3bb608 - 0x30,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x1)),
								this["add"]["existing"](this["ResumeButton"]),
								(this["ResumeText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["ResumeButton"]["x"],
									this["ResumeButton"]["y"] - 0.5 * this["ResumeButton"]["displayHeight"],
									"RESUME",
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								this["add"]["existing"](this["ResumeText"]);
							const _0x41c828 = 0x80,
								_0x627da3 = 0x55;
							var _0x4a3758 = _0x2bef3a["left"] + 0x5a,
								_0x243cfc = -0x1;
							(this["buttons"]["LEVEL UP"] = this["MakeButton"](
								_0x4a3758,
								_0x41c828 + _0x627da3 * ++_0x243cfc,
								"LEVEL UP",
								() => {
									var _0x5355a0 = _0x4c704c;
									_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"](),
										(_0x2164b8["Core"]["Player"]["xp"] +=
											_0x2164b8["Core"]["LevelUpFactory"]["XpRequiredToLevelUp"] -
											_0x2164b8["Core"]["LevelUpFactory"]["PreviousXpRequiredToLevelUp"]),
										_0x2164b8["Core"]["CheckForLevelUp"]();
								}
							)),
								(this["buttons"]["MAX ENEMIES"] = this["MakeButton"](
									_0x4a3758,
									_0x41c828 + _0x627da3 * ++_0x243cfc,
									"MAX ENEMIES",
									() => {
										var _0x565246 = _0x4c704c;
										_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"](),
											_0x2164b8["Core"]["debug_SpawnEnemies"]();
									}
								)),
								(this["buttons"]["NEXT MINUTE"] = this["MakeButton"](
									_0x4a3758,
									_0x41c828 + _0x627da3 * ++_0x243cfc,
									"NEXT MINUTE",
									() => {
										var _0x4da861 = _0x4c704c;
										_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"](),
											_0x2164b8["Core"]["debug_NextMinute"]();
									}
								)),
								(this["buttons"]["KILL ALL"] = this["MakeButton"](
									_0x4a3758,
									_0x41c828 + _0x627da3 * ++_0x243cfc,
									"KILL ALL",
									() => {
										var _0x4609c3 = _0x4c704c;
										_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"](),
											_0x2164b8["Core"]["RosaryDamage"]();
									}
								)),
								(_0x243cfc = -0x1),
								(_0x4a3758 = _0x2ca1bc),
								(this["buttons"]["INVULNERABLE"] = this["MakeButton"](
									_0x4a3758,
									_0x41c828 + _0x627da3 * ++_0x243cfc,
									"INVULNERABLE",
									() => {
										var _0x104798 = _0x4c704c;
										_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"](),
											_0x2164b8["Core"]["Player"]["SetInvulForMilliSeconds"](
												Number["MAX_SAFE_INTEGER"]
											);
									}
								)),
								(this["buttons"]["RECOVER HP"] = this["MakeButton"](
									_0x4a3758,
									_0x41c828 + _0x627da3 * ++_0x243cfc,
									"RECOVER HP",
									() => {
										var _0x418516 = _0x4c704c;
										_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"](),
											_0x2164b8["Core"]["Player"]["RecoverHp"](0x270f);
									}
								)),
								(this["buttons"]["GAME OVER"] = this["MakeButton"](
									_0x4a3758,
									_0x41c828 + _0x627da3 * ++_0x243cfc,
									"GAME OVER",
									() => {
										var _0x472103 = _0x4c704c;
										_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"](),
											_0x2164b8["Core"]["Player"]["OnDeath"]();
									}
								)),
								(_0x243cfc = -0x1),
								(_0x4a3758 = _0x2bef3a["right"] - 0x5a),
								(this["buttons"]["TREASURE LV1"] = this["MakeButton"](
									_0x4a3758,
									_0x41c828 + _0x627da3 * ++_0x243cfc,
									"TREASURE LV1",
									() => {
										var _0x25c01f = _0x4c704c;
										_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"](),
											_0x2164b8["Core"]["debug_Treasure"](0x1);
									}
								)),
								(this["buttons"]["TREASURE LV2"] = this["MakeButton"](
									_0x4a3758,
									_0x41c828 + _0x627da3 * ++_0x243cfc,
									"TREASURE LV2",
									() => {
										_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"](),
											_0x2164b8["Core"]["debug_Treasure"](0x2);
									}
								)),
								(this["buttons"]["TREASURE LV3"] = this["MakeButton"](
									_0x4a3758,
									_0x41c828 + _0x627da3 * ++_0x243cfc,
									"TREASURE LV3",
									() => {
										var _0x320138 = _0x4c704c;
										_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"](),
											_0x2164b8["Core"]["debug_Treasure"](0x3);
									}
								)),
								(this["buttons"]["VACUUM"] = this["MakeButton"](
									_0x4a3758,
									_0x41c828 + _0x627da3 * ++_0x243cfc,
									"VACUUM",
									() => {
										var _0x19718d = _0x4c704c;
										_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"](),
											_0x2164b8["Core"]["TurnOnVacuum"]();
									}
								)),
								this["time"]["addEvent"]({
									delay: 0x1e,
									callback: () => {
										var _0x551a32 = _0x4c704c;
										this["EnableButtons"](), this["MakeUIGrid"]();
									},
								});
						}
						["MakeUIGrid"]() {
							var _0x31b50b = _0x5d9431;
							let _0x3ccaa1 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x3ccaa1["MakeUIGrid"](0x3, 0x7, !0x1),
								_0x3ccaa1["UI_grid"]["SetContents"](0x0, 0x0, this["buttons"]["LEVEL UP"]),
								_0x3ccaa1["UI_grid"]["SetContents"](0x0, 0x1, this["buttons"]["MAX ENEMIES"]),
								_0x3ccaa1["UI_grid"]["SetContents"](0x0, 0x2, this["buttons"]["NEXT MINUTE"]),
								_0x3ccaa1["UI_grid"]["SetContents"](0x0, 0x3, this["buttons"]["KILL ALL"]),
								_0x3ccaa1["UI_grid"]["SetContents"](0x0, 0x4, this["ResumeButton"]),
								_0x3ccaa1["UI_grid"]["SetContents"](0x1, 0x0, this["buttons"]["INVULNERABLE"]),
								_0x3ccaa1["UI_grid"]["SetContents"](0x1, 0x1, this["buttons"]["RECOVER HP"]),
								_0x3ccaa1["UI_grid"]["SetContents"](0x1, 0x2, this["buttons"]["GAME OVER"]),
								_0x3ccaa1["UI_grid"]["SetContents"](0x2, 0x0, this["buttons"]["TREASURE LV1"]),
								_0x3ccaa1["UI_grid"]["SetContents"](0x2, 0x1, this["buttons"]["TREASURE LV2"]),
								_0x3ccaa1["UI_grid"]["SetContents"](0x2, 0x2, this["buttons"]["TREASURE LV3"]),
								_0x3ccaa1["UI_grid"]["SetContents"](0x2, 0x3, this["buttons"]["VACUUM"]),
								_0x3ccaa1["ToggleCursorsVisibility"](!0x0),
								_0x3ccaa1["UI_grid"]["SelectGameObject"](this["ResumeButton"]),
								(_0x3ccaa1["UI_selected"] = this["ResumeButton"]),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x3ccaa1),
								(_0x3ccaa1["OnCancelCallback"] = () => {
									var _0x5f3933 = _0x31b50b,
										_0x215cef,
										_0x4a9476,
										_0x1d7d49;
									null ===
										(_0x1d7d49 =
											null ===
												(_0x4a9476 =
													null === (_0x215cef = this["ResumeButton"]) ||
													void 0x0 === _0x215cef
														? void 0x0
														: _0x215cef["_events"]) || void 0x0 === _0x4a9476
												? void 0x0
												: _0x4a9476["pointerdown"]) ||
										void 0x0 === _0x1d7d49 ||
										_0x1d7d49["fn"]();
								});
						}
						["MakeButton"](_0x305542, _0x15833c, _0xdca863, _0x37320d) {
							var _0x4edcd9 = _0x5d9431,
								_0x4f52b7 = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: _0x305542,
									y: _0x15833c,
									width: 0x80,
									height: 0x40,
								})
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x1)
									["setInteractive"](),
								_0x4f1935 = new Phaser["GameObjects"]["Text"](
									this,
									_0x4f52b7["x"],
									_0x4f52b7["y"] - 0.5 * _0x4f52b7["displayHeight"],
									_0xdca863,
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](_0x1fa5bb["PixelScale"]);
							return (
								this["add"]["existing"](_0x4f52b7),
								this["add"]["existing"](_0x4f1935),
								_0x4f52b7["on"]("pointerdown", () => {
									_0x37320d();
								}),
								_0x4f52b7
							);
						}
						["EnableButtons"]() {
							var _0x44a5fc = _0x5d9431;
							this["ResumeButton"]["setInteractive"](),
								this["ResumeButton"]["on"]("pointerdown", () => {
									var _0x1bd1ee = _0x44a5fc;
									_0x2164b8["Core"]["SceneManager"]["ResumeFromDebug"]();
								});
						}
						["update"]() {}
					}
					class _0x39f7a9 {
						constructor(_0x2e7efd, _0x3316e2) {
							var _0x580980 = _0x5d9431;
							(this["isLink"] = !0x1),
								(this["go"] = null),
								(this["go"] = _0x2e7efd),
								(this["isLink"] = _0x3316e2);
						}
					}
					class _0x423f97 extends Phaser["Scene"] {
						constructor() {
							var _0x55c9f6 = _0x5d9431;
							super({
								key: _0x53d8cd["UI_overlayScene"],
							}),
								(this["inputDelay"] = 0xfa),
								(this["inputDelayPad"] = 0xc8),
								(this["timeDown"] = new Array()),
								(this["blockInput"] = !0x1);
						}
						["preload"]() {
							var _0xac920b = _0x5d9431;
							(this["UI_highlightL"] = null),
								(this["UI_highlightR"] = null),
								(this["UI_selected"] = null),
								(this["EnterKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["ENTER"]
								)),
								(this["SpaceKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["SPACE"]
								)),
								(this["EscKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["ESC"]
								)),
								(this["AltKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["ALT"]
								));
						}
						["create"]() {
							var _0xcab230 = _0x5d9431;
							this["input"]["gamepad"]["once"]("down", (_0x255109, _0x296b12, _0x36f48a) => {
								var _0x5931c2 = _0xcab230;
								this["gamepad"] = _0x255109;
								for (let _0xa600b6 = 0x0; _0xa600b6 < 0xa; _0xa600b6++)
									this["timeDown"]["push"](-this["inputDelayPad"]);
							}),
								(this["INPUT_cursors"] = this["input"]["keyboard"]["createCursorKeys"]()),
								(this["wKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["W"]
								)),
								(this["aKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["A"]
								)),
								(this["sKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["S"]
								)),
								(this["dKey"] = this["input"]["keyboard"]["addKey"](
									Phaser["Input"]["Keyboard"]["KeyCodes"]["D"]
								)),
								this["MakeHighlighters"](),
								this["input"]["keyboard"]
									["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["ESC"])
									["on"]("down", (_0xd330b) => {
										var _0x72f023 = _0xcab230;
										this["OnCancelPressed"]();
									}),
								this["input"]["keyboard"]
									["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["SPACE"])
									["on"]("down", (_0x1cb1a5) => {
										var _0xc4f74f = _0xcab230,
											_0x4923f6,
											_0x536e65,
											_0x207b20;
										try {
											null ===
												(_0x207b20 =
													null ===
														(_0x536e65 =
															null === (_0x4923f6 = this["UI_selected"]) ||
															void 0x0 === _0x4923f6
																? void 0x0
																: _0x4923f6["_events"]) || void 0x0 === _0x536e65
														? void 0x0
														: _0x536e65["pointerdown"]) ||
												void 0x0 === _0x207b20 ||
												_0x207b20["fn"]();
										} catch (_0x3385a0) {
											console["log"](_0x3385a0);
										}
									}),
								this["input"]["keyboard"]
									["addKey"](Phaser["Input"]["Keyboard"]["KeyCodes"]["ENTER"])
									["on"]("down", (_0x34778a) => {
										var _0x34c7a3 = _0xcab230,
											_0x35e688,
											_0x12bab6,
											_0x5976d8;
										if (!this["input"]["keyboard"]["checkDown"](this["AltKey"]))
											try {
												null ===
													(_0x5976d8 =
														null ===
															(_0x12bab6 =
																null === (_0x35e688 = this["UI_selected"]) ||
																void 0x0 === _0x35e688
																	? void 0x0
																	: _0x35e688["_events"]) || void 0x0 === _0x12bab6
															? void 0x0
															: _0x12bab6["pointerdown"]) ||
													void 0x0 === _0x5976d8 ||
													_0x5976d8["fn"]();
											} catch (_0xb66134) {
												console["log"](_0xb66134);
											}
									});
						}
						["update"](_0x5f0847, _0x5abdbb) {
							this["blockInput"] ||
								(this["UI_grid"] &&
									(this["updateCursors"](_0x5abdbb),
									this["updateController"](_0x5abdbb),
									this["HighlightButton"]()));
						}
						["updateCursors"](_0x4a0807) {
							var _0x37e462 = _0x5d9431;
							this["input"]["keyboard"]["checkDown"](this["INPUT_cursors"]["left"], this["inputDelay"])
								? (this["UI_selected"] = this["UI_grid"]["GoLeft"]())
								: this["input"]["keyboard"]["checkDown"](
										this["INPUT_cursors"]["right"],
										this["inputDelay"]
								  )
								? (this["UI_selected"] = this["UI_grid"]["GoRight"]())
								: this["input"]["keyboard"]["checkDown"](this["aKey"], this["inputDelay"])
								? (this["UI_selected"] = this["UI_grid"]["GoLeft"]())
								: this["input"]["keyboard"]["checkDown"](this["dKey"], this["inputDelay"]) &&
								  (this["UI_selected"] = this["UI_grid"]["GoRight"]()),
								this["input"]["keyboard"]["checkDown"](this["INPUT_cursors"]["up"], this["inputDelay"])
									? (this["UI_selected"] = this["UI_grid"]["GoUp"]())
									: this["input"]["keyboard"]["checkDown"](
											this["INPUT_cursors"]["down"],
											this["inputDelay"]
									  )
									? (this["UI_selected"] = this["UI_grid"]["GoDown"]())
									: this["input"]["keyboard"]["checkDown"](this["wKey"], this["inputDelay"])
									? (this["UI_selected"] = this["UI_grid"]["GoUp"]())
									: this["input"]["keyboard"]["checkDown"](this["sKey"], this["inputDelay"]) &&
									  (this["UI_selected"] = this["UI_grid"]["GoDown"]());
						}
						["updateController"](_0x29fad8) {
							var _0xdfb06 = _0x5d9431,
								_0x3d6b85,
								_0x1f1b21,
								_0x4cfe6c,
								_0x11aaf1,
								_0x5e2d15,
								_0x57ca6e,
								_0x59ee83,
								_0x392d32,
								_0x4f80ef,
								_0x70eafe,
								_0x5b6ba3;
							this["gamepad"] &&
								this["UI_grid"] &&
								(this["CheckButtonPad"](
									0x0,
									_0x29fad8,
									this["gamepad"]["left"],
									null === (_0x3d6b85 = this["UI_grid"]) || void 0x0 === _0x3d6b85
										? void 0x0
										: _0x3d6b85["GoLeft"]
								),
								this["CheckButtonPad"](
									0x1,
									_0x29fad8,
									this["gamepad"]["right"],
									null === (_0x1f1b21 = this["UI_grid"]) || void 0x0 === _0x1f1b21
										? void 0x0
										: _0x1f1b21["GoRight"]
								),
								this["CheckButtonPad"](
									0x2,
									_0x29fad8,
									this["gamepad"]["up"],
									null === (_0x4cfe6c = this["UI_grid"]) || void 0x0 === _0x4cfe6c
										? void 0x0
										: _0x4cfe6c["GoUp"]
								),
								this["CheckButtonPad"](
									0x3,
									_0x29fad8,
									this["gamepad"]["down"],
									null === (_0x11aaf1 = this["UI_grid"]) || void 0x0 === _0x11aaf1
										? void 0x0
										: _0x11aaf1["GoDown"]
								),
								this["CheckButtonPad"](
									0x4,
									_0x29fad8,
									this["gamepad"]["A"],
									null ===
										(_0x59ee83 =
											null ===
												(_0x57ca6e =
													null === (_0x5e2d15 = this["UI_selected"]) || void 0x0 === _0x5e2d15
														? void 0x0
														: _0x5e2d15["_events"]) || void 0x0 === _0x57ca6e
												? void 0x0
												: _0x57ca6e["pointerdown"]) || void 0x0 === _0x59ee83
										? void 0x0
										: _0x59ee83["fn"],
									this["UI_selected"]
								),
								this["CheckButtonPad"](
									0x5,
									_0x29fad8,
									this["gamepad"]["B"],
									this["OnCancelPressed"],
									this
								),
								this["CheckButtonPad"](
									0x6,
									_0x29fad8,
									this["gamepad"]["leftStick"]["x"] < -0.78,
									null === (_0x392d32 = this["UI_grid"]) || void 0x0 === _0x392d32
										? void 0x0
										: _0x392d32["GoLeft"]
								),
								this["CheckButtonPad"](
									0x7,
									_0x29fad8,
									this["gamepad"]["leftStick"]["x"] > 0.78,
									null === (_0x4f80ef = this["UI_grid"]) || void 0x0 === _0x4f80ef
										? void 0x0
										: _0x4f80ef["GoRight"]
								),
								this["CheckButtonPad"](
									0x8,
									_0x29fad8,
									this["gamepad"]["leftStick"]["y"] < -0.78,
									null === (_0x70eafe = this["UI_grid"]) || void 0x0 === _0x70eafe
										? void 0x0
										: _0x70eafe["GoUp"]
								),
								this["CheckButtonPad"](
									0x9,
									_0x29fad8,
									this["gamepad"]["leftStick"]["y"] > 0.78,
									null === (_0x5b6ba3 = this["UI_grid"]) || void 0x0 === _0x5b6ba3
										? void 0x0
										: _0x5b6ba3["GoDown"]
								));
						}
						["OnCancelPressed"]() {
							var _0x177cec = _0x5d9431;
							if (this["OnCancelCallback"]) return this["OnCancelCallback"]();
						}
						["CheckButtonPad"](_0x3b33a3, _0x3c52d6, _0x2255da, _0x3fe024, _0x5ca973 = this["UI_grid"]) {
							var _0x3c81ee = _0x5d9431;
							if (_0x2255da && this["timeDown"][_0x3b33a3] >= this["inputDelayPad"]) {
								if (_0x3fe024) {
									let _0xf0a685 = _0x3fe024["call"](_0x5ca973);
									_0xf0a685 && (this["UI_selected"] = _0xf0a685);
								}
								this["timeDown"][_0x3b33a3] = 0x0;
							}
							this["timeDown"][_0x3b33a3] += _0x3c52d6;
						}
						["MakeHighlighters"]() {
							var _0xbfd3cf = _0x5d9431;
							const _0x1e3258 = this["anims"]["generateFrameNames"]("UI", {
								start: 0x1,
								end: 0x8,
								zeroPad: 0x2,
								prefix: "arrow_",
								suffix: ".png",
							});
							(this["UI_highlightL"] = this["add"]
								["sprite"](-0x3e8, -0x3e8, "UI", "arrow_01.png")
								["setAlpha"](0x1)
								["setDepth"](Number["MAX_SAFE_INTEGER"])
								["setOrigin"](0x1, 0.5)
								["setScale"](0x2)),
								(this["UI_highlightR"] = this["add"]
									["sprite"](-0x3e8, -0x3e8, "UI", "arrow_01.png")
									["setAlpha"](0x1)
									["setDepth"](Number["MAX_SAFE_INTEGER"])
									["setOrigin"](0x0, 0.5)
									["setScale"](0x2)
									["setFlipX"](!0x0)),
								this["UI_highlightL"]["anims"]["create"]({
									key: "idle",
									frames: _0x1e3258,
									frameRate: 0x6,
									repeat: -0x1,
								}),
								this["UI_highlightR"]["anims"]["create"]({
									key: "idle",
									frames: _0x1e3258,
									frameRate: 0x6,
									repeat: -0x1,
								}),
								this["UI_highlightL"]["play"]("idle"),
								this["UI_highlightR"]["play"]("idle");
						}
						["MakeUIGrid"](_0x21f0ca, _0x4fc726, _0x59db4f = !0x1) {
							var _0x2a1a68 = _0x5d9431;
							(this["UI_grid"] = new (class {
								constructor() {
									var _0x39b5ff = _0x2a1a68;
									(this["selected"] = new _0x39f7a9(null, !0x1)),
										(this["currentPosition"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
										(this["wrap"] = !0x0),
										(this["currentGameObject"] = null),
										(this["previousGameObject"] = null),
										(this["onLeft"] = null),
										(this["onRight"] = null);
								}
								["Init"](_0x384977, _0x48cd12) {
									var _0x1efc1a = _0x2a1a68;
									(this["grid"] = new Array()),
										(this["width"] = _0x384977),
										(this["height"] = _0x48cd12);
									for (let _0xac0777 = 0x0; _0xac0777 < this["width"] * this["height"]; _0xac0777++)
										this["grid"]["push"](new _0x39f7a9(null, !0x1));
								}
								["Deselect"]() {
									var _0x594151 = _0x2a1a68;
									(this["previousGameObject"] = this["currentGameObject"]),
										(this["currentGameObject"] = null);
								}
								["SelectGameObject"](_0x3c7308) {
									var _0x451e1a = _0x2a1a68;
									this["previousGameObject"] = this["currentGameObject"];
									var _0x48a62e = this["grid"]["find"](
										(_0x2aa6d6) =>
											null != _0x2aa6d6 && _0x2aa6d6["go"] == _0x3c7308 && !_0x2aa6d6["isLink"]
									);
									for (let _0xc61673 = 0x0; _0xc61673 < this["grid"]["length"]; _0xc61673++) {
										const _0xb48cfa = this["grid"][_0xc61673];
										_0xb48cfa["go"] != _0x3c7308 || _0xb48cfa["isLink"] || (_0x48a62e = _0xb48cfa);
									}
									var _0x24b4e2 = this["grid"]["indexOf"](_0x48a62e);
									if (!(_0x24b4e2 < 0x0))
										return (
											(this["currentPosition"]["x"] = _0x24b4e2 % this["width"]),
											(this["currentPosition"]["y"] = Math["floor"](_0x24b4e2 / this["width"])),
											(this["currentGameObject"] = _0x48a62e["go"]),
											this["currentGameObject"]
										);
									console["error"]("GameObject not found in UI grid");
								}
								["SelectAt"](_0xaf22b4, _0x1939ce) {
									var _0x54f0bf = _0x2a1a68;
									if (!(_0xaf22b4 + _0x1939ce * this["width"] >= this["grid"]["length"]))
										return (
											(this["currentPosition"]["x"] = _0xaf22b4),
											(this["currentPosition"]["y"] = _0x1939ce),
											this["GetCurrent"]()
										);
									console["error"](
										"Invalid\x20UI\x20slot:\x20" + _0xaf22b4 + "," + _0x1939ce / this["width"]
									);
								}
								["SetContents"](_0x41fe4f, _0x37616b, _0x1a0689, _0x54c58f = !0x1) {
									var _0x372c65 = _0x2a1a68;
									(_0x41fe4f = _0x41fe4f) + (_0x37616b *= this["width"]) >= this["grid"]["length"]
										? console["error"](
												"Invalid\x20UI\x20slot:\x20" +
													_0x41fe4f +
													"," +
													_0x37616b / this["width"]
										  )
										: (this["grid"][_0x41fe4f + _0x37616b] = new _0x39f7a9(_0x1a0689, _0x54c58f));
								}
								["GetCurrent"]() {
									var _0x3cb4b5 = _0x2a1a68,
										_0x266597;
									this["previousGameObject"] = this["currentGameObject"];
									var _0x426a59 = this["currentPosition"]["x"],
										_0x359ba8 = this["currentPosition"]["y"] * this["width"],
										_0x5d7fe9 = this["grid"][_0x426a59 + _0x359ba8];
									if (null != _0x5d7fe9 && _0x5d7fe9["isLink"]) {
										_0x5d7fe9 = this["grid"]["find"](
											(_0x19d7cd) => _0x19d7cd["go"] == _0x5d7fe9["go"] && !_0x19d7cd["isLink"]
										);
										var _0x12b2e9 = this["grid"]["indexOf"](_0x5d7fe9);
										(_0x426a59 = _0x12b2e9 % this["width"]),
											(_0x359ba8 = Math["floor"](_0x12b2e9 / this["height"])),
											(this["currentPosition"]["x"] = _0x426a59),
											(this["currentPosition"]["y"] = _0x359ba8);
									}
									let _0x1d9b94 =
										null === (_0x266597 = this["grid"][_0x426a59 + _0x359ba8]) ||
										void 0x0 === _0x266597
											? void 0x0
											: _0x266597["go"];
									return (
										(this["currentGameObject"] = _0x1d9b94 || this["currentGameObject"]), _0x1d9b94
									);
								}
								["GoLeft"]() {
									var _0x2b1183 = _0x2a1a68;
									this["onLeft"] && this["onLeft"](this["GetCurrent"]());
									var _0x4d9705 = this["currentPosition"]["x"];
									return (
										(this["currentPosition"]["x"] -= 0x1),
										this["currentPosition"]["x"] < 0x0 &&
											(this["currentPosition"]["x"] = this["wrap"] ? this["width"] - 0x1 : 0x0),
										this["GetCurrent"]() ||
											((this["currentPosition"]["x"] = _0x4d9705), this["currentGameObject"])
									);
								}
								["GoRight"]() {
									var _0x5a34f7 = _0x2a1a68;
									this["onRight"] && this["onRight"](this["GetCurrent"]());
									var _0x4dfad6 = this["currentPosition"]["x"];
									return (
										(this["currentPosition"]["x"] += 0x1),
										this["currentPosition"]["x"] > this["width"] - 0x1 &&
											(this["currentPosition"]["x"] = this["wrap"] ? 0x0 : this["width"] - 0x1),
										this["GetCurrent"]() ||
											((this["currentPosition"]["x"] = _0x4dfad6), this["currentGameObject"])
									);
								}
								["GoUp"]() {
									var _0x4c9be2 = _0x2a1a68,
										_0xb0ef20 = this["currentPosition"]["y"];
									return (
										(this["currentPosition"]["y"] -= 0x1),
										this["currentPosition"]["y"] < 0x0 &&
											(this["currentPosition"]["y"] = this["wrap"] ? this["height"] - 0x1 : 0x0),
										this["GetCurrent"]() ||
											((this["currentPosition"]["y"] = _0xb0ef20), this["currentGameObject"])
									);
								}
								["GoDown"]() {
									var _0x19babe = _0x2a1a68,
										_0x1f8f71 = this["currentPosition"]["y"];
									return (
										(this["currentPosition"]["y"] += 0x1),
										this["currentPosition"]["y"] > this["height"] - 0x1 &&
											(this["currentPosition"]["y"] = this["wrap"] ? 0x0 : this["height"] - 0x1),
										this["GetCurrent"]() ||
											((this["currentPosition"]["y"] = _0x1f8f71), this["currentGameObject"])
									);
								}
							})()),
								this["UI_grid"]["Init"](_0x21f0ca, _0x4fc726),
								(this["UI_grid"]["wrap"] = _0x59db4f),
								(this["UI_selected"] = null);
						}
						["DestroyGrid"]() {
							var _0x4014dc = _0x5d9431;
							(this["UI_grid"] = null),
								(this["UI_selected"] = null),
								this["ToggleCursorsVisibility"](!0x1),
								(this["OnCancelCallback"] = null);
						}
						["ToggleCursorsVisibility"](_0x1272a4) {
							var _0xc97cdb = _0x5d9431,
								_0x1b4c1f,
								_0x27e573;
							null === (_0x1b4c1f = this["UI_highlightL"]) ||
								void 0x0 === _0x1b4c1f ||
								_0x1b4c1f["setVisible"](_0x1272a4),
								null === (_0x27e573 = this["UI_highlightR"]) ||
									void 0x0 === _0x27e573 ||
									_0x27e573["setVisible"](_0x1272a4);
						}
						["SetNesting"](_0x26261a) {
							var _0x2d0f5a = _0x5d9431;
							this["nesting"] = _0x26261a;
						}
						["HighlightButton"]() {
							var _0x512ca0 = _0x5d9431;
							if (!this["UI_selected"]) return void this["ToggleCursorsVisibility"](!0x1);
							var _0x5a58c1 = 0x0,
								_0xfbb6be = 0x0;
							let _0x3f8788 = this["UI_selected"]["parentContainer"];
							for (; _0x3f8788; )
								(_0x5a58c1 += _0x3f8788["x"]),
									(_0xfbb6be += _0x3f8788["y"]),
									(_0x3f8788 = _0x3f8788["parentContainer"]);
							(this["UI_highlightL"]["x"] =
								_0x5a58c1 +
								this["UI_selected"]["x"] -
								this["UI_selected"]["displayWidth"] * this["UI_selected"]["originX"]),
								(this["UI_highlightR"]["x"] =
									_0x5a58c1 +
									this["UI_selected"]["x"] -
									this["UI_selected"]["displayWidth"] * this["UI_selected"]["originX"] +
									this["UI_selected"]["displayWidth"]),
								(this["UI_highlightL"]["y"] =
									_0xfbb6be +
									this["UI_selected"]["y"] -
									this["UI_selected"]["displayHeight"] * this["UI_selected"]["originY"] +
									0.5 * this["UI_selected"]["displayHeight"]),
								(this["UI_highlightR"]["y"] =
									_0xfbb6be +
									this["UI_selected"]["y"] -
									this["UI_selected"]["displayHeight"] * this["UI_selected"]["originY"] +
									0.5 * this["UI_selected"]["displayHeight"]);
						}
					}
					class _0x6df669 extends Phaser["Scene"] {
						constructor() {
							super({
								key: _0x53d8cd["UI_creditsScene"],
							});
						}
						["preload"]() {}
						["create"]() {
							var _0x24b2b7 = _0x5d9431,
								_0x20b7c7 = _0x2bef3a["width"] * _0x1fa5bb["RPixelScale"],
								_0x51b7d6 = (_0x2bef3a["height"] - 0x40) * _0x1fa5bb["RPixelScale"],
								_0x44e8b7 = _0x51b7d6 * _0x1fa5bb["PixelScale"];
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x20b7c7,
								height: _0x51b7d6,
							})),
								this["background"]["setPosition"](_0x2bef3a["centerX"], _0x44e8b7),
								this["background"]["setOrigin"](0.5, 0x1),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								this["background"]["setInteractive"](),
								(this["scrollTopY"] = 0x40),
								(this["scrollHeight"] = _0x51b7d6 - 0x64),
								(this["ScrollBar"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["Scrollbar"], {
									x: _0x2bef3a["left"] + _0x20b7c7 - 0x20,
									y: this["scrollTopY"],
									width: 0x8,
									height: this["scrollHeight"],
								})
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								this["add"]["existing"](this["ScrollBar"]),
								(this["ScrollCursor"] = this["add"]
									["image"](
										_0x2bef3a["left"] + _0x20b7c7 - 0x20,
										this["scrollTopY"],
										"UI",
										"menu_slider_button_strip3.png"
									)
									["setScale"](_0x1fa5bb["PixelScale"])
									["setOrigin"](0.5, 0x0)),
								(this["header"] = this["add"]
									["text"](
										_0x2bef3a["centerX"],
										0x21,
										_0x2164b8["Lang"]["getLang"]("credits_header"),
										{}
									)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								(this["text"] = this["add"]
									["text"](0x10, 0x40, _0x2164b8["Lang"]["getLang"]("credits_header"), {})
									["setScale"](0x1 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0x0));
							var _0x847f06 = this["renderer"]["height"];
							const _0x495801 = new Phaser["GameObjects"]["Graphics"](this, {
								x: 0x0,
								y: 0x0,
							});
							_0x495801["lineStyle"](0x1, 0xffffff, 0.9),
								_0x495801["fillStyle"](0xffff, 0.2),
								_0x495801["fillRect"](
									_0x2bef3a["left"],
									0x7c,
									_0x2bef3a["width"],
									this["renderer"]["height"] - 0x80 - 0x8
								);
							var _0xaa6518 = _0x495801["createGeometryMask"]();
							(this["sc"] = new _0x3729c3(
								this,
								_0x2bef3a["centerX"],
								_0x495801["y"] + 0.5 * (this["renderer"]["height"] - 0x80 - 0x68)
							)),
								this["sc"]["setMask"](_0xaa6518),
								(this["UI_topBar"] = this["scene"]["get"](_0x53d8cd["UI_topBar"]));
							var _0xcbb9aa = this["children"]["getAll"]();
							this["children"]["removeAll"](),
								(this["SceneContainer"] = this["add"]["container"](0x0, 0x0, _0xcbb9aa)),
								this["SceneContainer"]["setScale"](_0x16385e()),
								_0x38ad94["CalculateAndSetContainerSize"](this["SceneContainer"]),
								(this["SceneContainer"]["y"] =
									this["renderer"]["height"] - this["SceneContainer"]["displayHeight"]),
								this["text"]["setText"]([
									"VAMPIRE SURVIVORS " +
										_0x2164b8["Lang"]["getLang"]("credits_gameBy") +
										" Luca Galante",
									"",
									_0x2164b8["Lang"]["getLang"]("credits_programming"),
									"\u2022 Luca Galante",
									"\u2022 David Brown",
									"\u2022 Sam McGarry",
									"",
									_0x2164b8["Lang"]["getLang"]("credits_artwork"),
									"\u2022 Alessio Greco Art",
									"",
									_0x2164b8["Lang"]["getLang"]("credits_audio"),
									"\u2022 William Davies",
									"\u2022 Elrond504",
									"\u2022 PlayOnLoop",
									"",
									_0x2164b8["Lang"]["getLang"]("credits_graphics"),
									_0x2164b8["Lang"]["getLang"]("credit_main_asset_pack") + " Oryx Design Lab",
									_0x2164b8["Lang"]["getLang"]("credit_asset_pack") + " Thomas Feichtmeir (Cyangmou)",
									_0x2164b8["Lang"]["getLang"]("credit_angel") + " Luis Zuno (Ansimuz)",
									"\u2022 Tilesets: Bokou",
									"",
									_0x2164b8["Lang"]["getLang"]("credits_animations"),
									_0x2164b8["Lang"]["getLang"]("credit_characters") + " Twiranux",
									_0x2164b8["Lang"]["getLang"]("credit_monsters") + " Mathew Gurunlian",
									"\u2022 Ben Stoneman",
									"",
									"COMMUNITY MANAGER",
									"\u2022 Beth Molloy",
									"",
									_0x2164b8["Lang"]["getLang"]("credit_translation"),
									"\u2022 한국어 : danics, 뱀서갤 ㅇㅇ(210.105)",
									"\u2022 Français : Sylang",
									"\u2022 Русский : FKPIRUS",
									"\u2022 简体中文 : cstg剑心",
									"\u2022 Português-Brasil : G Megalow",
									"\u2022 Level Up Translation",
									"",
									_0x2164b8["Lang"]["getLang"]("credit_trailer"),
									"\u2022 nareshps",
									"",
									_0x2164b8["Lang"]["getLang"]("credit_tech"),
									"\u2022 Phaser 3, RexPlugins, Electron",
								]),
								(this["sc"]["y"] = 0.5 * _0x847f06),
								this["sc"]["SetSize"](_0x2bef3a["width"], _0x847f06),
								this["sc"]["AddChildren"](this["text"]),
								this["scene"]["bringToTop"](_0x53d8cd["UI_topBar"]),
								this["HandleInput"](),
								this["MakeUIGrid"]();
						}
						["MakeUIGrid"]() {
							var _0x4071fc = _0x5d9431;
							let _0x4164b0 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x4164b0["MakeUIGrid"](0x1, 0x1, !0x1),
								_0x4164b0["UI_grid"]["SetContents"](0x0, 0x0, this["UI_topBar"]["BackButton"]),
								_0x4164b0["ToggleCursorsVisibility"](!0x0),
								_0x4164b0["UI_grid"]["SelectGameObject"](this["UI_topBar"]["BackButton"]),
								(_0x4164b0["UI_selected"] = this["UI_topBar"]["BackButton"]),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x4164b0),
								(_0x4164b0["OnCancelCallback"] = () => {
									var _0x2454e5 = _0x4071fc,
										_0x5779d8,
										_0x4a6e9f,
										_0xa60b8e;
									null ===
										(_0xa60b8e =
											null ===
												(_0x4a6e9f =
													null === (_0x5779d8 = this["UI_topBar"]["BackButton"]) ||
													void 0x0 === _0x5779d8
														? void 0x0
														: _0x5779d8["_events"]) || void 0x0 === _0x4a6e9f
												? void 0x0
												: _0x4a6e9f["pointerdown"]) ||
										void 0x0 === _0xa60b8e ||
										_0xa60b8e["fn"]();
								});
						}
						["HandleInput"]() {
							var _0x296b26 = _0x5d9431;
							this["input"]["mouse"]["disableContextMenu"](),
								this["input"]["on"]("wheel", (_0x213fc8, _0x2b8c7d, _0xd0b833, _0x337f69, _0x8f9cd) => {
									var _0xb551bd = _0x296b26;
									this["sc"]["ScrollBy"](0.4 * -_0x337f69);
								});
						}
						["update"]() {
							var _0x239913 = _0x5d9431;
							this["ScrollCursor"]["setPosition"](
								this["ScrollCursor"]["x"],
								this["scrollTopY"] +
									this["sc"]["Value"] *
										(this["scrollHeight"] * _0x1fa5bb["PixelScale"] -
											this["ScrollCursor"]["displayHeight"])
							);
						}
					}
					class _0x4e06b9 extends Phaser["Scene"] {
						constructor() {
							var _0x297b9b = _0x5d9431;
							if (
								(super({
									key: _0x53d8cd["UI_resolutionScene"],
								}),
								global["vs_ex_is_electron_win_build"])
							) {
								const { ipcRenderer: _0x2c9a12 } = _0x2931d0(0x8fa);
								this["ipcRenderer"] = _0x2c9a12;
							} else this["ipcRenderer"] = null;
						}
						["preload"]() {}
						["create"]() {
							var _0x305888 = _0x5d9431,
								_0x36faa0 = _0x2bef3a["width"] * _0x1fa5bb["RPixelScale"],
								_0x2e6da7 = (_0x2bef3a["height"] - 0x40) * _0x1fa5bb["RPixelScale"],
								_0xc61ff1 = _0x2e6da7 * _0x1fa5bb["PixelScale"];
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x36faa0,
								height: _0x2e6da7,
							})),
								this["background"]["setPosition"](_0x2bef3a["centerX"], _0xc61ff1),
								this["background"]["setOrigin"](0.5, 0x1),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								this["background"]["setInteractive"](),
								(this["header"] = this["add"]
									["text"](
										_0x2bef3a["centerX"],
										0x21,
										_0x2164b8["Lang"]["getLang"]("resolution_header"),
										{}
									)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								_0x2bef3a["left"],
								_0x2bef3a["left"];
							var _0x1f600c = 0x5a;
							(this["Res1"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
								x: _0x2bef3a["centerX"],
								y: _0x1f600c,
								width: 0x60,
								height: 0x20,
							})
								["setScale"](0x2 * _0x1fa5bb["PixelScale"])
								["setOrigin"](0.5)),
								(_0x1f600c = 0xb4),
								(this["Res2"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: _0x2bef3a["centerX"],
									y: _0x1f600c,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								(_0x1f600c = 0x10e),
								(this["Res3"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: _0x2bef3a["centerX"],
									y: _0x1f600c,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								(_0x1f600c = 0x168),
								(this["Res4"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: _0x2bef3a["centerX"],
									y: _0x1f600c,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								this["add"]["existing"](this["Res1"]),
								this["add"]["existing"](this["Res2"]),
								this["add"]["existing"](this["Res3"]),
								this["add"]["existing"](this["Res4"]),
								this["add"]
									["text"](this["Res1"]["x"], this["Res1"]["y"], "1024 x 640", {
										align: "center",
									})
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5),
								this["add"]
									["text"](this["Res2"]["x"], this["Res2"]["y"], "1536 x 960", {
										align: "center",
									})
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5),
								this["add"]
									["text"](this["Res3"]["x"], this["Res3"]["y"], "2048 x 1280", {
										align: "center",
									})
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5),
								this["add"]
									["text"](
										this["Res4"]["x"],
										this["Res4"]["y"],
										_0x2164b8["Lang"]["getLang"]("resolution_fullscreen"),
										{
											align: "center",
										}
									)
									["setScale"](1.5 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5),
								(this["UI_topBar"] = this["scene"]["get"](_0x53d8cd["UI_topBar"]));
							var _0x83be28 = this["children"]["getAll"]();
							this["children"]["removeAll"](),
								(this["SceneContainer"] = this["add"]["container"](0x0, 0x0, _0x83be28)),
								this["SceneContainer"]["setScale"](_0x16385e()),
								_0x38ad94["CalculateAndSetContainerSize"](this["SceneContainer"]),
								(this["SceneContainer"]["y"] =
									this["renderer"]["height"] - this["SceneContainer"]["displayHeight"]),
								this["EnableInput"](),
								this["ReadPlayerOptions"](),
								this["MakeUIGrid"](),
								this["time"]["addEvent"]({
									delay: 0x1,
									callback: () => {
										var _0x3822cc = _0x305888;
										_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](
											_0x2164b8["Core"]["SceneManager"]["UI_overlayScene"]
										);
									},
								});
						}
						["EnableInput"]() {
							var _0x3d77cc = _0x5d9431;
							this["Res1"]["setInteractive"](),
								this["Res2"]["setInteractive"](),
								this["Res3"]["setInteractive"](),
								this["Res4"]["setInteractive"](),
								this["Res1"]["on"]("pointerdown", () => {
									var _0x50b421 = _0x3d77cc,
										_0x171bb5;
									null === (_0x171bb5 = this["ipcRenderer"]) ||
										void 0x0 === _0x171bb5 ||
										_0x171bb5["sendSync"]("resolution", "1024 x 640"),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]),
										window["location"]["reload"]();
								}),
								this["Res2"]["on"]("pointerdown", () => {
									var _0x368f6b = _0x3d77cc,
										_0x3726aa;
									null === (_0x3726aa = this["ipcRenderer"]) ||
										void 0x0 === _0x3726aa ||
										_0x3726aa["sendSync"]("resolution", "1536 x 960"),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]),
										window["location"]["reload"]();
								}),
								this["Res3"]["on"]("pointerdown", () => {
									var _0x766bfe = _0x3d77cc,
										_0x1fe2e3;
									null === (_0x1fe2e3 = this["ipcRenderer"]) ||
										void 0x0 === _0x1fe2e3 ||
										_0x1fe2e3["sendSync"]("resolution", "2048 x 1280"),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]),
										window["location"]["reload"]();
								}),
								this["Res4"]["on"]("pointerdown", () => {
									var _0xdcd860 = _0x3d77cc,
										_0x20d213;
									null === (_0x20d213 = this["ipcRenderer"]) ||
										void 0x0 === _0x20d213 ||
										_0x20d213["sendSync"]("fullscreen", "true"),
										_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]),
										window["location"]["reload"]();
								});
						}
						["MakeUIGrid"]() {
							var _0x2a9b1f = _0x5d9431;
							let _0x1f1fab = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x1f1fab["MakeUIGrid"](0x1, 0x5, !0x1),
								_0x1f1fab["UI_grid"]["SetContents"](0x0, 0x0, this["UI_topBar"]["BackButton"]),
								_0x1f1fab["UI_grid"]["SetContents"](0x0, 0x1, this["Res1"]),
								_0x1f1fab["UI_grid"]["SetContents"](0x0, 0x2, this["Res2"]),
								_0x1f1fab["UI_grid"]["SetContents"](0x0, 0x3, this["Res3"]),
								_0x1f1fab["UI_grid"]["SetContents"](0x0, 0x4, this["Res4"]),
								_0x1f1fab["ToggleCursorsVisibility"](!0x0),
								_0x1f1fab["UI_grid"]["SelectGameObject"](this["UI_topBar"]["BackButton"]),
								(_0x1f1fab["UI_selected"] = this["UI_topBar"]["BackButton"]),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x1f1fab),
								(_0x1f1fab["OnCancelCallback"] = () => {
									var _0x5b526f = _0x2a9b1f,
										_0x531cd4,
										_0x4bf46a,
										_0x1fa5fc;
									null ===
										(_0x1fa5fc =
											null ===
												(_0x4bf46a =
													null === (_0x531cd4 = this["UI_topBar"]["BackButton"]) ||
													void 0x0 === _0x531cd4
														? void 0x0
														: _0x531cd4["_events"]) || void 0x0 === _0x4bf46a
												? void 0x0
												: _0x4bf46a["pointerdown"]) ||
										void 0x0 === _0x1fa5fc ||
										_0x1fa5fc["fn"]();
								});
						}
						["ReadPlayerOptions"]() {}
					}
					class _0x5caf44 extends Phaser["Scene"] {
						constructor() {
							var _0x24b0cf = _0x5d9431;
							super({
								key: _0x53d8cd["UI_newItemFoundScene"],
							}),
								(this["TopLeft"] = new Phaser["Math"]["Vector2"](0x0, 0x0)),
								(this["IsInitialised"] = !0x1);
						}
						["preload"]() {
							var _0xc9d3d5 = _0x5d9431;
							_0x2164b8["ApplyMenuResolution"]();
						}
						["customAngle"](_0x1a9113, _0x480493, _0x4f2932) {
							var _0x3e53b5 = _0x5d9431;
							return _0x1a9113["angle"] + 0x5;
						}
						["onEmitcustomAngle"](_0x4772a5, _0xd7f198, _0x21f3a1) {
							return 0x168 * Math["random"]();
						}
						["create"]() {
							var _0xec2496 = _0x5d9431;
							const _0xe5caf5 = this["anims"]["generateFrameNames"]("vfx", {
								start: 0x1,
								end: 0x6,
								zeroPad: 0x0,
								prefix: "Burst",
								suffix: ".png",
							});
							(this["OnEnterAnimation"] = this["add"]["sprite"](
								0.5 * this["renderer"]["width"],
								0.5 * this["renderer"]["width"],
								"vfx",
								"Burst1.png"
							)),
								this["OnEnterAnimation"]["anims"]["create"]({
									key: "enter",
									frames: _0xe5caf5,
									frameRate: 0x1e,
									repeat: 0x0,
								}),
								(this["OnEnterAnimation"]["visible"] = !0x0),
								this["OnEnterAnimation"]["setScale"](0x8),
								this["OnEnterAnimation"]["setDepth"](0x3e8),
								(this["OnEnterAnimation"]["blendMode"] = _0x1cb257["BlendModes"]["ADD"]),
								(this["PfxEmitter"] = this["add"]["particles"]("vfx")),
								this["PfxEmitter"]["createEmitter"]({
									frame: {
										frames: [
											"PfxYellow.png",
											"PfxRed.png",
											"PfxPink.png",
											"PfxColor1.png",
											"PfxColor2.png",
										],
									},
									y: this["renderer"]["height"],
									x: {
										min: 0x0,
										max: this["renderer"]["width"],
									},
									lifespan: 0x3e8,
									speedY: {
										min: -0x12c,
										max: -0x258,
									},
									scale: {
										min: 0x2,
										max: 0x4,
										start: 0x4,
										end: 0x0,
									},
									quantity: 0x8,
									blendMode: _0x1cb257["BlendModes"]["ADD"],
									rotate: {
										onEmit: (_0x11d7a0, _0x8ab2e7, _0x36b5c4) =>
											this["onEmitcustomAngle"](_0x11d7a0, _0x8ab2e7, _0x36b5c4),
										onUpdate: (_0x21cf26, _0x1cbdc6, _0x3aa6f9) =>
											this["customAngle"](_0x21cf26, _0x1cbdc6, _0x3aa6f9),
									},
								});
							var _0x38cb99 = 0.8 * _0x2bef3a["width"],
								_0x22d4c8 = 0.8 * _0x22d9a5;
							(this["background"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["MenuBackground"], {
								x: 0x0,
								y: 0x0,
								width: _0x38cb99,
								height: _0x22d4c8,
							})),
								this["background"]["setPosition"](
									0.5 * this["renderer"]["width"],
									0.5 * this["renderer"]["height"]
								),
								this["background"]["setOrigin"](0.5),
								this["background"]["setScale"](_0x1fa5bb["PixelScale"]),
								this["add"]["existing"](this["background"]),
								(this["TopLeft"]["x"] =
									this["background"]["x"] -
									0.5 * this["background"]["width"] * _0x1fa5bb["PixelScale"]),
								(this["TopLeft"]["y"] =
									this["background"]["y"] -
									0.5 * this["background"]["height"] * _0x1fa5bb["PixelScale"]);
							var _0x3485e6 = 0.95 * _0x38cb99,
								_0xd8283c = 0.2 * _0x22d4c8;
							(this["header"] = new Phaser["GameObjects"]["Text"](
								this,
								0.5 * this["renderer"]["width"],
								this["TopLeft"]["y"] + 0x2d,
								_0x2164b8["Lang"]["getLang"]("newItem_header"),
								{}
							)
								["setScale"](0x2 * _0x1fa5bb["PixelScale"])
								["setOrigin"](0.5)),
								this["add"]["existing"](this["header"]),
								(this["panel"] = new _0x3dbd7f(
									this,
									this["renderer"]["width"],
									this["TopLeft"]["y"] + _0xd8283c - 0.025 * _0x38cb99,
									_0x3485e6,
									_0xd8283c
								)),
								(this["panel"]["OnEnterTween"] = this["tweens"]["add"]({
									targets: this["panel"],
									x: this["TopLeft"]["x"] + 0.025 * _0x38cb99,
									duration: 0x96,
									ease: "Linear",
									yoyo: !0x1,
								})),
								this["add"]["existing"](this["panel"]),
								(this["OkButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["OptionsButton"], {
									x: this["background"]["x"],
									y: this["TopLeft"]["y"] + 0x3 * _0xd8283c - 0.025 * _0x38cb99,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								this["add"]["existing"](this["OkButton"]),
								(this["OkText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["OkButton"]["x"],
									this["OkButton"]["y"],
									_0x2164b8["Lang"]["getLang"]("newItem_get"),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								this["add"]["existing"](this["OkText"]),
								(this["CancelButton"] = new _0x5b4abe["NineSlice"](this, _0x395ea9["BackButton"], {
									x: this["background"]["x"],
									y: this["TopLeft"]["y"] + 0x4 * _0xd8283c - 0.025 * _0x38cb99,
									width: 0x60,
									height: 0x20,
								})
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])
									["setOrigin"](0.5)),
								this["add"]["existing"](this["CancelButton"]),
								(this["CancelText"] = new Phaser["GameObjects"]["Text"](
									this,
									this["CancelButton"]["x"],
									this["CancelButton"]["y"],
									_0x2164b8["Lang"]["getLang"]("newItem_discard"),
									{}
								)
									["setOrigin"](0.5, 0.5)
									["setScale"](0x2 * _0x1fa5bb["PixelScale"])),
								this["add"]["existing"](this["CancelText"]),
								this["background"]["setScale"](-0.2, -0.1),
								this["background"]["setAngle"](0xb4),
								(this["OnEnterTween"] = this["tweens"]["add"]({
									targets: this["background"],
									scale: _0x1fa5bb["PixelScale"],
									angle: 0x0,
									duration: 0x96,
									ease: "Linear",
									yoyo: !0x1,
								})),
								(this["IsInitialised"] = !0x0),
								this["PickWeapon"](_0x2164b8["Core"]["CurrentFoundItem"]);
						}
						["MakeUIGrid"]() {
							var _0x82590a = _0x5d9431;
							let _0x2554a9 = _0x2164b8["Core"]["SceneManager"]["UI_overlayScene"];
							_0x2554a9["MakeUIGrid"](0x1, 0x2, !0x0),
								_0x2554a9["ToggleCursorsVisibility"](!0x0),
								_0x2554a9["UI_grid"]["SetContents"](0x0, 0x0, this["OkButton"]),
								_0x2554a9["UI_grid"]["SetContents"](0x0, 0x1, this["CancelButton"]),
								_0x2554a9["UI_grid"]["SelectGameObject"](this["OkButton"]),
								(_0x2554a9["UI_selected"] = this["OkButton"]),
								_0x2164b8["Core"]["SceneManager"]["scene"]["bringToTop"](_0x2554a9),
								(_0x2554a9["OnCancelCallback"] = () => {});
						}
						["OnButtonClicked"]() {
							var _0x52ab69 = _0x5d9431;
							this["disablePanelsInput"](),
								_0x2164b8["Core"]["LevelWeaponUp"](_0x2164b8["Core"]["CurrentFoundItem"]),
								_0x2164b8["Core"]["LevelUpFactory"]["calculateWeights"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickIn"]),
								_0x2164b8["Core"]["SceneManager"]["ResumeFromItemFound"]();
						}
						["OnCancelClicked"]() {
							var _0x401277 = _0x5d9431;
							this["disablePanelsInput"](),
								_0x2164b8["Sound"]["PlaySound"](_0x522ca7["ClickOut"]),
								_0x2164b8["Core"]["SceneManager"]["ResumeFromItemFound"]();
						}
						["PickWeapon"](_0x1de724) {
							var _0x3f92c3 = _0x5d9431;
							this["panel"]["Background"]["removeAllListeners"](),
								_0x1de724
									? ((this["panel"]["visible"] = !0x0),
									  this["panel"]["AssignData"](
											_0x1de724,
											_0x2164b8["Core"]["GetWeaponLevel"](_0x1de724)
									  ),
									  this["panel"]["OnEnterTween"]["restart"](),
									  _0x2164b8["Core"]["PlayerOptions"]["FlashingVFXEnabled"]
											? this["OnEnterAnimation"]["play"]("enter")
											: this["OnEnterAnimation"]["setVisible"](!0x1),
									  this["OnEnterTween"]["restart"](),
									  this["time"]["addEvent"]({
											delay: 0x1f4,
											callback: this["enablePanelsInput"],
											callbackScope: this,
											loop: !0x1,
									  }),
									  _0x2164b8["Sound"]["PlaySound"](_0x522ca7["LevelUp"], {
											volume: 1.25,
											detune: 0x3e8,
									  }))
									: (this["panel"]["visible"] = !0x1);
						}
						["enablePanelsInput"]() {
							var _0x58a0e5 = _0x5d9431;
							this["MakeUIGrid"](),
								this["OkButton"]["setInteractive"](),
								this["OkButton"]["once"]("pointerdown", () => this["OnButtonClicked"]()),
								this["CancelButton"]["setInteractive"](),
								this["CancelButton"]["once"]("pointerdown", () => this["OnCancelClicked"]());
						}
						["disablePanelsInput"]() {
							var _0x267d2d = _0x5d9431;
							this["OkButton"]["disableInteractive"](), this["CancelButton"]["disableInteractive"]();
						}
						["update"]() {}
					}
					(document["oncontextmenu"] = function () {
						return !0x1;
					}),
						(window["onerror"] = function (_0x3c39ea, _0x13949a, _0x24bd92, _0x4b0e93, _0x3deca6) {
							var _0x23573c = _0x5d9431;
							alert(
								_0x3c39ea +
									"\n ------ \n" +
									_0x3deca6["name"] +
									"\n" +
									_0x3deca6["message"] +
									"\n" +
									_0x3deca6["stack"]
							);
						}),
						window["addEventListener"]("load", () => {
							var _0x1a8e63 = _0x5d9431;
							new _0x1fbc23(_0x712f7c);
							try {
								const _0x3bdbb3 = _0x2931d0(0x577);
								Object["assign"](console, _0x3bdbb3["functions"]);
							} catch (_0x141f95) {
								console["log"](_0x141f95["message"]);
							}
						});
					const _0x2bc3e5 = 0x1,
						_0x179e04 = _0x2bc3e5,
						_0x447595 = !0x1,
						_0x2c2b99 = "v0.2.13a - EA",
						_0x1aaca4 = 0.5,
						_0x1499e1 = 0x400 * _0x1aaca4,
						_0x22d9a5 = 0x556 * _0x1aaca4,
						_0x518e52 = 0x0,
						_0x490bcb = 0x156,
						_0x170004 = 0x1c8,
						_0xe0047c = window["innerWidth"] <= window["innerHeight"];
					var _0x4f668e = null,
						_0x4166ee = "fontANY, Courier, serif, sans-serif",
						_0xed8c17 = _0xe0047c
							? Math["min"](_0x1499e1 / window["innerWidth"], devicePixelRatio)
							: Math["min"](_0x22d9a5 / window["innerHeight"], devicePixelRatio),
						_0x2f912e = window["innerWidth"] * _0xed8c17,
						_0x4a3b1d = window["innerHeight"] * _0xed8c17,
						_0xc43097 = Phaser["Scale"]["ScaleModes"]["FIT"];
					const _0x2bef3a = {
						left: 0x0,
						right: _0x2f912e,
						gameLeft: 0x0,
						gameRight: _0x2f912e,
						width: _0x2f912e,
						height: _0x4a3b1d,
						centerX: 0.5 * _0x2f912e,
						centerY: 0.5 * _0x4a3b1d,
					};
					if (!_0xe0047c) {
						(_0xc43097 = Phaser["Scale"]["ScaleModes"]["FIT"]), (_0x4a3b1d = _0x22d9a5);
						var _0x52914d = window["innerWidth"];
						(_0x2f912e = Math["min"](0x3 * _0x1499e1, _0x52914d)) > 1.6 * _0x4a3b1d &&
							(_0x2f912e = 1.6 * _0x4a3b1d);
						var _0x2776a9 = _0x170004 * (_0x2f912e / _0x4a3b1d);
						(_0x2bef3a["left"] = 0.5 * _0x2f912e - 0.5 * _0x1499e1),
							(_0x2bef3a["right"] = 0.5 * _0x2f912e + 0.5 * _0x1499e1),
							(_0x2bef3a["width"] = _0x2bef3a["right"] - _0x2bef3a["left"]),
							(_0x2bef3a["centerX"] = 0.5 * _0x2f912e),
							(_0x2bef3a["gameLeft"] = 0.5 * _0x2776a9 - 0.5 * _0x490bcb),
							(_0x2bef3a["gameRight"] = 0.5 * _0x2776a9 + 0.5 * _0x490bcb),
							(_0x2bef3a["height"] = _0x4a3b1d),
							(_0x2bef3a["centerY"] = 0.5 * _0x4a3b1d);
					}

					function _0x16385e() {
						return _0xe0047c ? _0x2f912e / _0x1499e1 : _0x4a3b1d / _0x22d9a5;
					}
					const _0x712f7c = {
						type: Phaser["WEBGL"],
						scale: {
							parent: "phaser-game",
							mode: _0xc43097,
							autoRound: !0x0,
							autoCenter: Phaser["Scale"]["Center"]["CENTER_BOTH"],
							width: _0x2f912e,
							height: _0x4a3b1d,
						},
						input: {
							gamepad: !0x0,
						},
						scene: [
							_0x1222e0,
							_0x423f97,
							_0x508888,
							_0x31ddf3,
							_0x50c7d5,
							_0x482d91,
							_0x53db69,
							_0x4f6e29,
							_0x396aed,
							_0x36e4d3,
							_0x30e762,
							_0x395892,
							_0x210ea9,
							_0x5b2c17,
							_0x6bf905,
							_0x5057fc,
							_0x1c3251,
							_0x4d4aab,
							_0x6384af,
							_0x6df669,
							_0x4e06b9,
							_0x5caf44,
						],
						antialias: !0x1,
						physics: {
							default: "arcade",
							arcade: {
								debug: !0x1,
								gravity: {
									y: 0x0,
								},
							},
						},
						plugins: {
							global: [
								_0x5b4abe["Plugin"]["DefaultCfg"],
								{
									key: "rexPixelationPipeline",
									plugin: _0x486457["Z"],
									start: !0x0,
								},
								{
									key: "rexShatterImagePlugin",
									plugin: _0x3c2548["Z"],
									start: !0x0,
								},
							],
							scene: [
								{
									key: "rexUI",
									plugin: _0x215019["Z"],
									mapping: "rexUI",
								},
							],
						},
					};
					class _0x1fbc23 extends Phaser["Game"] {
						constructor(_0x5aa912) {
							super(_0x5aa912);
						}
						static get ["Core"]() {
							var _0x378597 = _0x5d9431;
							return this["_core"];
						}
						static set ["Core"](_0x54cf8a) {
							var _0x5df8fc = _0x5d9431;
							this["_core"] = _0x54cf8a;
						}
						static get ["Sound"]() {
							var _0x2b247 = _0x5d9431;
							return this["_sound"];
						}
						static set ["Sound"](_0x3afaa0) {
							var _0x25e772 = _0x5d9431;
							this["_sound"] = _0x3afaa0;
						}
						static get ["Lang"]() {
							return this["_lang"];
						}
						static set ["Lang"](_0x5078bd) {
							this["_lang"] = _0x5078bd;
						}
						static ["ApplyGameResolution"]() {
							var _0x3de76e = _0x5d9431;
							if (_0xe0047c) {
								var _0x4ae4bd =
									this["_core"]["scene"]["scale"]["height"] /
									this["_core"]["scene"]["scale"]["width"];
								_0x1fbc23["Core"]["scene"]["scale"]["setGameSize"](_0x490bcb, _0x490bcb * _0x4ae4bd);
							} else
								(_0x4ae4bd =
									this["_core"]["scene"]["scale"]["width"] /
									this["_core"]["scene"]["scale"]["height"]),
									_0x1fbc23["Core"]["scene"]["scale"]["setGameSize"](
										_0x170004 * _0x4ae4bd,
										_0x170004
									);
						}
						static ["ApplyMenuResolution"]() {
							var _0x1760ae = _0x5d9431;
							_0x1fbc23["Core"]["scene"]["scale"]["setGameSize"](_0x2f912e, _0x4a3b1d);
						}
					}
					const _0x2164b8 = _0x1fbc23;
					try {
						const { ipcRenderer: _0x3ddf2e } = _0x2931d0(0x8fa);
						(_0x4f668e = _0x3ddf2e)["on"]("console_log", function (_0x110e60, _0x4dc716) {
							var _0xce4904 = _0x5d9431;
							console["log"](_0x4dc716);
						});
					} catch (_0x5d0ac6) {
						_0x4f668e = null;
					}
				},
				0x17e1: (_0x493c2e) => {
					var _0x572a7c = a0_0x1be4;
					_0x493c2e["exports"] = require("crypto");
				},
				0x8fa: (_0xad0019) => {
					var _0x590250 = a0_0x1be4;
					_0xad0019["exports"] = require("electron");
				},
				0x939: (_0x5e354b) => {
					var _0x1cd23a = a0_0x1be4;
					_0x5e354b["exports"] = require("events");
				},
				0x1beb: (_0x12bc35) => {
					_0x12bc35["exports"] = require("fs");
				},
				0xe65: (_0x34b62e) => {
					var _0x5f1fdc = a0_0x1be4;
					_0x34b62e["exports"] = require("http");
				},
				0x1637: (_0x1f3eb1) => {
					_0x1f3eb1["exports"] = require("https");
				},
				0x7f5: (_0x564d6c) => {
					var _0x2a1b10 = a0_0x1be4;
					_0x564d6c["exports"] = require("os");
				},
				0x3f9: (_0xc5f561) => {
					var _0x28180f = a0_0x1be4;
					_0xc5f561["exports"] = require("path");
				},
				0xd95: (_0x26364c) => {
					var _0x1bbecb = a0_0x1be4;
					_0x26364c["exports"] = require("querystring");
				},
				0x1c8e: (_0x462a89) => {
					_0x462a89["exports"] = require("url");
				},
				0xefd: (_0x20328d) => {
					var _0x2c6969 = a0_0x1be4;
					_0x20328d["exports"] = require("util");
				},
			},
			_0x58c215 = {};

		function _0x15031e(_0x32da0b) {
			var _0x5b53cc = a0_0x1be4,
				_0x22c6c5 = _0x58c215[_0x32da0b];
			if (void 0x0 !== _0x22c6c5) return _0x22c6c5["exports"];
			var _0x4784ce = (_0x58c215[_0x32da0b] = {
				exports: {},
			});
			return (
				_0x2d484d[_0x32da0b]["call"](_0x4784ce["exports"], _0x4784ce, _0x4784ce["exports"], _0x15031e),
				_0x4784ce["exports"]
			);
		}
		(_0x15031e["m"] = _0x2d484d),
			(_0x3b44c1 = []),
			(_0x15031e["O"] = (_0x1c0de9, _0x45a7fa, _0x31019b, _0x55930f) => {
				var _0x1e97e3 = a0_0x1be4;
				if (!_0x45a7fa) {
					var _0x4520f6 = 0x1 / 0x0;
					for (_0x5306ab = 0x0; _0x5306ab < _0x3b44c1["length"]; _0x5306ab++) {
						for (
							var [_0x45a7fa, _0x31019b, _0x55930f] = _0x3b44c1[_0x5306ab],
								_0x2a7e80 = !0x0,
								_0x3eccea = 0x0;
							_0x3eccea < _0x45a7fa["length"];
							_0x3eccea++
						)
							(!0x1 & _0x55930f || _0x4520f6 >= _0x55930f) &&
							Object["keys"](_0x15031e["O"])["every"]((_0x5cb53f) =>
								_0x15031e["O"][_0x5cb53f](_0x45a7fa[_0x3eccea])
							)
								? _0x45a7fa["splice"](_0x3eccea--, 0x1)
								: ((_0x2a7e80 = !0x1), _0x55930f < _0x4520f6 && (_0x4520f6 = _0x55930f));
						if (_0x2a7e80) {
							_0x3b44c1["splice"](_0x5306ab--, 0x1);
							var _0x408816 = _0x31019b();
							void 0x0 !== _0x408816 && (_0x1c0de9 = _0x408816);
						}
					}
					return _0x1c0de9;
				}
				_0x55930f = _0x55930f || 0x0;
				for (
					var _0x5306ab = _0x3b44c1["length"];
					_0x5306ab > 0x0 && _0x3b44c1[_0x5306ab - 0x1][0x2] > _0x55930f;
					_0x5306ab--
				)
					_0x3b44c1[_0x5306ab] = _0x3b44c1[_0x5306ab - 0x1];
				_0x3b44c1[_0x5306ab] = [_0x45a7fa, _0x31019b, _0x55930f];
			}),
			(_0x15031e["n"] = (_0x4ea1fb) => {
				var _0x53cafe = a0_0x1be4,
					_0xa8673 = _0x4ea1fb && _0x4ea1fb["__esModule"] ? () => _0x4ea1fb["default"] : () => _0x4ea1fb;
				return (
					_0x15031e["d"](_0xa8673, {
						a: _0xa8673,
					}),
					_0xa8673
				);
			}),
			(_0x15031e["d"] = (_0x5d2f08, _0x22bbc7) => {
				for (var _0x298a20 in _0x22bbc7)
					_0x15031e["o"](_0x22bbc7, _0x298a20) &&
						!_0x15031e["o"](_0x5d2f08, _0x298a20) &&
						Object["defineProperty"](_0x5d2f08, _0x298a20, {
							enumerable: !0x0,
							get: _0x22bbc7[_0x298a20],
						});
			}),
			(_0x15031e["e"] = () => Promise["resolve"]()),
			(_0x15031e["o"] = (_0x53598c, _0x241853) =>
				Object["prototype"]["hasOwnProperty"]["call"](_0x53598c, _0x241853)),
			(_0x15031e["r"] = (_0x4755d6) => {
				var _0x33e92f = a0_0x1be4;
				"undefined" != typeof Symbol &&
					Symbol["toStringTag"] &&
					Object["defineProperty"](_0x4755d6, Symbol["toStringTag"], {
						value: "Module",
					}),
					Object["defineProperty"](_0x4755d6, "__esModule", {
						value: !0x0,
					});
			}),
			(_0x15031e["ab"] = "/native_modules/"),
			(() => {
				var _0x8fd10d = a0_0x1be4,
					_0x2cad8a = {
						0xb3: 0x0,
					};
				_0x15031e["O"]["j"] = (_0x3b8ebe) => 0x0 === _0x2cad8a[_0x3b8ebe];
				var _0x28a60a = (_0x164e3a, _0x1bf702) => {
						var _0xf6a5b1 = a0_0x1be4,
							_0x3e74b7,
							_0x35576c,
							[_0x1eba06, _0x502429, _0x45b8c9] = _0x1bf702,
							_0x2ce3a3 = 0x0;
						if (_0x1eba06["some"]((_0x2ad478) => 0x0 !== _0x2cad8a[_0x2ad478])) {
							for (_0x3e74b7 in _0x502429)
								_0x15031e["o"](_0x502429, _0x3e74b7) &&
									(_0x15031e["m"][_0x3e74b7] = _0x502429[_0x3e74b7]);
							if (_0x45b8c9) var _0x4ac77c = _0x45b8c9(_0x15031e);
						}
						for (_0x164e3a && _0x164e3a(_0x1bf702); _0x2ce3a3 < _0x1eba06["length"]; _0x2ce3a3++)
							(_0x35576c = _0x1eba06[_0x2ce3a3]),
								_0x15031e["o"](_0x2cad8a, _0x35576c) &&
									_0x2cad8a[_0x35576c] &&
									_0x2cad8a[_0x35576c][0x0](),
								(_0x2cad8a[_0x1eba06[_0x2ce3a3]] = 0x0);
						return _0x15031e["O"](_0x4ac77c);
					},
					_0x41f4af = (self["webpackChunkVampireSurvivors"] = self["webpackChunkVampireSurvivors"] || []);
				_0x41f4af["forEach"](_0x28a60a["bind"](null, 0x0)),
					(_0x41f4af["push"] = _0x28a60a["bind"](null, _0x41f4af["push"]["bind"](_0x41f4af)));
			})();
		var _0x20449c = _0x15031e["O"](void 0x0, [0xd8], () => _0x15031e(0xa6));
		_0x20449c = _0x15031e["O"](_0x20449c);
	})();

function a0_0x38d8() {
	var _0x5636fd = [
		"Graphics",
		"radius",
		"ExcludedItems",
		"XLMANTIS",
		"Res3",
		"properties",
		"aimVec",
		"ReachLV100WithCavallo",
		"GoBackwards",
		"OnSceneOver",
		"wasDown",
		"WITCH2",
		"OnButtonClicked",
		"imageScale",
		"Point",
		"StartReels",
		"addEvent",
		"langCodeList",
		"hasSkipped",
		"DAMAGE_box",
		"dropDownMenu",
		"stats_lifetime",
		"wake",
		"OnEnterTween2",
		"hitSprite",
		"GoRight",
		"atlas",
		"LittleHeart",
		"originY",
		"setTo",
		"AimForNearestEnemy",
		"isStartingGameMode",
		"functions",
		"GetNewAchievementsEarnedOnThisRun",
		"push",
		"MinAmountOfPowerUps",
		"prizeTypes",
		"gamepad",
		"UI_topBar",
		"charName",
		"_0x2fe49f",
		"blackTween",
		"PauseScene",
		"PEPPINO",
		"star2",
		"OnDeathEnd",
		"prizeName",
		"position",
		"maximum",
		"MAXHEALTH",
		"blockInput",
		"setAlpha",
		"BGM_new_rate",
		"onCloseDropDown",
		"imageTween",
		"KNIFE",
		"debug_CharShowcase",
		"MUMMY",
		"isLink",
		"JELLYFISH",
		"DamageNumbersEnabled",
		"_baseEnemySpeed",
		"CANDLE",
		"setCollisionByProperty",
		"RerollLevelUpPowerups",
		"AXE",
		"escKey",
		"MEDUSA_SWARM",
		"tickerCounter",
		"toString",
		"Lightning",
		"onBlur",
		"maxAngles",
		"DAMAGE_toggle",
		"closest",
		"OnPlayerQuit",
		"XLMEDUSA",
		"onRight",
		"originPos",
		"width",
		"stats_container",
		"MEDUSA1_FAST",
		"Sound",
		"RerollText",
		"myBuy",
		"EXISTING_ANY",
		"medusaElapsed",
		"value",
		"radiusTimeX",
		"reset",
		"PreloadScene",
		"perc",
		"enemyIndex",
		"MovementTween",
		"Pfx_Coin_Manager2",
		"healTimer",
		"MakeTreasure",
		"maxAngleRotDeg",
		"CollectionText",
		"MaxDestructibles",
		"LossSFX",
		"removeEventListener",
		"SelectAt",
		"RunCoins",
		"UpdateMusicVolume",
		"Medusa",
		"objects",
		"eventType",
		"json",
		"setWordWrapWidth",
		"\x20\x0a\x0a\x09\x09\x09\x09XP:\x20",
		"shapes",
		"prizeIcons",
		"Background",
		"LATODISOTTO",
		"Rosary",
		"ODDEEO",
		"Distance",
		"ShowDPSStats",
		"Return",
		"debugTime",
		"targetRadii",
		"PickupCount",
		"damageNumberPool",
		"ANDRIA",
		"currentXPfactor",
		"Explosion2",
		"OnDeathAnimationComplete",
		"RND",
		"parent",
		"panel",
		"OnEnterTween3",
		"hasTileset",
		"specialBG",
		"LIGHT",
		"ribbons",
		"owner",
		"GetCurrentCoins",
		"pfxEmitter",
		"createHash",
		"bombDeceleration",
		"stop",
		"RunEnemies",
		"AngleTween",
		"AssignPlayer",
		"sound",
		"FollowCurve",
		"chances",
		"RecalculateLoot",
		"Chest",
		"description",
		"weaponToUnlock",
		"playEvents",
		"Whistle",
		"nesting",
		"points",
		"stats_getDPS",
		"getPoints",
		"TopLeft",
		"FOCUS",
		"RosaryDamage",
		"SurvivedSecondsText",
		"SaveCollection",
		"Rectangle",
		"DestructibleTimer",
		"ExitLevelUpScene",
		"randomMinutes",
		"MakePrize",
		"RemoveWeapon",
		"StartPrizes",
		"enableInput",
		"Defeat5000Enemies",
		"NOSTRO",
		"onFocus",
		"TimeStop",
		"scrollHeight",
		"ReviveButton",
		"reels",
		"updateCursors",
		"Actions",
		"DURATION",
		"ZDamageNumber",
		"SetForNearestEnemy",
		"spaceKey",
		"MakeGem",
		"removeEvent",
		"Keyboard",
		"load",
		"fpsText",
		"die",
		"Init",
		"fillStyle",
		"inputDelay",
		"SpawnAt",
		"maxTrueWeapons",
		"BUER",
		"BATSWARM",
		"timerEvent",
		"CheatCodeUsed",
		"PlayGhostSwarm",
		"myInteractable",
		"GetTaken",
		"GetFireWandToLevel4",
		"GetSpecialWeapon",
		"customAngle",
		"ScaleTween",
		"BottomRight",
		"price",
		"DespawnIfOutside",
		"AngleFromVelocityRadians",
		"Apply",
		"updateTick",
		"result",
		"centerX",
		"setText",
		"then",
		"get",
		"keyboard",
		"SaveCoins",
		"minTreasureY",
		"openText",
		"minimumMultiplier",
		"alert",
		"setCollideWorldBounds",
		"FollowConfig_Reel_Standard1",
		"WeaponsPanel",
		"MARIA",
		"SetSeenWeapon",
		"spawned",
		"amount",
		"FindAClover",
		"OptionsContainer",
		"BLUR",
		"originX",
		"langPowerupData",
		"getHistoryIndex",
		"save_vel_y",
		"_0x2fe49a",
		"CollectedWeapons",
		"SelfDestructTimer",
		"_basePlayerPxSpeed",
		"langDropDown",
		"pickups_container",
		"Bounce",
		"Rows",
		"ChestFront",
		"_lastVelocity",
		"HandleInput",
		"SoundsVolume",
		"bounds",
		"contains",
		"PArea",
		"SpawnTimer",
		"start",
		"myPrice",
		"base",
		"removeAllListeners",
		"update",
		"CROCI",
		"UI_highlightL",
		"oncontextmenu",
		"trail_x",
		"sort",
		"getTimeScale",
		"WorldBoxCollider",
		"Treasure1",
		"GetPeachoneToLevel7",
		"valueTextObject",
		"world",
		"isFullScreen",
		"sin",
		"toLocaleString",
		"anims",
		"LoadCollection",
		"OnPanelClicked",
		"ExitOptions",
		"graphics_Good",
		"UI_creditsScene",
		"timeDown",
		"FLOWER_WALL",
		"MAGIC_MISSILE",
		"SHADE_BOMB_RED",
		"isShowingAchievements",
		"CollectionWeaponScene",
		"removeAll",
		"splice",
		"treasure",
		"key",
		"isShowingStats",
		"lastAngleIndex",
		"EnableItemPanelsInput",
		"setVelocity",
		"MOVESPEED",
		"AddWeaponIcon",
		"WeaponStore",
		"hyperToUnlock",
		"correctScrollableContainerPosition",
		"enablePanelsInput",
		"Recover1000HP",
		"GetTargetPoint",
		"Defeat100KEnemies",
		"Shuffle",
		"faceBottom",
		"ToggleHyperInUIGrid",
		"OptionsFromMainMenu",
		"index",
		"RerollRemaining",
		"COINBAG1",
		"progressHeight",
		"HasAlreadyHitObject",
		"MakeExplosion",
		"detunes",
		"ShowAchievements",
		"XLBAT",
		"healDelay",
		"HiddenWeapons",
		"GetMagicMissileToLevel7",
		"padStart",
		"openButton",
		"Update",
		"_0x2fe498",
		"graphics_Bad",
		"task",
		"setStrokeStyle",
		"Draw",
		"EnterPause",
		"debug_NextMinute",
		"MakeLevelOne",
		"emitParticleAt",
		"RedBackground",
		"GREED",
		"disableContextMenu",
		"DebugScene",
		"rotate_point",
		"Fireloop",
		"currentPosition",
		"247584znaOLo",
		"stack",
		"POPPEA",
		"JOYSTICK_box",
		"canSeeReviveButton",
		"addTilesetImage",
		"getPointAt",
		"PowerupButton",
		"Deselect",
		"FLASH_box",
		"StartFromStageSelection",
		"depth",
		"AngleFromTargetRadians",
		"NewAchievements",
		"HighlightButton",
		"_0x2fe499",
		"OnGetDamaged",
		"isActive",
		"dataKey",
		"Nuke",
		"Container",
		"setVisible",
		"PfxEmitter1",
		"isDead",
		"PlayShadeBomb",
		"QScoinsEmitterTimer",
		"PlayFlower",
		"thumb",
		"bonusCoinsText",
		"duration",
		"trailUpdate",
		"weaponType",
		"FindAnOrologion",
		"moreX",
		"fillCircle",
		"setBlendMode",
		"ENTER",
		"SpawnDestructibleInRandomLocation",
		"backgroundOverlay",
		"clearTint",
		"translations",
		"EvolveLightning",
		"checksum",
		"targets",
		"Line",
		"alpha",
		"UI_highlightR",
		"timesFired",
		"myButton1Text",
		"ScreenRectangle",
		"myIcon",
		"InitGame",
		"myIconBG",
		"deathKB",
		"SpecialWeapons",
		"ResumeCamera",
		"concat",
		"LAMA",
		"reverse",
		"gameRight",
		"UpdateCoins",
		"stats_isBestDPS",
		"positions",
		"unlocked",
		"AchievementText",
		"dataType",
		"fwEmitter",
		"pools",
		"ClickOut",
		"JOYSTICK_text",
		"containmentRect_Bullets",
		"totalCoins",
		"AchiText",
		"Die",
		"copyPosition",
		"Hyper_Box",
		"RunTimeHue",
		"delay",
		"isEvolution",
		"shatter",
		"normalize",
		"layerContainers",
		"armor",
		"RemovedWeapons",
		"mods",
		"COINBAG2",
		"EnableQS",
		"LUCK",
		"JELLY_WALL",
		"stageName",
		"Utils",
		"TrueSpeed",
		"Gem",
		"Approach",
		"fwEmitters",
		"EnemySpeed",
		"GroundFx",
		"OnEnterTween",
		"BGM_Library",
		"countActive",
		"alertTween",
		"ActiveBulletCount",
		"OROLOGION",
		"rectInner",
		"destructibleChance",
		"clearPositions",
		"circle",
		"MARIANNA",
		"Play",
		"BGM_Intro",
		"AddChildren",
		"UpperMask",
		"FILLER",
		"canvas",
		"runSpeed",
		"moveSpeed",
		"XLMUMMY",
		"stopFollow",
		"previousArea",
		"body",
		"SelectedHyper",
		"counterRing",
		"DEATH",
		"_0x2fe49b",
		"header",
		"data",
		"SetInvulForMilliSeconds",
		"damageKB",
		"Spawn",
		"alphaMod",
		"Destructibles",
		"SPEED",
		"DisablePanelsInput",
		"alertSprite",
		"SpawnDestructibleOutOfSight",
		"STREAMERSAFE_text",
		"GetRemainingWeaponsAndPowerUps",
		"prefix",
		"ReverseValue",
		"NORMAL",
		"existing",
		"RefundButton",
		"FIT",
		"myDesc",
		"angleHistory",
		"atan2",
		"GREENACRES",
		"EvolveSantaWater",
		"PANINI",
		"SpawnEnemiesHorizontal",
		"hitsWalls",
		"OpenOptions",
		"ExitButton",
		"BGM_GameOver",
		"LevelWeaponUp",
		"myCoins",
		"pfxEmitter2",
		"BOSS_MEDUSA1",
		"ipcRenderer",
		"apply",
		"_get",
		"CurrentTreasureLevel",
		"leftStick",
		"\x20\x0a\x09\x09\x09\x09\x0a\x09\x09\x09\x09Bullets:\x20",
		"MakeDestructible",
		"ROAST",
		"QSSecondEvent",
		"UI_grid",
		"PullRemainingPowerUp",
		"displayWidth",
		"onBulletOverlapsEnemy",
		"XpRequiredToLevelUp",
		"ResolutionButton",
		"OptionsButton",
		"IdleTimer",
		"VOID",
		"mapPath",
		"HasRerolls",
		"MakeButton",
		"game",
		"QS_SFX",
		"Alert",
		"send",
		"tint",
		"ShowOKButton",
		"ResumeFromFreeze",
		"langNameList",
		"DebugText",
		"stageType",
		"currentGameObject",
		"DULL2",
		"myOverlay",
		"BOSS_XLMUMMY",
		"LayerUp",
		"firingTimer",
		"MEDUSA2_FAST",
		"trail",
		"LifetimeCoins",
		"RadToDeg",
		"type",
		"debug_FireAll",
		"HOLY_MISSILE",
		"ARMOR",
		"MakeMasks",
		"setX",
		"AttachTreasure",
		"percentage",
		"UI_levelUpScene",
		"RecoverHp",
		"HasSkips",
		"DYNAMIC_BODY",
		"SKIP",
		"addListener",
		"powerup_container",
		"ApplyInitialVelocity",
		"getTilesWithin",
		"targetAngles",
		"spriteName",
		"myLevelsChecks",
		"INPUT_cursors",
		"renderer",
		"sendSync",
		"langCode",
		"PostGameScene",
		"FIXED",
		"createGeometryMask",
		"deltaTime",
		"Treasure2",
		"Random",
		"AMOUNT",
		"spawnType",
		"LevelUpFactory",
		"BackText",
		"ShowTween",
		"explosionCircle",
		"dumpJoyStickState",
		"tween2",
		"innerHeight",
		"ExcludedWeapons",
		"shape1",
		"SKULL2",
		"ring",
		"hpBarWidth",
		"baseMarkup",
		"StopReels",
		"PDuration",
		"PUSH",
		"StartTreasureScene",
		"updateTrail2",
		"Game",
		"_speed",
		"level",
		"MovementTweens",
		"Arcade",
		"AddSpriteFollower",
		"HORIZONTAL",
		"EffectiveSpawnFrequency",
		"remove",
		"Stop",
		"debug_AddAllWeapons",
		"bosses",
		"maxCharges",
		"UnlockedPowerUpRanks",
		"trueWeapon",
		"Unlock2Hypers",
		"onWorldBounds",
		"inner",
		"BlendModes",
		"goldPrize",
		"UpperFreeMask",
		"HPxLevel",
		"footer",
		"onBulletOverlapsDestuctible",
		"UniteBirds",
		"PlayerOptions",
		"FIREBALL",
		"Defeat3000Buers",
		"QuitText",
		"round",
		"pixelHeight",
		"fillScale",
		"hasOwnProperty",
		"CoinsBG",
		"OnClick",
		"AccelTween",
		"explosionPool",
		"langCharacterData",
		"onMenuClick",
		"cameraFilter",
		"_events",
		"LevelUpScene",
		"Freeze",
		"GetStopDelays",
		"PINEYE",
		"debugEnemies",
		"Survive20MinutesWithCurse",
		"error",
		"background",
		"FLOWER",
		"myWeaponIcon",
		"gemsPool",
		"weight",
		"FLASH_toggle",
		"CASTLE",
		"ReachLV20InMadForest",
		"RANDOM",
		"DisabledMiniButton",
		"obtainedGold",
		"Orologion",
		"isBroken",
		"Pfx_Coin_Manager",
		"setOwner",
		"StopMusic",
		"centerY",
		"CyclePrizes",
		"timeScale",
		"Pfx_CoinFront_Manager2",
		"EvolveMagicWand",
		"UnlockedCharacters",
		"mouse",
		"RunPickups",
		"FixedDirection",
		"accel",
		"AccumulatedItemPrizes",
		"EnableOptions",
		"MAGNET",
		"resultIndex",
		"regen",
		"LANCET",
		"passThroughWalls",
		"MakePickup",
		"Magnet",
		"onHPRecoveryCallback",
		"AssignWeapon",
		"createLayer",
		"SaveBLuck",
		"isInitialized",
		"style",
		"ProjectileSpeed",
		"detune",
		"MakeUIGrid_Options",
		"EvolveGarlic",
		"PixelScale",
		"bulletType",
		"isSelfDestructionTriggered",
		"halfHeight",
		"setBackgroundColor",
		"skills",
		"PlaySound",
		"disableInput",
		"maxTreasureY",
		"GHOST_SWARM",
		"indexInWeapon",
		"maxPositions",
		"sendToBack",
		"getObjectLayer",
		"OnCharacterBought",
		"CalculateEnemySpeed",
		"pluginFilter",
		"PRISM",
		"setFlipX",
		"character",
		"EnableDragging",
		"CurrentFoundItem",
		"AddCoins",
		"setData",
		"SwarmCheck",
		"BGM_text",
		"Color",
		"isBought",
		"GetLightningRingToLevel4",
		"faceRight",
		"myButton1",
		"CleanUp",
		"trueWidth",
		"createTextObject",
		"getElement",
		"FLASH_text",
		"FireOneLancet",
		"isOpen",
		"addKey",
		"createGravityWell",
		"characterName",
		"\x20\x0a\x0a\x09\x09\x09\x09",
		"multiatlas",
		"isPointWithinCollisionLayer",
		"item",
		"GetWeapon",
		"MoveCounter",
		"SHADEBLUE",
		"EnterDebug",
		"SHADERED",
		"hpBarOffset",
		"containmentRect_Screen",
		"pop",
		"DARK",
		"debugText",
		"Ellipse",
		"EnemyHealthMultiplier",
		"exists",
		"Survive20Minutes",
		"res_Rosary",
		"OmniScene",
		"isTeleportOnCull",
		"SetNesting",
		"velocity",
		"isCullable",
		"stats_inflictedDamage",
		"ZInGameUI",
		"pointer1",
		"PIRIPIRI",
		"setFrame",
		"PASQUALINA",
		"DestroyedCount",
		"interval",
		"setBounce",
		"cameras",
		"_coinSprites",
		"onOpenDropDown",
		"toFixed",
		"OnCancelCallback",
		"minimum",
		"findWeaponLevel",
		"BOSS_COUNT1",
		"impactSprite",
		"parentContainer",
		"setOffset",
		"bgtile",
		"PickWeapon",
		"char",
		"maps",
		"bubbles",
		"UI_overlayScene",
		"RestoreBackupText",
		"setBounds",
		"DULL1",
		"setPosition",
		"explodeTimer",
		"INVUL",
		"DOMMARIO",
		"UpdateKills",
		"CheckForLevelUp",
		"NONE",
		"Input",
		"CLEAR",
		"CURSE",
		"SyncSteamAchievements",
		"showcase",
		"penetrating",
		"_0x2fe49c",
		"MusicVolume",
		"backgroundColor",
		"UI_selected",
		"DestructibleLocations",
		"EraseEnemies",
		"saveJsonBackup",
		"myTips",
		"StartFromCharSelection",
		"Pfx_CoinFront",
		"BONE",
		"checkDown",
		"receivingDamage",
		"PORTA",
		"37064772lWEFiY",
		"OnEnterAnimation",
		"myWarn",
		"myDescription",
		"MakeTexture_ExistingWeapons",
		"AREA",
		"_sound",
		"target",
		"targetZone",
		"CreditsText",
		"cursors",
		"CollectionButton",
		"enabled",
		"walkingFrames",
		"SILF",
		"GameOver",
		"SetupTreasureLevel2",
		"StripEnd",
		"EnableInput",
		"CharMarkup",
		"CheckColor",
		"LEVELUP",
		"cursorsVector",
		"PreviousXpRequiredToLevelUp",
		"DestroyGrid",
		"onMagnetOverlapsPickup",
		"TIMEFREEZE",
		"filter",
		"BGM_new_detune",
		"GoUp",
		"achievement",
		"AchiAd_Text",
		"ROSARY",
		"instances",
		"Sprite",
		"CONCETTA",
		"BOSS_XLMEDUSA",
		"setSize",
		"container",
		"removeInteractive",
		"myTick",
		"SIGMA",
		"HELLFIRE",
		"abs",
		"growth",
		"vs_ex_is_electron_win_build",
		"GROWTH",
		"HOLYWATER",
		"HasPowerupsInStore",
		"levelUpOptions",
		"Stage",
		"BGM_detune",
		"EnableButtons",
		"BeginnersLuck",
		"CurrentTreasureTypes",
		"OnHasHitWall",
		"PfxEmitterExplosionManager",
		"indexOf",
		"VersionButton",
		"colorValue",
		"langStageData",
		"scene",
		"grid",
		"connected",
		"entries",
		"AimForRandomeEnemyInRect",
		"hitBoxDelay",
		"magnet",
		"pause",
		"moreY",
		"Survive30MinutesInGreenAcres",
		"BlitterOneBusy",
		"Clone",
		"DisableOptions",
		"Value",
		"CHERRY",
		"DegToRad",
		"IntroScene",
		"maxHistory",
		"stored",
		"myHyper",
		"scale",
		"RemoveHiddenWeapon",
		"location",
		"MEDUSA_WALL",
		"circleArea",
		"ReadPlayerOptions",
		"ghost1",
		"GameOverScene",
		"tips",
		"UI_newItemFoundScene",
		"Scene",
		"faceLeft",
		"fwEmitter2",
		"bounces",
		"TextureNames",
		"SelectedStage",
		"hpBarHeight",
		"Explosion",
		"offsetY",
		"NEO",
		"trailAlpha",
		"sprite",
		"addAt",
		"BOSS_BUER",
		"PlayerPxSpeed",
		"angle",
		"RefreshSize",
		"getTileAtWorldXY",
		"invulTime",
		"getMaxTextObjectSize",
		"ToggleButtonInUIGrid",
		"ticks",
		"Scrollbar",
		"canHeal",
		"Invalid\x20UI\x20slot:\x20",
		"updateController",
		"LifetimeHeal",
		"min",
		"dontSpawnIfAbove",
		"createMenuButton",
		"OnSelfDestruct",
		"ThingFound",
		"LaunchUIOverlay",
		"joyStick",
		"XLFLOWER",
		"recoveredHP",
		"res_Freeze",
		"glTexture",
		"sprite2",
		"initialVelocity",
		"critMul",
		"tickerEvent",
		"myName",
		"DayColor",
		"RefreshPanels",
		"StreamSafeEnabled",
		"RefundAll",
		"ResumeFromLevelUp",
		"rotation",
		"zoom",
		"graphics",
		"enemyType",
		"setTint",
		"AddWeapon",
		"AccumulatedCoinPrize",
		"keys",
		"BGM_Forest",
		"OnSelectionChange",
		"MakeTextureNamesFromPrizes",
		"activePointer",
		"wKey",
		"GoLeft",
		"debug_Treasure",
		"group",
		"replace",
		"parse",
		"GetAngle",
		"COOLDOWN",
		"tween1",
		"scrollTopY",
		"halfWidth",
		"RotateVectorByDegrees",
		"StartText",
		"PowerUpFromMainMenu",
		"blendMode",
		"RearrangeIcons",
		"Save",
		"canBounce",
		"ShowRecoveryAt",
		"EnterKey",
		"GetExistingNotMaxedWeapons",
		"updateFreq",
		"LevelUp",
		"setEmitZone",
		"KillsText",
		"AchiAdGroup",
		"setFlipY",
		"damageZone2",
		"_currentDirection",
		"yOffset",
		"PlayerCoinsText",
		"height",
		"Angel",
		"requiresLevel",
		"CheckButtonPad",
		"StartFromMainMenu",
		"EnemyHealth",
		"CAVALLO",
		"UnlockedWeapons",
		"_coinRT",
		"myLevelsBG",
		"fixedPrizes",
		"pauseOnBlur",
		"hitVFXPool",
		"Math",
		"overlapRect",
		"despawnTimer",
		"MusicEnabled",
		"MORTACCIO",
		"VACUUM",
		"langWeaponData",
		"StageSelectionScene",
		"RestoreBackupButton",
		"color",
		"name",
		"damageZoneDefaultRadius",
		"CurrentFixedTreasures",
		"QSEvent",
		"delayBasedOnDuration",
		"GetPlayerFacingVelocity",
		"ResumeButton",
		"BGM_ignoreModsForNewSoundtrack",
		"SetInvulForMilliSecondsNonCumulative",
		"StopSound",
		"PUGNALA",
		"dropDownButton",
		"parseInt",
		"bringToTop",
		"GEM",
		"rayDuration",
		"DayNightHue",
		"ScrollBar",
		"MaxGems",
		"instance",
		"updateTrail",
		"ApplyGameResolution",
		"_0x2fe497",
		"Regenerate",
		"isStationary",
		"layers",
		"gridScene",
		"Events",
		"angleTime",
		"QSCounterDelay",
		"achievements",
		"Circle",
		"INVULNERABLE",
		"SILF3",
		"_blinkTimeout",
		"Firing:\x20",
		"destructibleChanceMax",
		"IsTimeStopped",
		"CollisionLayers",
		"onPlayerOverlapsEnemy",
		"tilingTileset",
		"sliderMinX",
		"STREAMERSAFE_toggle",
		"historyIndex",
		"test",
		"Text",
		"posHistory",
		"rerolls",
		"down",
		"Res4",
		"MakeCoinsEmitter",
		"unlockedRank",
		"THORNS",
		"assign",
		"random",
		"BOSS_ECTO",
		"setPos",
		"hasThorns",
		"setTimeScale",
		"OkButton",
		"WEAPON",
		"Pfx_Coin2",
		"setBoundsRectangle",
		"HighlightedPanel",
		"inputDelayPad",
		"Defeat3000Skeletons",
		"DefaultCfg",
		"SceneContainer",
		"MakeRibbons",
		"OnStart",
		"MUDMAN1",
		"recoveredCalculated",
		"resumme",
		"current",
		"RandomOutside",
		"Image",
		"Disappear",
		"SpawnInRandomLocation",
		"Res1",
		"DPS",
		"stats_DPS",
		"MAREMMA",
		"globalScale",
		"Between",
		"posY",
		"Pfx_CoinFront_Manager",
		"FadeMusic",
		"luck",
		"_baseEnemyHealthMultiplier",
		"existsSync",
		"CalculateXPfactor",
		"center",
		"__esModule",
		"SetSize",
		"_invul",
		"frameName",
		"GetPermanentEnemiesNumber",
		"focus",
		"lasRadiusIndex",
		"setDepth",
		"Achievements",
		"repeatInterval",
		"poolLimit",
		"\x0a\x09\x09\x09\x09Enemies:\x20",
		"Open",
		"killedAmount",
		"characterType",
		"glow",
		"previousXPfactor",
		"isWeapon",
		"CancelButton",
		"currentVolume",
		"stopUpdate",
		"immovable",
		"scaleTween",
		"fadeOutTween",
		"setCircle",
		"bossPools",
		"reelConfig",
		"chance",
		"PullExistingRemainingWeapon",
		"GRAZIELLA",
		"resetPoints",
		"SpawnEnemiesInOuterRect",
		"restart",
		"Rope",
		"TurnToStart",
		"GetDamaged",
		"exportGameData",
		"FEBBRA",
		"setDepthPlease",
		"resume",
		"playReviveAnim",
		"ResumeFromPause",
		"StopRibbons",
		"create",
		"destructibleType",
		"Scale",
		"Hyper_Toggle",
		"UI_mainMenu",
		"isKilled",
		"frame",
		"BackwardTween",
		"onLeft",
		"LoadBLuck",
		"MagicMissile",
		"GERMANA",
		"BRAZIER",
		"displayHeight",
		"BAT2",
		"FreezeSnapshot",
		"isDown",
		"SurvivedSeconds",
		"BOSS_XLDEATH",
		"Show",
		"HOLYBOOK",
		"_0x2fe49e",
		"BORA",
		"FadeOut",
		"EvolveCross",
		"FINO",
		"log",
		"Survive20MinutesWithCross",
		"_dispose",
		"MenuBackground",
		"collider",
		"SKULL2_SWARM",
		"Have6DifferentWeapons",
		"currentDirection",
		"LoadOptions",
		"area",
		"Revive",
		"SILF2",
		"Spline",
		"IsInvul",
		"SetTarget",
		"power",
		"powerUps",
		"Enemies",
		"GetGarlicToLevel7",
		"isTakingSnapshot",
		"pointer",
		"isPowerUp",
		"main",
		"ReviveText",
		"isUnlocked",
		"defaultSpeed",
		"shadowTween",
		"langData",
		"minAngleRotDeg",
		"PENTA",
		"BGM_box",
		"MAX_SAFE_INTEGER",
		"tilePositionY",
		"ResumeFromDebug",
		"playerUI_levelUp",
		"followerConfig",
		"EXDASH",
		"PowerUpScene",
		"BOSS_MUD",
		"achievementsPopup",
		"targetTint",
		"BAT5",
		"Earn5000CoinsInASingleRun",
		"Physics",
		"reduce",
		"BOSS_XLFLOWER",
		"Weapons",
		"icons_container",
		"DefeatBossLibrary",
		"getAll",
		"revivals",
		"rexUI",
		"EXISTING_WEAPON",
		"prize",
		"well",
		"Add",
		"ShowScrollbar",
		"AddCoinsFlat",
		"levelReached",
		"call",
		"GetLevelUpItems",
		"myCheckbox",
		"EvolveKnife",
		"fillRect",
		"IsInitialised",
		"scaleY",
		"BAT3",
		"closeLangDropDown",
		"fadeOutTweeen",
		"AimForRandomEnemyInScreen",
		"COINBAGMAX",
		"SetTreasureLevelFromChance",
		"writeFileSync",
		"ToggleCursorsVisibility",
		"BackFromPowerUpSelectionScene",
		"TreasureQueue",
		"SelfDestruct",
		"DEFAULT_SPEED",
		"Shot",
		"achieved",
		"PlayMedusaWall",
		"PINO",
		"ResolutionText",
		"EnableBack",
		"CalculateWeightsWithExclusions",
		"follower",
		"SetContents",
		"CreditsButton",
		"SetCollideWithWorld",
		"legacyBGM",
		"JOYSTICK_toggle",
		"MEDUSA1",
		"MakeHighlighters",
		"unshift",
		"skips",
		"REGEN",
		"tweens",
		"Coin",
		"BoughtCharacters",
		"FindAStoneMask",
		"particlesInterval",
		"DisabledButton",
		"isFocused",
		"bitmapFont",
		"ASSUNTA",
		"SaveHeal",
		"AltKey",
		"HideReels",
		"Vacuum",
		"audio",
		"SkipText",
		"\x20\x0a\x0a\x09\x09\x09\x09Pickups:\x20",
		"SaveGameResults",
		"done",
		"posX",
		"graphics2",
		"createEmitter",
		"ONE",
		"CoinsAward",
		"draw",
		"flipX",
		"ribbons2",
		"selected",
		"destructiblesPool",
		"furthest",
		"Survive1Minute",
		"AchievementsFromMainMenu",
		"SetupTreasureLevel3",
		"Group",
		"Hit",
		"PlayerLevelText",
		"knockback",
		"destroy",
		"DETH",
		"GoToPlayer",
		"398741hmRiFd",
		"text",
		"HitboxTimer",
		"langAchievementData",
		"PfxEmitterManager",
		"sprite1",
		"HEAVENSWORD",
		"LIGHTNING",
		"pickupPool",
		"destroyedAmount",
		"moveTo",
		"textures",
		"ANTONIO",
		"message",
		"speed",
		"toStringTag",
		"events",
		"ExitText",
		"length",
		"_baseProjectileSpeed",
		"ZOMBIE",
		"LoadUnlocks",
		"star1",
		"pixelWidth",
		"scaleMul",
		"blockFire",
		"scaleGroundTweeen",
		"grav",
		"BackFrom_Resolution",
		"DeSpawn",
		"ERASE_ENEMIES",
		"CurrentBGM",
		"EnterStageReward",
		"pickedupAmount",
		"SkipButton",
		"RefundText",
		"OnTeleportOnCull",
		"ToggleHighlight",
		"Resolution_FromMainMenu",
		"sleep",
		"time",
		"calculateWeights",
		"lastShotTimer",
		"ClearTimeStop",
		"characterToUnlock",
		"title",
		"ReachLV5",
		"Recycle",
		"OnDeath",
		"musicLibrary",
		"Display",
		"frameNameUnlock",
		"CollectionAchievementsScene",
		"NightColor",
		"VESPERS",
		"PPower",
		"Break",
		"DisableButtons",
		"setTintFill",
		"SpaceKey",
		"GetRandomWeightedWeapon",
		"soundLibrary",
		"damageZone",
		"exports",
		"GetColor",
		"children",
		"screenYcoordToPositionScrollableContainer",
		"KillCount",
		"onEmitcustomAngle",
		"Treasure3",
		"PowerUpIcons",
		"SKULL_SWARM",
		"getLang",
		"OnConfirmClicked",
		"startingWeapon",
		"SKELETON",
		"characterSprite",
		"SaveUnlocks",
		"pickedWeapons",
		"beginPath",
		"ExpireTimer",
		"pool",
		"Make",
		"SaveOptions",
		"SPACE",
		"UnlockedStages",
		"LORDO",
		"BounceTimer",
		"Curves",
		"objectsHit",
		"IS_TOUCH",
		"safeXY",
		"NDUJA",
		"frameNames",
		"createCursorKeys",
		"CollectedItems",
		"Language",
		"LIBRARY",
		"resolve",
		"ScrollBy",
		"every",
		"OnHasHitAnObject",
		"VersionText",
		"StartingSpawns",
		"FlashingVFXEnabled",
		"GoldMultiplier",
		"velocityFromRotation",
		"VERTICAL",
		"HideReviveButton",
		"THOUSAND",
		"PentagramSFX",
		"PlayerUI",
		"copy",
		"snapshot",
		"canToggleFullscreen",
		"bind",
		"BackFromGameOver",
		"REVIVAL",
		"BGMan",
		"sliderMaxX",
		"ceil",
		"SceneManager",
		"ParseLevelUpInfo",
		"angles",
		"preload",
		"SFX_box",
		"74804zrRvgX",
		"callback",
		"SCYTHE",
		"MEDUSA2_AGGRO",
		"BAT4",
		"LITTLEHEART",
		"STREAMERSAFE_box",
		"QuitButton",
		"faceTop",
		"curse",
		"EVOLUTION",
		"_velocity",
		"innerWidth",
		"WeightedStore",
		"isGLTexture",
		"pianificami",
		"DisableBack",
		"trueHeight",
		"EnterLevelUp",
		"icons_container_defaultY",
		"OptionsMiniButton",
		"StartCounter",
		"volume",
		"f11key",
		"image",
		"AddHiddenWeapon",
		"digest",
		"xIncrease",
		"isSpecialOnly",
		"maxHp",
		"SetupTreasureLevel1",
		"ResetFiringTimer",
		"RemoveSnapshot",
		"GoDown",
		"TriggerSwitchEvent",
		"updateTimers",
		"myListOfStats",
		"launch",
		"STATS_TREASURE_1",
		"CheckAllAndDespawnIfOutside",
		"EscKey",
		"TurnTowards",
		"input",
		"TIME",
		"bonusCoinsAmount",
		"defineProperty",
		"levelName",
		"ResumeFromTimeStop",
		"aKey",
		"particles",
		"itemType",
		"WrapInRectangle",
		"PAmount",
		"ForceResize",
		"hasHit",
		"critChance",
		"prizes",
		"moveTween",
		"RerollButton",
		"removeKey",
		"RIGHT",
		"DismissScene",
		"outline",
		"PfxEmitter",
		"BGM_Library_Legacy",
		"timeOffset",
		"next",
		"add",
		"sliderBounds",
		"GetHolyBookToLevel4",
		"hasBackup",
		"PowerUpMarkup",
		"Pfx_Coin",
		"distanceSq",
		"wiggleTween",
		"KillsIcon",
		"dayCycleDuration",
		"BackFromAchievements",
		"BGTextureName",
		"groundFxAlpha",
		"webpackChunkVampireSurvivors",
		"UnlockAchievement",
		"active",
		"getAt",
		"growTween",
		"ShowHitVFXAt",
		"StopCamera",
		"tween",
		"BGM",
		"fadeInTween",
		"FormatTime",
		"SpeedTween",
		"PlayMusic",
		"end",
		"FindARosary",
		"BGM_GreenAcres",
		"DEFAULT",
		"MakeWinIcons",
		"source",
		"GetCurrent",
		"slice",
		"Eat5PotRoast",
		"ghosts",
		"GetRadius",
		"stopp",
		"rewardTitle",
		"PullExisting",
		"Contains",
		"7152410ebAfjW",
		"PickRandomLevelUps",
		"StartButton",
		"DIAMOND",
		"Pfx_CoinFront2",
		"OptionsText",
		"rays",
		"rectOuter",
		"setDraggable",
		"IsFrozen",
		"plugins",
		"Shatter",
		"MakePlayer",
		"mask",
		"ECTO1",
		"setScale",
		"SFX_text",
		"GARLIC",
		"pick",
		"FreezeTimer",
		"Remove",
		"disableInteractive",
		"rarity",
		"UpdatePlayerLevel",
		"enable",
		"GetStatDisplayTextValue",
		"Destroy20Candles",
		"isReadyToStart",
		"physics",
		"accumulatedWeight",
		"powerUpToUnlock",
		"ProgressBox",
		"WHIP",
		"GreenButton",
		"Player",
		"CurrentAmountOfPanels",
		"spawnWeaponAt",
		"Geom",
		"throw",
		"MainScene",
		"ChanceForExistingPowerUp",
		"MakeRectangleMask",
		"shadow",
		"UnlockedHypers",
		"OptionsScene",
		"LATODISOPRO",
		"MakePrizePairFromAvailablePowerUps",
		"QuitFromPauseMenu",
		"HidePrizes",
		"_core",
		"_0x2fe49d",
		"BOSS_COUNT2",
		"AimForRandomEnemy",
		"Survive10Minutes",
		"AddHeal",
		"OnIntroEnded",
		"LerpColor",
		"enemies",
		"nFormatter",
		"WITCH1",
		"whiteDot",
		"BESUGO",
		"MaxY",
		"LAUREL",
		"saveTexture",
		"CoinsIcon",
		"\x20yy:",
		"FireOneBullet",
		"ResumeFromTreasureScene",
		"moveTweenIndex",
		"canScroll",
		"surname",
		"MinY",
		"res_Debuffs",
		"SINKING",
		"tileSprite",
		"Survive30MinutesWithAxe",
		"StartFromPostGame",
		"reload",
		"CheckFirstInput",
		"altKey",
		"LootManager",
		"prizeEnum",
		"isPlaying",
		"_baseGoldMultiplier",
		"options",
		"Delay",
		"SwapToLevelUpScene",
		"TimeStopConfig",
		"Plugin",
		"Survive5MinutesWithDiamond",
		"SILVER",
		"highlight",
		"CoinIcon",
		"ReachLV10",
		"Load",
		"maxPowerUpWeapons",
		"GIOVANNA",
		"EraseItems",
		"right",
		"myNextLevel",
		"ValidateSkipsAndRerolls",
		"hyper",
		"EvolveWhip",
		"tilemapTiledJSON",
		"buttons",
		"weaponIcon",
		"texture",
		"Vector2",
		"BuildStats",
		"TurnToSelection",
		"setQuantity",
		"Roast",
		"Core",
		"setScaleY",
		"TimeStopTimer",
		"pad1",
		"addEvolvedWeapon",
		"EnemySpanwersLocations",
		"SelectionHighlight",
		"_empty",
		"evolvesFrom",
		"unlocksAt",
		"_set",
		"AchiButton",
		"OnLevelUpSkipped",
		"PositionTween",
		"VERANDA",
		"OnCancelClicked",
		"LuckBonus",
		"PlayJellyfish",
		"TurnOnVacuum",
		"BackButton",
		"updateEnemyPools",
		"NFT",
		"UI_treasureScene",
		"BAT1",
		"dot",
		"vacuumTween",
		"SetSeenItem",
		"BRAZIER2",
		"ARCA",
		"forEach",
		"BoughtPowerups",
		"sKey",
		"BGMask",
		"textureName",
		"setMask",
		"totalTime",
		"powerupType",
		"StatsPanel",
		"SkipAnimation",
		"TIMERS",
		"dataMaxHp",
		"ESC",
		"scaleFactorY",
		"lastFacedDirection",
		"BackFromStageSelectionScene",
		"FitToScreen",
		"Coins",
		"ApplyBoughtPowerup",
		"setScrollFactor",
		"cache",
		"BOSS_XLBAT",
		"OnFirstInput",
		"WeaponFactory",
		"onMenuOut",
		"Holywater",
		"CalculateAndSetContainerSize",
		"fromCharCode",
		"POWERUP",
		"EvolveKingBible",
		"Squared",
		"EvolveFireWand",
		"exploRadius",
		"KeyCodes",
		"damage",
		"PENTAGRAM",
		"progressBox",
		"ECTO2",
		"ApplyMenuResolution",
		"stringify",
		"PostGameFromGameOver",
		"OnRecycle",
		"survivedTime",
		"MakeReels",
		"setLangCode",
		"UpdateOptionLang",
		"hitVFX",
		"tileset",
		"CheckMinute",
		"SetValue",
		"MUD",
		"IMELDA",
		"removeDebugTextOnMobile",
		"maxSpeed",
		"enemiesDefeated",
		"TweenAngles",
		"debug_SpawnEnemies",
		"STATS_TREASURE_3",
		"UpdateMinuteData",
		"ReachLV100WithMortaccio",
		"floor",
		"Survive5MinutesWithKnife",
		"HideQuitButton",
		"cols",
		"make",
		"cooldown",
		"BackFromCharSelectionScene",
		"ToggleScrolling",
		"idleFrameCount",
		"PlayBatSwarm",
		"CharSelectionScene",
		"max",
		"VORTEX",
		"Array",
		"find",
		"damageZoneDistance",
		"GHOST",
		"drawFrame",
		"StartRibbons2",
		"SkipRemaining",
		"AssignItem",
		"MakeTexture_PowerUps",
		"weapon",
		"hpBar",
		"CoinsTickerDisplay",
		"shields",
		"bouncePositions",
		"AchiAd_BG",
		"upperLimit",
		"physicsType",
		"isButtonDown",
		"SIRE",
		"previousGameObject",
		"Hide",
		"awardGivenXTimes",
		"PanelBackground",
		"StartFireworks",
		"enterPause",
		"TREASURE",
		"MakeUIGrid",
		"Button",
		"PSpeed",
		"setInteractive",
		"Highlighted",
		"localiseObject",
		"lastArea",
		"generateFrameNames",
		"PfxEmitter_Pickups",
		"HasWalkingAnimation",
		"once",
		"clear",
		"targetPoints",
		"PanelBackgroundAdd",
		"defaultXPfactor",
		"FindAVacuum",
		"MainUI",
		"screenFade",
		"particlesManager",
		"imageTween2",
		"GetRandomExistingWeapon",
		"MakeBackground",
		"containmentRect_Enemies",
		"Columns",
		"BAT_SWARM",
		"GetRunetracerToLevel7",
		"minute",
		"PfxEmitter2",
		"OpenChest",
		"RPixelScale",
		"setManualValue",
		"NineSlice",
		"whiteTween",
		"prizeType",
		"QSSeekTrack",
		"SCRIPTED",
		"setOrigin",
		"4boffCb",
		"_0x2fe496",
		"onEmitcustomTint",
		"goToPlayer",
		"GetRandomWeightedWeaponOrPowerup",
		"snapshotArea",
		"stageEventManager",
		"GetRandomWeightedItem",
		"seen",
		"some",
		"MIGHT",
		"ADD",
		"save_vel_x",
		"hidden",
		"lineTo",
		"7072448KnuWZg",
		"Lang",
		"progressBar",
		"map",
		"MUDMAN2",
		"overlap",
		"sign",
		"outer",
		"getChildren",
		"gridBottom",
		"colliderOverride",
		"getDetune",
		"AchievementButton",
		"Center",
		"maxKnockback",
		"COIN",
		"DAMAGE_text",
		"dKey",
		"STATS_TREASURE_2",
		"BOSS_XLMANTIS",
		"landingLocation",
		"visible",
		"cos",
		"MakeUIGrid_ScrollView",
		"ApplyPlayerFacingVelocity",
		"BOSS_XLDETH",
		"EnablePanelsInput",
		"ALT",
		"stage",
		"HideHeader",
		"BackFrom_Credits",
		"ResumeText",
		"WeaponIcons",
		"FIRE",
		"MEDUSA2",
		"Fire",
		"restoreTint",
		"propertyValue",
		"ToggleFullScreen",
		"set",
		"uiFrame",
		"bonusCoinsIcon",
		"greed",
		"OnCancelPressed",
		"createCombo",
		"SelectGameObject",
		"StartCoinsEmitters",
		"stageToUnlock",
		"startFollow",
		"JoystickVisible",
		"DestroyUIGrid",
		"curve",
		"GameObjects",
		"myCounter",
		"70ShNZXx",
		"GetPositionOutOfSight",
		"ClickIn",
		"CROSS",
		"renderTexture",
		"setDirty",
		"pointerdown",
		"OnPowerUpBought",
		"LaunchMainScene",
		"startingSpawns",
		"ghost2",
		"GENNARO",
		"PAESANO",
		"LifetimeSurvived",
		"SMITH",
		"StartPosition",
		"REROLL",
		"DefeatBossMadForest",
		"AssignData",
		"AssignItemData",
		"StartRibbons",
		"rainbow",
		"MakeTexture_Any",
		"onPlayerOverlapsPickup",
		"floatTween",
		"isAltDown",
		"imageBG",
		"ResetWeaponCooldowns",
		"play",
		"divider",
		"GetWeaponLevel",
		"_SIZE",
		"despawnTween",
		"PickupGroup",
		"LOOP",
		"BulletGroup",
		"hasAttachedTreasure",
		"confirmationPanel",
		"lineStyle",
		"2755113HTyzEQ",
		"screenYcoordToCutScrollableContainer",
		"Cursor",
		"setAngle",
		"AssignStage",
		"label",
		"PlayMedusaSwarm",
		"wrap",
		"WEREWOLF",
		"complete",
		"VAMPIRICA",
		"EnemyGroup",
		"PickItemLevelUps",
		"QScoinsCounterTween",
		"ScrollCursor",
		"isRare",
		"size",
		"CLOVER",
		"AccumulatedWeaponPrizes",
		"touchText",
		"loadJsonBackup",
		"panels",
		"UI_resolutionScene",
		"frequency",
		"setActive",
		"rectangle",
		"PInterval",
		"GHOSTSWARM",
		"EvolveAxe",
		"Whip",
		"setTexture",
		"shieldInvulTime",
		"left",
		"FOREST",
		"SelectedCharacter",
		"showTween2",
		"targetZone2",
		"Res2",
		"CancelText",
		"damageDelay",
	];
	a0_0x38d8 = function () {
		return _0x5636fd;
	};
	return a0_0x38d8();
}
